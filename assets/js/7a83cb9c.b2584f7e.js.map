{"version":3,"file":"assets/js/7a83cb9c.b2584f7e.js","mappings":"+OAEO,MAAMA,EAAc,CAC1BC,MAAO,WACPC,iBAAkB,GAENC,OAAeC,EACfC,EAAW,CACtB,GAAM,gBACN,MAAS,WACT,YAAe,yCACf,OAAU,+BACV,cAAiB,OACjB,KAAQ,iBACR,UAAa,sBACb,OAAS,EACT,UAAY,EACZ,KAAQ,GACR,QAAW,UACX,gBAAmB,EACnB,YAAe,CACb,MAAS,WACT,iBAAoB,GAEtB,QAAW,kBACX,SAAY,CACV,MAAS,eACT,UAAa,0CAEf,KAAQ,CACN,MAAS,qBACT,UAAa,+BAGJC,EAAS,CAEtB,EAIaC,EAAM,GACnB,SAASC,EAAkBC,GACzB,MAAMC,EAAc,CAClBC,EAAG,IACHC,KAAM,OACNC,EAAG,IACHC,IAAK,UACF,YACAL,EAAMM,aACR,kBAACC,GAAqBN,EAEzB,OADKM,GAmDP,SAA8BC,EAAIC,GAChC,MAAM,IAAIC,MAAM,aAAeD,EAAY,YAAc,UAAY,KAAOD,EAAK,qEACnF,CArD0BG,CAAqB,qBAAqB,IAC3D,UAAM,WAAW,CACtBC,SAAU,EAAC,SAAKX,EAAYG,EAAG,CAC7BQ,SAAU,2CACR,MAAM,UAAMX,EAAYG,EAAG,CAC7BQ,SAAU,CAAC,wCAAwC,SAAKX,EAAYC,EAAG,CACrEW,KAAM,6BACND,SAAU,YACR,kFAAkF,SAAKX,EAAYC,EAAG,CACxGW,KAAM,8BACND,SAAU,QACR,uBACF,MAAM,SAAKL,EAAmB,CAChCO,UAAW,aACXF,UAAU,SAAKX,EAAYI,IAAK,CAC9BO,UAAU,SAAKX,EAAYE,KAAM,CAC/BY,UAAW,eACXH,SAAU,0IAGZ,MAAM,SAAKL,EAAmB,CAChCO,UAAW,QACXF,UAAU,SAAKX,EAAYI,IAAK,CAC9BO,UAAU,SAAKX,EAAYE,KAAM,CAC/BY,UAAW,eACXH,SAAU,iPAGZ,MAAM,SAAKL,EAAmB,CAChCO,UAAW,MACXF,UAAU,SAAKX,EAAYI,IAAK,CAC9BO,UAAU,SAAKX,EAAYE,KAAM,CAC/BY,UAAW,eACXH,SAAU,qRAKpB,CACe,SAASI,EAAWhB,EAAQ,CAAC,GAC1C,MAAOiB,QAASC,GAAa,KACxB,YACAlB,EAAMM,YAEX,OAAOY,GAAY,SAAKA,EAAW,IAC9BlB,EACHY,UAAU,SAAKb,EAAmB,IAC7BC,MAEFD,EAAkBC,EACzB,C,wDCzEA,MAAMmB,EAAkB,CAAC,EAEnBC,EAAa,gBAAoBD,GAUhC,SAASE,EAAiBf,GAC/B,MAAMgB,EAAoB,aAAiBF,GAG3C,OAAO,WACL,WAEE,MAA0B,mBAAfd,EACFA,EAAWgB,GAGb,IAAIA,KAAsBhB,EACnC,GACA,CAACgB,EAAmBhB,GAExB,CAWO,SAASiB,EAAYvB,GAE1B,IAAIwB,EAWJ,OAREA,EADExB,EAAMyB,qBAEsB,mBAArBzB,EAAMM,WACTN,EAAMM,WAAWa,GACjBnB,EAAMM,YAAca,EAEVE,EAAiBrB,EAAMM,YAGlC,gBACLc,EAAWM,SACX,CAACC,MAAOH,GACRxB,EAAMY,SAEV,C","sources":["webpack://dockview-docs/./docs/core/overview.mdx","webpack://dockview-docs/../../node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["\n\nexport const frontMatter = {\n\ttitle: 'Overview',\n\tsidebar_position: 0\n};\nexport const contentTitle = undefined;\nexport const metadata = {\n  \"id\": \"core/overview\",\n  \"title\": \"Overview\",\n  \"description\": \"This section provided a core overview.\",\n  \"source\": \"@site/docs/core/overview.mdx\",\n  \"sourceDirName\": \"core\",\n  \"slug\": \"/core/overview\",\n  \"permalink\": \"/docs/core/overview\",\n  \"draft\": false,\n  \"unlisted\": false,\n  \"tags\": [],\n  \"version\": \"current\",\n  \"sidebarPosition\": 0,\n  \"frontMatter\": {\n    \"title\": \"Overview\",\n    \"sidebar_position\": 0\n  },\n  \"sidebar\": \"tutorialSidebar\",\n  \"previous\": {\n    \"title\": \"Contributing\",\n    \"permalink\": \"/docs/overview/getStarted/contributing\"\n  },\n  \"next\": {\n    \"title\": \"Registering Panels\",\n    \"permalink\": \"/docs/core/panels/register\"\n  }\n};\nexport const assets = {\n\n};\n\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nexport const toc = [];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    code: \"code\",\n    p: \"p\",\n    pre: \"pre\",\n    ..._provideComponents(),\n    ...props.components\n  }, {FrameworkSpecific} = _components;\n  if (!FrameworkSpecific) _missingMdxReference(\"FrameworkSpecific\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: \"This section provided a core overview.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The component takes a collection of \", _jsx(_components.a, {\n        href: \"/docs/api/dockview/options\",\n        children: \"Options\"\n      }), \" as inputs and\\nonce you have created a dock you can store a reference to the \", _jsx(_components.a, {\n        href: \"/docs/api/dockview/overview\",\n        children: \"API\"\n      }), \" that is created.\"]\n    }), \"\\n\", _jsx(FrameworkSpecific, {\n      framework: \"JavaScript\",\n      children: _jsx(_components.pre, {\n        children: _jsx(_components.code, {\n          className: \"language-tsx\",\n          children: \"const element: HTMLElement\\nconst options: DockviewComponentOptions\\nconst api: DockviewApi = createDockview(element, options);\\n\"\n        })\n      })\n    }), \"\\n\", _jsx(FrameworkSpecific, {\n      framework: \"React\",\n      children: _jsx(_components.pre, {\n        children: _jsx(_components.code, {\n          className: \"language-tsx\",\n          children: \"function onReady(event: DockviewReadyEvent) {\\n  /**\\n   * You should store a reference to `api` in a Ref or State\\n   * for later interactions\\n   */\\n  const api: DockviewApi = event.api;\\n}\\n\\n<DockviewReact onReady={onReady}/>\\n\"\n        })\n      })\n    }), \"\\n\", _jsx(FrameworkSpecific, {\n      framework: \"Vue\",\n      children: _jsx(_components.pre, {\n        children: _jsx(_components.code, {\n          className: \"language-tsx\",\n          children: \"const App = {\\n    name: 'App',\\n    methods: {\\n        onReady(event: DockviewReadyEvent) {\\n          const api: DockviewApi = event.api;\\n        },\\n    },\\n    template: `\\n      <dockview-vue\\n        @ready=\\\"onReady\\\"\\n      >\\n      </dockview-vue>`,\\n};\\n\"\n        })\n      })\n    })]\n  });\n}\nexport default function MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n\n","/**\n * @typedef {import('mdx/types.js').MDXComponents} MDXComponents\n * @typedef {import('react').Component<{}, {}, unknown>} Component\n * @typedef {import('react').ReactNode} ReactNode\n */\n\n/**\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Readonly<MDXComponents>} currentComponents\n *   Current components from the context.\n * @returns {MDXComponents}\n *   Additional components.\n *\n * @typedef Props\n *   Configuration for `MDXProvider`.\n * @property {ReactNode | null | undefined} [children]\n *   Children (optional).\n * @property {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context (default: `false`).\n */\n\nimport React from 'react'\n\n/** @type {Readonly<MDXComponents>} */\nconst emptyComponents = {}\n\nconst MDXContext = React.createContext(emptyComponents)\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @returns {MDXComponents}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(\n    function () {\n      // Custom merge via a function prop\n      if (typeof components === 'function') {\n        return components(contextComponents)\n      }\n\n      return {...contextComponents, ...components}\n    },\n    [contextComponents, components]\n  )\n}\n\n/**\n * Provider for MDX context.\n *\n * @param {Readonly<Props>} props\n *   Props.\n * @returns {JSX.Element}\n *   Element.\n * @satisfies {Component}\n */\nexport function MDXProvider(props) {\n  /** @type {Readonly<MDXComponents>} */\n  let allComponents\n\n  if (props.disableParentContext) {\n    allComponents =\n      typeof props.components === 'function'\n        ? props.components(emptyComponents)\n        : props.components || emptyComponents\n  } else {\n    allComponents = useMDXComponents(props.components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    props.children\n  )\n}\n"],"names":["frontMatter","title","sidebar_position","contentTitle","undefined","metadata","assets","toc","_createMdxContent","props","_components","a","code","p","pre","components","FrameworkSpecific","id","component","Error","_missingMdxReference","children","href","framework","className","MDXContent","wrapper","MDXLayout","emptyComponents","MDXContext","useMDXComponents","contextComponents","MDXProvider","allComponents","disableParentContext","Provider","value"],"sourceRoot":""}