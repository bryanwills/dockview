{"version":3,"file":"assets/js/f1be756a.afb33dec.js","mappings":"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","sources":["webpack://dockview-docs/../../node_modules/@docusaurus/core/lib/client/exports/BrowserOnly.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/dataTransfer.js","webpack://dockview-docs/../dockview-core/dist/esm/events.js","webpack://dockview-docs/../dockview-core/dist/esm/lifecycle.js","webpack://dockview-docs/../dockview-core/dist/esm/dom.js","webpack://dockview-docs/../dockview-core/dist/esm/array.js","webpack://dockview-docs/../dockview-core/dist/esm/math.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/viewItem.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/splitview.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/options.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/paneview.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/leafNode.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/branchNode.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/gridview.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/options.js","webpack://dockview-docs/../dockview-core/dist/esm/resizable.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/baseComponentGridview.js","webpack://dockview-docs/../dockview-core/dist/esm/api/component.api.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/abstractDragHandler.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/dnd.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/droptarget.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/options.js","webpack://dockview-docs/../dockview-core/dist/esm/api/panelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/api/splitviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/api/paneviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/basePanelView.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/paneviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/draggablePaneviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/panel/content.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/tab/tab.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/groupDragHandler.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/ghost.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/titlebar/voidContainer.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/titlebar/tabsContainer.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/options.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewGroupPanelModel.js","webpack://dockview-docs/../dockview-core/dist/esm/api/gridviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/gridviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/api/dockviewGroupPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewGroupPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/api/dockviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/svg.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/tab/defaultTab.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewPanelModel.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/deserializer.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/watermark/watermark.js","webpack://dockview-docs/../dockview-core/dist/esm/overlay/overlay.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewFloatingGroupPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/constants.js","webpack://dockview-docs/../dockview-core/dist/esm/overlay/overlayRenderContainer.js","webpack://dockview-docs/../dockview-core/dist/esm/popoutWindow.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/strictEventsSequencing.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/gridviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/splitviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/defaultPaneviewHeader.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/paneviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/splitviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/api/entryPoints.js","webpack://dockview-docs/../dockview/dist/esm/react.js","webpack://dockview-docs/../dockview/dist/esm/dockview/reactContentPart.js","webpack://dockview-docs/../dockview/dist/esm/dockview/reactHeaderPart.js","webpack://dockview-docs/../dockview/dist/esm/dockview/reactWatermarkPart.js","webpack://dockview-docs/../dockview/dist/esm/dockview/headerActionsRenderer.js","webpack://dockview-docs/../dockview/dist/esm/dockview/dockview.js","webpack://dockview-docs/../dockview/dist/esm/svg.js","webpack://dockview-docs/../dockview/dist/esm/dockview/defaultTab.js","webpack://dockview-docs/../dockview/dist/esm/splitview/view.js","webpack://dockview-docs/../dockview/dist/esm/splitview/splitview.js","webpack://dockview-docs/../dockview/dist/esm/gridview/view.js","webpack://dockview-docs/../dockview/dist/esm/gridview/gridview.js","webpack://dockview-docs/../dockview/dist/esm/paneview/view.js","webpack://dockview-docs/../dockview/dist/esm/paneview/paneview.js","webpack://dockview-docs/./src/components/ui/codeSandboxButton.tsx","webpack://dockview-docs/./src/components/ui/spinner.tsx","webpack://dockview-docs/./src/components/ui/container.tsx","webpack://dockview-docs/./sandboxes/keyboard-dockview/src/app.tsx","webpack://dockview-docs/./docs/advanced/keyboard.mdx","webpack://dockview-docs/../../node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React, { isValidElement } from 'react';\nimport useIsBrowser from '@docusaurus/useIsBrowser';\n// Similar comp to the one described here:\n// https://www.joshwcomeau.com/react/the-perils-of-rehydration/#abstractions\nexport default function BrowserOnly({ children, fallback, }) {\n    const isBrowser = useIsBrowser();\n    if (isBrowser) {\n        if (typeof children !== 'function' &&\n            process.env.NODE_ENV === 'development') {\n            throw new Error(`Docusaurus error: The children of <BrowserOnly> must be a \"render function\", e.g. <BrowserOnly>{() => <span>{window.location.href}</span>}</BrowserOnly>.\nCurrent type: ${isValidElement(children) ? 'React element' : typeof children}`);\n        }\n        return <>{children?.()}</>;\n    }\n    return fallback ?? null;\n}\n","class TransferObject {\n}\nexport class PanelTransfer extends TransferObject {\n    constructor(viewId, groupId, panelId) {\n        super();\n        this.viewId = viewId;\n        this.groupId = groupId;\n        this.panelId = panelId;\n    }\n}\nexport class PaneTransfer extends TransferObject {\n    constructor(viewId, paneId) {\n        super();\n        this.viewId = viewId;\n        this.paneId = paneId;\n    }\n}\n/**\n * A singleton to store transfer data during drag & drop operations that are only valid within the application.\n */\nexport class LocalSelectionTransfer {\n    constructor() {\n        // protect against external instantiation\n    }\n    static getInstance() {\n        return LocalSelectionTransfer.INSTANCE;\n    }\n    hasData(proto) {\n        return proto && proto === this.proto;\n    }\n    clearData(proto) {\n        if (this.hasData(proto)) {\n            this.proto = undefined;\n            this.data = undefined;\n        }\n    }\n    getData(proto) {\n        if (this.hasData(proto)) {\n            return this.data;\n        }\n        return undefined;\n    }\n    setData(data, proto) {\n        if (proto) {\n            this.data = data;\n            this.proto = proto;\n        }\n    }\n}\nLocalSelectionTransfer.INSTANCE = new LocalSelectionTransfer();\nexport function getPanelData() {\n    const panelTransfer = LocalSelectionTransfer.getInstance();\n    const isPanelEvent = panelTransfer.hasData(PanelTransfer.prototype);\n    if (!isPanelEvent) {\n        return undefined;\n    }\n    return panelTransfer.getData(PanelTransfer.prototype)[0];\n}\nexport function getPaneData() {\n    const paneTransfer = LocalSelectionTransfer.getInstance();\n    const isPanelEvent = paneTransfer.hasData(PaneTransfer.prototype);\n    if (!isPanelEvent) {\n        return undefined;\n    }\n    return paneTransfer.getData(PaneTransfer.prototype)[0];\n}\n","export var Event;\n(function (Event) {\n    Event.any = (...children) => {\n        return (listener) => {\n            const disposables = children.map((child) => child(listener));\n            return {\n                dispose: () => {\n                    disposables.forEach((d) => {\n                        d.dispose();\n                    });\n                },\n            };\n        };\n    };\n})(Event || (Event = {}));\nexport class DockviewEvent {\n    constructor() {\n        this._defaultPrevented = false;\n    }\n    get defaultPrevented() {\n        return this._defaultPrevented;\n    }\n    preventDefault() {\n        this._defaultPrevented = true;\n    }\n}\nexport class AcceptableEvent {\n    constructor() {\n        this._isAccepted = false;\n    }\n    get isAccepted() {\n        return this._isAccepted;\n    }\n    accept() {\n        this._isAccepted = true;\n    }\n}\nclass LeakageMonitor {\n    constructor() {\n        this.events = new Map();\n    }\n    get size() {\n        return this.events.size;\n    }\n    add(event, stacktrace) {\n        this.events.set(event, stacktrace);\n    }\n    delete(event) {\n        this.events.delete(event);\n    }\n    clear() {\n        this.events.clear();\n    }\n}\nclass Stacktrace {\n    static create() {\n        var _a;\n        return new Stacktrace((_a = new Error().stack) !== null && _a !== void 0 ? _a : '');\n    }\n    constructor(value) {\n        this.value = value;\n    }\n    print() {\n        console.warn('dockview: stacktrace', this.value);\n    }\n}\nclass Listener {\n    constructor(callback, stacktrace) {\n        this.callback = callback;\n        this.stacktrace = stacktrace;\n    }\n}\n// relatively simple event emitter taken from https://github.com/microsoft/vscode/blob/master/src/vs/base/common/event.ts\nexport class Emitter {\n    static setLeakageMonitorEnabled(isEnabled) {\n        if (isEnabled !== Emitter.ENABLE_TRACKING) {\n            Emitter.MEMORY_LEAK_WATCHER.clear();\n        }\n        Emitter.ENABLE_TRACKING = isEnabled;\n    }\n    get value() {\n        return this._last;\n    }\n    constructor(options) {\n        this.options = options;\n        this._listeners = [];\n        this._disposed = false;\n    }\n    get event() {\n        if (!this._event) {\n            this._event = (callback) => {\n                var _a;\n                if (((_a = this.options) === null || _a === void 0 ? void 0 : _a.replay) && this._last !== undefined) {\n                    callback(this._last);\n                }\n                const listener = new Listener(callback, Emitter.ENABLE_TRACKING ? Stacktrace.create() : undefined);\n                this._listeners.push(listener);\n                return {\n                    dispose: () => {\n                        const index = this._listeners.indexOf(listener);\n                        if (index > -1) {\n                            this._listeners.splice(index, 1);\n                        }\n                        else if (Emitter.ENABLE_TRACKING) {\n                            // console.warn(\n                            //     `dockview: listener already disposed`,\n                            //     Stacktrace.create().print()\n                            // );\n                        }\n                    },\n                };\n            };\n            if (Emitter.ENABLE_TRACKING) {\n                Emitter.MEMORY_LEAK_WATCHER.add(this._event, Stacktrace.create());\n            }\n        }\n        return this._event;\n    }\n    fire(e) {\n        this._last = e;\n        for (const listener of this._listeners) {\n            listener.callback(e);\n        }\n    }\n    dispose() {\n        if (!this._disposed) {\n            this._disposed = true;\n            if (this._listeners.length > 0) {\n                if (Emitter.ENABLE_TRACKING) {\n                    queueMicrotask(() => {\n                        var _a;\n                        // don't check until stack of execution is completed to allow for out-of-order disposals within the same execution block\n                        for (const listener of this._listeners) {\n                            console.warn('dockview: stacktrace', (_a = listener.stacktrace) === null || _a === void 0 ? void 0 : _a.print());\n                        }\n                    });\n                }\n                this._listeners = [];\n            }\n            if (Emitter.ENABLE_TRACKING && this._event) {\n                Emitter.MEMORY_LEAK_WATCHER.delete(this._event);\n            }\n        }\n    }\n}\nEmitter.ENABLE_TRACKING = false;\nEmitter.MEMORY_LEAK_WATCHER = new LeakageMonitor();\nexport function addDisposableWindowListener(element, type, listener, options) {\n    element.addEventListener(type, listener, options);\n    return {\n        dispose: () => {\n            element.removeEventListener(type, listener, options);\n        },\n    };\n}\nexport function addDisposableListener(element, type, listener, options) {\n    element.addEventListener(type, listener, options);\n    return {\n        dispose: () => {\n            element.removeEventListener(type, listener, options);\n        },\n    };\n}\n/**\n *\n * Event Emitter that fires events from a Microtask callback, only one event will fire per event-loop cycle.\n *\n * It's kind of like using an `asapScheduler` in RxJs with additional logic to only fire once per event-loop cycle.\n * This implementation exists to avoid external dependencies.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/queueMicrotask\n * @see https://rxjs.dev/api/index/const/asapScheduler\n */\nexport class AsapEvent {\n    constructor() {\n        this._onFired = new Emitter();\n        this._currentFireCount = 0;\n        this._queued = false;\n        this.onEvent = (e) => {\n            /**\n             * when the event is first subscribed to take note of the current fire count\n             */\n            const fireCountAtTimeOfEventSubscription = this._currentFireCount;\n            return this._onFired.event(() => {\n                /**\n                 * if the current fire count is greater than the fire count at event subscription\n                 * then the event has been fired since we subscribed and it's ok to \"on_next\" the event.\n                 *\n                 * if the count is not greater then what we are recieving is an event from the microtask\n                 * queue that was triggered before we actually subscribed and therfore we should ignore it.\n                 */\n                if (this._currentFireCount > fireCountAtTimeOfEventSubscription) {\n                    e();\n                }\n            });\n        };\n    }\n    fire() {\n        this._currentFireCount++;\n        if (this._queued) {\n            return;\n        }\n        this._queued = true;\n        queueMicrotask(() => {\n            this._queued = false;\n            this._onFired.fire();\n        });\n    }\n    dispose() {\n        this._onFired.dispose();\n    }\n}\n","export var Disposable;\n(function (Disposable) {\n    Disposable.NONE = {\n        dispose: () => {\n            // noop\n        },\n    };\n    function from(func) {\n        return {\n            dispose: () => {\n                func();\n            },\n        };\n    }\n    Disposable.from = from;\n})(Disposable || (Disposable = {}));\nexport class CompositeDisposable {\n    get isDisposed() {\n        return this._isDisposed;\n    }\n    constructor(...args) {\n        this._isDisposed = false;\n        this._disposables = args;\n    }\n    addDisposables(...args) {\n        args.forEach((arg) => this._disposables.push(arg));\n    }\n    dispose() {\n        if (this._isDisposed) {\n            return;\n        }\n        this._isDisposed = true;\n        this._disposables.forEach((arg) => arg.dispose());\n        this._disposables = [];\n    }\n}\nexport class MutableDisposable {\n    constructor() {\n        this._disposable = Disposable.NONE;\n    }\n    set value(disposable) {\n        if (this._disposable) {\n            this._disposable.dispose();\n        }\n        this._disposable = disposable;\n    }\n    dispose() {\n        if (this._disposable) {\n            this._disposable.dispose();\n            this._disposable = Disposable.NONE;\n        }\n    }\n}\n","import { Emitter, addDisposableListener, addDisposableWindowListener, } from './events';\nimport { CompositeDisposable } from './lifecycle';\nexport class OverflowObserver extends CompositeDisposable {\n    constructor(el) {\n        super();\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._value = null;\n        this.addDisposables(this._onDidChange, watchElementResize(el, (entry) => {\n            const hasScrollX = entry.target.scrollWidth > entry.target.clientWidth;\n            const hasScrollY = entry.target.scrollHeight > entry.target.clientHeight;\n            this._value = { hasScrollX, hasScrollY };\n            this._onDidChange.fire(this._value);\n        }));\n    }\n}\nexport function watchElementResize(element, cb) {\n    const observer = new ResizeObserver((entires) => {\n        /**\n         * Fast browser window resize produces Error: ResizeObserver loop limit exceeded.\n         * The error isn't visible in browser console, doesn't affect functionality, but degrades performance.\n         * See https://stackoverflow.com/questions/49384120/resizeobserver-loop-limit-exceeded/58701523#58701523\n         */\n        requestAnimationFrame(() => {\n            const firstEntry = entires[0];\n            cb(firstEntry);\n        });\n    });\n    observer.observe(element);\n    return {\n        dispose: () => {\n            observer.unobserve(element);\n            observer.disconnect();\n        },\n    };\n}\nexport const removeClasses = (element, ...classes) => {\n    for (const classname of classes) {\n        if (element.classList.contains(classname)) {\n            element.classList.remove(classname);\n        }\n    }\n};\nexport const addClasses = (element, ...classes) => {\n    for (const classname of classes) {\n        if (!element.classList.contains(classname)) {\n            element.classList.add(classname);\n        }\n    }\n};\nexport const toggleClass = (element, className, isToggled) => {\n    const hasClass = element.classList.contains(className);\n    if (isToggled && !hasClass) {\n        element.classList.add(className);\n    }\n    if (!isToggled && hasClass) {\n        element.classList.remove(className);\n    }\n};\nexport function isAncestor(testChild, testAncestor) {\n    while (testChild) {\n        if (testChild === testAncestor) {\n            return true;\n        }\n        testChild = testChild.parentNode;\n    }\n    return false;\n}\nexport function getElementsByTagName(tag) {\n    return Array.prototype.slice.call(document.getElementsByTagName(tag), 0);\n}\nexport function trackFocus(element) {\n    return new FocusTracker(element);\n}\n/**\n * Track focus on an element. Ensure tabIndex is set when an HTMLElement is not focusable by default\n */\nclass FocusTracker extends CompositeDisposable {\n    constructor(element) {\n        super();\n        this._onDidFocus = new Emitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new Emitter();\n        this.onDidBlur = this._onDidBlur.event;\n        this.addDisposables(this._onDidFocus, this._onDidBlur);\n        let hasFocus = isAncestor(document.activeElement, element);\n        let loosingFocus = false;\n        const onFocus = () => {\n            loosingFocus = false;\n            if (!hasFocus) {\n                hasFocus = true;\n                this._onDidFocus.fire();\n            }\n        };\n        const onBlur = () => {\n            if (hasFocus) {\n                loosingFocus = true;\n                window.setTimeout(() => {\n                    if (loosingFocus) {\n                        loosingFocus = false;\n                        hasFocus = false;\n                        this._onDidBlur.fire();\n                    }\n                }, 0);\n            }\n        };\n        this._refreshStateHandler = () => {\n            const currentNodeHasFocus = isAncestor(document.activeElement, element);\n            if (currentNodeHasFocus !== hasFocus) {\n                if (hasFocus) {\n                    onBlur();\n                }\n                else {\n                    onFocus();\n                }\n            }\n        };\n        if (element instanceof HTMLElement) {\n            this.addDisposables(addDisposableListener(element, 'focus', onFocus, true));\n            this.addDisposables(addDisposableListener(element, 'blur', onBlur, true));\n        }\n        else {\n            this.addDisposables(addDisposableWindowListener(element, 'focus', onFocus, true));\n            this.addDisposables(addDisposableWindowListener(element, 'blur', onBlur, true));\n        }\n    }\n    refreshState() {\n        this._refreshStateHandler();\n    }\n}\n// quasi: apparently, but not really; seemingly\nconst QUASI_PREVENT_DEFAULT_KEY = 'dv-quasiPreventDefault';\n// mark an event directly for other listeners to check\nexport function quasiPreventDefault(event) {\n    event[QUASI_PREVENT_DEFAULT_KEY] = true;\n}\n// check if this event has been marked\nexport function quasiDefaultPrevented(event) {\n    return event[QUASI_PREVENT_DEFAULT_KEY];\n}\nexport function addStyles(document, styleSheetList) {\n    const styleSheets = Array.from(styleSheetList);\n    for (const styleSheet of styleSheets) {\n        if (styleSheet.href) {\n            const link = document.createElement('link');\n            link.href = styleSheet.href;\n            link.type = styleSheet.type;\n            link.rel = 'stylesheet';\n            document.head.appendChild(link);\n        }\n        let cssTexts = [];\n        try {\n            if (styleSheet.cssRules) {\n                cssTexts = Array.from(styleSheet.cssRules).map((rule) => rule.cssText);\n            }\n        }\n        catch (err) {\n            // security errors (lack of permissions), ignore\n        }\n        for (const rule of cssTexts) {\n            const style = document.createElement('style');\n            style.appendChild(document.createTextNode(rule));\n            document.head.appendChild(style);\n        }\n    }\n}\nexport function getDomNodePagePosition(domNode) {\n    const { left, top, width, height } = domNode.getBoundingClientRect();\n    return {\n        left: left + window.scrollX,\n        top: top + window.scrollY,\n        width: width,\n        height: height,\n    };\n}\n/**\n * Check whether an element is in the DOM (including the Shadow DOM)\n * @see https://terodox.tech/how-to-tell-if-an-element-is-in-the-dom-including-the-shadow-dom/\n */\nexport function isInDocument(element) {\n    let currentElement = element;\n    while (currentElement === null || currentElement === void 0 ? void 0 : currentElement.parentNode) {\n        if (currentElement.parentNode === document) {\n            return true;\n        }\n        else if (currentElement.parentNode instanceof DocumentFragment) {\n            // handle shadow DOMs\n            currentElement = currentElement.parentNode.host;\n        }\n        else {\n            currentElement = currentElement.parentNode;\n        }\n    }\n    return false;\n}\nexport function addTestId(element, id) {\n    element.setAttribute('data-testid', id);\n}\nexport function disableIframePointEvents() {\n    const iframes = [\n        ...getElementsByTagName('iframe'),\n        ...getElementsByTagName('webview'),\n    ];\n    const original = new WeakMap(); // don't hold onto HTMLElement references longer than required\n    for (const iframe of iframes) {\n        original.set(iframe, iframe.style.pointerEvents);\n        iframe.style.pointerEvents = 'none';\n    }\n    return {\n        release: () => {\n            var _a;\n            for (const iframe of iframes) {\n                iframe.style.pointerEvents = (_a = original.get(iframe)) !== null && _a !== void 0 ? _a : 'auto';\n            }\n            iframes.splice(0, iframes.length); // don't hold onto HTMLElement references longer than required\n        },\n    };\n}\nexport function getDockviewTheme(element) {\n    function toClassList(element) {\n        const list = [];\n        for (let i = 0; i < element.classList.length; i++) {\n            list.push(element.classList.item(i));\n        }\n        return list;\n    }\n    let theme = undefined;\n    let parent = element;\n    while (parent !== null) {\n        theme = toClassList(parent).find((cls) => cls.startsWith('dockview-theme-'));\n        if (typeof theme === 'string') {\n            break;\n        }\n        parent = parent.parentElement;\n    }\n    return theme;\n}\nexport class Classnames {\n    constructor(element) {\n        this.element = element;\n        this._classNames = [];\n    }\n    setClassNames(classNames) {\n        for (const className of this._classNames) {\n            toggleClass(this.element, className, false);\n        }\n        this._classNames = classNames\n            .split(' ')\n            .filter((v) => v.trim().length > 0);\n        for (const className of this._classNames) {\n            toggleClass(this.element, className, true);\n        }\n    }\n}\n","export function tail(arr) {\n    if (arr.length === 0) {\n        throw new Error('Invalid tail call');\n    }\n    return [arr.slice(0, arr.length - 1), arr[arr.length - 1]];\n}\nexport function last(arr) {\n    return arr.length > 0 ? arr[arr.length - 1] : undefined;\n}\nexport function sequenceEquals(arr1, arr2) {\n    if (arr1.length !== arr2.length) {\n        return false;\n    }\n    for (let i = 0; i < arr1.length; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Pushes an element to the start of the array, if found.\n */\nexport function pushToStart(arr, value) {\n    const index = arr.indexOf(value);\n    if (index > -1) {\n        arr.splice(index, 1);\n        arr.unshift(value);\n    }\n}\n/**\n * Pushes an element to the end of the array, if found.\n */\nexport function pushToEnd(arr, value) {\n    const index = arr.indexOf(value);\n    if (index > -1) {\n        arr.splice(index, 1);\n        arr.push(value);\n    }\n}\nexport function firstIndex(array, fn) {\n    for (let i = 0; i < array.length; i++) {\n        const element = array[i];\n        if (fn(element)) {\n            return i;\n        }\n    }\n    return -1;\n}\nexport function remove(array, value) {\n    const index = array.findIndex((t) => t === value);\n    if (index > -1) {\n        array.splice(index, 1);\n        return true;\n    }\n    return false;\n}\n","export const clamp = (value, min, max) => {\n    if (min > max) {\n        /**\n         * caveat: an error should be thrown here if this was a proper `clamp` function but we need to handle\n         * cases where `min` > `max` and in those cases return `min`.\n         */\n        return min;\n    }\n    return Math.min(max, Math.max(value, min));\n};\nexport const sequentialNumberGenerator = () => {\n    let value = 1;\n    return { next: () => (value++).toString() };\n};\nexport const range = (from, to) => {\n    const result = [];\n    if (typeof to !== 'number') {\n        to = from;\n        from = 0;\n    }\n    if (from <= to) {\n        for (let i = from; i < to; i++) {\n            result.push(i);\n        }\n    }\n    else {\n        for (let i = from; i > to; i--) {\n            result.push(i);\n        }\n    }\n    return result;\n};\n","import { clamp } from '../math';\nexport class ViewItem {\n    set size(size) {\n        this._size = size;\n    }\n    get size() {\n        return this._size;\n    }\n    get cachedVisibleSize() {\n        return this._cachedVisibleSize;\n    }\n    get visible() {\n        return typeof this._cachedVisibleSize === 'undefined';\n    }\n    get minimumSize() {\n        return this.visible ? this.view.minimumSize : 0;\n    }\n    get viewMinimumSize() {\n        return this.view.minimumSize;\n    }\n    get maximumSize() {\n        return this.visible ? this.view.maximumSize : 0;\n    }\n    get viewMaximumSize() {\n        return this.view.maximumSize;\n    }\n    get priority() {\n        return this.view.priority;\n    }\n    get snap() {\n        return !!this.view.snap;\n    }\n    set enabled(enabled) {\n        this.container.style.pointerEvents = enabled ? '' : 'none';\n    }\n    constructor(container, view, size, disposable) {\n        this.container = container;\n        this.view = view;\n        this.disposable = disposable;\n        this._cachedVisibleSize = undefined;\n        if (typeof size === 'number') {\n            this._size = size;\n            this._cachedVisibleSize = undefined;\n            container.classList.add('visible');\n        }\n        else {\n            this._size = 0;\n            this._cachedVisibleSize = size.cachedVisibleSize;\n        }\n    }\n    setVisible(visible, size) {\n        var _a;\n        if (visible === this.visible) {\n            return;\n        }\n        if (visible) {\n            this.size = clamp((_a = this._cachedVisibleSize) !== null && _a !== void 0 ? _a : 0, this.viewMinimumSize, this.viewMaximumSize);\n            this._cachedVisibleSize = undefined;\n        }\n        else {\n            this._cachedVisibleSize =\n                typeof size === 'number' ? size : this.size;\n            this.size = 0;\n        }\n        this.container.classList.toggle('visible', visible);\n        if (this.view.setVisible) {\n            this.view.setVisible(visible);\n        }\n    }\n    dispose() {\n        this.disposable.dispose();\n        return this.view;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/splitview\n *--------------------------------------------------------------------------------------------*/\nimport { removeClasses, addClasses, toggleClass, disableIframePointEvents, } from '../dom';\nimport { Emitter } from '../events';\nimport { pushToStart, pushToEnd, firstIndex } from '../array';\nimport { range, clamp } from '../math';\nimport { ViewItem } from './viewItem';\nexport var Orientation;\n(function (Orientation) {\n    Orientation[\"HORIZONTAL\"] = \"HORIZONTAL\";\n    Orientation[\"VERTICAL\"] = \"VERTICAL\";\n})(Orientation || (Orientation = {}));\nexport var SashState;\n(function (SashState) {\n    SashState[SashState[\"MAXIMUM\"] = 0] = \"MAXIMUM\";\n    SashState[SashState[\"MINIMUM\"] = 1] = \"MINIMUM\";\n    SashState[SashState[\"DISABLED\"] = 2] = \"DISABLED\";\n    SashState[SashState[\"ENABLED\"] = 3] = \"ENABLED\";\n})(SashState || (SashState = {}));\nexport var LayoutPriority;\n(function (LayoutPriority) {\n    LayoutPriority[\"Low\"] = \"low\";\n    LayoutPriority[\"High\"] = \"high\";\n    LayoutPriority[\"Normal\"] = \"normal\";\n})(LayoutPriority || (LayoutPriority = {}));\nexport var Sizing;\n(function (Sizing) {\n    Sizing.Distribute = { type: 'distribute' };\n    function Split(index) {\n        return { type: 'split', index };\n    }\n    Sizing.Split = Split;\n    function Invisible(cachedVisibleSize) {\n        return { type: 'invisible', cachedVisibleSize };\n    }\n    Sizing.Invisible = Invisible;\n})(Sizing || (Sizing = {}));\nexport class Splitview {\n    get contentSize() {\n        return this._contentSize;\n    }\n    get size() {\n        return this._size;\n    }\n    set size(value) {\n        this._size = value;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    set orthogonalSize(value) {\n        this._orthogonalSize = value;\n    }\n    get length() {\n        return this.viewItems.length;\n    }\n    get proportions() {\n        return this._proportions ? [...this._proportions] : undefined;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    set orientation(value) {\n        this._orientation = value;\n        const tmp = this.size;\n        this.size = this.orthogonalSize;\n        this.orthogonalSize = tmp;\n        removeClasses(this.element, 'dv-horizontal', 'dv-vertical');\n        this.element.classList.add(this.orientation == Orientation.HORIZONTAL\n            ? 'dv-horizontal'\n            : 'dv-vertical');\n    }\n    get minimumSize() {\n        return this.viewItems.reduce((r, item) => r + item.minimumSize, 0);\n    }\n    get maximumSize() {\n        return this.length === 0\n            ? Number.POSITIVE_INFINITY\n            : this.viewItems.reduce((r, item) => r + item.maximumSize, 0);\n    }\n    get startSnappingEnabled() {\n        return this._startSnappingEnabled;\n    }\n    set startSnappingEnabled(startSnappingEnabled) {\n        if (this._startSnappingEnabled === startSnappingEnabled) {\n            return;\n        }\n        this._startSnappingEnabled = startSnappingEnabled;\n        this.updateSashEnablement();\n    }\n    get endSnappingEnabled() {\n        return this._endSnappingEnabled;\n    }\n    set endSnappingEnabled(endSnappingEnabled) {\n        if (this._endSnappingEnabled === endSnappingEnabled) {\n            return;\n        }\n        this._endSnappingEnabled = endSnappingEnabled;\n        this.updateSashEnablement();\n    }\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = value;\n        toggleClass(this.element, 'dv-splitview-disabled', value);\n    }\n    get margin() {\n        return this._margin;\n    }\n    set margin(value) {\n        this._margin = value;\n    }\n    constructor(container, options) {\n        var _a;\n        this.container = container;\n        this.viewItems = [];\n        this.sashes = [];\n        this._size = 0;\n        this._orthogonalSize = 0;\n        this._contentSize = 0;\n        this._proportions = undefined;\n        this._startSnappingEnabled = true;\n        this._endSnappingEnabled = true;\n        this._disabled = false;\n        this._margin = 0;\n        this._onDidSashEnd = new Emitter();\n        this.onDidSashEnd = this._onDidSashEnd.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        this.resize = (index, delta, sizes = this.viewItems.map((x) => x.size), lowPriorityIndexes, highPriorityIndexes, overloadMinDelta = Number.NEGATIVE_INFINITY, overloadMaxDelta = Number.POSITIVE_INFINITY, snapBefore, snapAfter) => {\n            if (index < 0 || index > this.viewItems.length) {\n                return 0;\n            }\n            const upIndexes = range(index, -1);\n            const downIndexes = range(index + 1, this.viewItems.length);\n            //\n            if (highPriorityIndexes) {\n                for (const i of highPriorityIndexes) {\n                    pushToStart(upIndexes, i);\n                    pushToStart(downIndexes, i);\n                }\n            }\n            if (lowPriorityIndexes) {\n                for (const i of lowPriorityIndexes) {\n                    pushToEnd(upIndexes, i);\n                    pushToEnd(downIndexes, i);\n                }\n            }\n            //\n            const upItems = upIndexes.map((i) => this.viewItems[i]);\n            const upSizes = upIndexes.map((i) => sizes[i]);\n            //\n            const downItems = downIndexes.map((i) => this.viewItems[i]);\n            const downSizes = downIndexes.map((i) => sizes[i]);\n            //\n            const minDeltaUp = upIndexes.reduce((_, i) => _ + this.viewItems[i].minimumSize - sizes[i], 0);\n            const maxDeltaUp = upIndexes.reduce((_, i) => _ + this.viewItems[i].maximumSize - sizes[i], 0);\n            //\n            const maxDeltaDown = downIndexes.length === 0\n                ? Number.POSITIVE_INFINITY\n                : downIndexes.reduce((_, i) => _ + sizes[i] - this.viewItems[i].minimumSize, 0);\n            const minDeltaDown = downIndexes.length === 0\n                ? Number.NEGATIVE_INFINITY\n                : downIndexes.reduce((_, i) => _ + sizes[i] - this.viewItems[i].maximumSize, 0);\n            //\n            const minDelta = Math.max(minDeltaUp, minDeltaDown);\n            const maxDelta = Math.min(maxDeltaDown, maxDeltaUp);\n            //\n            let snapped = false;\n            if (snapBefore) {\n                const snapView = this.viewItems[snapBefore.index];\n                const visible = delta >= snapBefore.limitDelta;\n                snapped = visible !== snapView.visible;\n                snapView.setVisible(visible, snapBefore.size);\n            }\n            if (!snapped && snapAfter) {\n                const snapView = this.viewItems[snapAfter.index];\n                const visible = delta < snapAfter.limitDelta;\n                snapped = visible !== snapView.visible;\n                snapView.setVisible(visible, snapAfter.size);\n            }\n            if (snapped) {\n                return this.resize(index, delta, sizes, lowPriorityIndexes, highPriorityIndexes, overloadMinDelta, overloadMaxDelta);\n            }\n            //\n            const tentativeDelta = clamp(delta, minDelta, maxDelta);\n            let actualDelta = 0;\n            //\n            let deltaUp = tentativeDelta;\n            for (let i = 0; i < upItems.length; i++) {\n                const item = upItems[i];\n                const size = clamp(upSizes[i] + deltaUp, item.minimumSize, item.maximumSize);\n                const viewDelta = size - upSizes[i];\n                actualDelta += viewDelta;\n                deltaUp -= viewDelta;\n                item.size = size;\n            }\n            //\n            let deltaDown = actualDelta;\n            for (let i = 0; i < downItems.length; i++) {\n                const item = downItems[i];\n                const size = clamp(downSizes[i] - deltaDown, item.minimumSize, item.maximumSize);\n                const viewDelta = size - downSizes[i];\n                deltaDown += viewDelta;\n                item.size = size;\n            }\n            //\n            return delta;\n        };\n        this._orientation = options.orientation;\n        this.element = this.createContainer();\n        this.margin = (_a = options.margin) !== null && _a !== void 0 ? _a : 0;\n        this.proportionalLayout =\n            options.proportionalLayout === undefined\n                ? true\n                : !!options.proportionalLayout;\n        this.viewContainer = this.createViewContainer();\n        this.sashContainer = this.createSashContainer();\n        this.element.appendChild(this.sashContainer);\n        this.element.appendChild(this.viewContainer);\n        this.container.appendChild(this.element);\n        this.style(options.styles);\n        // We have an existing set of view, add them now\n        if (options.descriptor) {\n            this._size = options.descriptor.size;\n            options.descriptor.views.forEach((viewDescriptor, index) => {\n                const sizing = viewDescriptor.visible === undefined ||\n                    viewDescriptor.visible\n                    ? viewDescriptor.size\n                    : {\n                        type: 'invisible',\n                        cachedVisibleSize: viewDescriptor.size,\n                    };\n                const view = viewDescriptor.view;\n                this.addView(view, sizing, index, true\n                // true skip layout\n                );\n            });\n            // Initialize content size and proportions for first layout\n            this._contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n            this.saveProportions();\n        }\n    }\n    style(styles) {\n        if ((styles === null || styles === void 0 ? void 0 : styles.separatorBorder) === 'transparent') {\n            removeClasses(this.element, 'dv-separator-border');\n            this.element.style.removeProperty('--dv-separator-border');\n        }\n        else {\n            addClasses(this.element, 'dv-separator-border');\n            if (styles === null || styles === void 0 ? void 0 : styles.separatorBorder) {\n                this.element.style.setProperty('--dv-separator-border', styles.separatorBorder);\n            }\n        }\n    }\n    isViewVisible(index) {\n        if (index < 0 || index >= this.viewItems.length) {\n            throw new Error('Index out of bounds');\n        }\n        const viewItem = this.viewItems[index];\n        return viewItem.visible;\n    }\n    setViewVisible(index, visible) {\n        if (index < 0 || index >= this.viewItems.length) {\n            throw new Error('Index out of bounds');\n        }\n        const viewItem = this.viewItems[index];\n        viewItem.setVisible(visible, viewItem.size);\n        this.distributeEmptySpace(index);\n        this.layoutViews();\n        this.saveProportions();\n    }\n    getViewSize(index) {\n        if (index < 0 || index >= this.viewItems.length) {\n            return -1;\n        }\n        return this.viewItems[index].size;\n    }\n    resizeView(index, size) {\n        if (index < 0 || index >= this.viewItems.length) {\n            return;\n        }\n        const indexes = range(this.viewItems.length).filter((i) => i !== index);\n        const lowPriorityIndexes = [\n            ...indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low),\n            index,\n        ];\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        const item = this.viewItems[index];\n        size = Math.round(size);\n        size = clamp(size, item.minimumSize, Math.min(item.maximumSize, this._size));\n        item.size = size;\n        this.relayout(lowPriorityIndexes, highPriorityIndexes);\n    }\n    getViews() {\n        return this.viewItems.map((x) => x.view);\n    }\n    onDidChange(item, size) {\n        const index = this.viewItems.indexOf(item);\n        if (index < 0 || index >= this.viewItems.length) {\n            return;\n        }\n        size = typeof size === 'number' ? size : item.size;\n        size = clamp(size, item.minimumSize, item.maximumSize);\n        item.size = size;\n        const indexes = range(this.viewItems.length).filter((i) => i !== index);\n        const lowPriorityIndexes = [\n            ...indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low),\n            index,\n        ];\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        /**\n         * add this view we are changing to the low-index list since we have determined the size\n         * here and don't want it changed\n         */\n        this.relayout([...lowPriorityIndexes, index], highPriorityIndexes);\n    }\n    addView(view, size = { type: 'distribute' }, index = this.viewItems.length, skipLayout) {\n        const container = document.createElement('div');\n        container.className = 'dv-view';\n        container.appendChild(view.element);\n        let viewSize;\n        if (typeof size === 'number') {\n            viewSize = size;\n        }\n        else if (size.type === 'split') {\n            viewSize = this.getViewSize(size.index) / 2;\n        }\n        else if (size.type === 'invisible') {\n            viewSize = { cachedVisibleSize: size.cachedVisibleSize };\n        }\n        else {\n            viewSize = view.minimumSize;\n        }\n        const disposable = view.onDidChange((newSize) => this.onDidChange(viewItem, newSize.size));\n        const viewItem = new ViewItem(container, view, viewSize, {\n            dispose: () => {\n                disposable.dispose();\n                this.viewContainer.removeChild(container);\n            },\n        });\n        if (index === this.viewItems.length) {\n            this.viewContainer.appendChild(container);\n        }\n        else {\n            this.viewContainer.insertBefore(container, this.viewContainer.children.item(index));\n        }\n        this.viewItems.splice(index, 0, viewItem);\n        if (this.viewItems.length > 1) {\n            //add sash\n            const sash = document.createElement('div');\n            sash.className = 'dv-sash';\n            const onPointerStart = (event) => {\n                for (const item of this.viewItems) {\n                    item.enabled = false;\n                }\n                const iframes = disableIframePointEvents();\n                const start = this._orientation === Orientation.HORIZONTAL\n                    ? event.clientX\n                    : event.clientY;\n                const sashIndex = firstIndex(this.sashes, (s) => s.container === sash);\n                //\n                const sizes = this.viewItems.map((x) => x.size);\n                //\n                let snapBefore;\n                let snapAfter;\n                const upIndexes = range(sashIndex, -1);\n                const downIndexes = range(sashIndex + 1, this.viewItems.length);\n                const minDeltaUp = upIndexes.reduce((r, i) => r + (this.viewItems[i].minimumSize - sizes[i]), 0);\n                const maxDeltaUp = upIndexes.reduce((r, i) => r + (this.viewItems[i].viewMaximumSize - sizes[i]), 0);\n                const maxDeltaDown = downIndexes.length === 0\n                    ? Number.POSITIVE_INFINITY\n                    : downIndexes.reduce((r, i) => r +\n                        (sizes[i] - this.viewItems[i].minimumSize), 0);\n                const minDeltaDown = downIndexes.length === 0\n                    ? Number.NEGATIVE_INFINITY\n                    : downIndexes.reduce((r, i) => r +\n                        (sizes[i] -\n                            this.viewItems[i].viewMaximumSize), 0);\n                const minDelta = Math.max(minDeltaUp, minDeltaDown);\n                const maxDelta = Math.min(maxDeltaDown, maxDeltaUp);\n                const snapBeforeIndex = this.findFirstSnapIndex(upIndexes);\n                const snapAfterIndex = this.findFirstSnapIndex(downIndexes);\n                if (typeof snapBeforeIndex === 'number') {\n                    const snappedViewItem = this.viewItems[snapBeforeIndex];\n                    const halfSize = Math.floor(snappedViewItem.viewMinimumSize / 2);\n                    snapBefore = {\n                        index: snapBeforeIndex,\n                        limitDelta: snappedViewItem.visible\n                            ? minDelta - halfSize\n                            : minDelta + halfSize,\n                        size: snappedViewItem.size,\n                    };\n                }\n                if (typeof snapAfterIndex === 'number') {\n                    const snappedViewItem = this.viewItems[snapAfterIndex];\n                    const halfSize = Math.floor(snappedViewItem.viewMinimumSize / 2);\n                    snapAfter = {\n                        index: snapAfterIndex,\n                        limitDelta: snappedViewItem.visible\n                            ? maxDelta + halfSize\n                            : maxDelta - halfSize,\n                        size: snappedViewItem.size,\n                    };\n                }\n                const onPointerMove = (event) => {\n                    const current = this._orientation === Orientation.HORIZONTAL\n                        ? event.clientX\n                        : event.clientY;\n                    const delta = current - start;\n                    this.resize(sashIndex, delta, sizes, undefined, undefined, minDelta, maxDelta, snapBefore, snapAfter);\n                    this.distributeEmptySpace();\n                    this.layoutViews();\n                };\n                const end = () => {\n                    for (const item of this.viewItems) {\n                        item.enabled = true;\n                    }\n                    iframes.release();\n                    this.saveProportions();\n                    document.removeEventListener('pointermove', onPointerMove);\n                    document.removeEventListener('pointerup', end);\n                    document.removeEventListener('pointercancel', end);\n                    this._onDidSashEnd.fire(undefined);\n                };\n                document.addEventListener('pointermove', onPointerMove);\n                document.addEventListener('pointerup', end);\n                document.addEventListener('pointercancel', end);\n            };\n            sash.addEventListener('pointerdown', onPointerStart);\n            const sashItem = {\n                container: sash,\n                disposable: () => {\n                    sash.removeEventListener('pointerdown', onPointerStart);\n                    this.sashContainer.removeChild(sash);\n                },\n            };\n            this.sashContainer.appendChild(sash);\n            this.sashes.push(sashItem);\n        }\n        if (!skipLayout) {\n            this.relayout([index]);\n        }\n        if (!skipLayout &&\n            typeof size !== 'number' &&\n            size.type === 'distribute') {\n            this.distributeViewSizes();\n        }\n        this._onDidAddView.fire(view);\n    }\n    distributeViewSizes() {\n        const flexibleViewItems = [];\n        let flexibleSize = 0;\n        for (const item of this.viewItems) {\n            if (item.maximumSize - item.minimumSize > 0) {\n                flexibleViewItems.push(item);\n                flexibleSize += item.size;\n            }\n        }\n        const size = Math.floor(flexibleSize / flexibleViewItems.length);\n        for (const item of flexibleViewItems) {\n            item.size = clamp(size, item.minimumSize, item.maximumSize);\n        }\n        const indexes = range(this.viewItems.length);\n        const lowPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low);\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        this.relayout(lowPriorityIndexes, highPriorityIndexes);\n    }\n    removeView(index, sizing, skipLayout = false) {\n        // Remove view\n        const viewItem = this.viewItems.splice(index, 1)[0];\n        viewItem.dispose();\n        // Remove sash\n        if (this.viewItems.length >= 1) {\n            const sashIndex = Math.max(index - 1, 0);\n            const sashItem = this.sashes.splice(sashIndex, 1)[0];\n            sashItem.disposable();\n        }\n        if (!skipLayout) {\n            this.relayout();\n        }\n        if (sizing && sizing.type === 'distribute') {\n            this.distributeViewSizes();\n        }\n        this._onDidRemoveView.fire(viewItem.view);\n        return viewItem.view;\n    }\n    getViewCachedVisibleSize(index) {\n        if (index < 0 || index >= this.viewItems.length) {\n            throw new Error('Index out of bounds');\n        }\n        const viewItem = this.viewItems[index];\n        return viewItem.cachedVisibleSize;\n    }\n    moveView(from, to) {\n        const cachedVisibleSize = this.getViewCachedVisibleSize(from);\n        const sizing = typeof cachedVisibleSize === 'undefined'\n            ? this.getViewSize(from)\n            : Sizing.Invisible(cachedVisibleSize);\n        const view = this.removeView(from, undefined, true);\n        this.addView(view, sizing, to);\n    }\n    layout(size, orthogonalSize) {\n        const previousSize = Math.max(this.size, this._contentSize);\n        this.size = size;\n        this.orthogonalSize = orthogonalSize;\n        if (!this.proportions) {\n            const indexes = range(this.viewItems.length);\n            const lowPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low);\n            const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n            this.resize(this.viewItems.length - 1, size - previousSize, undefined, lowPriorityIndexes, highPriorityIndexes);\n        }\n        else {\n            let total = 0;\n            for (let i = 0; i < this.viewItems.length; i++) {\n                const item = this.viewItems[i];\n                const proportion = this.proportions[i];\n                if (typeof proportion === 'number') {\n                    total += proportion;\n                }\n                else {\n                    size -= item.size;\n                }\n            }\n            for (let i = 0; i < this.viewItems.length; i++) {\n                const item = this.viewItems[i];\n                const proportion = this.proportions[i];\n                if (typeof proportion === 'number' && total > 0) {\n                    item.size = clamp(Math.round((proportion * size) / total), item.minimumSize, item.maximumSize);\n                }\n            }\n        }\n        this.distributeEmptySpace();\n        this.layoutViews();\n    }\n    relayout(lowPriorityIndexes, highPriorityIndexes) {\n        const contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n        this.resize(this.viewItems.length - 1, this._size - contentSize, undefined, lowPriorityIndexes, highPriorityIndexes);\n        this.distributeEmptySpace();\n        this.layoutViews();\n        this.saveProportions();\n    }\n    distributeEmptySpace(lowPriorityIndex) {\n        const contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n        let emptyDelta = this.size - contentSize;\n        const indexes = range(this.viewItems.length - 1, -1);\n        const lowPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low);\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        for (const index of highPriorityIndexes) {\n            pushToStart(indexes, index);\n        }\n        for (const index of lowPriorityIndexes) {\n            pushToEnd(indexes, index);\n        }\n        if (typeof lowPriorityIndex === 'number') {\n            pushToEnd(indexes, lowPriorityIndex);\n        }\n        for (let i = 0; emptyDelta !== 0 && i < indexes.length; i++) {\n            const item = this.viewItems[indexes[i]];\n            const size = clamp(item.size + emptyDelta, item.minimumSize, item.maximumSize);\n            const viewDelta = size - item.size;\n            emptyDelta -= viewDelta;\n            item.size = size;\n        }\n    }\n    saveProportions() {\n        if (this.proportionalLayout && this._contentSize > 0) {\n            this._proportions = this.viewItems.map((i) => i.visible ? i.size / this._contentSize : undefined);\n        }\n    }\n    /**\n     * Margin explain:\n     *\n     * For `n` views in a splitview there will be `n-1` margins `m`.\n     *\n     * To fit the margins each view must reduce in size by `(m * (n - 1)) / n`.\n     *\n     * For each view `i` the offet must be adjusted by `m * i/(n - 1)`.\n     */\n    layoutViews() {\n        this._contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n        this.updateSashEnablement();\n        if (this.viewItems.length === 0) {\n            return;\n        }\n        const visibleViewItems = this.viewItems.filter((i) => i.visible);\n        const sashCount = Math.max(0, visibleViewItems.length - 1);\n        const marginReducedSize = (this.margin * sashCount) / Math.max(1, visibleViewItems.length);\n        let totalLeftOffset = 0;\n        const viewLeftOffsets = [];\n        const sashWidth = 4; // hardcoded in css\n        const runningVisiblePanelCount = this.viewItems.reduce((arr, viewItem, i) => {\n            const flag = viewItem.visible ? 1 : 0;\n            if (i === 0) {\n                arr.push(flag);\n            }\n            else {\n                arr.push(arr[i - 1] + flag);\n            }\n            return arr;\n        }, []);\n        // calculate both view and cash positions\n        this.viewItems.forEach((view, i) => {\n            totalLeftOffset += this.viewItems[i].size;\n            viewLeftOffsets.push(totalLeftOffset);\n            const size = view.visible ? view.size - marginReducedSize : 0;\n            const visiblePanelsBeforeThisView = Math.max(0, runningVisiblePanelCount[i] - 1);\n            const offset = i === 0 || visiblePanelsBeforeThisView === 0\n                ? 0\n                : viewLeftOffsets[i - 1] +\n                    (visiblePanelsBeforeThisView / sashCount) *\n                        marginReducedSize;\n            if (i < this.viewItems.length - 1) {\n                // calculate sash position\n                const newSize = view.visible\n                    ? offset + size - sashWidth / 2 + this.margin / 2\n                    : offset;\n                if (this._orientation === Orientation.HORIZONTAL) {\n                    this.sashes[i].container.style.left = `${newSize}px`;\n                    this.sashes[i].container.style.top = `0px`;\n                }\n                if (this._orientation === Orientation.VERTICAL) {\n                    this.sashes[i].container.style.left = `0px`;\n                    this.sashes[i].container.style.top = `${newSize}px`;\n                }\n            }\n            // calculate view position\n            if (this._orientation === Orientation.HORIZONTAL) {\n                view.container.style.width = `${size}px`;\n                view.container.style.left = `${offset}px`;\n                view.container.style.top = '';\n                view.container.style.height = '';\n            }\n            if (this._orientation === Orientation.VERTICAL) {\n                view.container.style.height = `${size}px`;\n                view.container.style.top = `${offset}px`;\n                view.container.style.width = '';\n                view.container.style.left = '';\n            }\n            view.view.layout(view.size - marginReducedSize, this._orthogonalSize);\n        });\n    }\n    findFirstSnapIndex(indexes) {\n        // visible views first\n        for (const index of indexes) {\n            const viewItem = this.viewItems[index];\n            if (!viewItem.visible) {\n                continue;\n            }\n            if (viewItem.snap) {\n                return index;\n            }\n        }\n        // then, hidden views\n        for (const index of indexes) {\n            const viewItem = this.viewItems[index];\n            if (viewItem.visible &&\n                viewItem.maximumSize - viewItem.minimumSize > 0) {\n                return undefined;\n            }\n            if (!viewItem.visible && viewItem.snap) {\n                return index;\n            }\n        }\n        return undefined;\n    }\n    updateSashEnablement() {\n        let previous = false;\n        const collapsesDown = this.viewItems.map((i) => (previous = i.size - i.minimumSize > 0 || previous));\n        previous = false;\n        const expandsDown = this.viewItems.map((i) => (previous = i.maximumSize - i.size > 0 || previous));\n        const reverseViews = [...this.viewItems].reverse();\n        previous = false;\n        const collapsesUp = reverseViews\n            .map((i) => (previous = i.size - i.minimumSize > 0 || previous))\n            .reverse();\n        previous = false;\n        const expandsUp = reverseViews\n            .map((i) => (previous = i.maximumSize - i.size > 0 || previous))\n            .reverse();\n        let position = 0;\n        for (let index = 0; index < this.sashes.length; index++) {\n            const sash = this.sashes[index];\n            const viewItem = this.viewItems[index];\n            position += viewItem.size;\n            const min = !(collapsesDown[index] && expandsUp[index + 1]);\n            const max = !(expandsDown[index] && collapsesUp[index + 1]);\n            if (min && max) {\n                const upIndexes = range(index, -1);\n                const downIndexes = range(index + 1, this.viewItems.length);\n                const snapBeforeIndex = this.findFirstSnapIndex(upIndexes);\n                const snapAfterIndex = this.findFirstSnapIndex(downIndexes);\n                const snappedBefore = typeof snapBeforeIndex === 'number' &&\n                    !this.viewItems[snapBeforeIndex].visible;\n                const snappedAfter = typeof snapAfterIndex === 'number' &&\n                    !this.viewItems[snapAfterIndex].visible;\n                if (snappedBefore &&\n                    collapsesUp[index] &&\n                    (position > 0 || this.startSnappingEnabled)) {\n                    this.updateSash(sash, SashState.MINIMUM);\n                }\n                else if (snappedAfter &&\n                    collapsesDown[index] &&\n                    (position < this._contentSize || this.endSnappingEnabled)) {\n                    this.updateSash(sash, SashState.MAXIMUM);\n                }\n                else {\n                    this.updateSash(sash, SashState.DISABLED);\n                }\n            }\n            else if (min && !max) {\n                this.updateSash(sash, SashState.MINIMUM);\n            }\n            else if (!min && max) {\n                this.updateSash(sash, SashState.MAXIMUM);\n            }\n            else {\n                this.updateSash(sash, SashState.ENABLED);\n            }\n        }\n    }\n    updateSash(sash, state) {\n        toggleClass(sash.container, 'dv-disabled', state === SashState.DISABLED);\n        toggleClass(sash.container, 'dv-enabled', state === SashState.ENABLED);\n        toggleClass(sash.container, 'dv-maximum', state === SashState.MAXIMUM);\n        toggleClass(sash.container, 'dv-minimum', state === SashState.MINIMUM);\n    }\n    createViewContainer() {\n        const element = document.createElement('div');\n        element.className = 'dv-view-container';\n        return element;\n    }\n    createSashContainer() {\n        const element = document.createElement('div');\n        element.className = 'dv-sash-container';\n        return element;\n    }\n    createContainer() {\n        const element = document.createElement('div');\n        const orientationClassname = this._orientation === Orientation.HORIZONTAL\n            ? 'dv-horizontal'\n            : 'dv-vertical';\n        element.className = `dv-split-view-container ${orientationClassname}`;\n        return element;\n    }\n    dispose() {\n        this._onDidSashEnd.dispose();\n        this._onDidAddView.dispose();\n        this._onDidRemoveView.dispose();\n        for (let i = 0; i < this.element.children.length; i++) {\n            if (this.element.children.item(i) === this.element) {\n                this.element.removeChild(this.element);\n                break;\n            }\n        }\n        for (const viewItem of this.viewItems) {\n            viewItem.dispose();\n        }\n        this.element.remove();\n    }\n}\n","export const PROPERTY_KEYS_SPLITVIEW = (() => {\n    /**\n     * by readong the keys from an empty value object TypeScript will error\n     * when we add or remove new properties to `DockviewOptions`\n     */\n    const properties = {\n        orientation: undefined,\n        descriptor: undefined,\n        proportionalLayout: undefined,\n        styles: undefined,\n        margin: undefined,\n        disableAutoResizing: undefined,\n        className: undefined,\n    };\n    return Object.keys(properties);\n})();\n","import { Splitview, Orientation, } from '../splitview/splitview';\nimport { CompositeDisposable } from '../lifecycle';\nimport { Emitter } from '../events';\nimport { addClasses, removeClasses } from '../dom';\nexport class Paneview extends CompositeDisposable {\n    get onDidAddView() {\n        return this.splitview.onDidAddView;\n    }\n    get onDidRemoveView() {\n        return this.splitview.onDidRemoveView;\n    }\n    get minimumSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumSize() {\n        return this.splitview.maximumSize;\n    }\n    get orientation() {\n        return this.splitview.orientation;\n    }\n    get size() {\n        return this.splitview.size;\n    }\n    get orthogonalSize() {\n        return this.splitview.orthogonalSize;\n    }\n    constructor(container, options) {\n        var _a;\n        super();\n        this.paneItems = [];\n        this.skipAnimation = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._orientation = (_a = options.orientation) !== null && _a !== void 0 ? _a : Orientation.VERTICAL;\n        this.element = document.createElement('div');\n        this.element.className = 'dv-pane-container';\n        container.appendChild(this.element);\n        this.splitview = new Splitview(this.element, {\n            orientation: this._orientation,\n            proportionalLayout: false,\n            descriptor: options.descriptor,\n        });\n        // if we've added views from the descriptor we need to\n        // add the panes to our Pane array and setup animation\n        this.getPanes().forEach((pane) => {\n            const disposable = new CompositeDisposable(pane.onDidChangeExpansionState(() => {\n                this.setupAnimation();\n                this._onDidChange.fire(undefined);\n            }));\n            const paneItem = {\n                pane,\n                disposable: {\n                    dispose: () => {\n                        disposable.dispose();\n                    },\n                },\n            };\n            this.paneItems.push(paneItem);\n            pane.orthogonalSize = this.splitview.orthogonalSize;\n        });\n        this.addDisposables(this._onDidChange, this.splitview.onDidSashEnd(() => {\n            this._onDidChange.fire(undefined);\n        }), this.splitview.onDidAddView(() => {\n            this._onDidChange.fire();\n        }), this.splitview.onDidRemoveView(() => {\n            this._onDidChange.fire();\n        }));\n    }\n    setViewVisible(index, visible) {\n        this.splitview.setViewVisible(index, visible);\n    }\n    addPane(pane, size, index = this.splitview.length, skipLayout = false) {\n        const disposable = pane.onDidChangeExpansionState(() => {\n            this.setupAnimation();\n            this._onDidChange.fire(undefined);\n        });\n        const paneItem = {\n            pane,\n            disposable: {\n                dispose: () => {\n                    disposable.dispose();\n                },\n            },\n        };\n        this.paneItems.splice(index, 0, paneItem);\n        pane.orthogonalSize = this.splitview.orthogonalSize;\n        this.splitview.addView(pane, size, index, skipLayout);\n    }\n    getViewSize(index) {\n        return this.splitview.getViewSize(index);\n    }\n    getPanes() {\n        return this.splitview.getViews();\n    }\n    removePane(index, options = { skipDispose: false }) {\n        const paneItem = this.paneItems.splice(index, 1)[0];\n        this.splitview.removeView(index);\n        if (!options.skipDispose) {\n            paneItem.disposable.dispose();\n            paneItem.pane.dispose();\n        }\n        return paneItem;\n    }\n    moveView(from, to) {\n        if (from === to) {\n            return;\n        }\n        const view = this.removePane(from, { skipDispose: true });\n        this.skipAnimation = true;\n        try {\n            this.addPane(view.pane, view.pane.size, to, false);\n        }\n        finally {\n            this.skipAnimation = false;\n        }\n    }\n    layout(size, orthogonalSize) {\n        this.splitview.layout(size, orthogonalSize);\n    }\n    setupAnimation() {\n        if (this.skipAnimation) {\n            return;\n        }\n        if (this.animationTimer) {\n            clearTimeout(this.animationTimer);\n            this.animationTimer = undefined;\n        }\n        addClasses(this.element, 'dv-animated');\n        this.animationTimer = setTimeout(() => {\n            this.animationTimer = undefined;\n            removeClasses(this.element, 'dv-animated');\n        }, 200);\n    }\n    dispose() {\n        super.dispose();\n        if (this.animationTimer) {\n            clearTimeout(this.animationTimer);\n            this.animationTimer = undefined;\n        }\n        this.paneItems.forEach((paneItem) => {\n            paneItem.disposable.dispose();\n            paneItem.pane.dispose();\n        });\n        this.paneItems = [];\n        this.splitview.dispose();\n        this.element.remove();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Orientation } from '../splitview/splitview';\nimport { Emitter } from '../events';\nexport class LeafNode {\n    get minimumWidth() {\n        return this.view.minimumWidth;\n    }\n    get maximumWidth() {\n        return this.view.maximumWidth;\n    }\n    get minimumHeight() {\n        return this.view.minimumHeight;\n    }\n    get maximumHeight() {\n        return this.view.maximumHeight;\n    }\n    get priority() {\n        return this.view.priority;\n    }\n    get snap() {\n        return this.view.snap;\n    }\n    get minimumSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumHeight\n            : this.minimumWidth;\n    }\n    get maximumSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumHeight\n            : this.maximumWidth;\n    }\n    get minimumOrthogonalSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumWidth\n            : this.minimumHeight;\n    }\n    get maximumOrthogonalSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumWidth\n            : this.maximumHeight;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    get size() {\n        return this._size;\n    }\n    get element() {\n        return this.view.element;\n    }\n    get width() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.orthogonalSize\n            : this.size;\n    }\n    get height() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.size\n            : this.orthogonalSize;\n    }\n    constructor(view, orientation, orthogonalSize, size = 0) {\n        this.view = view;\n        this.orientation = orientation;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._orthogonalSize = orthogonalSize;\n        this._size = size;\n        this._disposable = this.view.onDidChange((event) => {\n            if (event) {\n                this._onDidChange.fire({\n                    size: this.orientation === Orientation.VERTICAL\n                        ? event.width\n                        : event.height,\n                    orthogonalSize: this.orientation === Orientation.VERTICAL\n                        ? event.height\n                        : event.width,\n                });\n            }\n            else {\n                this._onDidChange.fire({});\n            }\n        });\n    }\n    setVisible(visible) {\n        if (this.view.setVisible) {\n            this.view.setVisible(visible);\n        }\n    }\n    layout(size, orthogonalSize) {\n        this._size = size;\n        this._orthogonalSize = orthogonalSize;\n        this.view.layout(this.width, this.height);\n    }\n    dispose() {\n        this._onDidChange.dispose();\n        this._disposable.dispose();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Splitview, Orientation, LayoutPriority, } from '../splitview/splitview';\nimport { Emitter, Event } from '../events';\nimport { LeafNode } from './leafNode';\nimport { CompositeDisposable, Disposable } from '../lifecycle';\nexport class BranchNode extends CompositeDisposable {\n    get width() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.size\n            : this.orthogonalSize;\n    }\n    get height() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.orthogonalSize\n            : this.size;\n    }\n    get minimumSize() {\n        return this.children.length === 0\n            ? 0\n            : Math.max(...this.children.map((c, index) => this.splitview.isViewVisible(index)\n                ? c.minimumOrthogonalSize\n                : 0));\n    }\n    get maximumSize() {\n        return Math.min(...this.children.map((c, index) => this.splitview.isViewVisible(index)\n            ? c.maximumOrthogonalSize\n            : Number.POSITIVE_INFINITY));\n    }\n    get minimumOrthogonalSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumOrthogonalSize() {\n        return this.splitview.maximumSize;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    get size() {\n        return this._size;\n    }\n    get minimumWidth() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumOrthogonalSize\n            : this.minimumSize;\n    }\n    get minimumHeight() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumSize\n            : this.minimumOrthogonalSize;\n    }\n    get maximumWidth() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumOrthogonalSize\n            : this.maximumSize;\n    }\n    get maximumHeight() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumSize\n            : this.maximumOrthogonalSize;\n    }\n    get priority() {\n        if (this.children.length === 0) {\n            return LayoutPriority.Normal;\n        }\n        const priorities = this.children.map((c) => typeof c.priority === 'undefined'\n            ? LayoutPriority.Normal\n            : c.priority);\n        if (priorities.some((p) => p === LayoutPriority.High)) {\n            return LayoutPriority.High;\n        }\n        else if (priorities.some((p) => p === LayoutPriority.Low)) {\n            return LayoutPriority.Low;\n        }\n        return LayoutPriority.Normal;\n    }\n    get disabled() {\n        return this.splitview.disabled;\n    }\n    set disabled(value) {\n        this.splitview.disabled = value;\n    }\n    get margin() {\n        return this.splitview.margin;\n    }\n    set margin(value) {\n        this.splitview.margin = value;\n        this.children.forEach((child) => {\n            if (child instanceof BranchNode) {\n                child.margin = value;\n            }\n        });\n    }\n    constructor(orientation, proportionalLayout, styles, size, orthogonalSize, disabled, margin, childDescriptors) {\n        super();\n        this.orientation = orientation;\n        this.proportionalLayout = proportionalLayout;\n        this.styles = styles;\n        this._childrenDisposable = Disposable.NONE;\n        this.children = [];\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._onDidVisibilityChange = new Emitter();\n        this.onDidVisibilityChange = this._onDidVisibilityChange.event;\n        this._orthogonalSize = orthogonalSize;\n        this._size = size;\n        this.element = document.createElement('div');\n        this.element.className = 'dv-branch-node';\n        if (!childDescriptors) {\n            this.splitview = new Splitview(this.element, {\n                orientation: this.orientation,\n                proportionalLayout,\n                styles,\n                margin,\n            });\n            this.splitview.layout(this.size, this.orthogonalSize);\n        }\n        else {\n            const descriptor = {\n                views: childDescriptors.map((childDescriptor) => {\n                    return {\n                        view: childDescriptor.node,\n                        size: childDescriptor.node.size,\n                        visible: childDescriptor.node instanceof LeafNode &&\n                            childDescriptor.visible !== undefined\n                            ? childDescriptor.visible\n                            : true,\n                    };\n                }),\n                size: this.orthogonalSize,\n            };\n            this.children = childDescriptors.map((c) => c.node);\n            this.splitview = new Splitview(this.element, {\n                orientation: this.orientation,\n                descriptor,\n                proportionalLayout,\n                styles,\n                margin,\n            });\n        }\n        this.disabled = disabled;\n        this.addDisposables(this._onDidChange, this._onDidVisibilityChange, this.splitview.onDidSashEnd(() => {\n            this._onDidChange.fire({});\n        }));\n        this.setupChildrenEvents();\n    }\n    setVisible(_visible) {\n        // noop\n    }\n    isChildVisible(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.isViewVisible(index);\n    }\n    setChildVisible(index, visible) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        if (this.splitview.isViewVisible(index) === visible) {\n            return;\n        }\n        const wereAllChildrenHidden = this.splitview.contentSize === 0;\n        this.splitview.setViewVisible(index, visible);\n        // }\n        const areAllChildrenHidden = this.splitview.contentSize === 0;\n        // If all children are hidden then the parent should hide the entire splitview\n        // If the entire splitview is hidden then the parent should show the splitview when a child is shown\n        if ((visible && wereAllChildrenHidden) ||\n            (!visible && areAllChildrenHidden)) {\n            this._onDidVisibilityChange.fire({ visible });\n        }\n    }\n    moveChild(from, to) {\n        if (from === to) {\n            return;\n        }\n        if (from < 0 || from >= this.children.length) {\n            throw new Error('Invalid from index');\n        }\n        if (from < to) {\n            to--;\n        }\n        this.splitview.moveView(from, to);\n        const child = this._removeChild(from);\n        this._addChild(child, to);\n    }\n    getChildSize(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.getViewSize(index);\n    }\n    resizeChild(index, size) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.resizeView(index, size);\n    }\n    layout(size, orthogonalSize) {\n        this._size = orthogonalSize;\n        this._orthogonalSize = size;\n        this.splitview.layout(orthogonalSize, size);\n    }\n    addChild(node, size, index, skipLayout) {\n        if (index < 0 || index > this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.addView(node, size, index, skipLayout);\n        this._addChild(node, index);\n    }\n    getChildCachedVisibleSize(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.getViewCachedVisibleSize(index);\n    }\n    removeChild(index, sizing) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.removeView(index, sizing);\n        return this._removeChild(index);\n    }\n    _addChild(node, index) {\n        this.children.splice(index, 0, node);\n        this.setupChildrenEvents();\n    }\n    _removeChild(index) {\n        const [child] = this.children.splice(index, 1);\n        this.setupChildrenEvents();\n        return child;\n    }\n    setupChildrenEvents() {\n        this._childrenDisposable.dispose();\n        this._childrenDisposable = new CompositeDisposable(Event.any(...this.children.map((c) => c.onDidChange))((e) => {\n            /**\n             * indicate a change has occured to allows any re-rendering but don't bubble\n             * event because that was specific to this branch\n             */\n            this._onDidChange.fire({ size: e.orthogonalSize });\n        }), ...this.children.map((c, i) => {\n            if (c instanceof BranchNode) {\n                return c.onDidVisibilityChange(({ visible }) => {\n                    this.setChildVisible(i, visible);\n                });\n            }\n            return Disposable.NONE;\n        }));\n    }\n    dispose() {\n        this._childrenDisposable.dispose();\n        this.splitview.dispose();\n        this.children.forEach((child) => child.dispose());\n        super.dispose();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Orientation, Sizing, } from '../splitview/splitview';\nimport { tail } from '../array';\nimport { LeafNode } from './leafNode';\nimport { BranchNode } from './branchNode';\nimport { Emitter } from '../events';\nimport { MutableDisposable } from '../lifecycle';\nfunction findLeaf(candiateNode, last) {\n    if (candiateNode instanceof LeafNode) {\n        return candiateNode;\n    }\n    if (candiateNode instanceof BranchNode) {\n        return findLeaf(candiateNode.children[last ? candiateNode.children.length - 1 : 0], last);\n    }\n    throw new Error('invalid node');\n}\nfunction flipNode(node, size, orthogonalSize) {\n    if (node instanceof BranchNode) {\n        const result = new BranchNode(orthogonal(node.orientation), node.proportionalLayout, node.styles, size, orthogonalSize, node.disabled, node.margin);\n        let totalSize = 0;\n        for (let i = node.children.length - 1; i >= 0; i--) {\n            const child = node.children[i];\n            const childSize = child instanceof BranchNode ? child.orthogonalSize : child.size;\n            let newSize = node.size === 0\n                ? 0\n                : Math.round((size * childSize) / node.size);\n            totalSize += newSize;\n            // The last view to add should adjust to rounding errors\n            if (i === 0) {\n                newSize += size - totalSize;\n            }\n            result.addChild(flipNode(child, orthogonalSize, newSize), newSize, 0, true);\n        }\n        return result;\n    }\n    else {\n        return new LeafNode(node.view, orthogonal(node.orientation), orthogonalSize);\n    }\n}\nexport function indexInParent(element) {\n    const parentElement = element.parentElement;\n    if (!parentElement) {\n        throw new Error('Invalid grid element');\n    }\n    let el = parentElement.firstElementChild;\n    let index = 0;\n    while (el !== element && el !== parentElement.lastElementChild && el) {\n        el = el.nextElementSibling;\n        index++;\n    }\n    return index;\n}\n/**\n * Find the grid location of a specific DOM element by traversing the parent\n * chain and finding each child index on the way.\n *\n * This will break as soon as DOM structures of the Splitview or Gridview change.\n */\nexport function getGridLocation(element) {\n    const parentElement = element.parentElement;\n    if (!parentElement) {\n        throw new Error('Invalid grid element');\n    }\n    if (/\\bdv-grid-view\\b/.test(parentElement.className)) {\n        return [];\n    }\n    const index = indexInParent(parentElement);\n    const ancestor = parentElement.parentElement.parentElement.parentElement;\n    return [...getGridLocation(ancestor), index];\n}\nexport function getRelativeLocation(rootOrientation, location, direction) {\n    const orientation = getLocationOrientation(rootOrientation, location);\n    const directionOrientation = getDirectionOrientation(direction);\n    if (orientation === directionOrientation) {\n        const [rest, _index] = tail(location);\n        let index = _index;\n        if (direction === 'right' || direction === 'bottom') {\n            index += 1;\n        }\n        return [...rest, index];\n    }\n    else {\n        const index = direction === 'right' || direction === 'bottom' ? 1 : 0;\n        return [...location, index];\n    }\n}\nexport function getDirectionOrientation(direction) {\n    return direction === 'top' || direction === 'bottom'\n        ? Orientation.VERTICAL\n        : Orientation.HORIZONTAL;\n}\nexport function getLocationOrientation(rootOrientation, location) {\n    return location.length % 2 === 0\n        ? orthogonal(rootOrientation)\n        : rootOrientation;\n}\nexport const orthogonal = (orientation) => orientation === Orientation.HORIZONTAL\n    ? Orientation.VERTICAL\n    : Orientation.HORIZONTAL;\nexport function isGridBranchNode(node) {\n    return !!node.children;\n}\nconst serializeBranchNode = (node, orientation) => {\n    const size = orientation === Orientation.VERTICAL ? node.box.width : node.box.height;\n    if (!isGridBranchNode(node)) {\n        if (typeof node.cachedVisibleSize === 'number') {\n            return {\n                type: 'leaf',\n                data: node.view.toJSON(),\n                size: node.cachedVisibleSize,\n                visible: false,\n            };\n        }\n        return { type: 'leaf', data: node.view.toJSON(), size };\n    }\n    return {\n        type: 'branch',\n        data: node.children.map((c) => serializeBranchNode(c, orthogonal(orientation))),\n        size,\n    };\n};\nexport class Gridview {\n    get length() {\n        return this._root ? this._root.children.length : 0;\n    }\n    get orientation() {\n        return this.root.orientation;\n    }\n    set orientation(orientation) {\n        if (this.root.orientation === orientation) {\n            return;\n        }\n        const { size, orthogonalSize } = this.root;\n        this.root = flipNode(this.root, orthogonalSize, size);\n        this.root.layout(size, orthogonalSize);\n    }\n    get width() {\n        return this.root.width;\n    }\n    get height() {\n        return this.root.height;\n    }\n    get minimumWidth() {\n        return this.root.minimumWidth;\n    }\n    get minimumHeight() {\n        return this.root.minimumHeight;\n    }\n    get maximumWidth() {\n        return this.root.maximumHeight;\n    }\n    get maximumHeight() {\n        return this.root.maximumHeight;\n    }\n    get locked() {\n        return this._locked;\n    }\n    set locked(value) {\n        this._locked = value;\n        const branch = [this.root];\n        /**\n         * simple depth-first-search to cover all nodes\n         *\n         * @see https://en.wikipedia.org/wiki/Depth-first_search\n         */\n        while (branch.length > 0) {\n            const node = branch.pop();\n            if (node instanceof BranchNode) {\n                node.disabled = value;\n                branch.push(...node.children);\n            }\n        }\n    }\n    get margin() {\n        return this._margin;\n    }\n    set margin(value) {\n        this._margin = value;\n        this.root.margin = value;\n    }\n    maximizedView() {\n        var _a;\n        return (_a = this._maximizedNode) === null || _a === void 0 ? void 0 : _a.leaf.view;\n    }\n    hasMaximizedView() {\n        return this._maximizedNode !== undefined;\n    }\n    maximizeView(view) {\n        var _a;\n        const location = getGridLocation(view.element);\n        const [_, node] = this.getNode(location);\n        if (!(node instanceof LeafNode)) {\n            return;\n        }\n        if (((_a = this._maximizedNode) === null || _a === void 0 ? void 0 : _a.leaf) === node) {\n            return;\n        }\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        serializeBranchNode(this.getView(), this.orientation);\n        const hiddenOnMaximize = [];\n        function hideAllViewsBut(parent, exclude) {\n            for (let i = 0; i < parent.children.length; i++) {\n                const child = parent.children[i];\n                if (child instanceof LeafNode) {\n                    if (child !== exclude) {\n                        if (parent.isChildVisible(i)) {\n                            parent.setChildVisible(i, false);\n                        }\n                        else {\n                            hiddenOnMaximize.push(child);\n                        }\n                    }\n                }\n                else {\n                    hideAllViewsBut(child, exclude);\n                }\n            }\n        }\n        hideAllViewsBut(this.root, node);\n        this._maximizedNode = { leaf: node, hiddenOnMaximize };\n        this._onDidMaximizedNodeChange.fire({\n            view: node.view,\n            isMaximized: true,\n        });\n    }\n    exitMaximizedView() {\n        if (!this._maximizedNode) {\n            return;\n        }\n        const hiddenOnMaximize = this._maximizedNode.hiddenOnMaximize;\n        function showViewsInReverseOrder(parent) {\n            for (let index = parent.children.length - 1; index >= 0; index--) {\n                const child = parent.children[index];\n                if (child instanceof LeafNode) {\n                    if (!hiddenOnMaximize.includes(child)) {\n                        parent.setChildVisible(index, true);\n                    }\n                }\n                else {\n                    showViewsInReverseOrder(child);\n                }\n            }\n        }\n        showViewsInReverseOrder(this.root);\n        const tmp = this._maximizedNode.leaf;\n        this._maximizedNode = undefined;\n        this._onDidMaximizedNodeChange.fire({\n            view: tmp.view,\n            isMaximized: false,\n        });\n    }\n    serialize() {\n        const maximizedView = this.maximizedView();\n        let maxmizedViewLocation;\n        if (maximizedView) {\n            /**\n             * The minimum information we can get away with in order to serialize a maxmized view is it's location within the grid\n             * which is represented as a branch of indices\n             */\n            maxmizedViewLocation = getGridLocation(maximizedView.element);\n        }\n        if (this.hasMaximizedView()) {\n            /**\n             * the saved layout cannot be in its maxmized state otherwise all of the underlying\n             * view dimensions will be wrong\n             *\n             * To counteract this we temporaily remove the maximized view to compute the serialized output\n             * of the grid before adding back the maxmized view as to not alter the layout from the users\n             * perspective when `.toJSON()` is called\n             */\n            this.exitMaximizedView();\n        }\n        const root = serializeBranchNode(this.getView(), this.orientation);\n        const resullt = {\n            root,\n            width: this.width,\n            height: this.height,\n            orientation: this.orientation,\n        };\n        if (maxmizedViewLocation) {\n            resullt.maximizedNode = {\n                location: maxmizedViewLocation,\n            };\n        }\n        if (maximizedView) {\n            // replace any maximzied view that was removed for serialization purposes\n            this.maximizeView(maximizedView);\n        }\n        return resullt;\n    }\n    dispose() {\n        this.disposable.dispose();\n        this._onDidChange.dispose();\n        this._onDidMaximizedNodeChange.dispose();\n        this._onDidViewVisibilityChange.dispose();\n        this.root.dispose();\n        this._maximizedNode = undefined;\n        this.element.remove();\n    }\n    clear() {\n        const orientation = this.root.orientation;\n        this.root = new BranchNode(orientation, this.proportionalLayout, this.styles, this.root.size, this.root.orthogonalSize, this.locked, this.margin);\n    }\n    deserialize(json, deserializer) {\n        const orientation = json.orientation;\n        const height = orientation === Orientation.VERTICAL ? json.height : json.width;\n        this._deserialize(json.root, orientation, deserializer, height);\n        /**\n         * The deserialied layout must be positioned through this.layout(...)\n         * before any maximizedNode can be positioned\n         */\n        this.layout(json.width, json.height);\n        if (json.maximizedNode) {\n            const location = json.maximizedNode.location;\n            const [_, node] = this.getNode(location);\n            if (!(node instanceof LeafNode)) {\n                return;\n            }\n            this.maximizeView(node.view);\n        }\n    }\n    _deserialize(root, orientation, deserializer, orthogonalSize) {\n        this.root = this._deserializeNode(root, orientation, deserializer, orthogonalSize);\n    }\n    _deserializeNode(node, orientation, deserializer, orthogonalSize) {\n        var _a;\n        let result;\n        if (node.type === 'branch') {\n            const serializedChildren = node.data;\n            const children = serializedChildren.map((serializedChild) => {\n                return {\n                    node: this._deserializeNode(serializedChild, orthogonal(orientation), deserializer, node.size),\n                    visible: serializedChild.visible,\n                };\n            });\n            result = new BranchNode(orientation, this.proportionalLayout, this.styles, node.size, // <- orthogonal size - flips at each depth\n            orthogonalSize, // <- size - flips at each depth,\n            this.locked, this.margin, children);\n        }\n        else {\n            const view = deserializer.fromJSON(node);\n            if (typeof node.visible === 'boolean') {\n                (_a = view.setVisible) === null || _a === void 0 ? void 0 : _a.call(view, node.visible);\n            }\n            result = new LeafNode(view, orientation, orthogonalSize, node.size);\n        }\n        return result;\n    }\n    get root() {\n        return this._root;\n    }\n    set root(root) {\n        const oldRoot = this._root;\n        if (oldRoot) {\n            oldRoot.dispose();\n            this._maximizedNode = undefined;\n            this.element.removeChild(oldRoot.element);\n        }\n        this._root = root;\n        this.element.appendChild(this._root.element);\n        this.disposable.value = this._root.onDidChange((e) => {\n            this._onDidChange.fire(e);\n        });\n    }\n    /**\n     * If the root is orientated as a VERTICAL node then nest the existing root within a new HORIZIONTAL root node\n     * If the root is orientated as a HORIZONTAL node then nest the existing root within a new VERITCAL root node\n     */\n    insertOrthogonalSplitviewAtRoot() {\n        if (!this._root) {\n            return;\n        }\n        const oldRoot = this.root;\n        oldRoot.element.remove();\n        this._root = new BranchNode(orthogonal(oldRoot.orientation), this.proportionalLayout, this.styles, this.root.orthogonalSize, this.root.size, this.locked, this.margin);\n        if (oldRoot.children.length === 0) {\n            // no data so no need to add anything back in\n        }\n        else if (oldRoot.children.length === 1) {\n            // can remove one level of redundant branching if there is only a single child\n            const childReference = oldRoot.children[0];\n            const child = oldRoot.removeChild(0); // remove to prevent disposal when disposing of unwanted root\n            child.dispose();\n            oldRoot.dispose();\n            this._root.addChild(\n            /**\n             * the child node will have the same orientation as the new root since\n             * we are removing the inbetween node.\n             * the entire 'tree' must be flipped recursively to ensure that the orientation\n             * flips at each level\n             */\n            flipNode(childReference, childReference.orthogonalSize, childReference.size), Sizing.Distribute, 0);\n        }\n        else {\n            this._root.addChild(oldRoot, Sizing.Distribute, 0);\n        }\n        this.element.appendChild(this._root.element);\n        this.disposable.value = this._root.onDidChange((e) => {\n            this._onDidChange.fire(e);\n        });\n    }\n    next(location) {\n        return this.progmaticSelect(location);\n    }\n    previous(location) {\n        return this.progmaticSelect(location, true);\n    }\n    getView(location) {\n        const node = location ? this.getNode(location)[1] : this.root;\n        return this._getViews(node, this.orientation);\n    }\n    _getViews(node, orientation, cachedVisibleSize) {\n        const box = { height: node.height, width: node.width };\n        if (node instanceof LeafNode) {\n            return { box, view: node.view, cachedVisibleSize };\n        }\n        const children = [];\n        for (let i = 0; i < node.children.length; i++) {\n            const child = node.children[i];\n            const nodeCachedVisibleSize = node.getChildCachedVisibleSize(i);\n            children.push(this._getViews(child, orthogonal(orientation), nodeCachedVisibleSize));\n        }\n        return { box, children };\n    }\n    progmaticSelect(location, reverse = false) {\n        const [path, node] = this.getNode(location);\n        if (!(node instanceof LeafNode)) {\n            throw new Error('invalid location');\n        }\n        for (let i = path.length - 1; i > -1; i--) {\n            const n = path[i];\n            const l = location[i] || 0;\n            const canProgressInCurrentLevel = reverse\n                ? l - 1 > -1\n                : l + 1 < n.children.length;\n            if (canProgressInCurrentLevel) {\n                return findLeaf(n.children[reverse ? l - 1 : l + 1], reverse);\n            }\n        }\n        return findLeaf(this.root, reverse);\n    }\n    constructor(proportionalLayout, styles, orientation, locked, margin) {\n        this.proportionalLayout = proportionalLayout;\n        this.styles = styles;\n        this._locked = false;\n        this._margin = 0;\n        this._maximizedNode = undefined;\n        this.disposable = new MutableDisposable();\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._onDidViewVisibilityChange = new Emitter();\n        this.onDidViewVisibilityChange = this._onDidViewVisibilityChange.event;\n        this._onDidMaximizedNodeChange = new Emitter();\n        this.onDidMaximizedNodeChange = this._onDidMaximizedNodeChange.event;\n        this.element = document.createElement('div');\n        this.element.className = 'dv-grid-view';\n        this._locked = locked !== null && locked !== void 0 ? locked : false;\n        this._margin = margin !== null && margin !== void 0 ? margin : 0;\n        this.root = new BranchNode(orientation, proportionalLayout, styles, 0, 0, this.locked, this.margin);\n    }\n    isViewVisible(location) {\n        const [rest, index] = tail(location);\n        const [, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid from location');\n        }\n        return parent.isChildVisible(index);\n    }\n    setViewVisible(location, visible) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [rest, index] = tail(location);\n        const [, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid from location');\n        }\n        this._onDidViewVisibilityChange.fire();\n        parent.setChildVisible(index, visible);\n    }\n    moveView(parentLocation, from, to) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [, parent] = this.getNode(parentLocation);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        parent.moveChild(from, to);\n    }\n    addView(view, size, location) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [rest, index] = tail(location);\n        const [pathToParent, parent] = this.getNode(rest);\n        if (parent instanceof BranchNode) {\n            const node = new LeafNode(view, orthogonal(parent.orientation), parent.orthogonalSize);\n            parent.addChild(node, size, index);\n        }\n        else {\n            const [grandParent, ..._] = [...pathToParent].reverse();\n            const [parentIndex, ...__] = [...rest].reverse();\n            let newSiblingSize = 0;\n            const newSiblingCachedVisibleSize = grandParent.getChildCachedVisibleSize(parentIndex);\n            if (typeof newSiblingCachedVisibleSize === 'number') {\n                newSiblingSize = Sizing.Invisible(newSiblingCachedVisibleSize);\n            }\n            const child = grandParent.removeChild(parentIndex);\n            child.dispose();\n            const newParent = new BranchNode(parent.orientation, this.proportionalLayout, this.styles, parent.size, parent.orthogonalSize, this.locked, this.margin);\n            grandParent.addChild(newParent, parent.size, parentIndex);\n            const newSibling = new LeafNode(parent.view, grandParent.orientation, parent.size);\n            newParent.addChild(newSibling, newSiblingSize, 0);\n            if (typeof size !== 'number' && size.type === 'split') {\n                size = { type: 'split', index: 0 };\n            }\n            const node = new LeafNode(view, grandParent.orientation, parent.size);\n            newParent.addChild(node, size, index);\n        }\n    }\n    remove(view, sizing) {\n        const location = getGridLocation(view.element);\n        return this.removeView(location, sizing);\n    }\n    removeView(location, sizing) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [rest, index] = tail(location);\n        const [pathToParent, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        const nodeToRemove = parent.children[index];\n        if (!(nodeToRemove instanceof LeafNode)) {\n            throw new Error('Invalid location');\n        }\n        parent.removeChild(index, sizing);\n        nodeToRemove.dispose();\n        if (parent.children.length !== 1) {\n            return nodeToRemove.view;\n        }\n        // if the parent has only one child and we know the parent is a BranchNode we can make the tree\n        // more efficiently spaced by replacing the parent BranchNode with the child.\n        // if that child is a LeafNode then we simply replace the BranchNode with the child otherwise if the child\n        // is a BranchNode too we should spread it's children into the grandparent.\n        // refer to the remaining child as the sibling\n        const sibling = parent.children[0];\n        if (pathToParent.length === 0) {\n            // if the parent is root\n            if (sibling instanceof LeafNode) {\n                // if the sibling is a leaf node no action is required\n                return nodeToRemove.view;\n            }\n            // otherwise the sibling is a branch node. since the parent is the root and the root has only one child\n            // which is a branch node we can just set this branch node to be the new root node\n            // for good housekeeping we'll removing the sibling from it's existing tree\n            parent.removeChild(0, sizing);\n            // and set that sibling node to be root\n            this.root = sibling;\n            return nodeToRemove.view;\n        }\n        // otherwise the parent is apart of a large sub-tree\n        const [grandParent, ..._] = [...pathToParent].reverse();\n        const [parentIndex, ...__] = [...rest].reverse();\n        const isSiblingVisible = parent.isChildVisible(0);\n        // either way we need to remove the sibling from it's existing tree\n        parent.removeChild(0, sizing);\n        // note the sizes of all of the grandparents children\n        const sizes = grandParent.children.map((_size, i) => grandParent.getChildSize(i));\n        // remove the parent from the grandparent since we are moving the sibling to take the parents place\n        // this parent is no longer used and can be disposed of\n        grandParent.removeChild(parentIndex, sizing).dispose();\n        if (sibling instanceof BranchNode) {\n            // replace the parent with the siblings children\n            sizes.splice(parentIndex, 1, ...sibling.children.map((c) => c.size));\n            // and add those siblings to the grandparent\n            for (let i = 0; i < sibling.children.length; i++) {\n                const child = sibling.children[i];\n                grandParent.addChild(child, child.size, parentIndex + i);\n            }\n            /**\n             * clean down the branch node since we need to dipose of it and\n             * when .dispose() it called on a branch it will dispose of any\n             * views it is holding onto.\n             */\n            while (sibling.children.length > 0) {\n                sibling.removeChild(0);\n            }\n        }\n        else {\n            // otherwise create a new leaf node and add that to the grandparent\n            const newSibling = new LeafNode(sibling.view, orthogonal(sibling.orientation), sibling.size);\n            const siblingSizing = isSiblingVisible\n                ? sibling.orthogonalSize\n                : Sizing.Invisible(sibling.orthogonalSize);\n            grandParent.addChild(newSibling, siblingSizing, parentIndex);\n        }\n        // the containing node of the sibling is no longer required and can be disposed of\n        sibling.dispose();\n        // resize everything\n        for (let i = 0; i < sizes.length; i++) {\n            grandParent.resizeChild(i, sizes[i]);\n        }\n        return nodeToRemove.view;\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.root.orientation === Orientation.HORIZONTAL\n            ? [height, width]\n            : [width, height];\n        this.root.layout(size, orthogonalSize);\n    }\n    getNode(location, node = this.root, path = []) {\n        if (location.length === 0) {\n            return [path, node];\n        }\n        if (!(node instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        const [index, ...rest] = location;\n        if (index < 0 || index >= node.children.length) {\n            throw new Error('Invalid location');\n        }\n        const child = node.children[index];\n        path.push(node);\n        return this.getNode(rest, child, path);\n    }\n}\n","export const PROPERTY_KEYS_GRIDVIEW = (() => {\n    /**\n     * by readong the keys from an empty value object TypeScript will error\n     * when we add or remove new properties to `DockviewOptions`\n     */\n    const properties = {\n        disableAutoResizing: undefined,\n        proportionalLayout: undefined,\n        orientation: undefined,\n        hideBorders: undefined,\n        className: undefined,\n    };\n    return Object.keys(properties);\n})();\n","import { isInDocument, watchElementResize } from './dom';\nimport { CompositeDisposable } from './lifecycle';\nexport class Resizable extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    get disableResizing() {\n        return this._disableResizing;\n    }\n    set disableResizing(value) {\n        this._disableResizing = value;\n    }\n    constructor(parentElement, disableResizing = false) {\n        super();\n        this._disableResizing = disableResizing;\n        this._element = parentElement;\n        this.addDisposables(watchElementResize(this._element, (entry) => {\n            if (this.isDisposed) {\n                /**\n                 * resize is delayed through requestAnimationFrame so there is a small chance\n                 * the component has already been disposed of\n                 */\n                return;\n            }\n            if (this.disableResizing) {\n                return;\n            }\n            if (!this._element.offsetParent) {\n                /**\n                 * offsetParent === null is equivalent to display: none being set on the element or one\n                 * of it's parents. In the display: none case the size will become (0, 0) which we do\n                 * not want to propagate.\n                 *\n                 * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/offsetParent\n                 *\n                 * You could use checkVisibility() but at the time of writing it's not supported across\n                 * all Browsers\n                 *\n                 * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/checkVisibility\n                 */\n                return;\n            }\n            if (!isInDocument(this._element)) {\n                /**\n                 * since the event is dispatched through requestAnimationFrame there is a small chance\n                 * the component is no longer attached to the DOM, if that is the case the dimensions\n                 * are mostly likely all zero and meaningless. we should skip this case.\n                 */\n                return;\n            }\n            const { width, height } = entry.contentRect;\n            this.layout(width, height);\n        }));\n    }\n}\n","import { Emitter, Event, AsapEvent } from '../events';\nimport { getGridLocation, Gridview } from './gridview';\nimport { Disposable } from '../lifecycle';\nimport { sequentialNumberGenerator } from '../math';\nimport { Sizing } from '../splitview/splitview';\nimport { Resizable } from '../resizable';\nimport { Classnames } from '../dom';\nconst nextLayoutId = sequentialNumberGenerator();\nexport function toTarget(direction) {\n    switch (direction) {\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'above':\n            return 'top';\n        case 'below':\n            return 'bottom';\n        case 'within':\n        default:\n            return 'center';\n    }\n}\nexport class BaseGrid extends Resizable {\n    get id() {\n        return this._id;\n    }\n    get size() {\n        return this._groups.size;\n    }\n    get groups() {\n        return Array.from(this._groups.values()).map((_) => _.value);\n    }\n    get width() {\n        return this.gridview.width;\n    }\n    get height() {\n        return this.gridview.height;\n    }\n    get minimumHeight() {\n        return this.gridview.minimumHeight;\n    }\n    get maximumHeight() {\n        return this.gridview.maximumHeight;\n    }\n    get minimumWidth() {\n        return this.gridview.minimumWidth;\n    }\n    get maximumWidth() {\n        return this.gridview.maximumWidth;\n    }\n    get activeGroup() {\n        return this._activeGroup;\n    }\n    get locked() {\n        return this.gridview.locked;\n    }\n    set locked(value) {\n        this.gridview.locked = value;\n    }\n    constructor(parentElement, options) {\n        var _a;\n        super(document.createElement('div'), options.disableAutoResizing);\n        this._id = nextLayoutId.next();\n        this._groups = new Map();\n        this._onDidRemove = new Emitter();\n        this.onDidRemove = this._onDidRemove.event;\n        this._onDidAdd = new Emitter();\n        this.onDidAdd = this._onDidAdd.event;\n        this._onDidMaximizedChange = new Emitter();\n        this.onDidMaximizedChange = this._onDidMaximizedChange.event;\n        this._onDidActiveChange = new Emitter();\n        this.onDidActiveChange = this._onDidActiveChange.event;\n        this._bufferOnDidLayoutChange = new AsapEvent();\n        this.onDidLayoutChange = this._bufferOnDidLayoutChange.onEvent;\n        this._onDidViewVisibilityChangeMicroTaskQueue = new AsapEvent();\n        this.onDidViewVisibilityChangeMicroTaskQueue = this._onDidViewVisibilityChangeMicroTaskQueue.onEvent;\n        this.element.style.height = '100%';\n        this.element.style.width = '100%';\n        this._classNames = new Classnames(this.element);\n        this._classNames.setClassNames((_a = options.className) !== null && _a !== void 0 ? _a : '');\n        parentElement.appendChild(this.element);\n        this.gridview = new Gridview(!!options.proportionalLayout, options.styles, options.orientation, options.locked, options.margin);\n        this.gridview.locked = !!options.locked;\n        this.element.appendChild(this.gridview.element);\n        this.layout(0, 0, true); // set some elements height/widths\n        this.addDisposables(this.gridview.onDidMaximizedNodeChange((event) => {\n            this._onDidMaximizedChange.fire({\n                panel: event.view,\n                isMaximized: event.isMaximized,\n            });\n        }), this.gridview.onDidViewVisibilityChange(() => this._onDidViewVisibilityChangeMicroTaskQueue.fire()), this.onDidViewVisibilityChangeMicroTaskQueue(() => {\n            this.layout(this.width, this.height, true);\n        }), Disposable.from(() => {\n            var _a;\n            (_a = this.element.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(this.element);\n        }), this.gridview.onDidChange(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), Event.any(this.onDidAdd, this.onDidRemove, this.onDidActiveChange)(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), this._onDidMaximizedChange, this._onDidViewVisibilityChangeMicroTaskQueue, this._bufferOnDidLayoutChange);\n    }\n    setVisible(panel, visible) {\n        this.gridview.setViewVisible(getGridLocation(panel.element), visible);\n        this._bufferOnDidLayoutChange.fire();\n    }\n    isVisible(panel) {\n        return this.gridview.isViewVisible(getGridLocation(panel.element));\n    }\n    updateOptions(options) {\n        var _a, _b, _c, _d;\n        if (typeof options.proportionalLayout === 'boolean') {\n            // this.gridview.proportionalLayout = options.proportionalLayout; // not supported\n        }\n        if (options.orientation) {\n            this.gridview.orientation = options.orientation;\n        }\n        if ('styles' in options) {\n            // this.gridview.styles = options.styles; // not supported\n        }\n        if ('disableResizing' in options) {\n            this.disableResizing = (_a = options.disableAutoResizing) !== null && _a !== void 0 ? _a : false;\n        }\n        if ('locked' in options) {\n            this.locked = (_b = options.locked) !== null && _b !== void 0 ? _b : false;\n        }\n        if ('margin' in options) {\n            this.gridview.margin = (_c = options.margin) !== null && _c !== void 0 ? _c : 0;\n        }\n        if ('className' in options) {\n            this._classNames.setClassNames((_d = options.className) !== null && _d !== void 0 ? _d : '');\n        }\n    }\n    maximizeGroup(panel) {\n        this.gridview.maximizeView(panel);\n        this.doSetGroupActive(panel);\n    }\n    isMaximizedGroup(panel) {\n        return this.gridview.maximizedView() === panel;\n    }\n    exitMaximizedGroup() {\n        this.gridview.exitMaximizedView();\n    }\n    hasMaximizedGroup() {\n        return this.gridview.hasMaximizedView();\n    }\n    doAddGroup(group, location = [0], size) {\n        this.gridview.addView(group, size !== null && size !== void 0 ? size : Sizing.Distribute, location);\n        this._onDidAdd.fire(group);\n    }\n    doRemoveGroup(group, options) {\n        if (!this._groups.has(group.id)) {\n            throw new Error('invalid operation');\n        }\n        const item = this._groups.get(group.id);\n        const view = this.gridview.remove(group, Sizing.Distribute);\n        if (item && !(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n            item.disposable.dispose();\n            item.value.dispose();\n            this._groups.delete(group.id);\n            this._onDidRemove.fire(group);\n        }\n        if (!(options === null || options === void 0 ? void 0 : options.skipActive) && this._activeGroup === group) {\n            const groups = Array.from(this._groups.values());\n            this.doSetGroupActive(groups.length > 0 ? groups[0].value : undefined);\n        }\n        return view;\n    }\n    getPanel(id) {\n        var _a;\n        return (_a = this._groups.get(id)) === null || _a === void 0 ? void 0 : _a.value;\n    }\n    doSetGroupActive(group) {\n        if (this._activeGroup === group) {\n            return;\n        }\n        if (this._activeGroup) {\n            this._activeGroup.setActive(false);\n        }\n        if (group) {\n            group.setActive(true);\n        }\n        this._activeGroup = group;\n        this._onDidActiveChange.fire(group);\n    }\n    removeGroup(group) {\n        this.doRemoveGroup(group);\n    }\n    moveToNext(options) {\n        var _a;\n        if (!options) {\n            options = {};\n        }\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.next(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupActive(next);\n    }\n    moveToPrevious(options) {\n        var _a;\n        if (!options) {\n            options = {};\n        }\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.previous(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupActive(next);\n    }\n    layout(width, height, forceResize) {\n        const different = forceResize || width !== this.width || height !== this.height;\n        if (!different) {\n            return;\n        }\n        this.gridview.element.style.height = `${height}px`;\n        this.gridview.element.style.width = `${width}px`;\n        this.gridview.layout(width, height);\n    }\n    dispose() {\n        this._onDidActiveChange.dispose();\n        this._onDidAdd.dispose();\n        this._onDidRemove.dispose();\n        for (const group of this.groups) {\n            group.dispose();\n        }\n        this.gridview.dispose();\n        super.dispose();\n    }\n}\n","export class SplitviewApi {\n    /**\n     * The minimum size  the component can reach where size is measured in the direction of orientation provided.\n     */\n    get minimumSize() {\n        return this.component.minimumSize;\n    }\n    /**\n     * The maximum size the component can reach where size is measured in the direction of orientation provided.\n     */\n    get maximumSize() {\n        return this.component.maximumSize;\n    }\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * The current number of panels.\n     */\n    get length() {\n        return this.component.length;\n    }\n    /**\n     * The current orientation of the component.\n     */\n    get orientation() {\n        return this.component.orientation;\n    }\n    /**\n     * The list of current panels.\n     */\n    get panels() {\n        return this.component.panels;\n    }\n    /**\n     * Invoked after a layout is loaded through the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * Invoked whenever any aspect of the layout changes.\n     * If listening to this event it may be worth debouncing ouputs.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked when a view is added.\n     */\n    get onDidAddView() {\n        return this.component.onDidAddView;\n    }\n    /**\n     * Invoked when a view is removed.\n     */\n    get onDidRemoveView() {\n        return this.component.onDidRemoveView;\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     * Removes an existing panel and optionally provide a `Sizing` method\n     * for the subsequent resize.\n     */\n    removePanel(panel, sizing) {\n        this.component.removePanel(panel, sizing);\n    }\n    /**\n     * Focus the component.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Get the reference to a panel given it's `string` id.\n     */\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Layout the panel with a width and height.\n     */\n    layout(width, height) {\n        return this.component.layout(width, height);\n    }\n    /**\n     * Add a new panel and return the created instance.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Move a panel given it's current and desired index.\n     */\n    movePanel(from, to) {\n        this.component.movePanel(from, to);\n    }\n    /**\n     * Deserialize a layout to built a splitivew.\n     */\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    /** Serialize a layout */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Remove all panels and clear the component.\n     */\n    clear() {\n        this.component.clear();\n    }\n    /**\n     * Update configuratable options.\n     */\n    updateOptions(options) {\n        this.component.updateOptions(options);\n    }\n    /**\n     * Release resources and teardown component. Do not call when using framework versions of dockview.\n     */\n    dispose() {\n        this.component.dispose();\n    }\n}\nexport class PaneviewApi {\n    /**\n     * The minimum size  the component can reach where size is measured in the direction of orientation provided.\n     */\n    get minimumSize() {\n        return this.component.minimumSize;\n    }\n    /**\n     * The maximum size the component can reach where size is measured in the direction of orientation provided.\n     */\n    get maximumSize() {\n        return this.component.maximumSize;\n    }\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * All panel objects.\n     */\n    get panels() {\n        return this.component.panels;\n    }\n    /**\n     * Invoked when any layout change occures, an aggregation of many events.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked after a layout is deserialzied using the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * Invoked when a panel is added. May be called multiple times when moving panels.\n     */\n    get onDidAddView() {\n        return this.component.onDidAddView;\n    }\n    /**\n     * Invoked when a panel is removed. May be called multiple times when moving panels.\n     */\n    get onDidRemoveView() {\n        return this.component.onDidRemoveView;\n    }\n    /**\n     * Invoked when a Drag'n'Drop event occurs that the component was unable to handle. Exposed for custom Drag'n'Drop functionality.\n     */\n    get onDidDrop() {\n        return this.component.onDidDrop;\n    }\n    get onUnhandledDragOverEvent() {\n        return this.component.onUnhandledDragOverEvent;\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     * Remove a panel given the panel object.\n     */\n    removePanel(panel) {\n        this.component.removePanel(panel);\n    }\n    /**\n     * Get a panel object given a `string` id. May return `undefined`.\n     */\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Move a panel given it's current and desired index.\n     */\n    movePanel(from, to) {\n        this.component.movePanel(from, to);\n    }\n    /**\n     *  Focus the component. Will try to focus an active panel if one exists.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Force resize the component to an exact width and height. Read about auto-resizing before using.\n     */\n    layout(width, height) {\n        this.component.layout(width, height);\n    }\n    /**\n     * Add a panel and return the created object.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Create a component from a serialized object.\n     */\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    /**\n     * Create a serialized object of the current component.\n     */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Reset the component back to an empty and default state.\n     */\n    clear() {\n        this.component.clear();\n    }\n    /**\n     * Update configuratable options.\n     */\n    updateOptions(options) {\n        this.component.updateOptions(options);\n    }\n    /**\n     * Release resources and teardown component. Do not call when using framework versions of dockview.\n     */\n    dispose() {\n        this.component.dispose();\n    }\n}\nexport class GridviewApi {\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * Minimum height of the component.\n     */\n    get minimumHeight() {\n        return this.component.minimumHeight;\n    }\n    /**\n     * Maximum height of the component.\n     */\n    get maximumHeight() {\n        return this.component.maximumHeight;\n    }\n    /**\n     * Minimum width of the component.\n     */\n    get minimumWidth() {\n        return this.component.minimumWidth;\n    }\n    /**\n     * Maximum width of the component.\n     */\n    get maximumWidth() {\n        return this.component.maximumWidth;\n    }\n    /**\n     * Invoked when any layout change occures, an aggregation of many events.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked when a panel is added. May be called multiple times when moving panels.\n     */\n    get onDidAddPanel() {\n        return this.component.onDidAddGroup;\n    }\n    /**\n     * Invoked when a panel is removed. May be called multiple times when moving panels.\n     */\n    get onDidRemovePanel() {\n        return this.component.onDidRemoveGroup;\n    }\n    /**\n     * Invoked when the active panel changes. May be undefined if no panel is active.\n     */\n    get onDidActivePanelChange() {\n        return this.component.onDidActiveGroupChange;\n    }\n    /**\n     * Invoked after a layout is deserialzied using the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * All panel objects.\n     */\n    get panels() {\n        return this.component.groups;\n    }\n    /**\n     * Current orientation. Can be changed after initialization.\n     */\n    get orientation() {\n        return this.component.orientation;\n    }\n    set orientation(value) {\n        this.component.updateOptions({ orientation: value });\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     *  Focus the component. Will try to focus an active panel if one exists.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Force resize the component to an exact width and height. Read about auto-resizing before using.\n     */\n    layout(width, height, force = false) {\n        this.component.layout(width, height, force);\n    }\n    /**\n     * Add a panel and return the created object.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Remove a panel given the panel object.\n     */\n    removePanel(panel, sizing) {\n        this.component.removePanel(panel, sizing);\n    }\n    /**\n     * Move a panel in a particular direction relative to another panel.\n     */\n    movePanel(panel, options) {\n        this.component.movePanel(panel, options);\n    }\n    /**\n     * Get a panel object given a `string` id. May return `undefined`.\n     */\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Create a component from a serialized object.\n     */\n    fromJSON(data) {\n        return this.component.fromJSON(data);\n    }\n    /**\n     * Create a serialized object of the current component.\n     */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Reset the component back to an empty and default state.\n     */\n    clear() {\n        this.component.clear();\n    }\n    updateOptions(options) {\n        this.component.updateOptions(options);\n    }\n    /**\n     * Release resources and teardown component. Do not call when using framework versions of dockview.\n     */\n    dispose() {\n        this.component.dispose();\n    }\n}\nexport class DockviewApi {\n    /**\n     * The unique identifier for this instance. Used to manage scope of Drag'n'Drop events.\n     */\n    get id() {\n        return this.component.id;\n    }\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * Minimum height of the component.\n     */\n    get minimumHeight() {\n        return this.component.minimumHeight;\n    }\n    /**\n     * Maximum height of the component.\n     */\n    get maximumHeight() {\n        return this.component.maximumHeight;\n    }\n    /**\n     * Minimum width of the component.\n     */\n    get minimumWidth() {\n        return this.component.minimumWidth;\n    }\n    /**\n     * Maximum width of the component.\n     */\n    get maximumWidth() {\n        return this.component.maximumWidth;\n    }\n    /**\n     * Total number of groups.\n     */\n    get size() {\n        return this.component.size;\n    }\n    /**\n     * Total number of panels.\n     */\n    get totalPanels() {\n        return this.component.totalPanels;\n    }\n    get gap() {\n        return this.component.gap;\n    }\n    /**\n     * Invoked when the active group changes. May be undefined if no group is active.\n     */\n    get onDidActiveGroupChange() {\n        return this.component.onDidActiveGroupChange;\n    }\n    /**\n     * Invoked when a group is added. May be called multiple times when moving groups.\n     */\n    get onDidAddGroup() {\n        return this.component.onDidAddGroup;\n    }\n    /**\n     * Invoked when a group is removed. May be called multiple times when moving groups.\n     */\n    get onDidRemoveGroup() {\n        return this.component.onDidRemoveGroup;\n    }\n    /**\n     * Invoked when the active panel changes. May be undefined if no panel is active.\n     */\n    get onDidActivePanelChange() {\n        return this.component.onDidActivePanelChange;\n    }\n    /**\n     * Invoked when a panel is added. May be called multiple times when moving panels.\n     */\n    get onDidAddPanel() {\n        return this.component.onDidAddPanel;\n    }\n    /**\n     * Invoked when a panel is removed. May be called multiple times when moving panels.\n     */\n    get onDidRemovePanel() {\n        return this.component.onDidRemovePanel;\n    }\n    get onDidMovePanel() {\n        return this.component.onDidMovePanel;\n    }\n    /**\n     * Invoked after a layout is deserialzied using the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * Invoked when any layout change occures, an aggregation of many events.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked when a Drag'n'Drop event occurs that the component was unable to handle. Exposed for custom Drag'n'Drop functionality.\n     */\n    get onDidDrop() {\n        return this.component.onDidDrop;\n    }\n    /**\n     * Invoked when a Drag'n'Drop event occurs but before dockview handles it giving the user an opportunity to intecept and\n     * prevent the event from occuring using the standard `preventDefault()` syntax.\n     *\n     * Preventing certain events may causes unexpected behaviours, use carefully.\n     */\n    get onWillDrop() {\n        return this.component.onWillDrop;\n    }\n    /**\n     * Invoked before an overlay is shown indicating a drop target.\n     *\n     * Calling `event.preventDefault()` will prevent the overlay being shown and prevent\n     * the any subsequent drop event.\n     */\n    get onWillShowOverlay() {\n        return this.component.onWillShowOverlay;\n    }\n    /**\n     * Invoked before a group is dragged.\n     *\n     * Calling `event.nativeEvent.preventDefault()` will prevent the group drag starting.\n     *\n     */\n    get onWillDragGroup() {\n        return this.component.onWillDragGroup;\n    }\n    /**\n     * Invoked before a panel is dragged.\n     *\n     * Calling `event.nativeEvent.preventDefault()` will prevent the panel drag starting.\n     */\n    get onWillDragPanel() {\n        return this.component.onWillDragPanel;\n    }\n    get onUnhandledDragOverEvent() {\n        return this.component.onUnhandledDragOverEvent;\n    }\n    /**\n     * All panel objects.\n     */\n    get panels() {\n        return this.component.panels;\n    }\n    /**\n     * All group objects.\n     */\n    get groups() {\n        return this.component.groups;\n    }\n    /**\n     *  Active panel object.\n     */\n    get activePanel() {\n        return this.component.activePanel;\n    }\n    /**\n     * Active group object.\n     */\n    get activeGroup() {\n        return this.component.activeGroup;\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     *  Focus the component. Will try to focus an active panel if one exists.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Get a panel object given a `string` id. May return `undefined`.\n     */\n    getPanel(id) {\n        return this.component.getGroupPanel(id);\n    }\n    /**\n     * Force resize the component to an exact width and height. Read about auto-resizing before using.\n     */\n    layout(width, height, force = false) {\n        this.component.layout(width, height, force);\n    }\n    /**\n     * Add a panel and return the created object.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Remove a panel given the panel object.\n     */\n    removePanel(panel) {\n        this.component.removePanel(panel);\n    }\n    /**\n     * Add a group and return the created object.\n     */\n    addGroup(options) {\n        return this.component.addGroup(options);\n    }\n    /**\n     * Close all groups and panels.\n     */\n    closeAllGroups() {\n        return this.component.closeAllGroups();\n    }\n    /**\n     * Remove a group and any panels within the group.\n     */\n    removeGroup(group) {\n        this.component.removeGroup(group);\n    }\n    /**\n     * Get a group object given a `string` id. May return undefined.\n     */\n    getGroup(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Add a floating group\n     */\n    addFloatingGroup(item, options) {\n        return this.component.addFloatingGroup(item, options);\n    }\n    /**\n     * Create a component from a serialized object.\n     */\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    /**\n     * Create a serialized object of the current component.\n     */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Reset the component back to an empty and default state.\n     */\n    clear() {\n        this.component.clear();\n    }\n    /**\n     * Move the focus progmatically to the next panel or group.\n     */\n    moveToNext(options) {\n        this.component.moveToNext(options);\n    }\n    /**\n     * Move the focus progmatically to the previous panel or group.\n     */\n    moveToPrevious(options) {\n        this.component.moveToPrevious(options);\n    }\n    maximizeGroup(panel) {\n        this.component.maximizeGroup(panel.group);\n    }\n    hasMaximizedGroup() {\n        return this.component.hasMaximizedGroup();\n    }\n    exitMaximizedGroup() {\n        this.component.exitMaximizedGroup();\n    }\n    get onDidMaximizedGroupChange() {\n        return this.component.onDidMaximizedGroupChange;\n    }\n    /**\n     * Add a popout group in a new Window\n     */\n    addPopoutGroup(item, options) {\n        return this.component.addPopoutGroup(item, options);\n    }\n    setGap(gap) {\n        this.component.updateOptions({ gap });\n    }\n    updateOptions(options) {\n        this.component.updateOptions(options);\n    }\n    /**\n     * Release resources and teardown component. Do not call when using framework versions of dockview.\n     */\n    dispose() {\n        this.component.dispose();\n    }\n}\n","import { disableIframePointEvents } from '../dom';\nimport { addDisposableListener, Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nexport class DragHandler extends CompositeDisposable {\n    constructor(el) {\n        super();\n        this.el = el;\n        this.dataDisposable = new MutableDisposable();\n        this.pointerEventsDisposable = new MutableDisposable();\n        this._onDragStart = new Emitter();\n        this.onDragStart = this._onDragStart.event;\n        this.addDisposables(this._onDragStart, this.dataDisposable, this.pointerEventsDisposable);\n        this.configure();\n    }\n    isCancelled(_event) {\n        return false;\n    }\n    configure() {\n        this.addDisposables(this._onDragStart, addDisposableListener(this.el, 'dragstart', (event) => {\n            if (event.defaultPrevented || this.isCancelled(event)) {\n                event.preventDefault();\n                return;\n            }\n            const iframes = disableIframePointEvents();\n            this.pointerEventsDisposable.value = {\n                dispose: () => {\n                    iframes.release();\n                },\n            };\n            this.el.classList.add('dv-dragged');\n            setTimeout(() => this.el.classList.remove('dv-dragged'), 0);\n            this.dataDisposable.value = this.getData(event);\n            this._onDragStart.fire(event);\n            if (event.dataTransfer) {\n                event.dataTransfer.effectAllowed = 'move';\n                const hasData = event.dataTransfer.items.length > 0;\n                if (!hasData) {\n                    /**\n                     * Although this is not used by dockview many third party dnd libraries will check\n                     * dataTransfer.types to determine valid drag events.\n                     *\n                     * For example: in react-dnd if dataTransfer.types is not set then the dragStart event will be cancelled\n                     * through .preventDefault(). Since this is applied globally to all drag events this would break dockviews\n                     * dnd logic. You can see the code at\n                     * https://github.com/react-dnd/react-dnd/blob/main/packages/backend-html5/src/HTML5BackendImpl.ts#L542\n                     */\n                    event.dataTransfer.setData('text/plain', '');\n                }\n            }\n        }), addDisposableListener(this.el, 'dragend', () => {\n            this.pointerEventsDisposable.dispose();\n            this.dataDisposable.dispose();\n        }));\n    }\n}\n","import { addDisposableListener } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nexport class DragAndDropObserver extends CompositeDisposable {\n    constructor(element, callbacks) {\n        super();\n        this.element = element;\n        this.callbacks = callbacks;\n        this.target = null;\n        this.registerListeners();\n    }\n    onDragEnter(e) {\n        this.target = e.target;\n        this.callbacks.onDragEnter(e);\n    }\n    onDragOver(e) {\n        e.preventDefault(); // needed so that the drop event fires (https://stackoverflow.com/questions/21339924/drop-event-not-firing-in-chrome)\n        if (this.callbacks.onDragOver) {\n            this.callbacks.onDragOver(e);\n        }\n    }\n    onDragLeave(e) {\n        if (this.target === e.target) {\n            this.target = null;\n            this.callbacks.onDragLeave(e);\n        }\n    }\n    onDragEnd(e) {\n        this.target = null;\n        this.callbacks.onDragEnd(e);\n    }\n    onDrop(e) {\n        this.callbacks.onDrop(e);\n    }\n    registerListeners() {\n        this.addDisposables(addDisposableListener(this.element, 'dragenter', (e) => {\n            this.onDragEnter(e);\n        }, true));\n        this.addDisposables(addDisposableListener(this.element, 'dragover', (e) => {\n            this.onDragOver(e);\n        }, true));\n        this.addDisposables(addDisposableListener(this.element, 'dragleave', (e) => {\n            this.onDragLeave(e);\n        }));\n        this.addDisposables(addDisposableListener(this.element, 'dragend', (e) => {\n            this.onDragEnd(e);\n        }));\n        this.addDisposables(addDisposableListener(this.element, 'drop', (e) => {\n            this.onDrop(e);\n        }));\n    }\n}\n","import { toggleClass } from '../dom';\nimport { DockviewEvent, Emitter } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nimport { DragAndDropObserver } from './dnd';\nimport { clamp } from '../math';\nexport class WillShowOverlayEvent extends DockviewEvent {\n    get nativeEvent() {\n        return this.options.nativeEvent;\n    }\n    get position() {\n        return this.options.position;\n    }\n    constructor(options) {\n        super();\n        this.options = options;\n    }\n}\nexport function directionToPosition(direction) {\n    switch (direction) {\n        case 'above':\n            return 'top';\n        case 'below':\n            return 'bottom';\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'within':\n            return 'center';\n        default:\n            throw new Error(`invalid direction '${direction}'`);\n    }\n}\nexport function positionToDirection(position) {\n    switch (position) {\n        case 'top':\n            return 'above';\n        case 'bottom':\n            return 'below';\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'center':\n            return 'within';\n        default:\n            throw new Error(`invalid position '${position}'`);\n    }\n}\nconst DEFAULT_ACTIVATION_SIZE = {\n    value: 20,\n    type: 'percentage',\n};\nconst DEFAULT_SIZE = {\n    value: 50,\n    type: 'percentage',\n};\nconst SMALL_WIDTH_BOUNDARY = 100;\nconst SMALL_HEIGHT_BOUNDARY = 100;\nexport class Droptarget extends CompositeDisposable {\n    get state() {\n        return this._state;\n    }\n    constructor(element, options) {\n        super();\n        this.element = element;\n        this.options = options;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        // use a set to take advantage of #<set>.has\n        this._acceptedTargetZonesSet = new Set(this.options.acceptedTargetZones);\n        this.dnd = new DragAndDropObserver(this.element, {\n            onDragEnter: () => undefined,\n            onDragOver: (e) => {\n                if (this._acceptedTargetZonesSet.size === 0) {\n                    this.removeDropTarget();\n                    return;\n                }\n                const width = this.element.clientWidth;\n                const height = this.element.clientHeight;\n                if (width === 0 || height === 0) {\n                    return; // avoid div!0\n                }\n                const rect = e.currentTarget.getBoundingClientRect();\n                const x = e.clientX - rect.left;\n                const y = e.clientY - rect.top;\n                const quadrant = this.calculateQuadrant(this._acceptedTargetZonesSet, x, y, width, height);\n                /**\n                 * If the event has already been used by another DropTarget instance\n                 * then don't show a second drop target, only one target should be\n                 * active at any one time\n                 */\n                if (this.isAlreadyUsed(e) || quadrant === null) {\n                    // no drop target should be displayed\n                    this.removeDropTarget();\n                    return;\n                }\n                if (!this.options.canDisplayOverlay(e, quadrant)) {\n                    this.removeDropTarget();\n                    return;\n                }\n                const willShowOverlayEvent = new WillShowOverlayEvent({\n                    nativeEvent: e,\n                    position: quadrant,\n                });\n                /**\n                 * Provide an opportunity to prevent the overlay appearing and in turn\n                 * any dnd behaviours\n                 */\n                this._onWillShowOverlay.fire(willShowOverlayEvent);\n                if (willShowOverlayEvent.defaultPrevented) {\n                    this.removeDropTarget();\n                    return;\n                }\n                this.markAsUsed(e);\n                if (!this.targetElement) {\n                    this.targetElement = document.createElement('div');\n                    this.targetElement.className = 'dv-drop-target-dropzone';\n                    this.overlayElement = document.createElement('div');\n                    this.overlayElement.className = 'dv-drop-target-selection';\n                    this._state = 'center';\n                    this.targetElement.appendChild(this.overlayElement);\n                    this.element.classList.add('dv-drop-target');\n                    this.element.append(this.targetElement);\n                }\n                this.toggleClasses(quadrant, width, height);\n                this._state = quadrant;\n            },\n            onDragLeave: () => {\n                this.removeDropTarget();\n            },\n            onDragEnd: () => {\n                this.removeDropTarget();\n            },\n            onDrop: (e) => {\n                e.preventDefault();\n                const state = this._state;\n                this.removeDropTarget();\n                if (state) {\n                    // only stop the propagation of the event if we are dealing with it\n                    // which is only when the target has state\n                    e.stopPropagation();\n                    this._onDrop.fire({ position: state, nativeEvent: e });\n                }\n            },\n        });\n        this.addDisposables(this._onDrop, this._onWillShowOverlay, this.dnd);\n    }\n    setTargetZones(acceptedTargetZones) {\n        this._acceptedTargetZonesSet = new Set(acceptedTargetZones);\n    }\n    setOverlayModel(model) {\n        this.options.overlayModel = model;\n    }\n    dispose() {\n        this.removeDropTarget();\n        super.dispose();\n    }\n    /**\n     * Add a property to the event object for other potential listeners to check\n     */\n    markAsUsed(event) {\n        event[Droptarget.USED_EVENT_ID] = true;\n    }\n    /**\n     * Check is the event has already been used by another instance of DropTarget\n     */\n    isAlreadyUsed(event) {\n        const value = event[Droptarget.USED_EVENT_ID];\n        return typeof value === 'boolean' && value;\n    }\n    toggleClasses(quadrant, width, height) {\n        var _a, _b;\n        if (!this.overlayElement) {\n            return;\n        }\n        const isSmallX = width < SMALL_WIDTH_BOUNDARY;\n        const isSmallY = height < SMALL_HEIGHT_BOUNDARY;\n        const isLeft = quadrant === 'left';\n        const isRight = quadrant === 'right';\n        const isTop = quadrant === 'top';\n        const isBottom = quadrant === 'bottom';\n        const rightClass = !isSmallX && isRight;\n        const leftClass = !isSmallX && isLeft;\n        const topClass = !isSmallY && isTop;\n        const bottomClass = !isSmallY && isBottom;\n        let size = 1;\n        const sizeOptions = (_b = (_a = this.options.overlayModel) === null || _a === void 0 ? void 0 : _a.size) !== null && _b !== void 0 ? _b : DEFAULT_SIZE;\n        if (sizeOptions.type === 'percentage') {\n            size = clamp(sizeOptions.value, 0, 100) / 100;\n        }\n        else {\n            if (rightClass || leftClass) {\n                size = clamp(0, sizeOptions.value, width) / width;\n            }\n            if (topClass || bottomClass) {\n                size = clamp(0, sizeOptions.value, height) / height;\n            }\n        }\n        const box = { top: '0px', left: '0px', width: '100%', height: '100%' };\n        /**\n         * You can also achieve the overlay placement using the transform CSS property\n         * to translate and scale the element however this has the undesired effect of\n         * 'skewing' the element. Comment left here for anybody that ever revisits this.\n         *\n         * @see https://developer.mozilla.org/en-US/docs/Web/CSS/transform\n         *\n         * right\n         * translateX(${100 * (1 - size) / 2}%) scaleX(${scale})\n         *\n         * left\n         * translateX(-${100 * (1 - size) / 2}%) scaleX(${scale})\n         *\n         * top\n         * translateY(-${100 * (1 - size) / 2}%) scaleY(${scale})\n         *\n         * bottom\n         * translateY(${100 * (1 - size) / 2}%) scaleY(${scale})\n         */\n        if (rightClass) {\n            box.left = `${100 * (1 - size)}%`;\n            box.width = `${100 * size}%`;\n        }\n        else if (leftClass) {\n            box.width = `${100 * size}%`;\n        }\n        else if (topClass) {\n            box.height = `${100 * size}%`;\n        }\n        else if (bottomClass) {\n            box.top = `${100 * (1 - size)}%`;\n            box.height = `${100 * size}%`;\n        }\n        this.overlayElement.style.top = box.top;\n        this.overlayElement.style.left = box.left;\n        this.overlayElement.style.width = box.width;\n        this.overlayElement.style.height = box.height;\n        toggleClass(this.overlayElement, 'dv-drop-target-small-vertical', isSmallY);\n        toggleClass(this.overlayElement, 'dv-drop-target-small-horizontal', isSmallX);\n        toggleClass(this.overlayElement, 'dv-drop-target-left', isLeft);\n        toggleClass(this.overlayElement, 'dv-drop-target-right', isRight);\n        toggleClass(this.overlayElement, 'dv-drop-target-top', isTop);\n        toggleClass(this.overlayElement, 'dv-drop-target-bottom', isBottom);\n        toggleClass(this.overlayElement, 'dv-drop-target-center', quadrant === 'center');\n    }\n    calculateQuadrant(overlayType, x, y, width, height) {\n        var _a, _b;\n        const activationSizeOptions = (_b = (_a = this.options.overlayModel) === null || _a === void 0 ? void 0 : _a.activationSize) !== null && _b !== void 0 ? _b : DEFAULT_ACTIVATION_SIZE;\n        const isPercentage = activationSizeOptions.type === 'percentage';\n        if (isPercentage) {\n            return calculateQuadrantAsPercentage(overlayType, x, y, width, height, activationSizeOptions.value);\n        }\n        return calculateQuadrantAsPixels(overlayType, x, y, width, height, activationSizeOptions.value);\n    }\n    removeDropTarget() {\n        if (this.targetElement) {\n            this._state = undefined;\n            this.element.removeChild(this.targetElement);\n            this.targetElement = undefined;\n            this.overlayElement = undefined;\n            this.element.classList.remove('dv-drop-target');\n        }\n    }\n}\nDroptarget.USED_EVENT_ID = '__dockview_droptarget_event_is_used__';\nexport function calculateQuadrantAsPercentage(overlayType, x, y, width, height, threshold) {\n    const xp = (100 * x) / width;\n    const yp = (100 * y) / height;\n    if (overlayType.has('left') && xp < threshold) {\n        return 'left';\n    }\n    if (overlayType.has('right') && xp > 100 - threshold) {\n        return 'right';\n    }\n    if (overlayType.has('top') && yp < threshold) {\n        return 'top';\n    }\n    if (overlayType.has('bottom') && yp > 100 - threshold) {\n        return 'bottom';\n    }\n    if (!overlayType.has('center')) {\n        return null;\n    }\n    return 'center';\n}\nexport function calculateQuadrantAsPixels(overlayType, x, y, width, height, threshold) {\n    if (overlayType.has('left') && x < threshold) {\n        return 'left';\n    }\n    if (overlayType.has('right') && x > width - threshold) {\n        return 'right';\n    }\n    if (overlayType.has('top') && y < threshold) {\n        return 'top';\n    }\n    if (overlayType.has('bottom') && y > height - threshold) {\n        return 'bottom';\n    }\n    if (!overlayType.has('center')) {\n        return null;\n    }\n    return 'center';\n}\n","import { AcceptableEvent } from '../events';\nexport const PROPERTY_KEYS_PANEVIEW = (() => {\n    /**\n     * by readong the keys from an empty value object TypeScript will error\n     * when we add or remove new properties to `DockviewOptions`\n     */\n    const properties = {\n        disableAutoResizing: undefined,\n        disableDnd: undefined,\n        className: undefined,\n    };\n    return Object.keys(properties);\n})();\nexport class PaneviewUnhandledDragOverEvent extends AcceptableEvent {\n    constructor(nativeEvent, position, getData, panel) {\n        super();\n        this.nativeEvent = nativeEvent;\n        this.position = position;\n        this.getData = getData;\n        this.panel = panel;\n    }\n}\n","import { DockviewEvent, Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nexport class WillFocusEvent extends DockviewEvent {\n    constructor() {\n        super();\n    }\n}\n/**\n * A core api implementation that should be used across all panel-like objects\n */\nexport class PanelApiImpl extends CompositeDisposable {\n    get isFocused() {\n        return this._isFocused;\n    }\n    get isActive() {\n        return this._isActive;\n    }\n    get isVisible() {\n        return this._isVisible;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    constructor(id, component) {\n        super();\n        this.id = id;\n        this.component = component;\n        this._isFocused = false;\n        this._isActive = false;\n        this._isVisible = true;\n        this._width = 0;\n        this._height = 0;\n        this._parameters = {};\n        this.panelUpdatesDisposable = new MutableDisposable();\n        this._onDidDimensionChange = new Emitter();\n        this.onDidDimensionsChange = this._onDidDimensionChange.event;\n        this._onDidChangeFocus = new Emitter();\n        this.onDidFocusChange = this._onDidChangeFocus.event;\n        //\n        this._onWillFocus = new Emitter();\n        this.onWillFocus = this._onWillFocus.event;\n        //\n        this._onDidVisibilityChange = new Emitter();\n        this.onDidVisibilityChange = this._onDidVisibilityChange.event;\n        this._onWillVisibilityChange = new Emitter();\n        this.onWillVisibilityChange = this._onWillVisibilityChange.event;\n        this._onDidActiveChange = new Emitter();\n        this.onDidActiveChange = this._onDidActiveChange.event;\n        this._onActiveChange = new Emitter();\n        this.onActiveChange = this._onActiveChange.event;\n        this._onDidParametersChange = new Emitter();\n        this.onDidParametersChange = this._onDidParametersChange.event;\n        this.addDisposables(this.onDidFocusChange((event) => {\n            this._isFocused = event.isFocused;\n        }), this.onDidActiveChange((event) => {\n            this._isActive = event.isActive;\n        }), this.onDidVisibilityChange((event) => {\n            this._isVisible = event.isVisible;\n        }), this.onDidDimensionsChange((event) => {\n            this._width = event.width;\n            this._height = event.height;\n        }), this.panelUpdatesDisposable, this._onDidDimensionChange, this._onDidChangeFocus, this._onDidVisibilityChange, this._onDidActiveChange, this._onWillFocus, this._onActiveChange, this._onWillFocus, this._onWillVisibilityChange, this._onDidParametersChange);\n    }\n    getParameters() {\n        return this._parameters;\n    }\n    initialize(panel) {\n        this.panelUpdatesDisposable.value = this._onDidParametersChange.event((parameters) => {\n            this._parameters = parameters;\n            panel.update({\n                params: parameters,\n            });\n        });\n    }\n    setVisible(isVisible) {\n        this._onWillVisibilityChange.fire({ isVisible });\n    }\n    setActive() {\n        this._onActiveChange.fire();\n    }\n    updateParameters(parameters) {\n        this._onDidParametersChange.fire(parameters);\n    }\n}\n","import { Emitter } from '../events';\nimport { PanelApiImpl } from './panelApi';\nexport class SplitviewPanelApiImpl extends PanelApiImpl {\n    //\n    constructor(id, component) {\n        super(id, component);\n        this._onDidConstraintsChangeInternal = new Emitter();\n        this.onDidConstraintsChangeInternal = this._onDidConstraintsChangeInternal.event;\n        //\n        this._onDidConstraintsChange = new Emitter({\n            replay: true,\n        });\n        this.onDidConstraintsChange = this._onDidConstraintsChange.event;\n        //\n        this._onDidSizeChange = new Emitter();\n        this.onDidSizeChange = this._onDidSizeChange.event;\n        this.addDisposables(this._onDidConstraintsChangeInternal, this._onDidConstraintsChange, this._onDidSizeChange);\n    }\n    setConstraints(value) {\n        this._onDidConstraintsChangeInternal.fire(value);\n    }\n    setSize(event) {\n        this._onDidSizeChange.fire(event);\n    }\n}\n","import { Emitter } from '../events';\nimport { SplitviewPanelApiImpl } from './splitviewPanelApi';\nexport class PaneviewPanelApiImpl extends SplitviewPanelApiImpl {\n    set pane(pane) {\n        this._pane = pane;\n    }\n    constructor(id, component) {\n        super(id, component);\n        this._onDidExpansionChange = new Emitter({\n            replay: true,\n        });\n        this.onDidExpansionChange = this._onDidExpansionChange.event;\n        this._onMouseEnter = new Emitter({});\n        this.onMouseEnter = this._onMouseEnter.event;\n        this._onMouseLeave = new Emitter({});\n        this.onMouseLeave = this._onMouseLeave.event;\n        this.addDisposables(this._onDidExpansionChange, this._onMouseEnter, this._onMouseLeave);\n    }\n    setExpanded(isExpanded) {\n        var _a;\n        (_a = this._pane) === null || _a === void 0 ? void 0 : _a.setExpanded(isExpanded);\n    }\n    get isExpanded() {\n        var _a;\n        return !!((_a = this._pane) === null || _a === void 0 ? void 0 : _a.isExpanded());\n    }\n}\n","import { trackFocus } from '../dom';\nimport { CompositeDisposable } from '../lifecycle';\nimport { WillFocusEvent } from '../api/panelApi';\nexport class BasePanelView extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    get params() {\n        var _a;\n        return (_a = this._params) === null || _a === void 0 ? void 0 : _a.params;\n    }\n    constructor(id, component, api) {\n        super();\n        this.id = id;\n        this.component = component;\n        this.api = api;\n        this._height = 0;\n        this._width = 0;\n        this._element = document.createElement('div');\n        this._element.tabIndex = -1;\n        this._element.style.outline = 'none';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n        this._element.style.overflow = 'hidden';\n        const focusTracker = trackFocus(this._element);\n        this.addDisposables(this.api, focusTracker.onDidFocus(() => {\n            this.api._onDidChangeFocus.fire({ isFocused: true });\n        }), focusTracker.onDidBlur(() => {\n            this.api._onDidChangeFocus.fire({ isFocused: false });\n        }), focusTracker);\n    }\n    focus() {\n        const event = new WillFocusEvent();\n        this.api._onWillFocus.fire(event);\n        if (event.defaultPrevented) {\n            return;\n        }\n        this._element.focus();\n    }\n    layout(width, height) {\n        this._width = width;\n        this._height = height;\n        this.api._onDidDimensionChange.fire({ width, height });\n        if (this.part) {\n            if (this._params) {\n                this.part.update(this._params.params);\n            }\n        }\n    }\n    init(parameters) {\n        this._params = parameters;\n        this.part = this.getComponent();\n    }\n    update(event) {\n        var _a, _b;\n        // merge the new parameters with the existing parameters\n        this._params = Object.assign(Object.assign({}, this._params), { params: Object.assign(Object.assign({}, (_a = this._params) === null || _a === void 0 ? void 0 : _a.params), event.params) });\n        /**\n         * delete new keys that have a value of undefined,\n         * allow values of null\n         */\n        for (const key of Object.keys(event.params)) {\n            if (event.params[key] === undefined) {\n                delete this._params.params[key];\n            }\n        }\n        // update the view with the updated props\n        (_b = this.part) === null || _b === void 0 ? void 0 : _b.update({ params: this._params.params });\n    }\n    toJSON() {\n        var _a, _b;\n        const params = (_b = (_a = this._params) === null || _a === void 0 ? void 0 : _a.params) !== null && _b !== void 0 ? _b : {};\n        return {\n            id: this.id,\n            component: this.component,\n            params: Object.keys(params).length > 0 ? params : undefined,\n        };\n    }\n    dispose() {\n        var _a;\n        this.api.dispose();\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n        super.dispose();\n    }\n}\n","import { PaneviewPanelApiImpl } from '../api/paneviewPanelApi';\nimport { addClasses, removeClasses } from '../dom';\nimport { addDisposableListener, Emitter } from '../events';\nimport { BasePanelView, } from '../gridview/basePanelView';\nimport { Orientation } from '../splitview/splitview';\nexport class PaneviewPanel extends BasePanelView {\n    set orientation(value) {\n        this._orientation = value;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    get minimumSize() {\n        const headerSize = this.headerSize;\n        const expanded = this.isExpanded();\n        const minimumBodySize = expanded ? this._minimumBodySize : 0;\n        return headerSize + minimumBodySize;\n    }\n    get maximumSize() {\n        const headerSize = this.headerSize;\n        const expanded = this.isExpanded();\n        const maximumBodySize = expanded ? this._maximumBodySize : 0;\n        return headerSize + maximumBodySize;\n    }\n    get size() {\n        return this._size;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    set orthogonalSize(size) {\n        this._orthogonalSize = size;\n    }\n    get minimumBodySize() {\n        return this._minimumBodySize;\n    }\n    set minimumBodySize(value) {\n        this._minimumBodySize = typeof value === 'number' ? value : 0;\n    }\n    get maximumBodySize() {\n        return this._maximumBodySize;\n    }\n    set maximumBodySize(value) {\n        this._maximumBodySize =\n            typeof value === 'number' ? value : Number.POSITIVE_INFINITY;\n    }\n    get headerVisible() {\n        return this._headerVisible;\n    }\n    set headerVisible(value) {\n        this._headerVisible = value;\n        this.header.style.display = value ? '' : 'none';\n    }\n    constructor(id, component, headerComponent, orientation, isExpanded, isHeaderVisible) {\n        super(id, component, new PaneviewPanelApiImpl(id, component));\n        this.headerComponent = headerComponent;\n        this._onDidChangeExpansionState = new Emitter({ replay: true });\n        this.onDidChangeExpansionState = this._onDidChangeExpansionState.event;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this.headerSize = 22;\n        this._orthogonalSize = 0;\n        this._size = 0;\n        this._minimumBodySize = 100;\n        this._maximumBodySize = Number.POSITIVE_INFINITY;\n        this._isExpanded = false;\n        this.expandedSize = 0;\n        this.api.pane = this; // TODO cannot use 'this' before 'super'\n        this.api.initialize(this);\n        this._isExpanded = isExpanded;\n        this._headerVisible = isHeaderVisible;\n        this._onDidChangeExpansionState.fire(this.isExpanded()); // initialize value\n        this._orientation = orientation;\n        this.element.classList.add('dv-pane');\n        this.addDisposables(this.api.onWillVisibilityChange((event) => {\n            const { isVisible } = event;\n            const { accessor } = this._params;\n            accessor.setVisible(this, isVisible);\n        }), this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire({ size: event.size });\n        }), addDisposableListener(this.element, 'mouseenter', (ev) => {\n            this.api._onMouseEnter.fire(ev);\n        }), addDisposableListener(this.element, 'mouseleave', (ev) => {\n            this.api._onMouseLeave.fire(ev);\n        }));\n        this.addDisposables(this._onDidChangeExpansionState, this.onDidChangeExpansionState((isPanelExpanded) => {\n            this.api._onDidExpansionChange.fire({\n                isExpanded: isPanelExpanded,\n            });\n        }), this.api.onDidFocusChange((e) => {\n            if (!this.header) {\n                return;\n            }\n            if (e.isFocused) {\n                addClasses(this.header, 'focused');\n            }\n            else {\n                removeClasses(this.header, 'focused');\n            }\n        }));\n        this.renderOnce();\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    isExpanded() {\n        return this._isExpanded;\n    }\n    setExpanded(expanded) {\n        if (this._isExpanded === expanded) {\n            return;\n        }\n        this._isExpanded = expanded;\n        if (expanded) {\n            if (this.animationTimer) {\n                clearTimeout(this.animationTimer);\n            }\n            if (this.body) {\n                this.element.appendChild(this.body);\n            }\n        }\n        else {\n            this.animationTimer = setTimeout(() => {\n                var _a;\n                (_a = this.body) === null || _a === void 0 ? void 0 : _a.remove();\n            }, 200);\n        }\n        this._onDidChange.fire(expanded ? { size: this.width } : {});\n        this._onDidChangeExpansionState.fire(expanded);\n    }\n    layout(size, orthogonalSize) {\n        this._size = size;\n        this._orthogonalSize = orthogonalSize;\n        const [width, height] = this.orientation === Orientation.HORIZONTAL\n            ? [size, orthogonalSize]\n            : [orthogonalSize, size];\n        if (this.isExpanded()) {\n            this.expandedSize = width;\n        }\n        super.layout(width, height);\n    }\n    init(parameters) {\n        var _a, _b;\n        super.init(parameters);\n        if (typeof parameters.minimumBodySize === 'number') {\n            this.minimumBodySize = parameters.minimumBodySize;\n        }\n        if (typeof parameters.maximumBodySize === 'number') {\n            this.maximumBodySize = parameters.maximumBodySize;\n        }\n        this.bodyPart = this.getBodyComponent();\n        this.headerPart = this.getHeaderComponent();\n        this.bodyPart.init(Object.assign(Object.assign({}, parameters), { api: this.api }));\n        this.headerPart.init(Object.assign(Object.assign({}, parameters), { api: this.api }));\n        (_a = this.body) === null || _a === void 0 ? void 0 : _a.append(this.bodyPart.element);\n        (_b = this.header) === null || _b === void 0 ? void 0 : _b.append(this.headerPart.element);\n        if (typeof parameters.isExpanded === 'boolean') {\n            this.setExpanded(parameters.isExpanded);\n        }\n    }\n    toJSON() {\n        const params = this._params;\n        return Object.assign(Object.assign({}, super.toJSON()), { headerComponent: this.headerComponent, title: params.title });\n    }\n    renderOnce() {\n        this.header = document.createElement('div');\n        this.header.tabIndex = 0;\n        this.header.className = 'dv-pane-header';\n        this.header.style.height = `${this.headerSize}px`;\n        this.header.style.lineHeight = `${this.headerSize}px`;\n        this.header.style.minHeight = `${this.headerSize}px`;\n        this.header.style.maxHeight = `${this.headerSize}px`;\n        this.element.appendChild(this.header);\n        this.body = document.createElement('div');\n        this.body.className = 'dv-pane-body';\n        this.element.appendChild(this.body);\n    }\n    // TODO slightly hacky by-pass of the component to create a body and header component\n    getComponent() {\n        return {\n            update: (params) => {\n                var _a, _b;\n                (_a = this.bodyPart) === null || _a === void 0 ? void 0 : _a.update({ params });\n                (_b = this.headerPart) === null || _b === void 0 ? void 0 : _b.update({ params });\n            },\n            dispose: () => {\n                var _a, _b;\n                (_a = this.bodyPart) === null || _a === void 0 ? void 0 : _a.dispose();\n                (_b = this.headerPart) === null || _b === void 0 ? void 0 : _b.dispose();\n            },\n        };\n    }\n}\n","import { PaneviewApi } from '../api/component.api';\nimport { DragHandler } from '../dnd/abstractDragHandler';\nimport { getPaneData, LocalSelectionTransfer, PaneTransfer, } from '../dnd/dataTransfer';\nimport { Droptarget } from '../dnd/droptarget';\nimport { Emitter } from '../events';\nimport { PaneviewUnhandledDragOverEvent, } from './options';\nimport { PaneviewPanel, } from './paneviewPanel';\nexport class DraggablePaneviewPanel extends PaneviewPanel {\n    constructor(accessor, id, component, headerComponent, orientation, isExpanded, disableDnd) {\n        super(id, component, headerComponent, orientation, isExpanded, true);\n        this.accessor = accessor;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onUnhandledDragOverEvent = new Emitter();\n        this.onUnhandledDragOverEvent = this._onUnhandledDragOverEvent.event;\n        this.addDisposables(this._onDidDrop, this._onUnhandledDragOverEvent);\n        if (!disableDnd) {\n            this.initDragFeatures();\n        }\n    }\n    initDragFeatures() {\n        if (!this.header) {\n            return;\n        }\n        const id = this.id;\n        const accessorId = this.accessor.id;\n        this.header.draggable = true;\n        this.handler = new (class PaneDragHandler extends DragHandler {\n            getData() {\n                LocalSelectionTransfer.getInstance().setData([new PaneTransfer(accessorId, id)], PaneTransfer.prototype);\n                return {\n                    dispose: () => {\n                        LocalSelectionTransfer.getInstance().clearData(PaneTransfer.prototype);\n                    },\n                };\n            }\n        })(this.header);\n        this.target = new Droptarget(this.element, {\n            acceptedTargetZones: ['top', 'bottom'],\n            overlayModel: {\n                activationSize: { type: 'percentage', value: 50 },\n            },\n            canDisplayOverlay: (event, position) => {\n                const data = getPaneData();\n                if (data) {\n                    if (data.paneId !== this.id &&\n                        data.viewId === this.accessor.id) {\n                        return true;\n                    }\n                }\n                const firedEvent = new PaneviewUnhandledDragOverEvent(event, position, getPaneData, this);\n                this._onUnhandledDragOverEvent.fire(firedEvent);\n                return firedEvent.isAccepted;\n            },\n        });\n        this.addDisposables(this._onDidDrop, this.handler, this.target, this.target.onDrop((event) => {\n            this.onDrop(event);\n        }));\n    }\n    onDrop(event) {\n        const data = getPaneData();\n        if (!data || data.viewId !== this.accessor.id) {\n            // if there is no local drag event for this panel\n            // or if the drag event was creating by another Paneview instance\n            this._onDidDrop.fire(Object.assign(Object.assign({}, event), { panel: this, api: new PaneviewApi(this.accessor), getData: getPaneData }));\n            return;\n        }\n        const containerApi = this._params\n            .containerApi;\n        const panelId = data.paneId;\n        const existingPanel = containerApi.getPanel(panelId);\n        if (!existingPanel) {\n            // if the panel doesn't exist\n            this._onDidDrop.fire(Object.assign(Object.assign({}, event), { panel: this, getData: getPaneData, api: new PaneviewApi(this.accessor) }));\n            return;\n        }\n        const allPanels = containerApi.panels;\n        const fromIndex = allPanels.indexOf(existingPanel);\n        let toIndex = containerApi.panels.indexOf(this);\n        if (event.position === 'left' || event.position === 'top') {\n            toIndex = Math.max(0, toIndex - 1);\n        }\n        if (event.position === 'right' || event.position === 'bottom') {\n            if (fromIndex > toIndex) {\n                toIndex++;\n            }\n            toIndex = Math.min(allPanels.length - 1, toIndex);\n        }\n        containerApi.movePanel(fromIndex, toIndex);\n    }\n}\n","import { CompositeDisposable, MutableDisposable, } from '../../../lifecycle';\nimport { Emitter } from '../../../events';\nimport { trackFocus } from '../../../dom';\nimport { Droptarget } from '../../../dnd/droptarget';\nimport { getPanelData } from '../../../dnd/dataTransfer';\nexport class ContentContainer extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor(accessor, group) {\n        super();\n        this.accessor = accessor;\n        this.group = group;\n        this.disposable = new MutableDisposable();\n        this._onDidFocus = new Emitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new Emitter();\n        this.onDidBlur = this._onDidBlur.event;\n        this._element = document.createElement('div');\n        this._element.className = 'dv-content-container';\n        this._element.tabIndex = -1;\n        this.addDisposables(this._onDidFocus, this._onDidBlur);\n        this.dropTarget = new Droptarget(this.element, {\n            acceptedTargetZones: ['top', 'bottom', 'left', 'right', 'center'],\n            canDisplayOverlay: (event, position) => {\n                if (this.group.locked === 'no-drop-target' ||\n                    (this.group.locked && position === 'center')) {\n                    return false;\n                }\n                const data = getPanelData();\n                if (!data &&\n                    event.shiftKey &&\n                    this.group.location.type !== 'floating') {\n                    return false;\n                }\n                if (data && data.viewId === this.accessor.id) {\n                    if (data.groupId === this.group.id) {\n                        if (position === 'center') {\n                            // don't allow to drop on self for center position\n                            return false;\n                        }\n                        if (data.panelId === null) {\n                            // don't allow group move to drop anywhere on self\n                            return false;\n                        }\n                    }\n                    const groupHasOnePanelAndIsActiveDragElement = this.group.panels.length === 1 &&\n                        data.groupId === this.group.id;\n                    return !groupHasOnePanelAndIsActiveDragElement;\n                }\n                return this.group.canDisplayOverlay(event, position, 'content');\n            },\n        });\n        this.addDisposables(this.dropTarget);\n    }\n    show() {\n        this.element.style.display = '';\n    }\n    hide() {\n        this.element.style.display = 'none';\n    }\n    renderPanel(panel, options = { asActive: true }) {\n        const doRender = options.asActive ||\n            (this.panel && this.group.isPanelActive(this.panel));\n        if (this.panel &&\n            this.panel.view.content.element.parentElement === this._element) {\n            /**\n             * If the currently attached panel is mounted directly to the content then remove it\n             */\n            this._element.removeChild(this.panel.view.content.element);\n        }\n        this.panel = panel;\n        let container;\n        switch (panel.api.renderer) {\n            case 'onlyWhenVisible':\n                this.group.renderContainer.detatch(panel);\n                if (this.panel) {\n                    if (doRender) {\n                        this._element.appendChild(this.panel.view.content.element);\n                    }\n                }\n                container = this._element;\n                break;\n            case 'always':\n                if (panel.view.content.element.parentElement === this._element) {\n                    this._element.removeChild(panel.view.content.element);\n                }\n                container = this.group.renderContainer.attach({\n                    panel,\n                    referenceContainer: this,\n                });\n                break;\n            default:\n                throw new Error(`dockview: invalid renderer type '${panel.api.renderer}'`);\n        }\n        if (doRender) {\n            const focusTracker = trackFocus(container);\n            const disposable = new CompositeDisposable();\n            disposable.addDisposables(focusTracker, focusTracker.onDidFocus(() => this._onDidFocus.fire()), focusTracker.onDidBlur(() => this._onDidBlur.fire()));\n            this.disposable.value = disposable;\n        }\n    }\n    openPanel(panel) {\n        if (this.panel === panel) {\n            return;\n        }\n        this.renderPanel(panel);\n    }\n    layout(_width, _height) {\n        // noop\n    }\n    closePanel() {\n        var _a;\n        if (this.panel) {\n            if (this.panel.api.renderer === 'onlyWhenVisible') {\n                (_a = this.panel.view.content.element.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(this.panel.view.content.element);\n            }\n        }\n        this.panel = undefined;\n    }\n    dispose() {\n        this.disposable.dispose();\n        super.dispose();\n    }\n}\n","import { addDisposableListener, Emitter } from '../../../events';\nimport { CompositeDisposable } from '../../../lifecycle';\nimport { getPanelData, LocalSelectionTransfer, PanelTransfer, } from '../../../dnd/dataTransfer';\nimport { toggleClass } from '../../../dom';\nimport { Droptarget, } from '../../../dnd/droptarget';\nimport { DragHandler } from '../../../dnd/abstractDragHandler';\nclass TabDragHandler extends DragHandler {\n    constructor(element, accessor, group, panel) {\n        super(element);\n        this.accessor = accessor;\n        this.group = group;\n        this.panel = panel;\n        this.panelTransfer = LocalSelectionTransfer.getInstance();\n    }\n    getData(event) {\n        this.panelTransfer.setData([new PanelTransfer(this.accessor.id, this.group.id, this.panel.id)], PanelTransfer.prototype);\n        return {\n            dispose: () => {\n                this.panelTransfer.clearData(PanelTransfer.prototype);\n            },\n        };\n    }\n}\nexport class Tab extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor(panel, accessor, group) {\n        super();\n        this.panel = panel;\n        this.accessor = accessor;\n        this.group = group;\n        this.content = undefined;\n        this._onChanged = new Emitter();\n        this.onChanged = this._onChanged.event;\n        this._onDropped = new Emitter();\n        this.onDrop = this._onDropped.event;\n        this._onDragStart = new Emitter();\n        this.onDragStart = this._onDragStart.event;\n        this._element = document.createElement('div');\n        this._element.className = 'dv-tab';\n        this._element.tabIndex = 0;\n        this._element.draggable = true;\n        toggleClass(this.element, 'dv-inactive-tab', true);\n        const dragHandler = new TabDragHandler(this._element, this.accessor, this.group, this.panel);\n        this.dropTarget = new Droptarget(this._element, {\n            acceptedTargetZones: ['center'],\n            canDisplayOverlay: (event, position) => {\n                if (this.group.locked) {\n                    return false;\n                }\n                const data = getPanelData();\n                if (data && this.accessor.id === data.viewId) {\n                    if (data.panelId === null &&\n                        data.groupId === this.group.id) {\n                        // don't allow group move to drop on self\n                        return false;\n                    }\n                    return this.panel.id !== data.panelId;\n                }\n                return this.group.model.canDisplayOverlay(event, position, 'tab');\n            },\n        });\n        this.onWillShowOverlay = this.dropTarget.onWillShowOverlay;\n        this.addDisposables(this._onChanged, this._onDropped, this._onDragStart, dragHandler.onDragStart((event) => {\n            this._onDragStart.fire(event);\n        }), dragHandler, addDisposableListener(this._element, 'pointerdown', (event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            this._onChanged.fire(event);\n        }), this.dropTarget.onDrop((event) => {\n            this._onDropped.fire(event);\n        }), this.dropTarget);\n    }\n    setActive(isActive) {\n        toggleClass(this.element, 'dv-active-tab', isActive);\n        toggleClass(this.element, 'dv-inactive-tab', !isActive);\n    }\n    setContent(part) {\n        if (this.content) {\n            this._element.removeChild(this.content.element);\n        }\n        this.content = part;\n        this._element.appendChild(this.content.element);\n    }\n    dispose() {\n        super.dispose();\n    }\n}\n","import { quasiPreventDefault } from '../dom';\nimport { addDisposableListener } from '../events';\nimport { DragHandler } from './abstractDragHandler';\nimport { LocalSelectionTransfer, PanelTransfer } from './dataTransfer';\nimport { addGhostImage } from './ghost';\nexport class GroupDragHandler extends DragHandler {\n    constructor(element, accessor, group) {\n        super(element);\n        this.accessor = accessor;\n        this.group = group;\n        this.panelTransfer = LocalSelectionTransfer.getInstance();\n        this.addDisposables(addDisposableListener(element, 'pointerdown', (e) => {\n            if (e.shiftKey) {\n                /**\n                 * You cannot call e.preventDefault() because that will prevent drag events from firing\n                 * but we also need to stop any group overlay drag events from occuring\n                 * Use a custom event marker that can be checked by the overlay drag events\n                 */\n                quasiPreventDefault(e);\n            }\n        }, true));\n    }\n    isCancelled(_event) {\n        if (this.group.api.location.type === 'floating' && !_event.shiftKey) {\n            return true;\n        }\n        return false;\n    }\n    getData(dragEvent) {\n        const dataTransfer = dragEvent.dataTransfer;\n        this.panelTransfer.setData([new PanelTransfer(this.accessor.id, this.group.id, null)], PanelTransfer.prototype);\n        const style = window.getComputedStyle(this.el);\n        const bgColor = style.getPropertyValue('--dv-activegroup-visiblepanel-tab-background-color');\n        const color = style.getPropertyValue('--dv-activegroup-visiblepanel-tab-color');\n        if (dataTransfer) {\n            const ghostElement = document.createElement('div');\n            ghostElement.style.backgroundColor = bgColor;\n            ghostElement.style.color = color;\n            ghostElement.style.padding = '2px 8px';\n            ghostElement.style.height = '24px';\n            ghostElement.style.fontSize = '11px';\n            ghostElement.style.lineHeight = '20px';\n            ghostElement.style.borderRadius = '12px';\n            ghostElement.style.position = 'absolute';\n            ghostElement.textContent = `Multiple Panels (${this.group.size})`;\n            addGhostImage(dataTransfer, ghostElement);\n        }\n        return {\n            dispose: () => {\n                this.panelTransfer.clearData(PanelTransfer.prototype);\n            },\n        };\n    }\n}\n","import { addClasses, removeClasses } from '../dom';\nexport function addGhostImage(dataTransfer, ghostElement) {\n    // class dockview provides to force ghost image to be drawn on a different layer and prevent weird rendering issues\n    addClasses(ghostElement, 'dv-dragged');\n    document.body.appendChild(ghostElement);\n    dataTransfer.setDragImage(ghostElement, 0, 0);\n    setTimeout(() => {\n        removeClasses(ghostElement, 'dv-dragged');\n        ghostElement.remove();\n    }, 0);\n}\n","import { last } from '../../../array';\nimport { getPanelData } from '../../../dnd/dataTransfer';\nimport { Droptarget, } from '../../../dnd/droptarget';\nimport { GroupDragHandler } from '../../../dnd/groupDragHandler';\nimport { addDisposableListener, Emitter } from '../../../events';\nimport { CompositeDisposable } from '../../../lifecycle';\nexport class VoidContainer extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor(accessor, group) {\n        super();\n        this.accessor = accessor;\n        this.group = group;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this._onDragStart = new Emitter();\n        this.onDragStart = this._onDragStart.event;\n        this._element = document.createElement('div');\n        this._element.className = 'dv-void-container';\n        this._element.draggable = true;\n        this.addDisposables(this._onDrop, this._onDragStart, addDisposableListener(this._element, 'pointerdown', () => {\n            this.accessor.doSetGroupActive(this.group);\n        }));\n        const handler = new GroupDragHandler(this._element, accessor, group);\n        this.dropTraget = new Droptarget(this._element, {\n            acceptedTargetZones: ['center'],\n            canDisplayOverlay: (event, position) => {\n                var _a;\n                const data = getPanelData();\n                if (data && this.accessor.id === data.viewId) {\n                    if (data.panelId === null &&\n                        data.groupId === this.group.id) {\n                        // don't allow group move to drop on self\n                        return false;\n                    }\n                    // don't show the overlay if the tab being dragged is the last panel of this group\n                    return ((_a = last(this.group.panels)) === null || _a === void 0 ? void 0 : _a.id) !== data.panelId;\n                }\n                return group.model.canDisplayOverlay(event, position, 'header_space');\n            },\n        });\n        this.onWillShowOverlay = this.dropTraget.onWillShowOverlay;\n        this.addDisposables(handler, handler.onDragStart((event) => {\n            this._onDragStart.fire(event);\n        }), this.dropTraget.onDrop((event) => {\n            this._onDrop.fire(event);\n        }), this.dropTraget);\n    }\n}\n","import { CompositeDisposable, } from '../../../lifecycle';\nimport { addDisposableListener, Emitter } from '../../../events';\nimport { Tab } from '../tab/tab';\nimport { VoidContainer } from './voidContainer';\nimport { toggleClass } from '../../../dom';\nimport { WillShowOverlayLocationEvent } from '../../dockviewGroupPanelModel';\nimport { getPanelData } from '../../../dnd/dataTransfer';\nexport class TabsContainer extends CompositeDisposable {\n    get panels() {\n        return this.tabs.map((_) => _.value.panel.id);\n    }\n    get size() {\n        return this.tabs.length;\n    }\n    get hidden() {\n        return this._hidden;\n    }\n    set hidden(value) {\n        this._hidden = value;\n        this.element.style.display = value ? 'none' : '';\n    }\n    show() {\n        if (!this.hidden) {\n            this.element.style.display = '';\n        }\n    }\n    hide() {\n        this._element.style.display = 'none';\n    }\n    setRightActionsElement(element) {\n        if (this.rightActions === element) {\n            return;\n        }\n        if (this.rightActions) {\n            this.rightActions.remove();\n            this.rightActions = undefined;\n        }\n        if (element) {\n            this.rightActionsContainer.appendChild(element);\n            this.rightActions = element;\n        }\n    }\n    setLeftActionsElement(element) {\n        if (this.leftActions === element) {\n            return;\n        }\n        if (this.leftActions) {\n            this.leftActions.remove();\n            this.leftActions = undefined;\n        }\n        if (element) {\n            this.leftActionsContainer.appendChild(element);\n            this.leftActions = element;\n        }\n    }\n    setPrefixActionsElement(element) {\n        if (this.preActions === element) {\n            return;\n        }\n        if (this.preActions) {\n            this.preActions.remove();\n            this.preActions = undefined;\n        }\n        if (element) {\n            this.preActionsContainer.appendChild(element);\n            this.preActions = element;\n        }\n    }\n    get element() {\n        return this._element;\n    }\n    isActive(tab) {\n        return (this.selectedIndex > -1 &&\n            this.tabs[this.selectedIndex].value === tab);\n    }\n    indexOf(id) {\n        return this.tabs.findIndex((tab) => tab.value.panel.id === id);\n    }\n    constructor(accessor, group) {\n        super();\n        this.accessor = accessor;\n        this.group = group;\n        this.tabs = [];\n        this.selectedIndex = -1;\n        this._hidden = false;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this._onTabDragStart = new Emitter();\n        this.onTabDragStart = this._onTabDragStart.event;\n        this._onGroupDragStart = new Emitter();\n        this.onGroupDragStart = this._onGroupDragStart.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        this._element = document.createElement('div');\n        this._element.className = 'dv-tabs-and-actions-container';\n        toggleClass(this._element, 'dv-full-width-single-tab', this.accessor.options.singleTabMode === 'fullwidth');\n        this.rightActionsContainer = document.createElement('div');\n        this.rightActionsContainer.className = 'dv-right-actions-container';\n        this.leftActionsContainer = document.createElement('div');\n        this.leftActionsContainer.className = 'dv-left-actions-container';\n        this.preActionsContainer = document.createElement('div');\n        this.preActionsContainer.className = 'dv-pre-actions-container';\n        this.tabContainer = document.createElement('div');\n        this.tabContainer.className = 'dv-tabs-container';\n        this.voidContainer = new VoidContainer(this.accessor, this.group);\n        this._element.appendChild(this.preActionsContainer);\n        this._element.appendChild(this.tabContainer);\n        this._element.appendChild(this.leftActionsContainer);\n        this._element.appendChild(this.voidContainer.element);\n        this._element.appendChild(this.rightActionsContainer);\n        this.addDisposables(this._onWillShowOverlay, this._onDrop, this._onTabDragStart, this._onGroupDragStart, this.voidContainer, this.voidContainer.onDragStart((event) => {\n            this._onGroupDragStart.fire({\n                nativeEvent: event,\n                group: this.group,\n            });\n        }), this.voidContainer.onDrop((event) => {\n            this._onDrop.fire({\n                event: event.nativeEvent,\n                index: this.tabs.length,\n            });\n        }), this.voidContainer.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'header_space',\n                panel: this.group.activePanel,\n                api: this.accessor.api,\n                group: this.group,\n                getData: getPanelData,\n            }));\n        }), addDisposableListener(this.voidContainer.element, 'pointerdown', (event) => {\n            const isFloatingGroupsEnabled = !this.accessor.options.disableFloatingGroups;\n            if (isFloatingGroupsEnabled &&\n                event.shiftKey &&\n                this.group.api.location.type !== 'floating') {\n                event.preventDefault();\n                const { top, left } = this.element.getBoundingClientRect();\n                const { top: rootTop, left: rootLeft } = this.accessor.element.getBoundingClientRect();\n                this.accessor.addFloatingGroup(this.group, {\n                    x: left - rootLeft + 20,\n                    y: top - rootTop + 20,\n                    inDragMode: true,\n                });\n            }\n        }), addDisposableListener(this.tabContainer, 'pointerdown', (event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            const isLeftClick = event.button === 0;\n            if (isLeftClick) {\n                this.accessor.doSetGroupActive(this.group);\n            }\n        }));\n    }\n    setActive(_isGroupActive) {\n        // noop\n    }\n    delete(id) {\n        const index = this.tabs.findIndex((tab) => tab.value.panel.id === id);\n        const tabToRemove = this.tabs.splice(index, 1)[0];\n        const { value, disposable } = tabToRemove;\n        disposable.dispose();\n        value.dispose();\n        value.element.remove();\n        this.updateClassnames();\n    }\n    setActivePanel(panel) {\n        this.tabs.forEach((tab) => {\n            const isActivePanel = panel.id === tab.value.panel.id;\n            tab.value.setActive(isActivePanel);\n        });\n    }\n    openPanel(panel, index = this.tabs.length) {\n        if (this.tabs.find((tab) => tab.value.panel.id === panel.id)) {\n            return;\n        }\n        const tab = new Tab(panel, this.accessor, this.group);\n        tab.setContent(panel.view.tab);\n        const disposable = new CompositeDisposable(tab.onDragStart((event) => {\n            this._onTabDragStart.fire({ nativeEvent: event, panel });\n        }), tab.onChanged((event) => {\n            const isFloatingGroupsEnabled = !this.accessor.options.disableFloatingGroups;\n            const isFloatingWithOnePanel = this.group.api.location.type === 'floating' &&\n                this.size === 1;\n            if (isFloatingGroupsEnabled &&\n                !isFloatingWithOnePanel &&\n                event.shiftKey) {\n                event.preventDefault();\n                const panel = this.accessor.getGroupPanel(tab.panel.id);\n                const { top, left } = tab.element.getBoundingClientRect();\n                const { top: rootTop, left: rootLeft } = this.accessor.element.getBoundingClientRect();\n                this.accessor.addFloatingGroup(panel, {\n                    x: left - rootLeft,\n                    y: top - rootTop,\n                    inDragMode: true,\n                });\n                return;\n            }\n            const isLeftClick = event.button === 0;\n            if (!isLeftClick || event.defaultPrevented) {\n                return;\n            }\n            if (this.group.activePanel !== panel) {\n                this.group.model.openPanel(panel);\n            }\n        }), tab.onDrop((event) => {\n            this._onDrop.fire({\n                event: event.nativeEvent,\n                index: this.tabs.findIndex((x) => x.value === tab),\n            });\n        }), tab.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'tab',\n                panel: this.group.activePanel,\n                api: this.accessor.api,\n                group: this.group,\n                getData: getPanelData,\n            }));\n        }));\n        const value = { value: tab, disposable };\n        this.addTab(value, index);\n    }\n    closePanel(panel) {\n        this.delete(panel.id);\n    }\n    dispose() {\n        super.dispose();\n        for (const { value, disposable } of this.tabs) {\n            disposable.dispose();\n            value.dispose();\n        }\n        this.tabs = [];\n    }\n    addTab(tab, index = this.tabs.length) {\n        if (index < 0 || index > this.tabs.length) {\n            throw new Error('invalid location');\n        }\n        this.tabContainer.insertBefore(tab.value.element, this.tabContainer.children[index]);\n        this.tabs = [\n            ...this.tabs.slice(0, index),\n            tab,\n            ...this.tabs.slice(index),\n        ];\n        if (this.selectedIndex < 0) {\n            this.selectedIndex = index;\n        }\n        this.updateClassnames();\n    }\n    updateClassnames() {\n        toggleClass(this._element, 'dv-single-tab', this.size === 1);\n    }\n}\n","import { AcceptableEvent } from '../events';\nexport class DockviewUnhandledDragOverEvent extends AcceptableEvent {\n    constructor(nativeEvent, target, position, getData, group) {\n        super();\n        this.nativeEvent = nativeEvent;\n        this.target = target;\n        this.position = position;\n        this.getData = getData;\n        this.group = group;\n    }\n}\nexport const PROPERTY_KEYS_DOCKVIEW = (() => {\n    /**\n     * by readong the keys from an empty value object TypeScript will error\n     * when we add or remove new properties to `DockviewOptions`\n     */\n    const properties = {\n        disableAutoResizing: undefined,\n        hideBorders: undefined,\n        singleTabMode: undefined,\n        disableFloatingGroups: undefined,\n        floatingGroupBounds: undefined,\n        popoutUrl: undefined,\n        defaultRenderer: undefined,\n        debug: undefined,\n        rootOverlayModel: undefined,\n        locked: undefined,\n        disableDnd: undefined,\n        gap: undefined,\n        className: undefined,\n        noPanelsOverlay: undefined,\n    };\n    return Object.keys(properties);\n})();\nexport function isPanelOptionsWithPanel(data) {\n    if (data.referencePanel) {\n        return true;\n    }\n    return false;\n}\nexport function isPanelOptionsWithGroup(data) {\n    if (data.referenceGroup) {\n        return true;\n    }\n    return false;\n}\nexport function isGroupOptionsWithPanel(data) {\n    if (data.referencePanel) {\n        return true;\n    }\n    return false;\n}\nexport function isGroupOptionsWithGroup(data) {\n    if (data.referenceGroup) {\n        return true;\n    }\n    return false;\n}\n","import { DockviewApi } from '../api/component.api';\nimport { getPanelData } from '../dnd/dataTransfer';\nimport { isAncestor, toggleClass } from '../dom';\nimport { addDisposableListener, DockviewEvent, Emitter, } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nimport { ContentContainer, } from './components/panel/content';\nimport { TabsContainer, } from './components/titlebar/tabsContainer';\nimport { DockviewUnhandledDragOverEvent, } from './options';\nexport class DockviewDidDropEvent extends DockviewEvent {\n    get nativeEvent() {\n        return this.options.nativeEvent;\n    }\n    get position() {\n        return this.options.position;\n    }\n    get panel() {\n        return this.options.panel;\n    }\n    get group() {\n        return this.options.group;\n    }\n    get api() {\n        return this.options.api;\n    }\n    constructor(options) {\n        super();\n        this.options = options;\n    }\n    getData() {\n        return this.options.getData();\n    }\n}\nexport class DockviewWillDropEvent extends DockviewDidDropEvent {\n    get kind() {\n        return this._kind;\n    }\n    constructor(options) {\n        super(options);\n        this._kind = options.kind;\n    }\n}\nexport class WillShowOverlayLocationEvent {\n    get kind() {\n        return this.options.kind;\n    }\n    get nativeEvent() {\n        return this.event.nativeEvent;\n    }\n    get position() {\n        return this.event.position;\n    }\n    get defaultPrevented() {\n        return this.event.defaultPrevented;\n    }\n    get panel() {\n        return this.options.panel;\n    }\n    get api() {\n        return this.options.api;\n    }\n    get group() {\n        return this.options.group;\n    }\n    preventDefault() {\n        this.event.preventDefault();\n    }\n    getData() {\n        return this.options.getData();\n    }\n    constructor(event, options) {\n        this.event = event;\n        this.options = options;\n    }\n}\nexport class DockviewGroupPanelModel extends CompositeDisposable {\n    get element() {\n        throw new Error('dockview: not supported');\n    }\n    get activePanel() {\n        return this._activePanel;\n    }\n    get locked() {\n        return this._locked;\n    }\n    set locked(value) {\n        this._locked = value;\n        toggleClass(this.container, 'dv-locked-groupview', value === 'no-drop-target' || value);\n    }\n    get isActive() {\n        return this._isGroupActive;\n    }\n    get panels() {\n        return this._panels;\n    }\n    get size() {\n        return this._panels.length;\n    }\n    get isEmpty() {\n        return this._panels.length === 0;\n    }\n    get hasWatermark() {\n        return !!(this.watermark && this.container.contains(this.watermark.element));\n    }\n    get header() {\n        return this.tabsContainer;\n    }\n    get isContentFocused() {\n        if (!document.activeElement) {\n            return false;\n        }\n        return isAncestor(document.activeElement, this.contentContainer.element);\n    }\n    get location() {\n        return this._location;\n    }\n    set location(value) {\n        this._location = value;\n        toggleClass(this.container, 'dv-groupview-floating', false);\n        toggleClass(this.container, 'dv-groupview-popout', false);\n        switch (value.type) {\n            case 'grid':\n                this.contentContainer.dropTarget.setTargetZones([\n                    'top',\n                    'bottom',\n                    'left',\n                    'right',\n                    'center',\n                ]);\n                break;\n            case 'floating':\n                this.contentContainer.dropTarget.setTargetZones(['center']);\n                this.contentContainer.dropTarget.setTargetZones(value\n                    ? ['center']\n                    : ['top', 'bottom', 'left', 'right', 'center']);\n                toggleClass(this.container, 'dv-groupview-floating', true);\n                break;\n            case 'popout':\n                this.contentContainer.dropTarget.setTargetZones(['center']);\n                toggleClass(this.container, 'dv-groupview-popout', true);\n                break;\n        }\n        this.groupPanel.api._onDidLocationChange.fire({\n            location: this.location,\n        });\n    }\n    constructor(container, accessor, id, options, groupPanel) {\n        var _a;\n        super();\n        this.container = container;\n        this.accessor = accessor;\n        this.id = id;\n        this.options = options;\n        this.groupPanel = groupPanel;\n        this._isGroupActive = false;\n        this._locked = false;\n        this._location = { type: 'grid' };\n        this.mostRecentlyUsed = [];\n        this._overwriteRenderContainer = null;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._width = 0;\n        this._height = 0;\n        this._panels = [];\n        this._panelDisposables = new Map();\n        this._onMove = new Emitter();\n        this.onMove = this._onMove.event;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onWillDrop = new Emitter();\n        this.onWillDrop = this._onWillDrop.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        this._onTabDragStart = new Emitter();\n        this.onTabDragStart = this._onTabDragStart.event;\n        this._onGroupDragStart = new Emitter();\n        this.onGroupDragStart = this._onGroupDragStart.event;\n        this._onDidAddPanel = new Emitter();\n        this.onDidAddPanel = this._onDidAddPanel.event;\n        this._onDidPanelTitleChange = new Emitter();\n        this.onDidPanelTitleChange = this._onDidPanelTitleChange.event;\n        this._onDidPanelParametersChange = new Emitter();\n        this.onDidPanelParametersChange = this._onDidPanelParametersChange.event;\n        this._onDidRemovePanel = new Emitter();\n        this.onDidRemovePanel = this._onDidRemovePanel.event;\n        this._onDidActivePanelChange = new Emitter();\n        this.onDidActivePanelChange = this._onDidActivePanelChange.event;\n        this._onUnhandledDragOverEvent = new Emitter();\n        this.onUnhandledDragOverEvent = this._onUnhandledDragOverEvent.event;\n        toggleClass(this.container, 'dv-groupview', true);\n        this._api = new DockviewApi(this.accessor);\n        this.tabsContainer = new TabsContainer(this.accessor, this.groupPanel);\n        this.contentContainer = new ContentContainer(this.accessor, this);\n        container.append(this.tabsContainer.element, this.contentContainer.element);\n        this.header.hidden = !!options.hideHeader;\n        this.locked = (_a = options.locked) !== null && _a !== void 0 ? _a : false;\n        this.addDisposables(this._onTabDragStart, this._onGroupDragStart, this._onWillShowOverlay, this.tabsContainer.onTabDragStart((event) => {\n            this._onTabDragStart.fire(event);\n        }), this.tabsContainer.onGroupDragStart((event) => {\n            this._onGroupDragStart.fire(event);\n        }), this.tabsContainer.onDrop((event) => {\n            this.handleDropEvent('header', event.event, 'center', event.index);\n        }), this.contentContainer.onDidFocus(() => {\n            this.accessor.doSetGroupActive(this.groupPanel);\n        }), this.contentContainer.onDidBlur(() => {\n            // noop\n        }), this.contentContainer.dropTarget.onDrop((event) => {\n            this.handleDropEvent('content', event.nativeEvent, event.position);\n        }), this.tabsContainer.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(event);\n        }), this.contentContainer.dropTarget.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'content',\n                panel: this.activePanel,\n                api: this._api,\n                group: this.groupPanel,\n                getData: getPanelData,\n            }));\n        }), this._onMove, this._onDidChange, this._onDidDrop, this._onWillDrop, this._onDidAddPanel, this._onDidRemovePanel, this._onDidActivePanelChange, this._onUnhandledDragOverEvent, this._onDidPanelTitleChange, this._onDidPanelParametersChange);\n    }\n    focusContent() {\n        this.contentContainer.element.focus();\n    }\n    set renderContainer(value) {\n        this.panels.forEach((panel) => {\n            this.renderContainer.detatch(panel);\n        });\n        this._overwriteRenderContainer = value;\n        this.panels.forEach((panel) => {\n            this.rerender(panel);\n        });\n    }\n    get renderContainer() {\n        var _a;\n        return ((_a = this._overwriteRenderContainer) !== null && _a !== void 0 ? _a : this.accessor.overlayRenderContainer);\n    }\n    initialize() {\n        if (this.options.panels) {\n            this.options.panels.forEach((panel) => {\n                this.doAddPanel(panel);\n            });\n        }\n        if (this.options.activePanel) {\n            this.openPanel(this.options.activePanel);\n        }\n        // must be run after the constructor otherwise this.parent may not be\n        // correctly initialized\n        this.setActive(this.isActive, true);\n        this.updateContainer();\n        if (this.accessor.options.createRightHeaderActionComponent) {\n            this._rightHeaderActions =\n                this.accessor.options.createRightHeaderActionComponent(this.groupPanel);\n            this.addDisposables(this._rightHeaderActions);\n            this._rightHeaderActions.init({\n                containerApi: this._api,\n                api: this.groupPanel.api,\n                group: this.groupPanel,\n            });\n            this.tabsContainer.setRightActionsElement(this._rightHeaderActions.element);\n        }\n        if (this.accessor.options.createLeftHeaderActionComponent) {\n            this._leftHeaderActions =\n                this.accessor.options.createLeftHeaderActionComponent(this.groupPanel);\n            this.addDisposables(this._leftHeaderActions);\n            this._leftHeaderActions.init({\n                containerApi: this._api,\n                api: this.groupPanel.api,\n                group: this.groupPanel,\n            });\n            this.tabsContainer.setLeftActionsElement(this._leftHeaderActions.element);\n        }\n        if (this.accessor.options.createPrefixHeaderActionComponent) {\n            this._prefixHeaderActions =\n                this.accessor.options.createPrefixHeaderActionComponent(this.groupPanel);\n            this.addDisposables(this._prefixHeaderActions);\n            this._prefixHeaderActions.init({\n                containerApi: this._api,\n                api: this.groupPanel.api,\n                group: this.groupPanel,\n            });\n            this.tabsContainer.setPrefixActionsElement(this._prefixHeaderActions.element);\n        }\n    }\n    rerender(panel) {\n        this.contentContainer.renderPanel(panel, { asActive: false });\n    }\n    indexOf(panel) {\n        return this.tabsContainer.indexOf(panel.id);\n    }\n    toJSON() {\n        var _a;\n        const result = {\n            views: this.tabsContainer.panels,\n            activeView: (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.id,\n            id: this.id,\n        };\n        if (this.locked !== false) {\n            result.locked = this.locked;\n        }\n        if (this.header.hidden) {\n            result.hideHeader = true;\n        }\n        return result;\n    }\n    moveToNext(options) {\n        if (!options) {\n            options = {};\n        }\n        if (!options.panel) {\n            options.panel = this.activePanel;\n        }\n        const index = options.panel ? this.panels.indexOf(options.panel) : -1;\n        let normalizedIndex;\n        if (index < this.panels.length - 1) {\n            normalizedIndex = index + 1;\n        }\n        else if (!options.suppressRoll) {\n            normalizedIndex = 0;\n        }\n        else {\n            return;\n        }\n        this.openPanel(this.panels[normalizedIndex]);\n    }\n    moveToPrevious(options) {\n        if (!options) {\n            options = {};\n        }\n        if (!options.panel) {\n            options.panel = this.activePanel;\n        }\n        if (!options.panel) {\n            return;\n        }\n        const index = this.panels.indexOf(options.panel);\n        let normalizedIndex;\n        if (index > 0) {\n            normalizedIndex = index - 1;\n        }\n        else if (!options.suppressRoll) {\n            normalizedIndex = this.panels.length - 1;\n        }\n        else {\n            return;\n        }\n        this.openPanel(this.panels[normalizedIndex]);\n    }\n    containsPanel(panel) {\n        return this.panels.includes(panel);\n    }\n    init(_params) {\n        //noop\n    }\n    update(_params) {\n        //noop\n    }\n    focus() {\n        var _a;\n        (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    openPanel(panel, options = {}) {\n        /**\n         * set the panel group\n         * add the panel\n         * check if group active\n         * check if panel active\n         */\n        if (typeof options.index !== 'number' ||\n            options.index > this.panels.length) {\n            options.index = this.panels.length;\n        }\n        const skipSetActive = !!options.skipSetActive;\n        // ensure the group is updated before we fire any events\n        panel.updateParentGroup(this.groupPanel, {\n            skipSetActive: options.skipSetActive,\n        });\n        this.doAddPanel(panel, options.index, {\n            skipSetActive: skipSetActive,\n        });\n        if (this._activePanel === panel) {\n            this.contentContainer.renderPanel(panel, { asActive: true });\n            return;\n        }\n        if (!skipSetActive) {\n            this.doSetActivePanel(panel);\n        }\n        if (!options.skipSetGroupActive) {\n            this.accessor.doSetGroupActive(this.groupPanel);\n        }\n        if (!options.skipSetActive) {\n            this.updateContainer();\n        }\n    }\n    removePanel(groupItemOrId, options = {\n        skipSetActive: false,\n    }) {\n        const id = typeof groupItemOrId === 'string'\n            ? groupItemOrId\n            : groupItemOrId.id;\n        const panelToRemove = this._panels.find((panel) => panel.id === id);\n        if (!panelToRemove) {\n            throw new Error('invalid operation');\n        }\n        return this._removePanel(panelToRemove, options);\n    }\n    closeAllPanels() {\n        if (this.panels.length > 0) {\n            // take a copy since we will be edting the array as we iterate through\n            const arrPanelCpy = [...this.panels];\n            for (const panel of arrPanelCpy) {\n                this.doClose(panel);\n            }\n        }\n        else {\n            this.accessor.removeGroup(this.groupPanel);\n        }\n    }\n    closePanel(panel) {\n        this.doClose(panel);\n    }\n    doClose(panel) {\n        const isLast = this.panels.length === 1 && this.accessor.groups.length === 1;\n        this.accessor.removePanel(panel, isLast && this.accessor.options.noPanelsOverlay === 'emptyGroup'\n            ? { removeEmptyGroup: false }\n            : undefined);\n    }\n    isPanelActive(panel) {\n        return this._activePanel === panel;\n    }\n    updateActions(element) {\n        this.tabsContainer.setRightActionsElement(element);\n    }\n    setActive(isGroupActive, force = false) {\n        if (!force && this.isActive === isGroupActive) {\n            return;\n        }\n        this._isGroupActive = isGroupActive;\n        toggleClass(this.container, 'dv-active-group', isGroupActive);\n        toggleClass(this.container, 'dv-inactive-group', !isGroupActive);\n        this.tabsContainer.setActive(this.isActive);\n        if (!this._activePanel && this.panels.length > 0) {\n            this.doSetActivePanel(this.panels[0]);\n        }\n        this.updateContainer();\n    }\n    layout(width, height) {\n        var _a;\n        this._width = width;\n        this._height = height;\n        this.contentContainer.layout(this._width, this._height);\n        if ((_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.layout) {\n            this._activePanel.layout(this._width, this._height);\n        }\n    }\n    _removePanel(panel, options) {\n        const isActivePanel = this._activePanel === panel;\n        this.doRemovePanel(panel);\n        if (isActivePanel && this.panels.length > 0) {\n            const nextPanel = this.mostRecentlyUsed[0];\n            this.openPanel(nextPanel, {\n                skipSetActive: options.skipSetActive,\n                skipSetGroupActive: options.skipSetActiveGroup,\n            });\n        }\n        if (this._activePanel && this.panels.length === 0) {\n            this.doSetActivePanel(undefined);\n        }\n        if (!options.skipSetActive) {\n            this.updateContainer();\n        }\n        return panel;\n    }\n    doRemovePanel(panel) {\n        const index = this.panels.indexOf(panel);\n        if (this._activePanel === panel) {\n            this.contentContainer.closePanel();\n        }\n        this.tabsContainer.delete(panel.id);\n        this._panels.splice(index, 1);\n        if (this.mostRecentlyUsed.includes(panel)) {\n            const index = this.mostRecentlyUsed.indexOf(panel);\n            this.mostRecentlyUsed.splice(index, 1);\n        }\n        const disposable = this._panelDisposables.get(panel.id);\n        if (disposable) {\n            disposable.dispose();\n            this._panelDisposables.delete(panel.id);\n        }\n        this._onDidRemovePanel.fire({ panel });\n    }\n    doAddPanel(panel, index = this.panels.length, options = { skipSetActive: false }) {\n        const existingPanel = this._panels.indexOf(panel);\n        const hasExistingPanel = existingPanel > -1;\n        this.tabsContainer.show();\n        this.contentContainer.show();\n        this.tabsContainer.openPanel(panel, index);\n        if (!options.skipSetActive) {\n            this.contentContainer.openPanel(panel);\n        }\n        if (hasExistingPanel) {\n            // TODO - need to ensure ordering hasn't changed and if it has need to re-order this.panels\n            return;\n        }\n        this.updateMru(panel);\n        this.panels.splice(index, 0, panel);\n        this._panelDisposables.set(panel.id, new CompositeDisposable(panel.api.onDidTitleChange((event) => this._onDidPanelTitleChange.fire(event)), panel.api.onDidParametersChange((event) => this._onDidPanelParametersChange.fire(event))));\n        this._onDidAddPanel.fire({ panel });\n    }\n    doSetActivePanel(panel) {\n        if (this._activePanel === panel) {\n            return;\n        }\n        this._activePanel = panel;\n        if (panel) {\n            this.tabsContainer.setActivePanel(panel);\n            panel.layout(this._width, this._height);\n            this.updateMru(panel);\n            this._onDidActivePanelChange.fire({\n                panel,\n            });\n        }\n    }\n    updateMru(panel) {\n        if (this.mostRecentlyUsed.includes(panel)) {\n            this.mostRecentlyUsed.splice(this.mostRecentlyUsed.indexOf(panel), 1);\n        }\n        this.mostRecentlyUsed = [panel, ...this.mostRecentlyUsed];\n    }\n    updateContainer() {\n        var _a, _b;\n        this.panels.forEach((panel) => panel.runEvents());\n        if (this.isEmpty && !this.watermark) {\n            const watermark = this.accessor.createWatermarkComponent();\n            watermark.init({\n                containerApi: this._api,\n                group: this.groupPanel,\n            });\n            this.watermark = watermark;\n            addDisposableListener(this.watermark.element, 'pointerdown', () => {\n                if (!this.isActive) {\n                    this.accessor.doSetGroupActive(this.groupPanel);\n                }\n            });\n            this.contentContainer.element.appendChild(this.watermark.element);\n        }\n        if (!this.isEmpty && this.watermark) {\n            this.watermark.element.remove();\n            (_b = (_a = this.watermark).dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n            this.watermark = undefined;\n        }\n    }\n    canDisplayOverlay(event, position, target) {\n        const firedEvent = new DockviewUnhandledDragOverEvent(event, target, position, getPanelData, this.accessor.getPanel(this.id));\n        this._onUnhandledDragOverEvent.fire(firedEvent);\n        return firedEvent.isAccepted;\n    }\n    handleDropEvent(type, event, position, index) {\n        if (this.locked === 'no-drop-target') {\n            return;\n        }\n        function getKind() {\n            switch (type) {\n                case 'header':\n                    return typeof index === 'number' ? 'tab' : 'header_space';\n                case 'content':\n                    return 'content';\n            }\n        }\n        const panel = typeof index === 'number' ? this.panels[index] : undefined;\n        const willDropEvent = new DockviewWillDropEvent({\n            nativeEvent: event,\n            position,\n            panel,\n            getData: () => getPanelData(),\n            kind: getKind(),\n            group: this.groupPanel,\n            api: this._api,\n        });\n        this._onWillDrop.fire(willDropEvent);\n        if (willDropEvent.defaultPrevented) {\n            return;\n        }\n        const data = getPanelData();\n        if (data && data.viewId === this.accessor.id) {\n            if (data.panelId === null) {\n                // this is a group move dnd event\n                const { groupId } = data;\n                this._onMove.fire({\n                    target: position,\n                    groupId: groupId,\n                    index,\n                });\n                return;\n            }\n            const fromSameGroup = this.tabsContainer.indexOf(data.panelId) !== -1;\n            if (fromSameGroup && this.tabsContainer.size === 1) {\n                return;\n            }\n            const { groupId, panelId } = data;\n            const isSameGroup = this.id === groupId;\n            if (isSameGroup && !position) {\n                const oldIndex = this.tabsContainer.indexOf(panelId);\n                if (oldIndex === index) {\n                    return;\n                }\n            }\n            this._onMove.fire({\n                target: position,\n                groupId: data.groupId,\n                itemId: data.panelId,\n                index,\n            });\n        }\n        else {\n            this._onDidDrop.fire(new DockviewDidDropEvent({\n                nativeEvent: event,\n                position,\n                panel,\n                getData: () => getPanelData(),\n                group: this.groupPanel,\n                api: this._api,\n            }));\n        }\n    }\n    dispose() {\n        var _a, _b, _c;\n        super.dispose();\n        (_a = this.watermark) === null || _a === void 0 ? void 0 : _a.element.remove();\n        (_c = (_b = this.watermark) === null || _b === void 0 ? void 0 : _b.dispose) === null || _c === void 0 ? void 0 : _c.call(_b);\n        this.watermark = undefined;\n        for (const panel of this.panels) {\n            panel.dispose();\n        }\n        this.tabsContainer.dispose();\n        this.contentContainer.dispose();\n    }\n}\n","import { Emitter } from '../events';\nimport { PanelApiImpl } from './panelApi';\nexport class GridviewPanelApiImpl extends PanelApiImpl {\n    constructor(id, component, panel) {\n        super(id, component);\n        this._onDidConstraintsChangeInternal = new Emitter();\n        this.onDidConstraintsChangeInternal = this._onDidConstraintsChangeInternal.event;\n        this._onDidConstraintsChange = new Emitter();\n        this.onDidConstraintsChange = this._onDidConstraintsChange.event;\n        this._onDidSizeChange = new Emitter();\n        this.onDidSizeChange = this._onDidSizeChange.event;\n        this.addDisposables(this._onDidConstraintsChangeInternal, this._onDidConstraintsChange, this._onDidSizeChange);\n        if (panel) {\n            this.initialize(panel);\n        }\n    }\n    setConstraints(value) {\n        this._onDidConstraintsChangeInternal.fire(value);\n    }\n    setSize(event) {\n        this._onDidSizeChange.fire(event);\n    }\n}\n","import { BasePanelView, } from './basePanelView';\nimport { GridviewPanelApiImpl, } from '../api/gridviewPanelApi';\nimport { Emitter } from '../events';\nexport class GridviewPanel extends BasePanelView {\n    get priority() {\n        return this._priority;\n    }\n    get snap() {\n        return this._snap;\n    }\n    get minimumWidth() {\n        /**\n         * defer to protected function to allow subclasses to override easily.\n         * see https://github.com/microsoft/TypeScript/issues/338\n         */\n        return this.__minimumWidth();\n    }\n    get minimumHeight() {\n        /**\n         * defer to protected function to allow subclasses to override easily.\n         * see https://github.com/microsoft/TypeScript/issues/338\n         */\n        return this.__minimumHeight();\n    }\n    get maximumHeight() {\n        /**\n         * defer to protected function to allow subclasses to override easily.\n         * see https://github.com/microsoft/TypeScript/issues/338\n         */\n        return this.__maximumHeight();\n    }\n    get maximumWidth() {\n        /**\n         * defer to protected function to allow subclasses to override easily.\n         * see https://github.com/microsoft/TypeScript/issues/338\n         */\n        return this.__maximumWidth();\n    }\n    __minimumWidth() {\n        const width = typeof this._minimumWidth === 'function'\n            ? this._minimumWidth()\n            : this._minimumWidth;\n        if (width !== this._evaluatedMinimumWidth) {\n            this._evaluatedMinimumWidth = width;\n            this.updateConstraints();\n        }\n        return width;\n    }\n    __maximumWidth() {\n        const width = typeof this._maximumWidth === 'function'\n            ? this._maximumWidth()\n            : this._maximumWidth;\n        if (width !== this._evaluatedMaximumWidth) {\n            this._evaluatedMaximumWidth = width;\n            this.updateConstraints();\n        }\n        return width;\n    }\n    __minimumHeight() {\n        const height = typeof this._minimumHeight === 'function'\n            ? this._minimumHeight()\n            : this._minimumHeight;\n        if (height !== this._evaluatedMinimumHeight) {\n            this._evaluatedMinimumHeight = height;\n            this.updateConstraints();\n        }\n        return height;\n    }\n    __maximumHeight() {\n        const height = typeof this._maximumHeight === 'function'\n            ? this._maximumHeight()\n            : this._maximumHeight;\n        if (height !== this._evaluatedMaximumHeight) {\n            this._evaluatedMaximumHeight = height;\n            this.updateConstraints();\n        }\n        return height;\n    }\n    get isActive() {\n        return this.api.isActive;\n    }\n    get isVisible() {\n        return this.api.isVisible;\n    }\n    constructor(id, component, options, api) {\n        super(id, component, api !== null && api !== void 0 ? api : new GridviewPanelApiImpl(id, component));\n        this._evaluatedMinimumWidth = 0;\n        this._evaluatedMaximumWidth = Number.MAX_SAFE_INTEGER;\n        this._evaluatedMinimumHeight = 0;\n        this._evaluatedMaximumHeight = Number.MAX_SAFE_INTEGER;\n        this._minimumWidth = 0;\n        this._minimumHeight = 0;\n        this._maximumWidth = Number.MAX_SAFE_INTEGER;\n        this._maximumHeight = Number.MAX_SAFE_INTEGER;\n        this._snap = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        if (typeof (options === null || options === void 0 ? void 0 : options.minimumWidth) === 'number') {\n            this._minimumWidth = options.minimumWidth;\n        }\n        if (typeof (options === null || options === void 0 ? void 0 : options.maximumWidth) === 'number') {\n            this._maximumWidth = options.maximumWidth;\n        }\n        if (typeof (options === null || options === void 0 ? void 0 : options.minimumHeight) === 'number') {\n            this._minimumHeight = options.minimumHeight;\n        }\n        if (typeof (options === null || options === void 0 ? void 0 : options.maximumHeight) === 'number') {\n            this._maximumHeight = options.maximumHeight;\n        }\n        this.api.initialize(this); // TODO: required to by-pass 'super before this' requirement\n        this.addDisposables(this.api.onWillVisibilityChange((event) => {\n            const { isVisible } = event;\n            const { accessor } = this._params;\n            accessor.setVisible(this, isVisible);\n        }), this.api.onActiveChange(() => {\n            const { accessor } = this._params;\n            accessor.doSetGroupActive(this);\n        }), this.api.onDidConstraintsChangeInternal((event) => {\n            if (typeof event.minimumWidth === 'number' ||\n                typeof event.minimumWidth === 'function') {\n                this._minimumWidth = event.minimumWidth;\n            }\n            if (typeof event.minimumHeight === 'number' ||\n                typeof event.minimumHeight === 'function') {\n                this._minimumHeight = event.minimumHeight;\n            }\n            if (typeof event.maximumWidth === 'number' ||\n                typeof event.maximumWidth === 'function') {\n                this._maximumWidth = event.maximumWidth;\n            }\n            if (typeof event.maximumHeight === 'number' ||\n                typeof event.maximumHeight === 'function') {\n                this._maximumHeight = event.maximumHeight;\n            }\n        }), this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire({\n                height: event.height,\n                width: event.width,\n            });\n        }), this._onDidChange);\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    init(parameters) {\n        if (parameters.maximumHeight) {\n            this._maximumHeight = parameters.maximumHeight;\n        }\n        if (parameters.minimumHeight) {\n            this._minimumHeight = parameters.minimumHeight;\n        }\n        if (parameters.maximumWidth) {\n            this._maximumWidth = parameters.maximumWidth;\n        }\n        if (parameters.minimumWidth) {\n            this._minimumWidth = parameters.minimumWidth;\n        }\n        this._priority = parameters.priority;\n        this._snap = !!parameters.snap;\n        super.init(parameters);\n        if (typeof parameters.isVisible === 'boolean') {\n            this.setVisible(parameters.isVisible);\n        }\n    }\n    updateConstraints() {\n        this.api._onDidConstraintsChange.fire({\n            minimumWidth: this._evaluatedMinimumWidth,\n            maximumWidth: this._evaluatedMaximumWidth,\n            minimumHeight: this._evaluatedMinimumHeight,\n            maximumHeight: this._evaluatedMaximumHeight,\n        });\n    }\n    toJSON() {\n        const state = super.toJSON();\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ? undefined : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        return Object.assign(Object.assign({}, state), { minimumHeight: minimum(this.minimumHeight), maximumHeight: maximum(this.maximumHeight), minimumWidth: minimum(this.minimumWidth), maximumWidth: maximum(this.maximumWidth), snap: this.snap, priority: this.priority });\n    }\n}\n","import { positionToDirection } from '../dnd/droptarget';\nimport { Emitter } from '../events';\nimport { MutableDisposable } from '../lifecycle';\nimport { GridviewPanelApiImpl } from './gridviewPanelApi';\nconst NOT_INITIALIZED_MESSAGE = 'dockview: DockviewGroupPanelApiImpl not initialized';\nexport class DockviewGroupPanelApiImpl extends GridviewPanelApiImpl {\n    get location() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        return this._group.model.location;\n    }\n    constructor(id, accessor) {\n        super(id, '__dockviewgroup__');\n        this.accessor = accessor;\n        this._mutableDisposable = new MutableDisposable();\n        this._onDidLocationChange = new Emitter();\n        this.onDidLocationChange = this._onDidLocationChange.event;\n        this._onDidActivePanelChange = new Emitter();\n        this.onDidActivePanelChange = this._onDidActivePanelChange.event;\n        this.addDisposables(this._onDidLocationChange, this._onDidActivePanelChange, this._mutableDisposable);\n    }\n    close() {\n        if (!this._group) {\n            return;\n        }\n        return this.accessor.removeGroup(this._group);\n    }\n    getWindow() {\n        return this.location.type === 'popout'\n            ? this.location.getWindow()\n            : window;\n    }\n    moveTo(options) {\n        var _a, _b, _c;\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        const group = (_a = options.group) !== null && _a !== void 0 ? _a : this.accessor.addGroup({\n            direction: positionToDirection((_b = options.position) !== null && _b !== void 0 ? _b : 'right'),\n            skipSetActive: true,\n        });\n        this.accessor.moveGroupOrPanel({\n            from: { groupId: this._group.id },\n            to: {\n                group,\n                position: options.group\n                    ? (_c = options.position) !== null && _c !== void 0 ? _c : 'center'\n                    : 'center',\n                index: options.index,\n            },\n        });\n    }\n    maximize() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        if (this.location.type !== 'grid') {\n            // only grid groups can be maximized\n            return;\n        }\n        this.accessor.maximizeGroup(this._group);\n    }\n    isMaximized() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        return this.accessor.isMaximizedGroup(this._group);\n    }\n    exitMaximized() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        if (this.isMaximized()) {\n            this.accessor.exitMaximizedGroup();\n        }\n    }\n    initialize(group) {\n        /**\n         * TODO: Annoying initialization order caveat, find a better way to initialize and avoid needing null checks\n         *\n         * Due to the order on initialization we know that the model isn't defined until later in the same stack-frame of setup.\n         * By queuing a microtask we can ensure the setup is completed within the same stack-frame, but after everything else has\n         * finished ensuring the `model` is defined.\n         */\n        this._group = group;\n        queueMicrotask(() => {\n            this._mutableDisposable.value =\n                this._group.model.onDidActivePanelChange((event) => {\n                    this._onDidActivePanelChange.fire(event);\n                });\n        });\n    }\n}\n","import { DockviewGroupPanelModel, } from './dockviewGroupPanelModel';\nimport { GridviewPanel } from '../gridview/gridviewPanel';\nimport { DockviewGroupPanelApiImpl, } from '../api/dockviewGroupPanelApi';\nconst MINIMUM_DOCKVIEW_GROUP_PANEL_WIDTH = 100;\nconst MINIMUM_DOCKVIEW_GROUP_PANEL_HEIGHT = 100;\nexport class DockviewGroupPanel extends GridviewPanel {\n    get minimumWidth() {\n        var _a;\n        const activePanelMinimumWidth = (_a = this.activePanel) === null || _a === void 0 ? void 0 : _a.minimumWidth;\n        if (typeof activePanelMinimumWidth === 'number') {\n            return activePanelMinimumWidth;\n        }\n        return super.__minimumWidth();\n    }\n    get minimumHeight() {\n        var _a;\n        const activePanelMinimumHeight = (_a = this.activePanel) === null || _a === void 0 ? void 0 : _a.minimumHeight;\n        if (typeof activePanelMinimumHeight === 'number') {\n            return activePanelMinimumHeight;\n        }\n        return super.__minimumHeight();\n    }\n    get maximumWidth() {\n        var _a;\n        const activePanelMaximumWidth = (_a = this.activePanel) === null || _a === void 0 ? void 0 : _a.maximumWidth;\n        if (typeof activePanelMaximumWidth === 'number') {\n            return activePanelMaximumWidth;\n        }\n        return super.__maximumWidth();\n    }\n    get maximumHeight() {\n        var _a;\n        const activePanelMaximumHeight = (_a = this.activePanel) === null || _a === void 0 ? void 0 : _a.maximumHeight;\n        if (typeof activePanelMaximumHeight === 'number') {\n            return activePanelMaximumHeight;\n        }\n        return super.__maximumHeight();\n    }\n    get panels() {\n        return this._model.panels;\n    }\n    get activePanel() {\n        return this._model.activePanel;\n    }\n    get size() {\n        return this._model.size;\n    }\n    get model() {\n        return this._model;\n    }\n    get locked() {\n        return this._model.locked;\n    }\n    set locked(value) {\n        this._model.locked = value;\n    }\n    get header() {\n        return this._model.header;\n    }\n    constructor(accessor, id, options) {\n        var _a, _b, _c, _d, _e, _f;\n        super(id, 'groupview_default', {\n            minimumHeight: (_b = (_a = options.constraints) === null || _a === void 0 ? void 0 : _a.minimumHeight) !== null && _b !== void 0 ? _b : MINIMUM_DOCKVIEW_GROUP_PANEL_HEIGHT,\n            minimumWidth: (_d = (_c = options.constraints) === null || _c === void 0 ? void 0 : _c.maximumHeight) !== null && _d !== void 0 ? _d : MINIMUM_DOCKVIEW_GROUP_PANEL_WIDTH,\n            maximumHeight: (_e = options.constraints) === null || _e === void 0 ? void 0 : _e.maximumHeight,\n            maximumWidth: (_f = options.constraints) === null || _f === void 0 ? void 0 : _f.maximumWidth,\n        }, new DockviewGroupPanelApiImpl(id, accessor));\n        this.api.initialize(this); // cannot use 'this' after after 'super' call\n        this._model = new DockviewGroupPanelModel(this.element, accessor, id, options, this);\n    }\n    focus() {\n        if (!this.api.isActive) {\n            this.api.setActive();\n        }\n        super.focus();\n    }\n    initialize() {\n        this._model.initialize();\n    }\n    setActive(isActive) {\n        super.setActive(isActive);\n        this.model.setActive(isActive);\n    }\n    layout(width, height) {\n        super.layout(width, height);\n        this.model.layout(width, height);\n    }\n    getComponent() {\n        return this._model;\n    }\n    toJSON() {\n        return this.model.toJSON();\n    }\n}\n","import { Emitter } from '../events';\nimport { GridviewPanelApiImpl } from './gridviewPanelApi';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nexport class DockviewPanelApiImpl extends GridviewPanelApiImpl {\n    get location() {\n        return this.group.api.location;\n    }\n    get title() {\n        return this.panel.title;\n    }\n    get isGroupActive() {\n        return this.group.isActive;\n    }\n    get renderer() {\n        return this.panel.renderer;\n    }\n    set group(value) {\n        const oldGroup = this._group;\n        if (this._group !== value) {\n            this._group = value;\n            this._onDidGroupChange.fire({});\n            this.setupGroupEventListeners(oldGroup);\n            this._onDidLocationChange.fire({\n                location: this.group.api.location,\n            });\n        }\n    }\n    get group() {\n        return this._group;\n    }\n    get tabComponent() {\n        return this._tabComponent;\n    }\n    constructor(panel, group, accessor, component, tabComponent) {\n        super(panel.id, component);\n        this.panel = panel;\n        this.accessor = accessor;\n        this._onDidTitleChange = new Emitter();\n        this.onDidTitleChange = this._onDidTitleChange.event;\n        this._onDidActiveGroupChange = new Emitter();\n        this.onDidActiveGroupChange = this._onDidActiveGroupChange.event;\n        this._onDidGroupChange = new Emitter();\n        this.onDidGroupChange = this._onDidGroupChange.event;\n        this._onDidRendererChange = new Emitter();\n        this.onDidRendererChange = this._onDidRendererChange.event;\n        this._onDidLocationChange = new Emitter();\n        this.onDidLocationChange = this._onDidLocationChange.event;\n        this.groupEventsDisposable = new MutableDisposable();\n        this._tabComponent = tabComponent;\n        this.initialize(panel);\n        this._group = group;\n        this.setupGroupEventListeners();\n        this.addDisposables(this.groupEventsDisposable, this._onDidRendererChange, this._onDidTitleChange, this._onDidGroupChange, this._onDidActiveGroupChange, this._onDidLocationChange);\n    }\n    getWindow() {\n        return this.group.api.getWindow();\n    }\n    moveTo(options) {\n        var _a, _b;\n        this.accessor.moveGroupOrPanel({\n            from: { groupId: this._group.id, panelId: this.panel.id },\n            to: {\n                group: (_a = options.group) !== null && _a !== void 0 ? _a : this._group,\n                position: options.group\n                    ? (_b = options.position) !== null && _b !== void 0 ? _b : 'center'\n                    : 'center',\n                index: options.index,\n            },\n        });\n    }\n    setTitle(title) {\n        this.panel.setTitle(title);\n    }\n    setRenderer(renderer) {\n        this.panel.setRenderer(renderer);\n    }\n    close() {\n        this.group.model.closePanel(this.panel);\n    }\n    maximize() {\n        this.group.api.maximize();\n    }\n    isMaximized() {\n        return this.group.api.isMaximized();\n    }\n    exitMaximized() {\n        this.group.api.exitMaximized();\n    }\n    setupGroupEventListeners(previousGroup) {\n        var _a;\n        let _trackGroupActive = (_a = previousGroup === null || previousGroup === void 0 ? void 0 : previousGroup.isActive) !== null && _a !== void 0 ? _a : false; // prevent duplicate events with same state\n        this.groupEventsDisposable.value = new CompositeDisposable(this.group.api.onDidVisibilityChange((event) => {\n            const hasBecomeHidden = !event.isVisible && this.isVisible;\n            const hasBecomeVisible = event.isVisible && !this.isVisible;\n            const isActivePanel = this.group.model.isPanelActive(this.panel);\n            if (hasBecomeHidden || (hasBecomeVisible && isActivePanel)) {\n                this._onDidVisibilityChange.fire(event);\n            }\n        }), this.group.api.onDidLocationChange((event) => {\n            if (this.group !== this.panel.group) {\n                return;\n            }\n            this._onDidLocationChange.fire(event);\n        }), this.group.api.onDidActiveChange(() => {\n            if (this.group !== this.panel.group) {\n                return;\n            }\n            if (_trackGroupActive !== this.isGroupActive) {\n                _trackGroupActive = this.isGroupActive;\n                this._onDidActiveGroupChange.fire({\n                    isActive: this.isGroupActive,\n                });\n            }\n        }));\n    }\n}\n","import { DockviewPanelApiImpl, } from '../api/dockviewPanelApi';\nimport { CompositeDisposable } from '../lifecycle';\nimport { WillFocusEvent } from '../api/panelApi';\nexport class DockviewPanel extends CompositeDisposable {\n    get params() {\n        return this._params;\n    }\n    get title() {\n        return this._title;\n    }\n    get group() {\n        return this._group;\n    }\n    get renderer() {\n        var _a;\n        return (_a = this._renderer) !== null && _a !== void 0 ? _a : this.accessor.renderer;\n    }\n    get minimumWidth() {\n        return this._minimumWidth;\n    }\n    get minimumHeight() {\n        return this._minimumHeight;\n    }\n    get maximumWidth() {\n        return this._maximumWidth;\n    }\n    get maximumHeight() {\n        return this._maximumHeight;\n    }\n    constructor(id, component, tabComponent, accessor, containerApi, group, view, options) {\n        super();\n        this.id = id;\n        this.accessor = accessor;\n        this.containerApi = containerApi;\n        this.view = view;\n        this._renderer = options.renderer;\n        this._group = group;\n        this._minimumWidth = options.minimumWidth;\n        this._minimumHeight = options.minimumHeight;\n        this._maximumWidth = options.maximumWidth;\n        this._maximumHeight = options.maximumHeight;\n        this.api = new DockviewPanelApiImpl(this, this._group, accessor, component, tabComponent);\n        this.addDisposables(this.api.onActiveChange(() => {\n            accessor.setActivePanel(this);\n        }), this.api.onDidSizeChange((event) => {\n            // forward the resize event to the group since if you want to resize a panel\n            // you are actually just resizing the panels parent which is the group\n            this.group.api.setSize(event);\n        }), this.api.onDidRendererChange(() => {\n            this.group.model.rerender(this);\n        }));\n    }\n    init(params) {\n        this._params = params.params;\n        this.view.init(Object.assign(Object.assign({}, params), { api: this.api, containerApi: this.containerApi }));\n        this.setTitle(params.title);\n    }\n    focus() {\n        const event = new WillFocusEvent();\n        this.api._onWillFocus.fire(event);\n        if (event.defaultPrevented) {\n            return;\n        }\n        if (!this.api.isActive) {\n            this.api.setActive();\n        }\n    }\n    toJSON() {\n        return {\n            id: this.id,\n            contentComponent: this.view.contentComponent,\n            tabComponent: this.view.tabComponent,\n            params: Object.keys(this._params || {}).length > 0\n                ? this._params\n                : undefined,\n            title: this.title,\n            renderer: this._renderer,\n            minimumHeight: this._minimumHeight,\n            maximumHeight: this._maximumHeight,\n            minimumWidth: this._minimumWidth,\n            maximumWidth: this._maximumWidth,\n        };\n    }\n    setTitle(title) {\n        const didTitleChange = title !== this.title;\n        if (didTitleChange) {\n            this._title = title;\n            this.api._onDidTitleChange.fire({ title });\n        }\n    }\n    setRenderer(renderer) {\n        const didChange = renderer !== this.renderer;\n        if (didChange) {\n            this._renderer = renderer;\n            this.api._onDidRendererChange.fire({\n                renderer: renderer,\n            });\n        }\n    }\n    update(event) {\n        var _a;\n        // merge the new parameters with the existing parameters\n        this._params = Object.assign(Object.assign({}, ((_a = this._params) !== null && _a !== void 0 ? _a : {})), event.params);\n        /**\n         * delete new keys that have a value of undefined,\n         * allow values of null\n         */\n        for (const key of Object.keys(event.params)) {\n            if (event.params[key] === undefined) {\n                delete this._params[key];\n            }\n        }\n        // update the view with the updated props\n        this.view.update({\n            params: this._params,\n        });\n    }\n    updateParentGroup(group, options) {\n        this._group = group;\n        this.api.group = this._group;\n        const isPanelVisible = this._group.model.isPanelActive(this);\n        const isActive = this.group.api.isActive && isPanelVisible;\n        if (!(options === null || options === void 0 ? void 0 : options.skipSetActive)) {\n            if (this.api.isActive !== isActive) {\n                this.api._onDidActiveChange.fire({\n                    isActive: this.group.api.isActive && isPanelVisible,\n                });\n            }\n        }\n        if (this.api.isVisible !== isPanelVisible) {\n            this.api._onDidVisibilityChange.fire({\n                isVisible: isPanelVisible,\n            });\n        }\n    }\n    runEvents() {\n        const isPanelVisible = this._group.model.isPanelActive(this);\n        const isActive = this.group.api.isActive && isPanelVisible;\n        if (this.api.isActive !== isActive) {\n            this.api._onDidActiveChange.fire({\n                isActive: this.group.api.isActive && isPanelVisible,\n            });\n        }\n        if (this.api.isVisible !== isPanelVisible) {\n            this.api._onDidVisibilityChange.fire({\n                isVisible: isPanelVisible,\n            });\n        }\n    }\n    layout(width, height) {\n        // TODO: Can we somehow do height without header height or indicate what the header height is?\n        this.api._onDidDimensionChange.fire({\n            width,\n            height: height,\n        });\n        this.view.layout(width, height);\n    }\n    dispose() {\n        this.api.dispose();\n        this.view.dispose();\n    }\n}\n","const createSvgElementFromPath = (params) => {\n    const svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n    svg.setAttributeNS(null, 'height', params.height);\n    svg.setAttributeNS(null, 'width', params.width);\n    svg.setAttributeNS(null, 'viewBox', params.viewbox);\n    svg.setAttributeNS(null, 'aria-hidden', 'false');\n    svg.setAttributeNS(null, 'focusable', 'false');\n    svg.classList.add('dv-svg');\n    const path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n    path.setAttributeNS(null, 'd', params.path);\n    svg.appendChild(path);\n    return svg;\n};\nexport const createCloseButton = () => createSvgElementFromPath({\n    width: '11',\n    height: '11',\n    viewbox: '0 0 28 28',\n    path: 'M2.1 27.3L0 25.2L11.55 13.65L0 2.1L2.1 0L13.65 11.55L25.2 0L27.3 2.1L15.75 13.65L27.3 25.2L25.2 27.3L13.65 15.75L2.1 27.3Z',\n});\nexport const createExpandMoreButton = () => createSvgElementFromPath({\n    width: '11',\n    height: '11',\n    viewbox: '0 0 24 15',\n    path: 'M12 14.15L0 2.15L2.15 0L12 9.9L21.85 0.0499992L24 2.2L12 14.15Z',\n});\nexport const createChevronRightButton = () => createSvgElementFromPath({\n    width: '11',\n    height: '11',\n    viewbox: '0 0 15 25',\n    path: 'M2.15 24.1L0 21.95L9.9 12.05L0 2.15L2.15 0L14.2 12.05L2.15 24.1Z',\n});\n","import { CompositeDisposable } from '../../../lifecycle';\nimport { addDisposableListener } from '../../../events';\nimport { createCloseButton } from '../../../svg';\nexport class DefaultTab extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor() {\n        super();\n        this._element = document.createElement('div');\n        this._element.className = 'dv-default-tab';\n        this._content = document.createElement('div');\n        this._content.className = 'dv-default-tab-content';\n        this.action = document.createElement('div');\n        this.action.className = 'dv-default-tab-action';\n        this.action.appendChild(createCloseButton());\n        this._element.appendChild(this._content);\n        this._element.appendChild(this.action);\n        this.addDisposables(addDisposableListener(this.action, 'pointerdown', (ev) => {\n            ev.preventDefault();\n        }));\n        this.render();\n    }\n    init(params) {\n        this._title = params.title;\n        this.addDisposables(params.api.onDidTitleChange((event) => {\n            this._title = event.title;\n            this.render();\n        }), addDisposableListener(this.action, 'pointerdown', (ev) => {\n            ev.preventDefault();\n        }), addDisposableListener(this.action, 'click', (ev) => {\n            if (ev.defaultPrevented) {\n                return;\n            }\n            ev.preventDefault();\n            params.api.close();\n        }));\n        this.render();\n    }\n    render() {\n        var _a;\n        if (this._content.textContent !== this._title) {\n            this._content.textContent = (_a = this._title) !== null && _a !== void 0 ? _a : '';\n        }\n    }\n}\n","import { DefaultTab } from './components/tab/defaultTab';\nexport class DockviewPanelModel {\n    get content() {\n        return this._content;\n    }\n    get tab() {\n        return this._tab;\n    }\n    constructor(accessor, id, contentComponent, tabComponent) {\n        this.accessor = accessor;\n        this.id = id;\n        this.contentComponent = contentComponent;\n        this.tabComponent = tabComponent;\n        this._content = this.createContentComponent(this.id, contentComponent);\n        this._tab = this.createTabComponent(this.id, tabComponent);\n    }\n    init(params) {\n        this.content.init(params);\n        this.tab.init(params);\n    }\n    updateParentGroup(_group, _isPanelVisible) {\n        // noop\n    }\n    layout(width, height) {\n        var _a, _b;\n        (_b = (_a = this.content).layout) === null || _b === void 0 ? void 0 : _b.call(_a, width, height);\n    }\n    update(event) {\n        var _a, _b, _c, _d;\n        (_b = (_a = this.content).update) === null || _b === void 0 ? void 0 : _b.call(_a, event);\n        (_d = (_c = this.tab).update) === null || _d === void 0 ? void 0 : _d.call(_c, event);\n    }\n    dispose() {\n        var _a, _b, _c, _d;\n        (_b = (_a = this.content).dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n        (_d = (_c = this.tab).dispose) === null || _d === void 0 ? void 0 : _d.call(_c);\n    }\n    createContentComponent(id, componentName) {\n        return this.accessor.options.createComponent({\n            id,\n            name: componentName,\n        });\n    }\n    createTabComponent(id, componentName) {\n        const name = componentName !== null && componentName !== void 0 ? componentName : this.accessor.options.defaultTabComponent;\n        if (name) {\n            if (this.accessor.options.createTabComponent) {\n                const component = this.accessor.options.createTabComponent({\n                    id,\n                    name,\n                });\n                if (component) {\n                    return component;\n                }\n                else {\n                    return new DefaultTab();\n                }\n            }\n            console.warn(`dockview: tabComponent '${componentName}' was not found. falling back to the default tab.`);\n        }\n        return new DefaultTab();\n    }\n}\n","import { DockviewPanel } from './dockviewPanel';\nimport { DockviewPanelModel } from './dockviewPanelModel';\nimport { DockviewApi } from '../api/component.api';\nexport class DefaultDockviewDeserialzier {\n    constructor(accessor) {\n        this.accessor = accessor;\n    }\n    fromJSON(panelData, group) {\n        var _a, _b;\n        const panelId = panelData.id;\n        const params = panelData.params;\n        const title = panelData.title;\n        const viewData = panelData.view;\n        const contentComponent = viewData\n            ? viewData.content.id\n            : (_a = panelData.contentComponent) !== null && _a !== void 0 ? _a : 'unknown';\n        const tabComponent = viewData\n            ? (_b = viewData.tab) === null || _b === void 0 ? void 0 : _b.id\n            : panelData.tabComponent;\n        const view = new DockviewPanelModel(this.accessor, panelId, contentComponent, tabComponent);\n        const panel = new DockviewPanel(panelId, contentComponent, tabComponent, this.accessor, new DockviewApi(this.accessor), group, view, {\n            renderer: panelData.renderer,\n            minimumWidth: panelData.minimumWidth,\n            minimumHeight: panelData.minimumHeight,\n            maximumWidth: panelData.maximumWidth,\n            maximumHeight: panelData.maximumHeight,\n        });\n        panel.init({\n            title: title !== null && title !== void 0 ? title : panelId,\n            params: params !== null && params !== void 0 ? params : {},\n        });\n        return panel;\n    }\n}\n","import { CompositeDisposable } from '../../../lifecycle';\nexport class Watermark extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor() {\n        super();\n        this._element = document.createElement('div');\n        this._element.className = 'dv-watermark';\n    }\n    init(_params) {\n        // noop\n    }\n}\n","import { disableIframePointEvents, quasiDefaultPrevented, toggleClass, } from '../dom';\nimport { Emitter, addDisposableListener, addDisposableWindowListener, } from '../events';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nimport { clamp } from '../math';\nclass AriaLevelTracker {\n    constructor() {\n        this._orderedList = [];\n    }\n    push(element) {\n        this._orderedList = [\n            ...this._orderedList.filter((item) => item !== element),\n            element,\n        ];\n        this.update();\n    }\n    destroy(element) {\n        this._orderedList = this._orderedList.filter((item) => item !== element);\n        this.update();\n    }\n    update() {\n        for (let i = 0; i < this._orderedList.length; i++) {\n            this._orderedList[i].setAttribute('aria-level', `${i}`);\n            this._orderedList[i].style.zIndex = `calc(var(--dv-overlay-z-index, 999) + ${i * 2})`;\n        }\n    }\n}\nconst arialLevelTracker = new AriaLevelTracker();\nexport class Overlay extends CompositeDisposable {\n    set minimumInViewportWidth(value) {\n        this.options.minimumInViewportWidth = value;\n    }\n    set minimumInViewportHeight(value) {\n        this.options.minimumInViewportHeight = value;\n    }\n    get element() {\n        return this._element;\n    }\n    get isVisible() {\n        return this._isVisible;\n    }\n    constructor(options) {\n        super();\n        this.options = options;\n        this._element = document.createElement('div');\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._onDidChangeEnd = new Emitter();\n        this.onDidChangeEnd = this._onDidChangeEnd.event;\n        this.addDisposables(this._onDidChange, this._onDidChangeEnd);\n        this._element.className = 'dv-resize-container';\n        this._isVisible = true;\n        this.setupResize('top');\n        this.setupResize('bottom');\n        this.setupResize('left');\n        this.setupResize('right');\n        this.setupResize('topleft');\n        this.setupResize('topright');\n        this.setupResize('bottomleft');\n        this.setupResize('bottomright');\n        this._element.appendChild(this.options.content);\n        this.options.container.appendChild(this._element);\n        // if input bad resize within acceptable boundaries\n        this.setBounds(Object.assign(Object.assign(Object.assign(Object.assign({ height: this.options.height, width: this.options.width }, ('top' in this.options && { top: this.options.top })), ('bottom' in this.options && { bottom: this.options.bottom })), ('left' in this.options && { left: this.options.left })), ('right' in this.options && { right: this.options.right })));\n        arialLevelTracker.push(this._element);\n    }\n    setVisible(isVisible) {\n        if (isVisible === this.isVisible) {\n            return;\n        }\n        this._isVisible = isVisible;\n        toggleClass(this.element, 'dv-hidden', !this.isVisible);\n    }\n    bringToFront() {\n        arialLevelTracker.push(this._element);\n    }\n    setBounds(bounds = {}) {\n        if (typeof bounds.height === 'number') {\n            this._element.style.height = `${bounds.height}px`;\n        }\n        if (typeof bounds.width === 'number') {\n            this._element.style.width = `${bounds.width}px`;\n        }\n        if ('top' in bounds && typeof bounds.top === 'number') {\n            this._element.style.top = `${bounds.top}px`;\n            this._element.style.bottom = 'auto';\n            this.verticalAlignment = 'top';\n        }\n        if ('bottom' in bounds && typeof bounds.bottom === 'number') {\n            this._element.style.bottom = `${bounds.bottom}px`;\n            this._element.style.top = 'auto';\n            this.verticalAlignment = 'bottom';\n        }\n        if ('left' in bounds && typeof bounds.left === 'number') {\n            this._element.style.left = `${bounds.left}px`;\n            this._element.style.right = 'auto';\n            this.horiziontalAlignment = 'left';\n        }\n        if ('right' in bounds && typeof bounds.right === 'number') {\n            this._element.style.right = `${bounds.right}px`;\n            this._element.style.left = 'auto';\n            this.horiziontalAlignment = 'right';\n        }\n        const containerRect = this.options.container.getBoundingClientRect();\n        const overlayRect = this._element.getBoundingClientRect();\n        // region: ensure bounds within allowable limits\n        // a minimum width of minimumViewportWidth must be inside the viewport\n        const xOffset = Math.max(0, this.getMinimumWidth(overlayRect.width));\n        // a minimum height of minimumViewportHeight must be inside the viewport\n        const yOffset = Math.max(0, this.getMinimumHeight(overlayRect.height));\n        if (this.verticalAlignment === 'top') {\n            const top = clamp(overlayRect.top - containerRect.top, -yOffset, Math.max(0, containerRect.height - overlayRect.height + yOffset));\n            this._element.style.top = `${top}px`;\n            this._element.style.bottom = 'auto';\n        }\n        if (this.verticalAlignment === 'bottom') {\n            const bottom = clamp(containerRect.bottom - overlayRect.bottom, -yOffset, Math.max(0, containerRect.height - overlayRect.height + yOffset));\n            this._element.style.bottom = `${bottom}px`;\n            this._element.style.top = 'auto';\n        }\n        if (this.horiziontalAlignment === 'left') {\n            const left = clamp(overlayRect.left - containerRect.left, -xOffset, Math.max(0, containerRect.width - overlayRect.width + xOffset));\n            this._element.style.left = `${left}px`;\n            this._element.style.right = 'auto';\n        }\n        if (this.horiziontalAlignment === 'right') {\n            const right = clamp(containerRect.right - overlayRect.right, -xOffset, Math.max(0, containerRect.width - overlayRect.width + xOffset));\n            this._element.style.right = `${right}px`;\n            this._element.style.left = 'auto';\n        }\n        this._onDidChange.fire();\n    }\n    toJSON() {\n        const container = this.options.container.getBoundingClientRect();\n        const element = this._element.getBoundingClientRect();\n        const result = {};\n        if (this.verticalAlignment === 'top') {\n            result.top = parseFloat(this._element.style.top);\n        }\n        else if (this.verticalAlignment === 'bottom') {\n            result.bottom = parseFloat(this._element.style.bottom);\n        }\n        else {\n            result.top = element.top - container.top;\n        }\n        if (this.horiziontalAlignment === 'left') {\n            result.left = parseFloat(this._element.style.left);\n        }\n        else if (this.horiziontalAlignment === 'right') {\n            result.right = parseFloat(this._element.style.right);\n        }\n        else {\n            result.left = element.left - container.left;\n        }\n        result.width = element.width;\n        result.height = element.height;\n        return result;\n    }\n    setupDrag(dragTarget, options = { inDragMode: false }) {\n        const move = new MutableDisposable();\n        const track = () => {\n            let offset = null;\n            const iframes = disableIframePointEvents();\n            move.value = new CompositeDisposable({\n                dispose: () => {\n                    iframes.release();\n                },\n            }, addDisposableWindowListener(window, 'pointermove', (e) => {\n                const containerRect = this.options.container.getBoundingClientRect();\n                const x = e.clientX - containerRect.left;\n                const y = e.clientY - containerRect.top;\n                toggleClass(this._element, 'dv-resize-container-dragging', true);\n                const overlayRect = this._element.getBoundingClientRect();\n                if (offset === null) {\n                    offset = {\n                        x: e.clientX - overlayRect.left,\n                        y: e.clientY - overlayRect.top,\n                    };\n                }\n                const xOffset = Math.max(0, this.getMinimumWidth(overlayRect.width));\n                const yOffset = Math.max(0, this.getMinimumHeight(overlayRect.height));\n                const top = clamp(y - offset.y, -yOffset, Math.max(0, containerRect.height - overlayRect.height + yOffset));\n                const bottom = clamp(offset.y -\n                    y +\n                    containerRect.height -\n                    overlayRect.height, -yOffset, Math.max(0, containerRect.height - overlayRect.height + yOffset));\n                const left = clamp(x - offset.x, -xOffset, Math.max(0, containerRect.width - overlayRect.width + xOffset));\n                const right = clamp(offset.x - x + containerRect.width - overlayRect.width, -xOffset, Math.max(0, containerRect.width - overlayRect.width + xOffset));\n                const bounds = {};\n                // Anchor to top or to bottom depending on which one is closer\n                if (top <= bottom) {\n                    bounds.top = top;\n                }\n                else {\n                    bounds.bottom = bottom;\n                }\n                // Anchor to left or to right depending on which one is closer\n                if (left <= right) {\n                    bounds.left = left;\n                }\n                else {\n                    bounds.right = right;\n                }\n                this.setBounds(bounds);\n            }), addDisposableWindowListener(window, 'pointerup', () => {\n                toggleClass(this._element, 'dv-resize-container-dragging', false);\n                move.dispose();\n                this._onDidChangeEnd.fire();\n            }));\n        };\n        this.addDisposables(move, addDisposableListener(dragTarget, 'pointerdown', (event) => {\n            if (event.defaultPrevented) {\n                event.preventDefault();\n                return;\n            }\n            // if somebody has marked this event then treat as a defaultPrevented\n            // without actually calling event.preventDefault()\n            if (quasiDefaultPrevented(event)) {\n                return;\n            }\n            track();\n        }), addDisposableListener(this.options.content, 'pointerdown', (event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            // if somebody has marked this event then treat as a defaultPrevented\n            // without actually calling event.preventDefault()\n            if (quasiDefaultPrevented(event)) {\n                return;\n            }\n            if (event.shiftKey) {\n                track();\n            }\n        }), addDisposableListener(this.options.content, 'pointerdown', () => {\n            arialLevelTracker.push(this._element);\n        }, true));\n        if (options.inDragMode) {\n            track();\n        }\n    }\n    setupResize(direction) {\n        const resizeHandleElement = document.createElement('div');\n        resizeHandleElement.className = `dv-resize-handle-${direction}`;\n        this._element.appendChild(resizeHandleElement);\n        const move = new MutableDisposable();\n        this.addDisposables(move, addDisposableListener(resizeHandleElement, 'pointerdown', (e) => {\n            e.preventDefault();\n            let startPosition = null;\n            const iframes = disableIframePointEvents();\n            move.value = new CompositeDisposable(addDisposableWindowListener(window, 'pointermove', (e) => {\n                const containerRect = this.options.container.getBoundingClientRect();\n                const overlayRect = this._element.getBoundingClientRect();\n                const y = e.clientY - containerRect.top;\n                const x = e.clientX - containerRect.left;\n                if (startPosition === null) {\n                    // record the initial dimensions since as all subsequence moves are relative to this\n                    startPosition = {\n                        originalY: y,\n                        originalHeight: overlayRect.height,\n                        originalX: x,\n                        originalWidth: overlayRect.width,\n                    };\n                }\n                let top = undefined;\n                let bottom = undefined;\n                let height = undefined;\n                let left = undefined;\n                let right = undefined;\n                let width = undefined;\n                const moveTop = () => {\n                    top = clamp(y, -Number.MAX_VALUE, startPosition.originalY +\n                        startPosition.originalHeight >\n                        containerRect.height\n                        ? this.getMinimumHeight(containerRect.height)\n                        : Math.max(0, startPosition.originalY +\n                            startPosition.originalHeight -\n                            Overlay.MINIMUM_HEIGHT));\n                    height =\n                        startPosition.originalY +\n                            startPosition.originalHeight -\n                            top;\n                    bottom = containerRect.height - top - height;\n                };\n                const moveBottom = () => {\n                    top =\n                        startPosition.originalY -\n                            startPosition.originalHeight;\n                    height = clamp(y - top, top < 0 &&\n                        typeof this.options\n                            .minimumInViewportHeight === 'number'\n                        ? -top +\n                            this.options.minimumInViewportHeight\n                        : Overlay.MINIMUM_HEIGHT, Number.MAX_VALUE);\n                    bottom = containerRect.height - top - height;\n                };\n                const moveLeft = () => {\n                    left = clamp(x, -Number.MAX_VALUE, startPosition.originalX +\n                        startPosition.originalWidth >\n                        containerRect.width\n                        ? this.getMinimumWidth(containerRect.width)\n                        : Math.max(0, startPosition.originalX +\n                            startPosition.originalWidth -\n                            Overlay.MINIMUM_WIDTH));\n                    width =\n                        startPosition.originalX +\n                            startPosition.originalWidth -\n                            left;\n                    right = containerRect.width - left - width;\n                };\n                const moveRight = () => {\n                    left =\n                        startPosition.originalX -\n                            startPosition.originalWidth;\n                    width = clamp(x - left, left < 0 &&\n                        typeof this.options\n                            .minimumInViewportWidth === 'number'\n                        ? -left +\n                            this.options.minimumInViewportWidth\n                        : Overlay.MINIMUM_WIDTH, Number.MAX_VALUE);\n                    right = containerRect.width - left - width;\n                };\n                switch (direction) {\n                    case 'top':\n                        moveTop();\n                        break;\n                    case 'bottom':\n                        moveBottom();\n                        break;\n                    case 'left':\n                        moveLeft();\n                        break;\n                    case 'right':\n                        moveRight();\n                        break;\n                    case 'topleft':\n                        moveTop();\n                        moveLeft();\n                        break;\n                    case 'topright':\n                        moveTop();\n                        moveRight();\n                        break;\n                    case 'bottomleft':\n                        moveBottom();\n                        moveLeft();\n                        break;\n                    case 'bottomright':\n                        moveBottom();\n                        moveRight();\n                        break;\n                }\n                const bounds = {};\n                // Anchor to top or to bottom depending on which one is closer\n                if (top <= bottom) {\n                    bounds.top = top;\n                }\n                else {\n                    bounds.bottom = bottom;\n                }\n                // Anchor to left or to right depending on which one is closer\n                if (left <= right) {\n                    bounds.left = left;\n                }\n                else {\n                    bounds.right = right;\n                }\n                bounds.height = height;\n                bounds.width = width;\n                this.setBounds(bounds);\n            }), {\n                dispose: () => {\n                    iframes.release();\n                },\n            }, addDisposableWindowListener(window, 'pointerup', () => {\n                move.dispose();\n                this._onDidChangeEnd.fire();\n            }));\n        }));\n    }\n    getMinimumWidth(width) {\n        if (typeof this.options.minimumInViewportWidth === 'number') {\n            return width - this.options.minimumInViewportWidth;\n        }\n        return 0;\n    }\n    getMinimumHeight(height) {\n        if (typeof this.options.minimumInViewportHeight === 'number') {\n            return height - this.options.minimumInViewportHeight;\n        }\n        return 0;\n    }\n    dispose() {\n        arialLevelTracker.destroy(this._element);\n        this._element.remove();\n        super.dispose();\n    }\n}\nOverlay.MINIMUM_HEIGHT = 20;\nOverlay.MINIMUM_WIDTH = 20;\n","import { CompositeDisposable } from '../lifecycle';\nexport class DockviewFloatingGroupPanel extends CompositeDisposable {\n    constructor(group, overlay) {\n        super();\n        this.group = group;\n        this.overlay = overlay;\n        this.addDisposables(overlay);\n    }\n    position(bounds) {\n        this.overlay.setBounds(bounds);\n    }\n}\n","export const DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE = 100;\nexport const DEFAULT_FLOATING_GROUP_POSITION = { left: 100, top: 100, width: 300, height: 300 };\n","import { DragAndDropObserver } from '../dnd/dnd';\nimport { getDomNodePagePosition, toggleClass } from '../dom';\nimport { CompositeDisposable, Disposable, MutableDisposable, } from '../lifecycle';\nfunction createFocusableElement() {\n    const element = document.createElement('div');\n    element.tabIndex = -1;\n    return element;\n}\nexport class OverlayRenderContainer extends CompositeDisposable {\n    constructor(element, accessor) {\n        super();\n        this.element = element;\n        this.accessor = accessor;\n        this.map = {};\n        this._disposed = false;\n        this.addDisposables(Disposable.from(() => {\n            for (const value of Object.values(this.map)) {\n                value.disposable.dispose();\n                value.destroy.dispose();\n            }\n            this._disposed = true;\n        }));\n    }\n    detatch(panel) {\n        if (this.map[panel.api.id]) {\n            const { disposable, destroy } = this.map[panel.api.id];\n            disposable.dispose();\n            destroy.dispose();\n            delete this.map[panel.api.id];\n            return true;\n        }\n        return false;\n    }\n    attach(options) {\n        const { panel, referenceContainer } = options;\n        if (!this.map[panel.api.id]) {\n            const element = createFocusableElement();\n            element.className = 'dv-render-overlay';\n            this.map[panel.api.id] = {\n                panel,\n                disposable: Disposable.NONE,\n                destroy: Disposable.NONE,\n                element,\n            };\n        }\n        const focusContainer = this.map[panel.api.id].element;\n        if (panel.view.content.element.parentElement !== focusContainer) {\n            focusContainer.appendChild(panel.view.content.element);\n        }\n        if (focusContainer.parentElement !== this.element) {\n            this.element.appendChild(focusContainer);\n        }\n        const resize = () => {\n            // TODO propagate position to avoid getDomNodePagePosition calls, possible performance bottleneck?\n            const box = getDomNodePagePosition(referenceContainer.element);\n            const box2 = getDomNodePagePosition(this.element);\n            focusContainer.style.left = `${box.left - box2.left}px`;\n            focusContainer.style.top = `${box.top - box2.top}px`;\n            focusContainer.style.width = `${box.width}px`;\n            focusContainer.style.height = `${box.height}px`;\n            toggleClass(focusContainer, 'dv-render-overlay-float', panel.group.api.location.type === 'floating');\n        };\n        const visibilityChanged = () => {\n            if (panel.api.isVisible) {\n                resize();\n            }\n            focusContainer.style.display = panel.api.isVisible ? '' : 'none';\n        };\n        const observerDisposable = new MutableDisposable();\n        const correctLayerPosition = () => {\n            if (panel.api.location.type === 'floating') {\n                queueMicrotask(() => {\n                    const floatingGroup = this.accessor.floatingGroups.find((group) => group.group === panel.api.group);\n                    if (!floatingGroup) {\n                        return;\n                    }\n                    const element = floatingGroup.overlay.element;\n                    const update = () => {\n                        const level = Number(element.getAttribute('aria-level'));\n                        focusContainer.style.zIndex = `calc(var(--dv-overlay-z-index, 999) + ${level * 2 + 1})`;\n                    };\n                    const observer = new MutationObserver(() => {\n                        update();\n                    });\n                    observerDisposable.value = Disposable.from(() => observer.disconnect());\n                    observer.observe(element, {\n                        attributeFilter: ['aria-level'],\n                        attributes: true,\n                    });\n                    update();\n                });\n            }\n            else {\n                focusContainer.style.zIndex = ''; // reset the z-index, perhaps CSS will take over here\n            }\n        };\n        const disposable = new CompositeDisposable(observerDisposable, \n        /**\n         * since container is positioned absoutely we must explicitly forward\n         * the dnd events for the expect behaviours to continue to occur in terms of dnd\n         *\n         * the dnd observer does not need to be conditional on whether the panel is visible since\n         * non-visible panels are 'display: none' and in such case the dnd observer will not fire.\n         */\n        new DragAndDropObserver(focusContainer, {\n            onDragEnd: (e) => {\n                referenceContainer.dropTarget.dnd.onDragEnd(e);\n            },\n            onDragEnter: (e) => {\n                referenceContainer.dropTarget.dnd.onDragEnter(e);\n            },\n            onDragLeave: (e) => {\n                referenceContainer.dropTarget.dnd.onDragLeave(e);\n            },\n            onDrop: (e) => {\n                referenceContainer.dropTarget.dnd.onDrop(e);\n            },\n            onDragOver: (e) => {\n                referenceContainer.dropTarget.dnd.onDragOver(e);\n            },\n        }), panel.api.onDidVisibilityChange(() => {\n            /**\n             * Control the visibility of the content, however even when not visible (display: none)\n             * the content is still maintained within the DOM hence DOM specific attributes\n             * such as scroll position are maintained when next made visible.\n             */\n            visibilityChanged();\n        }), panel.api.onDidDimensionsChange(() => {\n            if (!panel.api.isVisible) {\n                return;\n            }\n            resize();\n        }), panel.api.onDidLocationChange(() => {\n            correctLayerPosition();\n        }));\n        this.map[panel.api.id].destroy = Disposable.from(() => {\n            var _a;\n            if (panel.view.content.element.parentElement === focusContainer) {\n                focusContainer.removeChild(panel.view.content.element);\n            }\n            (_a = focusContainer.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(focusContainer);\n        });\n        correctLayerPosition();\n        queueMicrotask(() => {\n            if (this.isDisposed) {\n                return;\n            }\n            /**\n             * wait until everything has finished in the current stack-frame call before\n             * calling the first resize as other size-altering events may still occur before\n             * the end of the stack-frame.\n             */\n            visibilityChanged();\n        });\n        // dispose of logic asoccciated with previous reference-container\n        this.map[panel.api.id].disposable.dispose();\n        // and reset the disposable to the active reference-container\n        this.map[panel.api.id].disposable = disposable;\n        return focusContainer;\n    }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { addStyles } from './dom';\nimport { Emitter, addDisposableWindowListener } from './events';\nimport { CompositeDisposable, Disposable } from './lifecycle';\nexport class PopoutWindow extends CompositeDisposable {\n    get window() {\n        var _a, _b;\n        return (_b = (_a = this._window) === null || _a === void 0 ? void 0 : _a.value) !== null && _b !== void 0 ? _b : null;\n    }\n    constructor(target, className, options) {\n        super();\n        this.target = target;\n        this.className = className;\n        this.options = options;\n        this._onWillClose = new Emitter();\n        this.onWillClose = this._onWillClose.event;\n        this._onDidClose = new Emitter();\n        this.onDidClose = this._onDidClose.event;\n        this._window = null;\n        this.addDisposables(this._onWillClose, this._onDidClose, {\n            dispose: () => {\n                this.close();\n            },\n        });\n    }\n    dimensions() {\n        if (!this._window) {\n            return null;\n        }\n        const left = this._window.value.screenX;\n        const top = this._window.value.screenY;\n        const width = this._window.value.innerWidth;\n        const height = this._window.value.innerHeight;\n        return { top, left, width, height };\n    }\n    close() {\n        var _a, _b;\n        if (this._window) {\n            this._onWillClose.fire();\n            (_b = (_a = this.options).onWillClose) === null || _b === void 0 ? void 0 : _b.call(_a, {\n                id: this.target,\n                window: this._window.value,\n            });\n            this._window.disposable.dispose();\n            this._window = null;\n            this._onDidClose.fire();\n        }\n    }\n    open() {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this._window) {\n                throw new Error('instance of popout window is already open');\n            }\n            const url = `${this.options.url}`;\n            const features = Object.entries({\n                top: this.options.top,\n                left: this.options.left,\n                width: this.options.width,\n                height: this.options.height,\n            })\n                .map(([key, value]) => `${key}=${value}`)\n                .join(',');\n            /**\n             * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/open\n             */\n            const externalWindow = window.open(url, this.target, features);\n            if (!externalWindow) {\n                /**\n                 * Popup blocked\n                 */\n                return null;\n            }\n            const disposable = new CompositeDisposable();\n            this._window = { value: externalWindow, disposable };\n            disposable.addDisposables(Disposable.from(() => {\n                externalWindow.close();\n            }), addDisposableWindowListener(window, 'beforeunload', () => {\n                /**\n                 * before the main window closes we should close this popup too\n                 * to be good citizens\n                 *\n                 * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/beforeunload_event\n                 */\n                this.close();\n            }));\n            const container = this.createPopoutWindowContainer();\n            if (this.className) {\n                container.classList.add(this.className);\n            }\n            (_b = (_a = this.options).onDidOpen) === null || _b === void 0 ? void 0 : _b.call(_a, {\n                id: this.target,\n                window: externalWindow,\n            });\n            return new Promise((resolve, reject) => {\n                externalWindow.addEventListener('unload', (e) => {\n                    // if page fails to load before unloading\n                    // this.close();\n                });\n                externalWindow.addEventListener('load', () => {\n                    /**\n                     * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/load_event\n                     */\n                    try {\n                        const externalDocument = externalWindow.document;\n                        externalDocument.title = document.title;\n                        externalDocument.body.appendChild(container);\n                        addStyles(externalDocument, window.document.styleSheets);\n                        /**\n                         * beforeunload must be registered after load for reasons I could not determine\n                         * otherwise the beforeunload event will not fire when the window is closed\n                         */\n                        addDisposableWindowListener(externalWindow, 'beforeunload', () => {\n                            /**\n                             * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/beforeunload_event\n                             */\n                            this.close();\n                        });\n                        resolve(container);\n                    }\n                    catch (err) {\n                        // only except this is the DOM isn't setup. e.g. in a in correctly configured test\n                        reject(err);\n                    }\n                });\n            });\n        });\n    }\n    createPopoutWindowContainer() {\n        const el = document.createElement('div');\n        el.classList.add('dv-popout-window');\n        el.id = 'dv-popout-window';\n        el.style.position = 'absolute';\n        el.style.width = '100%';\n        el.style.height = '100%';\n        el.style.top = '0px';\n        el.style.left = '0px';\n        return el;\n    }\n}\n","import { CompositeDisposable } from '../lifecycle';\nexport class StrictEventsSequencing extends CompositeDisposable {\n    constructor(accessor) {\n        super();\n        this.accessor = accessor;\n        this.init();\n    }\n    init() {\n        const panels = new Set();\n        const groups = new Set();\n        this.addDisposables(this.accessor.onDidAddPanel((panel) => {\n            if (panels.has(panel.api.id)) {\n                throw new Error(`dockview: Invalid event sequence. [onDidAddPanel] called for panel ${panel.api.id} but panel already exists`);\n            }\n            else {\n                panels.add(panel.api.id);\n            }\n        }), this.accessor.onDidRemovePanel((panel) => {\n            if (!panels.has(panel.api.id)) {\n                throw new Error(`dockview: Invalid event sequence. [onDidRemovePanel] called for panel ${panel.api.id} but panel does not exists`);\n            }\n            else {\n                panels.delete(panel.api.id);\n            }\n        }), this.accessor.onDidAddGroup((group) => {\n            if (groups.has(group.api.id)) {\n                throw new Error(`dockview: Invalid event sequence. [onDidAddGroup] called for group ${group.api.id} but group already exists`);\n            }\n            else {\n                groups.add(group.api.id);\n            }\n        }), this.accessor.onDidRemoveGroup((group) => {\n            if (!groups.has(group.api.id)) {\n                throw new Error(`dockview: Invalid event sequence. [onDidRemoveGroup] called for group ${group.api.id} but group does not exists`);\n            }\n            else {\n                groups.delete(group.api.id);\n            }\n        }));\n    }\n}\n","import { getRelativeLocation, getGridLocation, orthogonal, } from '../gridview/gridview';\nimport { directionToPosition, Droptarget, } from '../dnd/droptarget';\nimport { tail, sequenceEquals, remove } from '../array';\nimport { DockviewPanel } from './dockviewPanel';\nimport { CompositeDisposable, Disposable } from '../lifecycle';\nimport { Event, Emitter, addDisposableWindowListener } from '../events';\nimport { Watermark } from './components/watermark/watermark';\nimport { sequentialNumberGenerator } from '../math';\nimport { DefaultDockviewDeserialzier } from './deserializer';\nimport { DockviewUnhandledDragOverEvent, isGroupOptionsWithGroup, isGroupOptionsWithPanel, isPanelOptionsWithGroup, isPanelOptionsWithPanel, } from './options';\nimport { BaseGrid, toTarget, } from '../gridview/baseComponentGridview';\nimport { DockviewApi } from '../api/component.api';\nimport { Orientation } from '../splitview/splitview';\nimport { DockviewDidDropEvent, DockviewWillDropEvent, WillShowOverlayLocationEvent, } from './dockviewGroupPanelModel';\nimport { DockviewGroupPanel } from './dockviewGroupPanel';\nimport { DockviewPanelModel } from './dockviewPanelModel';\nimport { getPanelData } from '../dnd/dataTransfer';\nimport { Overlay } from '../overlay/overlay';\nimport { addTestId, getDockviewTheme, toggleClass, watchElementResize, } from '../dom';\nimport { DockviewFloatingGroupPanel } from './dockviewFloatingGroupPanel';\nimport { DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE, DEFAULT_FLOATING_GROUP_POSITION, } from '../constants';\nimport { OverlayRenderContainer, } from '../overlay/overlayRenderContainer';\nimport { PopoutWindow } from '../popoutWindow';\nimport { StrictEventsSequencing } from './strictEventsSequencing';\nconst DEFAULT_ROOT_OVERLAY_MODEL = {\n    activationSize: { type: 'pixels', value: 10 },\n    size: { type: 'pixels', value: 20 },\n};\nfunction moveGroupWithoutDestroying(options) {\n    const activePanel = options.from.activePanel;\n    const panels = [...options.from.panels].map((panel) => {\n        const removedPanel = options.from.model.removePanel(panel);\n        options.from.model.renderContainer.detatch(panel);\n        return removedPanel;\n    });\n    panels.forEach((panel) => {\n        options.to.model.openPanel(panel, {\n            skipSetActive: activePanel !== panel,\n            skipSetGroupActive: true,\n        });\n    });\n}\nexport class DockviewComponent extends BaseGrid {\n    get orientation() {\n        return this.gridview.orientation;\n    }\n    get totalPanels() {\n        return this.panels.length;\n    }\n    get panels() {\n        return this.groups.flatMap((group) => group.panels);\n    }\n    get options() {\n        return this._options;\n    }\n    get activePanel() {\n        const activeGroup = this.activeGroup;\n        if (!activeGroup) {\n            return undefined;\n        }\n        return activeGroup.activePanel;\n    }\n    get renderer() {\n        var _a;\n        return (_a = this.options.defaultRenderer) !== null && _a !== void 0 ? _a : 'onlyWhenVisible';\n    }\n    get api() {\n        return this._api;\n    }\n    get gap() {\n        return this.gridview.margin;\n    }\n    get floatingGroups() {\n        return this._floatingGroups;\n    }\n    constructor(parentElement, options) {\n        var _a;\n        super(parentElement, {\n            proportionalLayout: true,\n            orientation: Orientation.HORIZONTAL,\n            styles: options.hideBorders\n                ? { separatorBorder: 'transparent' }\n                : undefined,\n            disableAutoResizing: options.disableAutoResizing,\n            locked: options.locked,\n            margin: options.gap,\n            className: options.className,\n        });\n        this.nextGroupId = sequentialNumberGenerator();\n        this._deserializer = new DefaultDockviewDeserialzier(this);\n        this.watermark = null;\n        this._onWillDragPanel = new Emitter();\n        this.onWillDragPanel = this._onWillDragPanel.event;\n        this._onWillDragGroup = new Emitter();\n        this.onWillDragGroup = this._onWillDragGroup.event;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onWillDrop = new Emitter();\n        this.onWillDrop = this._onWillDrop.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        this._onUnhandledDragOverEvent = new Emitter();\n        this.onUnhandledDragOverEvent = this._onUnhandledDragOverEvent.event;\n        this._onDidRemovePanel = new Emitter();\n        this.onDidRemovePanel = this._onDidRemovePanel.event;\n        this._onDidAddPanel = new Emitter();\n        this.onDidAddPanel = this._onDidAddPanel.event;\n        this._onDidLayoutFromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutFromJSON.event;\n        this._onDidActivePanelChange = new Emitter();\n        this.onDidActivePanelChange = this._onDidActivePanelChange.event;\n        this._onDidMovePanel = new Emitter();\n        this.onDidMovePanel = this._onDidMovePanel.event;\n        this._onDidMaximizedGroupChange = new Emitter();\n        this.onDidMaximizedGroupChange = this._onDidMaximizedGroupChange.event;\n        this._floatingGroups = [];\n        this._popoutGroups = [];\n        this._onDidRemoveGroup = new Emitter();\n        this.onDidRemoveGroup = this._onDidRemoveGroup.event;\n        this._onDidAddGroup = new Emitter();\n        this.onDidAddGroup = this._onDidAddGroup.event;\n        this._onDidActiveGroupChange = new Emitter();\n        this.onDidActiveGroupChange = this._onDidActiveGroupChange.event;\n        this._moving = false;\n        this.overlayRenderContainer = new OverlayRenderContainer(this.gridview.element, this);\n        toggleClass(this.gridview.element, 'dv-dockview', true);\n        toggleClass(this.element, 'dv-debug', !!options.debug);\n        if (options.debug) {\n            this.addDisposables(new StrictEventsSequencing(this));\n        }\n        this.addDisposables(this.overlayRenderContainer, this._onWillDragPanel, this._onWillDragGroup, this._onWillShowOverlay, this._onDidActivePanelChange, this._onDidAddPanel, this._onDidRemovePanel, this._onDidLayoutFromJSON, this._onDidDrop, this._onWillDrop, this._onDidMovePanel, this._onDidAddGroup, this._onDidRemoveGroup, this._onDidActiveGroupChange, this._onUnhandledDragOverEvent, this._onDidMaximizedGroupChange, this.onDidViewVisibilityChangeMicroTaskQueue(() => {\n            this.updateWatermark();\n        }), this.onDidAdd((event) => {\n            if (!this._moving) {\n                this._onDidAddGroup.fire(event);\n            }\n        }), this.onDidRemove((event) => {\n            if (!this._moving) {\n                this._onDidRemoveGroup.fire(event);\n            }\n        }), this.onDidActiveChange((event) => {\n            if (!this._moving) {\n                this._onDidActiveGroupChange.fire(event);\n            }\n        }), this.onDidMaximizedChange((event) => {\n            this._onDidMaximizedGroupChange.fire({\n                group: event.panel,\n                isMaximized: event.isMaximized,\n            });\n        }), Event.any(this.onDidAdd, this.onDidRemove)(() => {\n            this.updateWatermark();\n        }), Event.any(this.onDidAddPanel, this.onDidRemovePanel, this.onDidAddGroup, this.onDidRemove, this.onDidMovePanel, this.onDidActivePanelChange)(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), Disposable.from(() => {\n            // iterate over a copy of the array since .dispose() mutates the original array\n            for (const group of [...this._floatingGroups]) {\n                group.dispose();\n            }\n            // iterate over a copy of the array since .dispose() mutates the original array\n            for (const group of [...this._popoutGroups]) {\n                group.disposable.dispose();\n            }\n        }));\n        this._options = options;\n        this._rootDropTarget = new Droptarget(this.element, {\n            canDisplayOverlay: (event, position) => {\n                const data = getPanelData();\n                if (data) {\n                    if (data.viewId !== this.id) {\n                        return false;\n                    }\n                    if (position === 'center') {\n                        // center drop target is only allowed if there are no panels in the grid\n                        // floating panels are allowed\n                        return this.gridview.length === 0;\n                    }\n                    return true;\n                }\n                if (position === 'center' && this.gridview.length !== 0) {\n                    /**\n                     * for external events only show the four-corner drag overlays, disable\n                     * the center position so that external drag events can fall through to the group\n                     * and panel drop target handlers\n                     */\n                    return false;\n                }\n                const firedEvent = new DockviewUnhandledDragOverEvent(event, 'edge', position, getPanelData);\n                this._onUnhandledDragOverEvent.fire(firedEvent);\n                return firedEvent.isAccepted;\n            },\n            acceptedTargetZones: ['top', 'bottom', 'left', 'right', 'center'],\n            overlayModel: (_a = this.options.rootOverlayModel) !== null && _a !== void 0 ? _a : DEFAULT_ROOT_OVERLAY_MODEL,\n        });\n        this.addDisposables(this._rootDropTarget, this._rootDropTarget.onWillShowOverlay((event) => {\n            if (this.gridview.length > 0 && event.position === 'center') {\n                // option only available when no panels in primary grid\n                return;\n            }\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'edge',\n                panel: undefined,\n                api: this._api,\n                group: undefined,\n                getData: getPanelData,\n            }));\n        }), this._rootDropTarget.onDrop((event) => {\n            var _a;\n            const willDropEvent = new DockviewWillDropEvent({\n                nativeEvent: event.nativeEvent,\n                position: event.position,\n                panel: undefined,\n                api: this._api,\n                group: undefined,\n                getData: getPanelData,\n                kind: 'edge',\n            });\n            this._onWillDrop.fire(willDropEvent);\n            if (willDropEvent.defaultPrevented) {\n                return;\n            }\n            const data = getPanelData();\n            if (data) {\n                this.moveGroupOrPanel({\n                    from: {\n                        groupId: data.groupId,\n                        panelId: (_a = data.panelId) !== null && _a !== void 0 ? _a : undefined,\n                    },\n                    to: {\n                        group: this.orthogonalize(event.position),\n                        position: 'center',\n                    },\n                });\n            }\n            else {\n                this._onDidDrop.fire(new DockviewDidDropEvent({\n                    nativeEvent: event.nativeEvent,\n                    position: event.position,\n                    panel: undefined,\n                    api: this._api,\n                    group: undefined,\n                    getData: getPanelData,\n                }));\n            }\n        }), this._rootDropTarget);\n        this._api = new DockviewApi(this);\n        this.updateWatermark();\n    }\n    setVisible(panel, visible) {\n        switch (panel.api.location.type) {\n            case 'grid':\n                super.setVisible(panel, visible);\n                break;\n            case 'floating': {\n                const item = this.floatingGroups.find((floatingGroup) => floatingGroup.group === panel);\n                if (item) {\n                    item.overlay.setVisible(visible);\n                    panel.api._onDidVisibilityChange.fire({\n                        isVisible: visible,\n                    });\n                }\n                break;\n            }\n            case 'popout':\n                console.warn('dockview: You cannot hide a group that is in a popout window');\n                break;\n        }\n    }\n    addPopoutGroup(itemToPopout, options) {\n        var _a, _b, _c, _d, _e;\n        if (itemToPopout instanceof DockviewPanel &&\n            itemToPopout.group.size === 1) {\n            return this.addPopoutGroup(itemToPopout.group, options);\n        }\n        const theme = getDockviewTheme(this.gridview.element);\n        const element = this.element;\n        function getBox() {\n            if (options === null || options === void 0 ? void 0 : options.position) {\n                return options.position;\n            }\n            if (itemToPopout instanceof DockviewGroupPanel) {\n                return itemToPopout.element.getBoundingClientRect();\n            }\n            if (itemToPopout.group) {\n                return itemToPopout.group.element.getBoundingClientRect();\n            }\n            return element.getBoundingClientRect();\n        }\n        const box = getBox();\n        const groupId = (_b = (_a = options === null || options === void 0 ? void 0 : options.overridePopoutGroup) === null || _a === void 0 ? void 0 : _a.id) !== null && _b !== void 0 ? _b : this.getNextGroupId();\n        const _window = new PopoutWindow(`${this.id}-${groupId}`, // unique id\n        theme !== null && theme !== void 0 ? theme : '', {\n            url: (_e = (_c = options === null || options === void 0 ? void 0 : options.popoutUrl) !== null && _c !== void 0 ? _c : (_d = this.options) === null || _d === void 0 ? void 0 : _d.popoutUrl) !== null && _e !== void 0 ? _e : '/popout.html',\n            left: window.screenX + box.left,\n            top: window.screenY + box.top,\n            width: box.width,\n            height: box.height,\n            onDidOpen: options === null || options === void 0 ? void 0 : options.onDidOpen,\n            onWillClose: options === null || options === void 0 ? void 0 : options.onWillClose,\n        });\n        const popoutWindowDisposable = new CompositeDisposable(_window, _window.onDidClose(() => {\n            popoutWindowDisposable.dispose();\n        }));\n        return _window\n            .open()\n            .then((popoutContainer) => {\n            var _a;\n            if (_window.isDisposed) {\n                return false;\n            }\n            if (popoutContainer === null) {\n                popoutWindowDisposable.dispose();\n                return false;\n            }\n            const gready = document.createElement('div');\n            gready.className = 'dv-overlay-render-container';\n            const overlayRenderContainer = new OverlayRenderContainer(gready, this);\n            const referenceGroup = itemToPopout instanceof DockviewPanel\n                ? itemToPopout.group\n                : itemToPopout;\n            const referenceLocation = itemToPopout.api.location.type;\n            /**\n             * The group that is being added doesn't already exist within the DOM, the most likely occurance\n             * of this case is when being called from the `fromJSON(...)` method\n             */\n            const isGroupAddedToDom = referenceGroup.element.parentElement !== null;\n            let group;\n            if (!isGroupAddedToDom) {\n                group = referenceGroup;\n            }\n            else if (options === null || options === void 0 ? void 0 : options.overridePopoutGroup) {\n                group = options.overridePopoutGroup;\n            }\n            else {\n                group = this.createGroup({ id: groupId });\n                this._onDidAddGroup.fire(group);\n            }\n            group.model.renderContainer = overlayRenderContainer;\n            group.layout(_window.window.innerWidth, _window.window.innerHeight);\n            let floatingBox;\n            if (!(options === null || options === void 0 ? void 0 : options.overridePopoutGroup) && isGroupAddedToDom) {\n                if (itemToPopout instanceof DockviewPanel) {\n                    this.movingLock(() => {\n                        const panel = referenceGroup.model.removePanel(itemToPopout);\n                        group.model.openPanel(panel);\n                    });\n                }\n                else {\n                    this.movingLock(() => moveGroupWithoutDestroying({\n                        from: referenceGroup,\n                        to: group,\n                    }));\n                    switch (referenceLocation) {\n                        case 'grid':\n                            referenceGroup.api.setVisible(false);\n                            break;\n                        case 'floating':\n                        case 'popout':\n                            floatingBox = (_a = this._floatingGroups\n                                .find((value) => value.group.api.id ===\n                                itemToPopout.api.id)) === null || _a === void 0 ? void 0 : _a.overlay.toJSON();\n                            this.removeGroup(referenceGroup);\n                            break;\n                    }\n                }\n            }\n            popoutContainer.classList.add('dv-dockview');\n            popoutContainer.style.overflow = 'hidden';\n            popoutContainer.appendChild(gready);\n            popoutContainer.appendChild(group.element);\n            group.model.location = {\n                type: 'popout',\n                getWindow: () => _window.window,\n                popoutUrl: options === null || options === void 0 ? void 0 : options.popoutUrl,\n            };\n            if (isGroupAddedToDom &&\n                itemToPopout.api.location.type === 'grid') {\n                itemToPopout.api.setVisible(false);\n            }\n            this.doSetGroupAndPanelActive(group);\n            popoutWindowDisposable.addDisposables(group.api.onDidActiveChange((event) => {\n                var _a;\n                if (event.isActive) {\n                    (_a = _window.window) === null || _a === void 0 ? void 0 : _a.focus();\n                }\n            }), group.api.onWillFocus(() => {\n                var _a;\n                (_a = _window.window) === null || _a === void 0 ? void 0 : _a.focus();\n            }));\n            let returnedGroup;\n            const isValidReferenceGroup = isGroupAddedToDom &&\n                referenceGroup &&\n                this.getPanel(referenceGroup.id);\n            const value = {\n                window: _window,\n                popoutGroup: group,\n                referenceGroup: isValidReferenceGroup\n                    ? referenceGroup.id\n                    : undefined,\n                disposable: {\n                    dispose: () => {\n                        popoutWindowDisposable.dispose();\n                        return returnedGroup;\n                    },\n                },\n            };\n            popoutWindowDisposable.addDisposables(\n            /**\n             * ResizeObserver seems slow here, I do not know why but we don't need it\n             * since we can reply on the window resize event as we will occupy the full\n             * window dimensions\n             */\n            addDisposableWindowListener(_window.window, 'resize', () => {\n                group.layout(_window.window.innerWidth, _window.window.innerHeight);\n            }), overlayRenderContainer, Disposable.from(() => {\n                if (isGroupAddedToDom &&\n                    this.getPanel(referenceGroup.id)) {\n                    this.movingLock(() => moveGroupWithoutDestroying({\n                        from: group,\n                        to: referenceGroup,\n                    }));\n                    if (!referenceGroup.api.isVisible) {\n                        referenceGroup.api.setVisible(true);\n                    }\n                    if (this.getPanel(group.id)) {\n                        this.doRemoveGroup(group, {\n                            skipPopoutAssociated: true,\n                        });\n                    }\n                }\n                else if (this.getPanel(group.id)) {\n                    group.model.renderContainer =\n                        this.overlayRenderContainer;\n                    returnedGroup = group;\n                    if (floatingBox) {\n                        this.addFloatingGroup(group, {\n                            height: floatingBox.height,\n                            width: floatingBox.width,\n                            position: floatingBox,\n                        });\n                    }\n                    else {\n                        this.doRemoveGroup(group, {\n                            skipDispose: true,\n                            skipActive: true,\n                            skipPopoutReturn: true,\n                        });\n                        group.model.location = { type: 'grid' };\n                        this.movingLock(() => {\n                            // suppress group add events since the group already exists\n                            this.doAddGroup(group, [0]);\n                        });\n                    }\n                    this.doSetGroupAndPanelActive(group);\n                }\n            }));\n            this._popoutGroups.push(value);\n            this.updateWatermark();\n            return true;\n        })\n            .catch((err) => {\n            console.error('dockview: failed to create popout window', err);\n            return false;\n        });\n    }\n    addFloatingGroup(item, options) {\n        var _a, _b, _c, _d, _e;\n        let group;\n        if (item instanceof DockviewPanel) {\n            group = this.createGroup();\n            this._onDidAddGroup.fire(group);\n            this.movingLock(() => this.removePanel(item, {\n                removeEmptyGroup: true,\n                skipDispose: true,\n                skipSetActiveGroup: true,\n            }));\n            this.movingLock(() => group.model.openPanel(item, { skipSetGroupActive: true }));\n        }\n        else {\n            group = item;\n            const popoutReferenceGroupId = (_a = this._popoutGroups.find((_) => _.popoutGroup === group)) === null || _a === void 0 ? void 0 : _a.referenceGroup;\n            const popoutReferenceGroup = popoutReferenceGroupId\n                ? this.getPanel(popoutReferenceGroupId)\n                : undefined;\n            const skip = typeof (options === null || options === void 0 ? void 0 : options.skipRemoveGroup) === 'boolean' &&\n                options.skipRemoveGroup;\n            if (!skip) {\n                if (popoutReferenceGroup) {\n                    this.movingLock(() => moveGroupWithoutDestroying({\n                        from: item,\n                        to: popoutReferenceGroup,\n                    }));\n                    this.doRemoveGroup(item, {\n                        skipPopoutReturn: true,\n                        skipPopoutAssociated: true,\n                    });\n                    this.doRemoveGroup(popoutReferenceGroup, {\n                        skipDispose: true,\n                    });\n                    group = popoutReferenceGroup;\n                }\n                else {\n                    this.doRemoveGroup(item, {\n                        skipDispose: true,\n                        skipPopoutReturn: true,\n                        skipPopoutAssociated: false,\n                    });\n                }\n            }\n        }\n        function getAnchoredBox() {\n            if (options === null || options === void 0 ? void 0 : options.position) {\n                const result = {};\n                if ('left' in options.position) {\n                    result.left = Math.max(options.position.left, 0);\n                }\n                else if ('right' in options.position) {\n                    result.right = Math.max(options.position.right, 0);\n                }\n                else {\n                    result.left = DEFAULT_FLOATING_GROUP_POSITION.left;\n                }\n                if ('top' in options.position) {\n                    result.top = Math.max(options.position.top, 0);\n                }\n                else if ('bottom' in options.position) {\n                    result.bottom = Math.max(options.position.bottom, 0);\n                }\n                else {\n                    result.top = DEFAULT_FLOATING_GROUP_POSITION.top;\n                }\n                if (typeof options.width === 'number') {\n                    result.width = Math.max(options.width, 0);\n                }\n                else {\n                    result.width = DEFAULT_FLOATING_GROUP_POSITION.width;\n                }\n                if (typeof options.height === 'number') {\n                    result.height = Math.max(options.height, 0);\n                }\n                else {\n                    result.height = DEFAULT_FLOATING_GROUP_POSITION.height;\n                }\n                return result;\n            }\n            return {\n                left: typeof (options === null || options === void 0 ? void 0 : options.x) === 'number'\n                    ? Math.max(options.x, 0)\n                    : DEFAULT_FLOATING_GROUP_POSITION.left,\n                top: typeof (options === null || options === void 0 ? void 0 : options.y) === 'number'\n                    ? Math.max(options.y, 0)\n                    : DEFAULT_FLOATING_GROUP_POSITION.top,\n                width: typeof (options === null || options === void 0 ? void 0 : options.width) === 'number'\n                    ? Math.max(options.width, 0)\n                    : DEFAULT_FLOATING_GROUP_POSITION.width,\n                height: typeof (options === null || options === void 0 ? void 0 : options.height) === 'number'\n                    ? Math.max(options.height, 0)\n                    : DEFAULT_FLOATING_GROUP_POSITION.height,\n            };\n        }\n        const anchoredBox = getAnchoredBox();\n        const overlay = new Overlay(Object.assign(Object.assign({ container: this.gridview.element, content: group.element }, anchoredBox), { minimumInViewportWidth: this.options.floatingGroupBounds === 'boundedWithinViewport'\n                ? undefined\n                : (_c = (_b = this.options.floatingGroupBounds) === null || _b === void 0 ? void 0 : _b.minimumWidthWithinViewport) !== null && _c !== void 0 ? _c : DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE, minimumInViewportHeight: this.options.floatingGroupBounds === 'boundedWithinViewport'\n                ? undefined\n                : (_e = (_d = this.options.floatingGroupBounds) === null || _d === void 0 ? void 0 : _d.minimumHeightWithinViewport) !== null && _e !== void 0 ? _e : DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE }));\n        const el = group.element.querySelector('.dv-void-container');\n        if (!el) {\n            throw new Error('failed to find drag handle');\n        }\n        overlay.setupDrag(el, {\n            inDragMode: typeof (options === null || options === void 0 ? void 0 : options.inDragMode) === 'boolean'\n                ? options.inDragMode\n                : false,\n        });\n        const floatingGroupPanel = new DockviewFloatingGroupPanel(group, overlay);\n        const disposable = new CompositeDisposable(group.api.onDidActiveChange((event) => {\n            if (event.isActive) {\n                overlay.bringToFront();\n            }\n        }), watchElementResize(group.element, (entry) => {\n            const { width, height } = entry.contentRect;\n            group.layout(width, height); // let the group know it's size is changing so it can fire events to the panel\n        }));\n        floatingGroupPanel.addDisposables(overlay.onDidChange(() => {\n            // this is either a resize or a move\n            // to inform the panels .layout(...) the group with it's current size\n            // don't care about resize since the above watcher handles that\n            group.layout(group.width, group.height);\n        }), overlay.onDidChangeEnd(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), group.onDidChange((event) => {\n            overlay.setBounds({\n                height: event === null || event === void 0 ? void 0 : event.height,\n                width: event === null || event === void 0 ? void 0 : event.width,\n            });\n        }), {\n            dispose: () => {\n                disposable.dispose();\n                remove(this._floatingGroups, floatingGroupPanel);\n                group.model.location = { type: 'grid' };\n                this.updateWatermark();\n            },\n        });\n        this._floatingGroups.push(floatingGroupPanel);\n        group.model.location = { type: 'floating' };\n        if (!(options === null || options === void 0 ? void 0 : options.skipActiveGroup)) {\n            this.doSetGroupAndPanelActive(group);\n        }\n        this.updateWatermark();\n    }\n    orthogonalize(position) {\n        switch (position) {\n            case 'top':\n            case 'bottom':\n                if (this.gridview.orientation === Orientation.HORIZONTAL) {\n                    // we need to add to a vertical splitview but the current root is a horizontal splitview.\n                    // insert a vertical splitview at the root level and add the existing view as a child\n                    this.gridview.insertOrthogonalSplitviewAtRoot();\n                }\n                break;\n            case 'left':\n            case 'right':\n                if (this.gridview.orientation === Orientation.VERTICAL) {\n                    // we need to add to a horizontal splitview but the current root is a vertical splitview.\n                    // insert a horiziontal splitview at the root level and add the existing view as a child\n                    this.gridview.insertOrthogonalSplitviewAtRoot();\n                }\n                break;\n            default:\n                break;\n        }\n        switch (position) {\n            case 'top':\n            case 'left':\n            case 'center':\n                return this.createGroupAtLocation([0]); // insert into first position\n            case 'bottom':\n            case 'right':\n                return this.createGroupAtLocation([this.gridview.length]); // insert into last position\n            default:\n                throw new Error(`unsupported position ${position}`);\n        }\n    }\n    updateOptions(options) {\n        var _a, _b, _c, _d;\n        super.updateOptions(options);\n        if ('floatingGroupBounds' in options) {\n            for (const group of this._floatingGroups) {\n                switch (options.floatingGroupBounds) {\n                    case 'boundedWithinViewport':\n                        group.overlay.minimumInViewportHeight = undefined;\n                        group.overlay.minimumInViewportWidth = undefined;\n                        break;\n                    case undefined:\n                        group.overlay.minimumInViewportHeight =\n                            DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE;\n                        group.overlay.minimumInViewportWidth =\n                            DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE;\n                        break;\n                    default:\n                        group.overlay.minimumInViewportHeight =\n                            (_a = options.floatingGroupBounds) === null || _a === void 0 ? void 0 : _a.minimumHeightWithinViewport;\n                        group.overlay.minimumInViewportWidth =\n                            (_b = options.floatingGroupBounds) === null || _b === void 0 ? void 0 : _b.minimumWidthWithinViewport;\n                }\n                group.overlay.setBounds();\n            }\n        }\n        if ('rootOverlayModel' in options) {\n            this._rootDropTarget.setOverlayModel((_c = options.rootOverlayModel) !== null && _c !== void 0 ? _c : DEFAULT_ROOT_OVERLAY_MODEL);\n        }\n        if ('gap' in options) {\n            this.gridview.margin = (_d = options.gap) !== null && _d !== void 0 ? _d : 0;\n        }\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        this.layout(this.gridview.width, this.gridview.height, true);\n    }\n    layout(width, height, forceResize) {\n        super.layout(width, height, forceResize);\n        if (this._floatingGroups) {\n            for (const floating of this._floatingGroups) {\n                // ensure floting groups stay within visible boundaries\n                floating.overlay.setBounds();\n            }\n        }\n    }\n    focus() {\n        var _a;\n        (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    getGroupPanel(id) {\n        return this.panels.find((panel) => panel.id === id);\n    }\n    setActivePanel(panel) {\n        panel.group.model.openPanel(panel);\n        this.doSetGroupAndPanelActive(panel.group);\n    }\n    moveToNext(options = {}) {\n        var _a;\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        if (options.includePanel && options.group) {\n            if (options.group.activePanel !==\n                options.group.panels[options.group.panels.length - 1]) {\n                options.group.model.moveToNext({ suppressRoll: true });\n                return;\n            }\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.next(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupAndPanelActive(next);\n    }\n    moveToPrevious(options = {}) {\n        var _a;\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        if (options.includePanel && options.group) {\n            if (options.group.activePanel !== options.group.panels[0]) {\n                options.group.model.moveToPrevious({ suppressRoll: true });\n                return;\n            }\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.previous(location)) === null || _a === void 0 ? void 0 : _a.view;\n        if (next) {\n            this.doSetGroupAndPanelActive(next);\n        }\n    }\n    /**\n     * Serialize the current state of the layout\n     *\n     * @returns A JSON respresentation of the layout\n     */\n    toJSON() {\n        var _a;\n        const data = this.gridview.serialize();\n        const panels = this.panels.reduce((collection, panel) => {\n            collection[panel.id] = panel.toJSON();\n            return collection;\n        }, {});\n        const floats = this._floatingGroups.map((group) => {\n            return {\n                data: group.group.toJSON(),\n                position: group.overlay.toJSON(),\n            };\n        });\n        const popoutGroups = this._popoutGroups.map((group) => {\n            return {\n                data: group.popoutGroup.toJSON(),\n                gridReferenceGroup: group.referenceGroup,\n                position: group.window.dimensions(),\n                url: group.popoutGroup.api.location.type === 'popout'\n                    ? group.popoutGroup.api.location.popoutUrl\n                    : undefined,\n            };\n        });\n        const result = {\n            grid: data,\n            panels,\n            activeGroup: (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.id,\n        };\n        if (floats.length > 0) {\n            result.floatingGroups = floats;\n        }\n        if (popoutGroups.length > 0) {\n            result.popoutGroups = popoutGroups;\n        }\n        return result;\n    }\n    fromJSON(data) {\n        var _a, _b, _c;\n        this.clear();\n        if (typeof data !== 'object' || data === null) {\n            throw new Error('serialized layout must be a non-null object');\n        }\n        const { grid, panels, activeGroup } = data;\n        if (grid.root.type !== 'branch' || !Array.isArray(grid.root.data)) {\n            throw new Error('root must be of type branch');\n        }\n        try {\n            // take note of the existing dimensions\n            const width = this.width;\n            const height = this.height;\n            const createGroupFromSerializedState = (data) => {\n                const { id, locked, hideHeader, views, activeView } = data;\n                if (typeof id !== 'string') {\n                    throw new Error('group id must be of type string');\n                }\n                const group = this.createGroup({\n                    id,\n                    locked: !!locked,\n                    hideHeader: !!hideHeader,\n                });\n                this._onDidAddGroup.fire(group);\n                const createdPanels = [];\n                for (const child of views) {\n                    /**\n                     * Run the deserializer step seperately since this may fail to due corrupted external state.\n                     * In running this section first we avoid firing lots of 'add' events in the event of a failure\n                     * due to a corruption of input data.\n                     */\n                    const panel = this._deserializer.fromJSON(panels[child], group);\n                    createdPanels.push(panel);\n                }\n                for (let i = 0; i < views.length; i++) {\n                    const panel = createdPanels[i];\n                    const isActive = typeof activeView === 'string' &&\n                        activeView === panel.id;\n                    group.model.openPanel(panel, {\n                        skipSetActive: !isActive,\n                        skipSetGroupActive: true,\n                    });\n                }\n                if (!group.activePanel && group.panels.length > 0) {\n                    group.model.openPanel(group.panels[group.panels.length - 1], {\n                        skipSetGroupActive: true,\n                    });\n                }\n                return group;\n            };\n            this.gridview.deserialize(grid, {\n                fromJSON: (node) => {\n                    return createGroupFromSerializedState(node.data);\n                },\n            });\n            this.layout(width, height, true);\n            const serializedFloatingGroups = (_a = data.floatingGroups) !== null && _a !== void 0 ? _a : [];\n            for (const serializedFloatingGroup of serializedFloatingGroups) {\n                const { data, position } = serializedFloatingGroup;\n                const group = createGroupFromSerializedState(data);\n                this.addFloatingGroup(group, {\n                    position: position,\n                    width: position.width,\n                    height: position.height,\n                    skipRemoveGroup: true,\n                    inDragMode: false,\n                });\n            }\n            const serializedPopoutGroups = (_b = data.popoutGroups) !== null && _b !== void 0 ? _b : [];\n            for (const serializedPopoutGroup of serializedPopoutGroups) {\n                const { data, position, gridReferenceGroup, url } = serializedPopoutGroup;\n                const group = createGroupFromSerializedState(data);\n                this.addPopoutGroup((_c = (gridReferenceGroup\n                    ? this.getPanel(gridReferenceGroup)\n                    : undefined)) !== null && _c !== void 0 ? _c : group, {\n                    position: position !== null && position !== void 0 ? position : undefined,\n                    overridePopoutGroup: gridReferenceGroup\n                        ? group\n                        : undefined,\n                    popoutUrl: url,\n                });\n            }\n            for (const floatingGroup of this._floatingGroups) {\n                floatingGroup.overlay.setBounds();\n            }\n            if (typeof activeGroup === 'string') {\n                const panel = this.getPanel(activeGroup);\n                if (panel) {\n                    this.doSetGroupAndPanelActive(panel);\n                }\n            }\n        }\n        catch (err) {\n            console.error('dockview: failed to deserialize layout. Reverting changes', err);\n            /**\n             * Takes all the successfully created groups and remove all of their panels.\n             */\n            for (const group of this.groups) {\n                for (const panel of group.panels) {\n                    this.removePanel(panel, {\n                        removeEmptyGroup: false,\n                        skipDispose: false,\n                    });\n                }\n            }\n            /**\n             * To remove a group we cannot call this.removeGroup(...) since this makes assumptions about\n             * the underlying HTMLElement existing in the Gridview.\n             */\n            for (const group of this.groups) {\n                group.dispose();\n                this._groups.delete(group.id);\n                this._onDidRemoveGroup.fire(group);\n            }\n            // iterate over a reassigned array since original array will be modified\n            for (const floatingGroup of [...this._floatingGroups]) {\n                floatingGroup.dispose();\n            }\n            // fires clean-up events and clears the underlying HTML gridview.\n            this.clear();\n            /**\n             * even though we have cleaned-up we still want to inform the caller of their error\n             * and we'll do this through re-throwing the original error since afterall you would\n             * expect trying to load a corrupted layout to result in an error and not silently fail...\n             */\n            throw err;\n        }\n        this.updateWatermark();\n        this._onDidLayoutFromJSON.fire();\n    }\n    clear() {\n        const groups = Array.from(this._groups.values()).map((_) => _.value);\n        const hasActiveGroup = !!this.activeGroup;\n        for (const group of groups) {\n            // remove the group will automatically remove the panels\n            this.removeGroup(group, { skipActive: true });\n        }\n        if (hasActiveGroup) {\n            this.doSetGroupAndPanelActive(undefined);\n        }\n        this.gridview.clear();\n    }\n    closeAllGroups() {\n        for (const entry of this._groups.entries()) {\n            const [_, group] = entry;\n            group.value.model.closeAllPanels();\n        }\n    }\n    addPanel(options) {\n        var _a, _b;\n        if (this.panels.find((_) => _.id === options.id)) {\n            throw new Error(`panel with id ${options.id} already exists`);\n        }\n        let referenceGroup;\n        if (options.position && options.floating) {\n            throw new Error('you can only provide one of: position, floating as arguments to .addPanel(...)');\n        }\n        const initial = {\n            width: options.initialWidth,\n            height: options.initialHeight,\n        };\n        let index;\n        if (options.position) {\n            if (isPanelOptionsWithPanel(options.position)) {\n                const referencePanel = typeof options.position.referencePanel === 'string'\n                    ? this.getGroupPanel(options.position.referencePanel)\n                    : options.position.referencePanel;\n                index = options.position.index;\n                if (!referencePanel) {\n                    throw new Error(`referencePanel '${options.position.referencePanel}' does not exist`);\n                }\n                referenceGroup = this.findGroup(referencePanel);\n            }\n            else if (isPanelOptionsWithGroup(options.position)) {\n                referenceGroup =\n                    typeof options.position.referenceGroup === 'string'\n                        ? (_a = this._groups.get(options.position.referenceGroup)) === null || _a === void 0 ? void 0 : _a.value\n                        : options.position.referenceGroup;\n                index = options.position.index;\n                if (!referenceGroup) {\n                    throw new Error(`referenceGroup '${options.position.referenceGroup}' does not exist`);\n                }\n            }\n            else {\n                const group = this.orthogonalize(directionToPosition(options.position.direction));\n                const panel = this.createPanel(options, group);\n                group.model.openPanel(panel, {\n                    skipSetActive: options.inactive,\n                    skipSetGroupActive: options.inactive,\n                    index,\n                });\n                if (!options.inactive) {\n                    this.doSetGroupAndPanelActive(group);\n                }\n                group.api.setSize({\n                    height: initial === null || initial === void 0 ? void 0 : initial.height,\n                    width: initial === null || initial === void 0 ? void 0 : initial.width,\n                });\n                return panel;\n            }\n        }\n        else {\n            referenceGroup = this.activeGroup;\n        }\n        let panel;\n        if (referenceGroup) {\n            const target = toTarget(((_b = options.position) === null || _b === void 0 ? void 0 : _b.direction) || 'within');\n            if (options.floating) {\n                const group = this.createGroup();\n                this._onDidAddGroup.fire(group);\n                const floatingGroupOptions = typeof options.floating === 'object' &&\n                    options.floating !== null\n                    ? options.floating\n                    : {};\n                this.addFloatingGroup(group, Object.assign(Object.assign({}, floatingGroupOptions), { inDragMode: false, skipRemoveGroup: true, skipActiveGroup: true }));\n                panel = this.createPanel(options, group);\n                group.model.openPanel(panel, {\n                    skipSetActive: options.inactive,\n                    skipSetGroupActive: options.inactive,\n                    index,\n                });\n            }\n            else if (referenceGroup.api.location.type === 'floating' ||\n                target === 'center') {\n                panel = this.createPanel(options, referenceGroup);\n                referenceGroup.model.openPanel(panel, {\n                    skipSetActive: options.inactive,\n                    skipSetGroupActive: options.inactive,\n                    index,\n                });\n                referenceGroup.api.setSize({\n                    width: initial === null || initial === void 0 ? void 0 : initial.width,\n                    height: initial === null || initial === void 0 ? void 0 : initial.height,\n                });\n                if (!options.inactive) {\n                    this.doSetGroupAndPanelActive(referenceGroup);\n                }\n            }\n            else {\n                const location = getGridLocation(referenceGroup.element);\n                const relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n                const group = this.createGroupAtLocation(relativeLocation, this.orientationAtLocation(relativeLocation) ===\n                    Orientation.VERTICAL\n                    ? initial === null || initial === void 0 ? void 0 : initial.height\n                    : initial === null || initial === void 0 ? void 0 : initial.width);\n                panel = this.createPanel(options, group);\n                group.model.openPanel(panel, {\n                    skipSetActive: options.inactive,\n                    skipSetGroupActive: options.inactive,\n                    index,\n                });\n                if (!options.inactive) {\n                    this.doSetGroupAndPanelActive(group);\n                }\n            }\n        }\n        else if (options.floating) {\n            const group = this.createGroup();\n            this._onDidAddGroup.fire(group);\n            const coordinates = typeof options.floating === 'object' &&\n                options.floating !== null\n                ? options.floating\n                : {};\n            this.addFloatingGroup(group, Object.assign(Object.assign({}, coordinates), { inDragMode: false, skipRemoveGroup: true, skipActiveGroup: true }));\n            panel = this.createPanel(options, group);\n            group.model.openPanel(panel, {\n                skipSetActive: options.inactive,\n                skipSetGroupActive: options.inactive,\n                index,\n            });\n        }\n        else {\n            const group = this.createGroupAtLocation([0], this.gridview.orientation === Orientation.VERTICAL\n                ? initial === null || initial === void 0 ? void 0 : initial.height\n                : initial === null || initial === void 0 ? void 0 : initial.width);\n            panel = this.createPanel(options, group);\n            group.model.openPanel(panel, {\n                skipSetActive: options.inactive,\n                skipSetGroupActive: options.inactive,\n                index,\n            });\n            if (!options.inactive) {\n                this.doSetGroupAndPanelActive(group);\n            }\n        }\n        return panel;\n    }\n    removePanel(panel, options = {\n        removeEmptyGroup: true,\n    }) {\n        const group = panel.group;\n        if (!group) {\n            throw new Error(`cannot remove panel ${panel.id}. it's missing a group.`);\n        }\n        group.model.removePanel(panel, {\n            skipSetActiveGroup: options.skipSetActiveGroup,\n        });\n        if (!options.skipDispose) {\n            panel.group.model.renderContainer.detatch(panel);\n            panel.dispose();\n        }\n        if (group.size === 0 && options.removeEmptyGroup) {\n            this.removeGroup(group, { skipActive: options.skipSetActiveGroup });\n        }\n    }\n    createWatermarkComponent() {\n        if (this.options.createWatermarkComponent) {\n            return this.options.createWatermarkComponent();\n        }\n        return new Watermark();\n    }\n    updateWatermark() {\n        var _a, _b;\n        if (this.groups.filter((x) => x.api.location.type === 'grid' && x.api.isVisible).length === 0) {\n            if (!this.watermark) {\n                this.watermark = this.createWatermarkComponent();\n                this.watermark.init({\n                    containerApi: new DockviewApi(this),\n                });\n                const watermarkContainer = document.createElement('div');\n                watermarkContainer.className = 'dv-watermark-container';\n                addTestId(watermarkContainer, 'watermark-component');\n                watermarkContainer.appendChild(this.watermark.element);\n                this.gridview.element.appendChild(watermarkContainer);\n            }\n        }\n        else if (this.watermark) {\n            this.watermark.element.parentElement.remove();\n            (_b = (_a = this.watermark).dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n            this.watermark = null;\n        }\n    }\n    addGroup(options) {\n        var _a;\n        if (options) {\n            let referenceGroup;\n            if (isGroupOptionsWithPanel(options)) {\n                const referencePanel = typeof options.referencePanel === 'string'\n                    ? this.panels.find((panel) => panel.id === options.referencePanel)\n                    : options.referencePanel;\n                if (!referencePanel) {\n                    throw new Error(`reference panel ${options.referencePanel} does not exist`);\n                }\n                referenceGroup = this.findGroup(referencePanel);\n                if (!referenceGroup) {\n                    throw new Error(`reference group for reference panel ${options.referencePanel} does not exist`);\n                }\n            }\n            else if (isGroupOptionsWithGroup(options)) {\n                referenceGroup =\n                    typeof options.referenceGroup === 'string'\n                        ? (_a = this._groups.get(options.referenceGroup)) === null || _a === void 0 ? void 0 : _a.value\n                        : options.referenceGroup;\n                if (!referenceGroup) {\n                    throw new Error(`reference group ${options.referenceGroup} does not exist`);\n                }\n            }\n            else {\n                const group = this.orthogonalize(directionToPosition(options.direction));\n                if (!options.skipSetActive) {\n                    this.doSetGroupAndPanelActive(group);\n                }\n                return group;\n            }\n            const target = toTarget(options.direction || 'within');\n            const location = getGridLocation(referenceGroup.element);\n            const relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n            const group = this.createGroup(options);\n            const size = this.getLocationOrientation(relativeLocation) ===\n                Orientation.VERTICAL\n                ? options.initialHeight\n                : options.initialWidth;\n            this.doAddGroup(group, relativeLocation, size);\n            if (!options.skipSetActive) {\n                this.doSetGroupAndPanelActive(group);\n            }\n            return group;\n        }\n        else {\n            const group = this.createGroup(options);\n            this.doAddGroup(group);\n            this.doSetGroupAndPanelActive(group);\n            return group;\n        }\n    }\n    getLocationOrientation(location) {\n        return location.length % 2 == 0 &&\n            this.gridview.orientation === Orientation.HORIZONTAL\n            ? Orientation.HORIZONTAL\n            : Orientation.VERTICAL;\n    }\n    removeGroup(group, options) {\n        this.doRemoveGroup(group, options);\n    }\n    doRemoveGroup(group, options) {\n        var _a;\n        const panels = [...group.panels]; // reassign since group panels will mutate\n        if (!(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n            for (const panel of panels) {\n                this.removePanel(panel, {\n                    removeEmptyGroup: false,\n                    skipDispose: (_a = options === null || options === void 0 ? void 0 : options.skipDispose) !== null && _a !== void 0 ? _a : false,\n                });\n            }\n        }\n        const activePanel = this.activePanel;\n        if (group.api.location.type === 'floating') {\n            const floatingGroup = this._floatingGroups.find((_) => _.group === group);\n            if (floatingGroup) {\n                if (!(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n                    floatingGroup.group.dispose();\n                    this._groups.delete(group.id);\n                    this._onDidRemoveGroup.fire(group);\n                }\n                remove(this._floatingGroups, floatingGroup);\n                floatingGroup.dispose();\n                if (!(options === null || options === void 0 ? void 0 : options.skipActive) && this._activeGroup === group) {\n                    const groups = Array.from(this._groups.values());\n                    this.doSetGroupAndPanelActive(groups.length > 0 ? groups[0].value : undefined);\n                }\n                return floatingGroup.group;\n            }\n            throw new Error('failed to find floating group');\n        }\n        if (group.api.location.type === 'popout') {\n            const selectedGroup = this._popoutGroups.find((_) => _.popoutGroup === group);\n            if (selectedGroup) {\n                if (!(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n                    if (!(options === null || options === void 0 ? void 0 : options.skipPopoutAssociated)) {\n                        const refGroup = selectedGroup.referenceGroup\n                            ? this.getPanel(selectedGroup.referenceGroup)\n                            : undefined;\n                        if (refGroup && refGroup.panels.length === 0) {\n                            this.removeGroup(refGroup);\n                        }\n                    }\n                    selectedGroup.popoutGroup.dispose();\n                    this._groups.delete(group.id);\n                    this._onDidRemoveGroup.fire(group);\n                }\n                remove(this._popoutGroups, selectedGroup);\n                const removedGroup = selectedGroup.disposable.dispose();\n                if (!(options === null || options === void 0 ? void 0 : options.skipPopoutReturn) && removedGroup) {\n                    this.doAddGroup(removedGroup, [0]);\n                    this.doSetGroupAndPanelActive(removedGroup);\n                }\n                if (!(options === null || options === void 0 ? void 0 : options.skipActive) && this._activeGroup === group) {\n                    const groups = Array.from(this._groups.values());\n                    this.doSetGroupAndPanelActive(groups.length > 0 ? groups[0].value : undefined);\n                }\n                this.updateWatermark();\n                return selectedGroup.popoutGroup;\n            }\n            throw new Error('failed to find popout group');\n        }\n        const re = super.doRemoveGroup(group, options);\n        if (!(options === null || options === void 0 ? void 0 : options.skipActive)) {\n            if (this.activePanel !== activePanel) {\n                this._onDidActivePanelChange.fire(this.activePanel);\n            }\n        }\n        return re;\n    }\n    movingLock(func) {\n        const isMoving = this._moving;\n        try {\n            this._moving = true;\n            return func();\n        }\n        finally {\n            this._moving = isMoving;\n        }\n    }\n    moveGroupOrPanel(options) {\n        var _a;\n        const destinationGroup = options.to.group;\n        const sourceGroupId = options.from.groupId;\n        const sourceItemId = options.from.panelId;\n        const destinationTarget = options.to.position;\n        const destinationIndex = options.to.index;\n        const sourceGroup = sourceGroupId\n            ? (_a = this._groups.get(sourceGroupId)) === null || _a === void 0 ? void 0 : _a.value\n            : undefined;\n        if (!sourceGroup) {\n            throw new Error(`Failed to find group id ${sourceGroupId}`);\n        }\n        if (sourceItemId === undefined) {\n            /**\n             * Moving an entire group into another group\n             */\n            this.moveGroup({\n                from: { group: sourceGroup },\n                to: {\n                    group: destinationGroup,\n                    position: destinationTarget,\n                },\n            });\n            return;\n        }\n        if (!destinationTarget || destinationTarget === 'center') {\n            /**\n             * Dropping a panel within another group\n             */\n            const removedPanel = this.movingLock(() => sourceGroup.model.removePanel(sourceItemId, {\n                skipSetActive: false,\n                skipSetActiveGroup: true,\n            }));\n            if (!removedPanel) {\n                throw new Error(`No panel with id ${sourceItemId}`);\n            }\n            if (sourceGroup.model.size === 0) {\n                // remove the group and do not set a new group as active\n                this.doRemoveGroup(sourceGroup, { skipActive: true });\n            }\n            this.movingLock(() => destinationGroup.model.openPanel(removedPanel, {\n                index: destinationIndex,\n                skipSetGroupActive: true,\n            }));\n            this.doSetGroupAndPanelActive(destinationGroup);\n            this._onDidMovePanel.fire({\n                panel: removedPanel,\n                from: sourceGroup,\n            });\n        }\n        else {\n            /**\n             * Dropping a panel to the extremities of a group which will place that panel\n             * into an adjacent group\n             */\n            const referenceLocation = getGridLocation(destinationGroup.element);\n            const targetLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, destinationTarget);\n            if (sourceGroup.size < 2) {\n                /**\n                 * If we are moving from a group which only has one panel left we will consider\n                 * moving the group itself rather than moving the panel into a newly created group\n                 */\n                const [targetParentLocation, to] = tail(targetLocation);\n                if (sourceGroup.api.location.type === 'grid') {\n                    const sourceLocation = getGridLocation(sourceGroup.element);\n                    const [sourceParentLocation, from] = tail(sourceLocation);\n                    if (sequenceEquals(sourceParentLocation, targetParentLocation)) {\n                        // special case when 'swapping' two views within same grid location\n                        // if a group has one tab - we are essentially moving the 'group'\n                        // which is equivalent to swapping two views in this case\n                        this.gridview.moveView(sourceParentLocation, from, to);\n                        this._onDidMovePanel.fire({\n                            panel: this.getGroupPanel(sourceItemId),\n                            from: sourceGroup,\n                        });\n                        return;\n                    }\n                }\n                if (sourceGroup.api.location.type === 'popout') {\n                    /**\n                     * the source group is a popout group with a single panel\n                     *\n                     * 1. remove the panel from the group without triggering any events\n                     * 2. remove the popout group\n                     * 3. create a new group at the requested location and add that panel\n                     */\n                    const popoutGroup = this._popoutGroups.find((group) => group.popoutGroup === sourceGroup);\n                    const removedPanel = this.movingLock(() => popoutGroup.popoutGroup.model.removePanel(popoutGroup.popoutGroup.panels[0], {\n                        skipSetActive: true,\n                        skipSetActiveGroup: true,\n                    }));\n                    this.doRemoveGroup(sourceGroup, { skipActive: true });\n                    const newGroup = this.createGroupAtLocation(targetLocation);\n                    this.movingLock(() => newGroup.model.openPanel(removedPanel));\n                    this.doSetGroupAndPanelActive(newGroup);\n                    this._onDidMovePanel.fire({\n                        panel: this.getGroupPanel(sourceItemId),\n                        from: sourceGroup,\n                    });\n                    return;\n                }\n                // source group will become empty so delete the group\n                const targetGroup = this.movingLock(() => this.doRemoveGroup(sourceGroup, {\n                    skipActive: true,\n                    skipDispose: true,\n                }));\n                // after deleting the group we need to re-evaulate the ref location\n                const updatedReferenceLocation = getGridLocation(destinationGroup.element);\n                const location = getRelativeLocation(this.gridview.orientation, updatedReferenceLocation, destinationTarget);\n                this.movingLock(() => this.doAddGroup(targetGroup, location));\n                this.doSetGroupAndPanelActive(targetGroup);\n                this._onDidMovePanel.fire({\n                    panel: this.getGroupPanel(sourceItemId),\n                    from: sourceGroup,\n                });\n            }\n            else {\n                /**\n                 * The group we are removing from has many panels, we need to remove the panels we are moving,\n                 * create a new group, add the panels to that new group and add the new group in an appropiate position\n                 */\n                const removedPanel = this.movingLock(() => sourceGroup.model.removePanel(sourceItemId, {\n                    skipSetActive: false,\n                    skipSetActiveGroup: true,\n                }));\n                if (!removedPanel) {\n                    throw new Error(`No panel with id ${sourceItemId}`);\n                }\n                const dropLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, destinationTarget);\n                const group = this.createGroupAtLocation(dropLocation);\n                this.movingLock(() => group.model.openPanel(removedPanel, {\n                    skipSetGroupActive: true,\n                }));\n                this.doSetGroupAndPanelActive(group);\n                this._onDidMovePanel.fire({\n                    panel: removedPanel,\n                    from: sourceGroup,\n                });\n            }\n        }\n    }\n    moveGroup(options) {\n        const from = options.from.group;\n        const to = options.to.group;\n        const target = options.to.position;\n        if (target === 'center') {\n            const activePanel = from.activePanel;\n            const panels = this.movingLock(() => [...from.panels].map((p) => from.model.removePanel(p.id, {\n                skipSetActive: true,\n            })));\n            if ((from === null || from === void 0 ? void 0 : from.model.size) === 0) {\n                this.doRemoveGroup(from, { skipActive: true });\n            }\n            this.movingLock(() => {\n                for (const panel of panels) {\n                    to.model.openPanel(panel, {\n                        skipSetActive: panel !== activePanel,\n                        skipSetGroupActive: true,\n                    });\n                }\n            });\n            this.doSetGroupAndPanelActive(to);\n        }\n        else {\n            switch (from.api.location.type) {\n                case 'grid':\n                    this.gridview.removeView(getGridLocation(from.element));\n                    break;\n                case 'floating': {\n                    const selectedFloatingGroup = this._floatingGroups.find((x) => x.group === from);\n                    if (!selectedFloatingGroup) {\n                        throw new Error('failed to find floating group');\n                    }\n                    selectedFloatingGroup.dispose();\n                    break;\n                }\n                case 'popout': {\n                    const selectedPopoutGroup = this._popoutGroups.find((x) => x.popoutGroup === from);\n                    if (!selectedPopoutGroup) {\n                        throw new Error('failed to find popout group');\n                    }\n                    selectedPopoutGroup.disposable.dispose();\n                }\n            }\n            const referenceLocation = getGridLocation(to.element);\n            const dropLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, target);\n            let size;\n            switch (this.gridview.orientation) {\n                case Orientation.VERTICAL:\n                    size =\n                        referenceLocation.length % 2 == 0\n                            ? from.api.width\n                            : from.api.height;\n                    break;\n                case Orientation.HORIZONTAL:\n                    size =\n                        referenceLocation.length % 2 == 0\n                            ? from.api.height\n                            : from.api.width;\n                    break;\n            }\n            this.gridview.addView(from, size, dropLocation);\n        }\n        from.panels.forEach((panel) => {\n            this._onDidMovePanel.fire({ panel, from });\n        });\n    }\n    doSetGroupActive(group) {\n        super.doSetGroupActive(group);\n        const activePanel = this.activePanel;\n        if (!this._moving &&\n            activePanel !== this._onDidActivePanelChange.value) {\n            this._onDidActivePanelChange.fire(activePanel);\n        }\n    }\n    doSetGroupAndPanelActive(group) {\n        super.doSetGroupActive(group);\n        const activePanel = this.activePanel;\n        if (group &&\n            this.hasMaximizedGroup() &&\n            !this.isMaximizedGroup(group)) {\n            this.exitMaximizedGroup();\n        }\n        if (!this._moving &&\n            activePanel !== this._onDidActivePanelChange.value) {\n            this._onDidActivePanelChange.fire(activePanel);\n        }\n    }\n    getNextGroupId() {\n        let id = this.nextGroupId.next();\n        while (this._groups.has(id)) {\n            id = this.nextGroupId.next();\n        }\n        return id;\n    }\n    createGroup(options) {\n        if (!options) {\n            options = {};\n        }\n        let id = options === null || options === void 0 ? void 0 : options.id;\n        if (id && this._groups.has(options.id)) {\n            console.warn(`dockview: Duplicate group id ${options === null || options === void 0 ? void 0 : options.id}. reassigning group id to avoid errors`);\n            id = undefined;\n        }\n        if (!id) {\n            id = this.nextGroupId.next();\n            while (this._groups.has(id)) {\n                id = this.nextGroupId.next();\n            }\n        }\n        const view = new DockviewGroupPanel(this, id, options);\n        view.init({ params: {}, accessor: this });\n        if (!this._groups.has(view.id)) {\n            const disposable = new CompositeDisposable(view.model.onTabDragStart((event) => {\n                this._onWillDragPanel.fire(event);\n            }), view.model.onGroupDragStart((event) => {\n                this._onWillDragGroup.fire(event);\n            }), view.model.onMove((event) => {\n                const { groupId, itemId, target, index } = event;\n                this.moveGroupOrPanel({\n                    from: { groupId: groupId, panelId: itemId },\n                    to: {\n                        group: view,\n                        position: target,\n                        index,\n                    },\n                });\n            }), view.model.onDidDrop((event) => {\n                this._onDidDrop.fire(event);\n            }), view.model.onWillDrop((event) => {\n                this._onWillDrop.fire(event);\n            }), view.model.onWillShowOverlay((event) => {\n                if (this.options.disableDnd) {\n                    event.preventDefault();\n                    return;\n                }\n                this._onWillShowOverlay.fire(event);\n            }), view.model.onUnhandledDragOverEvent((event) => {\n                this._onUnhandledDragOverEvent.fire(event);\n            }), view.model.onDidAddPanel((event) => {\n                if (this._moving) {\n                    return;\n                }\n                this._onDidAddPanel.fire(event.panel);\n            }), view.model.onDidRemovePanel((event) => {\n                if (this._moving) {\n                    return;\n                }\n                this._onDidRemovePanel.fire(event.panel);\n            }), view.model.onDidActivePanelChange((event) => {\n                if (this._moving) {\n                    return;\n                }\n                if (event.panel !== this.activePanel) {\n                    return;\n                }\n                if (this._onDidActivePanelChange.value !== event.panel) {\n                    this._onDidActivePanelChange.fire(event.panel);\n                }\n            }), Event.any(view.model.onDidPanelTitleChange, view.model.onDidPanelParametersChange)(() => {\n                this._bufferOnDidLayoutChange.fire();\n            }));\n            this._groups.set(view.id, { value: view, disposable });\n        }\n        // TODO: must be called after the above listeners have been setup, not an ideal pattern\n        view.initialize();\n        return view;\n    }\n    createPanel(options, group) {\n        var _a, _b, _c;\n        const contentComponent = options.component;\n        const tabComponent = (_a = options.tabComponent) !== null && _a !== void 0 ? _a : this.options.defaultTabComponent;\n        const view = new DockviewPanelModel(this, options.id, contentComponent, tabComponent);\n        const panel = new DockviewPanel(options.id, contentComponent, tabComponent, this, this._api, group, view, {\n            renderer: options.renderer,\n            minimumWidth: options.minimumWidth,\n            minimumHeight: options.minimumHeight,\n            maximumWidth: options.maximumWidth,\n            maximumHeight: options.maximumHeight,\n        });\n        panel.init({\n            title: (_b = options.title) !== null && _b !== void 0 ? _b : options.id,\n            params: (_c = options === null || options === void 0 ? void 0 : options.params) !== null && _c !== void 0 ? _c : {},\n        });\n        return panel;\n    }\n    createGroupAtLocation(location, size) {\n        const group = this.createGroup();\n        this.doAddGroup(group, location, size);\n        return group;\n    }\n    findGroup(panel) {\n        var _a;\n        return (_a = Array.from(this._groups.values()).find((group) => group.value.model.containsPanel(panel))) === null || _a === void 0 ? void 0 : _a.value;\n    }\n    orientationAtLocation(location) {\n        const rootOrientation = this.gridview.orientation;\n        return location.length % 2 == 1\n            ? rootOrientation\n            : orthogonal(rootOrientation);\n    }\n}\n","import { getRelativeLocation, getGridLocation, } from './gridview';\nimport { tail, sequenceEquals } from '../array';\nimport { CompositeDisposable } from '../lifecycle';\nimport { BaseGrid, toTarget, } from './baseComponentGridview';\nimport { Emitter } from '../events';\nexport class GridviewComponent extends BaseGrid {\n    get orientation() {\n        return this.gridview.orientation;\n    }\n    set orientation(value) {\n        this.gridview.orientation = value;\n    }\n    get options() {\n        return this._options;\n    }\n    get deserializer() {\n        return this._deserializer;\n    }\n    set deserializer(value) {\n        this._deserializer = value;\n    }\n    constructor(parentElement, options) {\n        var _a;\n        super(parentElement, {\n            proportionalLayout: (_a = options.proportionalLayout) !== null && _a !== void 0 ? _a : true,\n            orientation: options.orientation,\n            styles: options.hideBorders\n                ? { separatorBorder: 'transparent' }\n                : undefined,\n            disableAutoResizing: options.disableAutoResizing,\n            className: options.className,\n        });\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._onDidRemoveGroup = new Emitter();\n        this.onDidRemoveGroup = this._onDidRemoveGroup.event;\n        this._onDidAddGroup = new Emitter();\n        this.onDidAddGroup = this._onDidAddGroup.event;\n        this._onDidActiveGroupChange = new Emitter();\n        this.onDidActiveGroupChange = this._onDidActiveGroupChange.event;\n        this._options = options;\n        this.addDisposables(this._onDidAddGroup, this._onDidRemoveGroup, this._onDidActiveGroupChange, this.onDidAdd((event) => {\n            this._onDidAddGroup.fire(event);\n        }), this.onDidRemove((event) => {\n            this._onDidRemoveGroup.fire(event);\n        }), this.onDidActiveChange((event) => {\n            this._onDidActiveGroupChange.fire(event);\n        }));\n    }\n    updateOptions(options) {\n        super.updateOptions(options);\n        const hasOrientationChanged = typeof options.orientation === 'string' &&\n            this.gridview.orientation !== options.orientation;\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        if (hasOrientationChanged) {\n            this.gridview.orientation = options.orientation;\n        }\n        this.layout(this.gridview.width, this.gridview.height, true);\n    }\n    removePanel(panel) {\n        this.removeGroup(panel);\n    }\n    /**\n     * Serialize the current state of the layout\n     *\n     * @returns A JSON respresentation of the layout\n     */\n    toJSON() {\n        var _a;\n        const data = this.gridview.serialize();\n        return {\n            grid: data,\n            activePanel: (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.id,\n        };\n    }\n    setVisible(panel, visible) {\n        this.gridview.setViewVisible(getGridLocation(panel.element), visible);\n    }\n    setActive(panel) {\n        this._groups.forEach((value, _key) => {\n            value.value.setActive(panel === value.value);\n        });\n    }\n    focus() {\n        var _a;\n        (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    fromJSON(serializedGridview) {\n        this.clear();\n        const { grid, activePanel } = serializedGridview;\n        try {\n            const queue = [];\n            // take note of the existing dimensions\n            const width = this.width;\n            const height = this.height;\n            this.gridview.deserialize(grid, {\n                fromJSON: (node) => {\n                    const { data } = node;\n                    const view = this.options.createComponent({\n                        id: data.id,\n                        name: data.component,\n                    });\n                    queue.push(() => view.init({\n                        params: data.params,\n                        minimumWidth: data.minimumWidth,\n                        maximumWidth: data.maximumWidth,\n                        minimumHeight: data.minimumHeight,\n                        maximumHeight: data.maximumHeight,\n                        priority: data.priority,\n                        snap: !!data.snap,\n                        accessor: this,\n                        isVisible: node.visible,\n                    }));\n                    this._onDidAddGroup.fire(view);\n                    this.registerPanel(view);\n                    return view;\n                },\n            });\n            this.layout(width, height, true);\n            queue.forEach((f) => f());\n            if (typeof activePanel === 'string') {\n                const panel = this.getPanel(activePanel);\n                if (panel) {\n                    this.doSetGroupActive(panel);\n                }\n            }\n        }\n        catch (err) {\n            /**\n             * To remove a group we cannot call this.removeGroup(...) since this makes assumptions about\n             * the underlying HTMLElement existing in the Gridview.\n             */\n            for (const group of this.groups) {\n                group.dispose();\n                this._groups.delete(group.id);\n                this._onDidRemoveGroup.fire(group);\n            }\n            // fires clean-up events and clears the underlying HTML gridview.\n            this.clear();\n            /**\n             * even though we have cleaned-up we still want to inform the caller of their error\n             * and we'll do this through re-throwing the original error since afterall you would\n             * expect trying to load a corrupted layout to result in an error and not silently fail...\n             */\n            throw err;\n        }\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        const hasActiveGroup = this.activeGroup;\n        const groups = Array.from(this._groups.values()); // reassign since group panels will mutate\n        for (const group of groups) {\n            group.disposable.dispose();\n            this.doRemoveGroup(group.value, { skipActive: true });\n        }\n        if (hasActiveGroup) {\n            this.doSetGroupActive(undefined);\n        }\n        this.gridview.clear();\n    }\n    movePanel(panel, options) {\n        var _a;\n        let relativeLocation;\n        const removedPanel = this.gridview.remove(panel);\n        const referenceGroup = (_a = this._groups.get(options.reference)) === null || _a === void 0 ? void 0 : _a.value;\n        if (!referenceGroup) {\n            throw new Error(`reference group ${options.reference} does not exist`);\n        }\n        const target = toTarget(options.direction);\n        if (target === 'center') {\n            throw new Error(`${target} not supported as an option`);\n        }\n        else {\n            const location = getGridLocation(referenceGroup.element);\n            relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n        }\n        this.doAddGroup(removedPanel, relativeLocation, options.size);\n    }\n    addPanel(options) {\n        var _a, _b, _c, _d;\n        let relativeLocation = (_a = options.location) !== null && _a !== void 0 ? _a : [0];\n        if ((_b = options.position) === null || _b === void 0 ? void 0 : _b.referencePanel) {\n            const referenceGroup = (_c = this._groups.get(options.position.referencePanel)) === null || _c === void 0 ? void 0 : _c.value;\n            if (!referenceGroup) {\n                throw new Error(`reference group ${options.position.referencePanel} does not exist`);\n            }\n            const target = toTarget(options.position.direction);\n            if (target === 'center') {\n                throw new Error(`${target} not supported as an option`);\n            }\n            else {\n                const location = getGridLocation(referenceGroup.element);\n                relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n            }\n        }\n        const view = this.options.createComponent({\n            id: options.id,\n            name: options.component,\n        });\n        view.init({\n            params: (_d = options.params) !== null && _d !== void 0 ? _d : {},\n            minimumWidth: options.minimumWidth,\n            maximumWidth: options.maximumWidth,\n            minimumHeight: options.minimumHeight,\n            maximumHeight: options.maximumHeight,\n            priority: options.priority,\n            snap: !!options.snap,\n            accessor: this,\n            isVisible: true,\n        });\n        this.registerPanel(view);\n        this.doAddGroup(view, relativeLocation, options.size);\n        this.doSetGroupActive(view);\n        return view;\n    }\n    registerPanel(panel) {\n        const disposable = new CompositeDisposable(panel.api.onDidFocusChange((event) => {\n            if (!event.isFocused) {\n                return;\n            }\n            this._groups.forEach((groupItem) => {\n                const group = groupItem.value;\n                if (group !== panel) {\n                    group.setActive(false);\n                }\n                else {\n                    group.setActive(true);\n                }\n            });\n        }));\n        this._groups.set(panel.id, {\n            value: panel,\n            disposable,\n        });\n    }\n    moveGroup(referenceGroup, groupId, target) {\n        const sourceGroup = this.getPanel(groupId);\n        if (!sourceGroup) {\n            throw new Error('invalid operation');\n        }\n        const referenceLocation = getGridLocation(referenceGroup.element);\n        const targetLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, target);\n        const [targetParentLocation, to] = tail(targetLocation);\n        const sourceLocation = getGridLocation(sourceGroup.element);\n        const [sourceParentLocation, from] = tail(sourceLocation);\n        if (sequenceEquals(sourceParentLocation, targetParentLocation)) {\n            // special case when 'swapping' two views within same grid location\n            // if a group has one tab - we are essentially moving the 'group'\n            // which is equivalent to swapping two views in this case\n            this.gridview.moveView(sourceParentLocation, from, to);\n            return;\n        }\n        // source group will become empty so delete the group\n        const targetGroup = this.doRemoveGroup(sourceGroup, {\n            skipActive: true,\n            skipDispose: true,\n        });\n        // after deleting the group we need to re-evaulate the ref location\n        const updatedReferenceLocation = getGridLocation(referenceGroup.element);\n        const location = getRelativeLocation(this.gridview.orientation, updatedReferenceLocation, target);\n        this.doAddGroup(targetGroup, location);\n    }\n    removeGroup(group) {\n        super.removeGroup(group);\n    }\n    dispose() {\n        super.dispose();\n        this._onDidLayoutfromJSON.dispose();\n    }\n}\n","import { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nimport { Orientation, Sizing, Splitview, } from './splitview';\nimport { Emitter } from '../events';\nimport { Resizable } from '../resizable';\nimport { Classnames } from '../dom';\n/**\n * A high-level implementation of splitview that works using 'panels'\n */\nexport class SplitviewComponent extends Resizable {\n    get panels() {\n        return this.splitview.getViews();\n    }\n    get options() {\n        return this._options;\n    }\n    get length() {\n        return this._panels.size;\n    }\n    get orientation() {\n        return this.splitview.orientation;\n    }\n    get splitview() {\n        return this._splitview;\n    }\n    set splitview(value) {\n        this._splitview = value;\n        this._splitviewChangeDisposable.value = new CompositeDisposable(this._splitview.onDidSashEnd(() => {\n            this._onDidLayoutChange.fire(undefined);\n        }), this._splitview.onDidAddView((e) => this._onDidAddView.fire(e)), this._splitview.onDidRemoveView((e) => this._onDidRemoveView.fire(e)));\n    }\n    get minimumSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumSize() {\n        return this.splitview.maximumSize;\n    }\n    get height() {\n        return this.splitview.orientation === Orientation.HORIZONTAL\n            ? this.splitview.orthogonalSize\n            : this.splitview.size;\n    }\n    get width() {\n        return this.splitview.orientation === Orientation.HORIZONTAL\n            ? this.splitview.size\n            : this.splitview.orthogonalSize;\n    }\n    constructor(parentElement, options) {\n        var _a;\n        super(parentElement, options.disableAutoResizing);\n        this._splitviewChangeDisposable = new MutableDisposable();\n        this._panels = new Map();\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        this._onDidLayoutChange = new Emitter();\n        this.onDidLayoutChange = this._onDidLayoutChange.event;\n        this._classNames = new Classnames(this.element);\n        this._classNames.setClassNames((_a = options.className) !== null && _a !== void 0 ? _a : '');\n        this._options = options;\n        this.splitview = new Splitview(this.element, options);\n        this.addDisposables(this._onDidAddView, this._onDidLayoutfromJSON, this._onDidRemoveView, this._onDidLayoutChange);\n    }\n    updateOptions(options) {\n        var _a, _b;\n        if ('className' in options) {\n            this._classNames.setClassNames((_a = options.className) !== null && _a !== void 0 ? _a : '');\n        }\n        if ('disableResizing' in options) {\n            this.disableResizing = (_b = options.disableAutoResizing) !== null && _b !== void 0 ? _b : false;\n        }\n        if (typeof options.orientation === 'string') {\n            this.splitview.orientation = options.orientation;\n        }\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        this.splitview.layout(this.splitview.size, this.splitview.orthogonalSize);\n    }\n    focus() {\n        var _a;\n        (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    movePanel(from, to) {\n        this.splitview.moveView(from, to);\n    }\n    setVisible(panel, visible) {\n        const index = this.panels.indexOf(panel);\n        this.splitview.setViewVisible(index, visible);\n    }\n    setActive(panel, skipFocus) {\n        this._activePanel = panel;\n        this.panels\n            .filter((v) => v !== panel)\n            .forEach((v) => {\n            v.api._onDidActiveChange.fire({ isActive: false });\n            if (!skipFocus) {\n                v.focus();\n            }\n        });\n        panel.api._onDidActiveChange.fire({ isActive: true });\n        if (!skipFocus) {\n            panel.focus();\n        }\n    }\n    removePanel(panel, sizing) {\n        const item = this._panels.get(panel.id);\n        if (!item) {\n            throw new Error(`unknown splitview panel ${panel.id}`);\n        }\n        item.dispose();\n        this._panels.delete(panel.id);\n        const index = this.panels.findIndex((_) => _ === panel);\n        const removedView = this.splitview.removeView(index, sizing);\n        removedView.dispose();\n        const panels = this.panels;\n        if (panels.length > 0) {\n            this.setActive(panels[panels.length - 1]);\n        }\n    }\n    getPanel(id) {\n        return this.panels.find((view) => view.id === id);\n    }\n    addPanel(options) {\n        var _a;\n        if (this._panels.has(options.id)) {\n            throw new Error(`panel ${options.id} already exists`);\n        }\n        const view = this.options.createComponent({\n            id: options.id,\n            name: options.component,\n        });\n        view.orientation = this.splitview.orientation;\n        view.init({\n            params: (_a = options.params) !== null && _a !== void 0 ? _a : {},\n            minimumSize: options.minimumSize,\n            maximumSize: options.maximumSize,\n            snap: options.snap,\n            priority: options.priority,\n            accessor: this,\n        });\n        const size = typeof options.size === 'number' ? options.size : Sizing.Distribute;\n        const index = typeof options.index === 'number' ? options.index : undefined;\n        this.splitview.addView(view, size, index);\n        this.doAddView(view);\n        this.setActive(view);\n        return view;\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.splitview.orientation === Orientation.HORIZONTAL\n            ? [width, height]\n            : [height, width];\n        this.splitview.layout(size, orthogonalSize);\n    }\n    doAddView(view) {\n        const disposable = view.api.onDidFocusChange((event) => {\n            if (!event.isFocused) {\n                return;\n            }\n            this.setActive(view, true);\n        });\n        this._panels.set(view.id, disposable);\n    }\n    toJSON() {\n        var _a;\n        const views = this.splitview\n            .getViews()\n            .map((view, i) => {\n            const size = this.splitview.getViewSize(i);\n            return {\n                size,\n                data: view.toJSON(),\n                snap: !!view.snap,\n                priority: view.priority,\n            };\n        });\n        return {\n            views,\n            activeView: (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.id,\n            size: this.splitview.size,\n            orientation: this.splitview.orientation,\n        };\n    }\n    fromJSON(serializedSplitview) {\n        this.clear();\n        const { views, orientation, size, activeView } = serializedSplitview;\n        const queue = [];\n        // take note of the existing dimensions\n        const width = this.width;\n        const height = this.height;\n        this.splitview = new Splitview(this.element, {\n            orientation,\n            proportionalLayout: this.options.proportionalLayout,\n            descriptor: {\n                size,\n                views: views.map((view) => {\n                    const data = view.data;\n                    if (this._panels.has(data.id)) {\n                        throw new Error(`panel ${data.id} already exists`);\n                    }\n                    const panel = this.options.createComponent({\n                        id: data.id,\n                        name: data.component,\n                    });\n                    queue.push(() => {\n                        var _a;\n                        panel.init({\n                            params: (_a = data.params) !== null && _a !== void 0 ? _a : {},\n                            minimumSize: data.minimumSize,\n                            maximumSize: data.maximumSize,\n                            snap: view.snap,\n                            priority: view.priority,\n                            accessor: this,\n                        });\n                    });\n                    panel.orientation = orientation;\n                    this.doAddView(panel);\n                    setTimeout(() => {\n                        // the original onDidAddView events are missed since they are fired before we can subcribe to them\n                        this._onDidAddView.fire(panel);\n                    }, 0);\n                    return { size: view.size, view: panel };\n                }),\n            },\n        });\n        this.layout(width, height);\n        queue.forEach((f) => f());\n        if (typeof activeView === 'string') {\n            const panel = this.getPanel(activeView);\n            if (panel) {\n                this.setActive(panel);\n            }\n        }\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        for (const disposable of this._panels.values()) {\n            disposable.dispose();\n        }\n        this._panels.clear();\n        while (this.splitview.length > 0) {\n            const view = this.splitview.removeView(0, Sizing.Distribute, true);\n            view.dispose();\n        }\n    }\n    dispose() {\n        for (const disposable of this._panels.values()) {\n            disposable.dispose();\n        }\n        this._panels.clear();\n        const views = this.splitview.getViews();\n        this._splitviewChangeDisposable.dispose();\n        this.splitview.dispose();\n        for (const view of views) {\n            view.dispose();\n        }\n        super.dispose();\n    }\n}\n","import { addDisposableListener } from '../events';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nimport { toggleClass } from '../dom';\nimport { createChevronRightButton, createExpandMoreButton } from '../svg';\nexport class DefaultHeader extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor() {\n        super();\n        this._expandedIcon = createExpandMoreButton();\n        this._collapsedIcon = createChevronRightButton();\n        this.disposable = new MutableDisposable();\n        this.apiRef = {\n            api: null,\n        };\n        this._element = document.createElement('div');\n        this.element.className = 'dv-default-header';\n        this._content = document.createElement('span');\n        this._expander = document.createElement('div');\n        this._expander.className = 'dv-pane-header-icon';\n        this.element.appendChild(this._expander);\n        this.element.appendChild(this._content);\n        this.addDisposables(addDisposableListener(this._element, 'click', () => {\n            var _a;\n            (_a = this.apiRef.api) === null || _a === void 0 ? void 0 : _a.setExpanded(!this.apiRef.api.isExpanded);\n        }));\n    }\n    init(params) {\n        this.apiRef.api = params.api;\n        this._content.textContent = params.title;\n        this.updateIcon();\n        this.disposable.value = params.api.onDidExpansionChange(() => {\n            this.updateIcon();\n        });\n    }\n    updateIcon() {\n        var _a;\n        const isExpanded = !!((_a = this.apiRef.api) === null || _a === void 0 ? void 0 : _a.isExpanded);\n        toggleClass(this._expander, 'collapsed', !isExpanded);\n        if (isExpanded) {\n            if (this._expander.contains(this._collapsedIcon)) {\n                this._collapsedIcon.remove();\n            }\n            if (!this._expander.contains(this._expandedIcon)) {\n                this._expander.appendChild(this._expandedIcon);\n            }\n        }\n        else {\n            if (this._expander.contains(this._expandedIcon)) {\n                this._expandedIcon.remove();\n            }\n            if (!this._expander.contains(this._collapsedIcon)) {\n                this._expander.appendChild(this._collapsedIcon);\n            }\n        }\n    }\n    update(_params) {\n        //\n    }\n    dispose() {\n        this.disposable.dispose();\n        super.dispose();\n    }\n}\n","import { PaneviewApi } from '../api/component.api';\nimport { Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nimport { Orientation, Sizing } from '../splitview/splitview';\nimport { Paneview } from './paneview';\nimport { DraggablePaneviewPanel, } from './draggablePaneviewPanel';\nimport { DefaultHeader } from './defaultPaneviewHeader';\nimport { sequentialNumberGenerator } from '../math';\nimport { Resizable } from '../resizable';\nimport { Classnames } from '../dom';\nconst nextLayoutId = sequentialNumberGenerator();\nexport class PaneFramework extends DraggablePaneviewPanel {\n    constructor(options) {\n        super(options.accessor, options.id, options.component, options.headerComponent, options.orientation, options.isExpanded, options.disableDnd);\n        this.options = options;\n    }\n    getBodyComponent() {\n        return this.options.body;\n    }\n    getHeaderComponent() {\n        return this.options.header;\n    }\n}\nexport class PaneviewComponent extends Resizable {\n    get id() {\n        return this._id;\n    }\n    get panels() {\n        return this.paneview.getPanes();\n    }\n    set paneview(value) {\n        this._paneview = value;\n        this._disposable.value = new CompositeDisposable(this._paneview.onDidChange(() => {\n            this._onDidLayoutChange.fire(undefined);\n        }), this._paneview.onDidAddView((e) => this._onDidAddView.fire(e)), this._paneview.onDidRemoveView((e) => this._onDidRemoveView.fire(e)));\n    }\n    get paneview() {\n        return this._paneview;\n    }\n    get minimumSize() {\n        return this.paneview.minimumSize;\n    }\n    get maximumSize() {\n        return this.paneview.maximumSize;\n    }\n    get height() {\n        return this.paneview.orientation === Orientation.HORIZONTAL\n            ? this.paneview.orthogonalSize\n            : this.paneview.size;\n    }\n    get width() {\n        return this.paneview.orientation === Orientation.HORIZONTAL\n            ? this.paneview.size\n            : this.paneview.orthogonalSize;\n    }\n    get options() {\n        return this._options;\n    }\n    constructor(parentElement, options) {\n        var _a;\n        super(parentElement, options.disableAutoResizing);\n        this._id = nextLayoutId.next();\n        this._disposable = new MutableDisposable();\n        this._viewDisposables = new Map();\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._onDidLayoutChange = new Emitter();\n        this.onDidLayoutChange = this._onDidLayoutChange.event;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        this._onUnhandledDragOverEvent = new Emitter();\n        this.onUnhandledDragOverEvent = this._onUnhandledDragOverEvent.event;\n        this.addDisposables(this._onDidLayoutChange, this._onDidLayoutfromJSON, this._onDidDrop, this._onDidAddView, this._onDidRemoveView, this._onUnhandledDragOverEvent);\n        this._classNames = new Classnames(this.element);\n        this._classNames.setClassNames((_a = options.className) !== null && _a !== void 0 ? _a : '');\n        this._options = options;\n        this.paneview = new Paneview(this.element, {\n            // only allow paneview in the vertical orientation for now\n            orientation: Orientation.VERTICAL,\n        });\n        this.addDisposables(this._disposable);\n    }\n    setVisible(panel, visible) {\n        const index = this.panels.indexOf(panel);\n        this.paneview.setViewVisible(index, visible);\n    }\n    focus() {\n        //noop\n    }\n    updateOptions(options) {\n        var _a, _b;\n        if ('className' in options) {\n            this._classNames.setClassNames((_a = options.className) !== null && _a !== void 0 ? _a : '');\n        }\n        if ('disableResizing' in options) {\n            this.disableResizing = (_b = options.disableAutoResizing) !== null && _b !== void 0 ? _b : false;\n        }\n        this._options = Object.assign(Object.assign({}, this.options), options);\n    }\n    addPanel(options) {\n        var _a;\n        const body = this.options.createComponent({\n            id: options.id,\n            name: options.component,\n        });\n        let header;\n        if (options.headerComponent && this.options.createHeaderComponent) {\n            header = this.options.createHeaderComponent({\n                id: options.id,\n                name: options.headerComponent,\n            });\n        }\n        if (!header) {\n            header = new DefaultHeader();\n        }\n        const view = new PaneFramework({\n            id: options.id,\n            component: options.component,\n            headerComponent: options.headerComponent,\n            header,\n            body,\n            orientation: Orientation.VERTICAL,\n            isExpanded: !!options.isExpanded,\n            disableDnd: !!this.options.disableDnd,\n            accessor: this,\n        });\n        this.doAddPanel(view);\n        const size = typeof options.size === 'number' ? options.size : Sizing.Distribute;\n        const index = typeof options.index === 'number' ? options.index : undefined;\n        view.init({\n            params: (_a = options.params) !== null && _a !== void 0 ? _a : {},\n            minimumBodySize: options.minimumBodySize,\n            maximumBodySize: options.maximumBodySize,\n            isExpanded: options.isExpanded,\n            title: options.title,\n            containerApi: new PaneviewApi(this),\n            accessor: this,\n        });\n        this.paneview.addPane(view, size, index);\n        view.orientation = this.paneview.orientation;\n        return view;\n    }\n    removePanel(panel) {\n        const views = this.panels;\n        const index = views.findIndex((_) => _ === panel);\n        this.paneview.removePane(index);\n        this.doRemovePanel(panel);\n    }\n    movePanel(from, to) {\n        this.paneview.moveView(from, to);\n    }\n    getPanel(id) {\n        return this.panels.find((view) => view.id === id);\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.paneview.orientation === Orientation.HORIZONTAL\n            ? [width, height]\n            : [height, width];\n        this.paneview.layout(size, orthogonalSize);\n    }\n    toJSON() {\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ||\n            value === Number.POSITIVE_INFINITY\n            ? undefined\n            : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        const views = this.paneview\n            .getPanes()\n            .map((view, i) => {\n            const size = this.paneview.getViewSize(i);\n            return {\n                size,\n                data: view.toJSON(),\n                minimumSize: minimum(view.minimumBodySize),\n                maximumSize: maximum(view.maximumBodySize),\n                expanded: view.isExpanded(),\n            };\n        });\n        return {\n            views,\n            size: this.paneview.size,\n        };\n    }\n    fromJSON(serializedPaneview) {\n        this.clear();\n        const { views, size } = serializedPaneview;\n        const queue = [];\n        // take note of the existing dimensions\n        const width = this.width;\n        const height = this.height;\n        this.paneview = new Paneview(this.element, {\n            orientation: Orientation.VERTICAL,\n            descriptor: {\n                size,\n                views: views.map((view) => {\n                    const data = view.data;\n                    const body = this.options.createComponent({\n                        id: data.id,\n                        name: data.component,\n                    });\n                    let header;\n                    if (data.headerComponent &&\n                        this.options.createHeaderComponent) {\n                        header = this.options.createHeaderComponent({\n                            id: data.id,\n                            name: data.headerComponent,\n                        });\n                    }\n                    if (!header) {\n                        header = new DefaultHeader();\n                    }\n                    const panel = new PaneFramework({\n                        id: data.id,\n                        component: data.component,\n                        headerComponent: data.headerComponent,\n                        header,\n                        body,\n                        orientation: Orientation.VERTICAL,\n                        isExpanded: !!view.expanded,\n                        disableDnd: !!this.options.disableDnd,\n                        accessor: this,\n                    });\n                    this.doAddPanel(panel);\n                    queue.push(() => {\n                        var _a;\n                        panel.init({\n                            params: (_a = data.params) !== null && _a !== void 0 ? _a : {},\n                            minimumBodySize: view.minimumSize,\n                            maximumBodySize: view.maximumSize,\n                            title: data.title,\n                            isExpanded: !!view.expanded,\n                            containerApi: new PaneviewApi(this),\n                            accessor: this,\n                        });\n                        panel.orientation = this.paneview.orientation;\n                    });\n                    setTimeout(() => {\n                        // the original onDidAddView events are missed since they are fired before we can subcribe to them\n                        this._onDidAddView.fire(panel);\n                    }, 0);\n                    return { size: view.size, view: panel };\n                }),\n            },\n        });\n        this.layout(width, height);\n        queue.forEach((f) => f());\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        for (const [_, value] of this._viewDisposables.entries()) {\n            value.dispose();\n        }\n        this._viewDisposables.clear();\n        this.paneview.dispose();\n    }\n    doAddPanel(panel) {\n        const disposable = new CompositeDisposable(panel.onDidDrop((event) => {\n            this._onDidDrop.fire(event);\n        }), panel.onUnhandledDragOverEvent((event) => {\n            this._onUnhandledDragOverEvent.fire(event);\n        }));\n        this._viewDisposables.set(panel.id, disposable);\n    }\n    doRemovePanel(panel) {\n        const disposable = this._viewDisposables.get(panel.id);\n        if (disposable) {\n            disposable.dispose();\n            this._viewDisposables.delete(panel.id);\n        }\n    }\n    dispose() {\n        super.dispose();\n        for (const [_, value] of this._viewDisposables.entries()) {\n            value.dispose();\n        }\n        this._viewDisposables.clear();\n        this.paneview.dispose();\n    }\n}\n","import { BasePanelView, } from '../gridview/basePanelView';\nimport { SplitviewPanelApiImpl } from '../api/splitviewPanelApi';\nimport { Orientation } from './splitview';\nimport { Emitter } from '../events';\nexport class SplitviewPanel extends BasePanelView {\n    get priority() {\n        return this._priority;\n    }\n    set orientation(value) {\n        this._orientation = value;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    get minimumSize() {\n        const size = typeof this._minimumSize === 'function'\n            ? this._minimumSize()\n            : this._minimumSize;\n        if (size !== this._evaluatedMinimumSize) {\n            this._evaluatedMinimumSize = size;\n            this.updateConstraints();\n        }\n        return size;\n    }\n    get maximumSize() {\n        const size = typeof this._maximumSize === 'function'\n            ? this._maximumSize()\n            : this._maximumSize;\n        if (size !== this._evaluatedMaximumSize) {\n            this._evaluatedMaximumSize = size;\n            this.updateConstraints();\n        }\n        return size;\n    }\n    get snap() {\n        return this._snap;\n    }\n    constructor(id, componentName) {\n        super(id, componentName, new SplitviewPanelApiImpl(id, componentName));\n        this._evaluatedMinimumSize = 0;\n        this._evaluatedMaximumSize = Number.POSITIVE_INFINITY;\n        this._minimumSize = 0;\n        this._maximumSize = Number.POSITIVE_INFINITY;\n        this._snap = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this.api.initialize(this);\n        this.addDisposables(this._onDidChange, this.api.onWillVisibilityChange((event) => {\n            const { isVisible } = event;\n            const { accessor } = this._params;\n            accessor.setVisible(this, isVisible);\n        }), this.api.onActiveChange(() => {\n            const { accessor } = this._params;\n            accessor.setActive(this);\n        }), this.api.onDidConstraintsChangeInternal((event) => {\n            if (typeof event.minimumSize === 'number' ||\n                typeof event.minimumSize === 'function') {\n                this._minimumSize = event.minimumSize;\n            }\n            if (typeof event.maximumSize === 'number' ||\n                typeof event.maximumSize === 'function') {\n                this._maximumSize = event.maximumSize;\n            }\n            this.updateConstraints();\n        }), this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire({ size: event.size });\n        }));\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    layout(size, orthogonalSize) {\n        const [width, height] = this.orientation === Orientation.HORIZONTAL\n            ? [size, orthogonalSize]\n            : [orthogonalSize, size];\n        super.layout(width, height);\n    }\n    init(parameters) {\n        super.init(parameters);\n        this._priority = parameters.priority;\n        if (parameters.minimumSize) {\n            this._minimumSize = parameters.minimumSize;\n        }\n        if (parameters.maximumSize) {\n            this._maximumSize = parameters.maximumSize;\n        }\n        if (parameters.snap) {\n            this._snap = parameters.snap;\n        }\n    }\n    toJSON() {\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ||\n            value === Number.POSITIVE_INFINITY\n            ? undefined\n            : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        return Object.assign(Object.assign({}, super.toJSON()), { minimumSize: minimum(this.minimumSize), maximumSize: maximum(this.maximumSize) });\n    }\n    updateConstraints() {\n        this.api._onDidConstraintsChange.fire({\n            maximumSize: this._evaluatedMaximumSize,\n            minimumSize: this._evaluatedMinimumSize,\n        });\n    }\n}\n","import { GridviewApi, PaneviewApi, SplitviewApi, } from '../api/component.api';\nimport { DockviewComponent } from '../dockview/dockviewComponent';\nimport { GridviewComponent } from '../gridview/gridviewComponent';\nimport { PaneviewComponent } from '../paneview/paneviewComponent';\nimport { SplitviewComponent } from '../splitview/splitviewComponent';\nexport function createDockview(element, options) {\n    const component = new DockviewComponent(element, options);\n    return component.api;\n}\nexport function createSplitview(element, options) {\n    const component = new SplitviewComponent(element, options);\n    return new SplitviewApi(component);\n}\nexport function createGridview(element, options) {\n    const component = new GridviewComponent(element, options);\n    return new GridviewApi(component);\n}\nexport function createPaneview(element, options) {\n    const component = new PaneviewComponent(element, options);\n    return new PaneviewApi(component);\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { DockviewDisposable, } from 'dockview-core';\n/**\n * This component is intended to interface between vanilla-js and React hence we need to be\n * creative in how we update props.\n * A ref of the component is exposed with an update method; which when called stores the props\n * as a ref within this component and forcefully triggers a re-render of the component using\n * the ref of props we just set on the renderered component as the props passed to the inner\n * component\n */\nconst ReactComponentBridge = (props, ref) => {\n    const [_, triggerRender] = React.useState();\n    const _props = React.useRef(props.componentProps);\n    React.useImperativeHandle(ref, () => ({\n        update: (componentProps) => {\n            _props.current = Object.assign(Object.assign({}, _props.current), componentProps);\n            /**\n             * setting a arbitrary piece of state within this component will\n             * trigger a re-render.\n             * we use this rather than updating through a prop since we can\n             * pass a ref into the vanilla-js world.\n             */\n            triggerRender(Date.now());\n        },\n    }), []);\n    return React.createElement(props.component, _props.current);\n};\nReactComponentBridge.displayName = 'DockviewReactJsBridge';\n/**\n * Since we are storing the React.Portal references in a rendered array they\n * require a key property like any other React element rendered in an array\n * to prevent excessive re-rendering\n */\nconst uniquePortalKeyGenerator = (() => {\n    let value = 1;\n    return { next: () => `dockview_react_portal_key_${(value++).toString()}` };\n})();\nexport const ReactPartContext = React.createContext({});\nexport class ReactPart {\n    constructor(parent, portalStore, component, parameters, context) {\n        this.parent = parent;\n        this.portalStore = portalStore;\n        this.component = component;\n        this.parameters = parameters;\n        this.context = context;\n        this._initialProps = {};\n        this.disposed = false;\n        this.createPortal();\n    }\n    update(props) {\n        if (this.disposed) {\n            throw new Error('invalid operation: resource is already disposed');\n        }\n        if (!this.componentInstance) {\n            // if the component is yet to be mounted store the props\n            this._initialProps = Object.assign(Object.assign({}, this._initialProps), props);\n        }\n        else {\n            this.componentInstance.update(props);\n        }\n    }\n    createPortal() {\n        if (this.disposed) {\n            throw new Error('invalid operation: resource is already disposed');\n        }\n        if (!isReactComponent(this.component)) {\n            /**\n             * we know this isn't a React.FunctionComponent so throw an error here.\n             * if we do not intercept then React library will throw a very obsure error\n             * for the same reason... at least at this point we will emit a sensible stacktrace.\n             */\n            throw new Error('Dockview: Only React.memo(...), React.ForwardRef(...) and functional components are accepted as components');\n        }\n        const bridgeComponent = React.createElement(React.forwardRef(ReactComponentBridge), {\n            component: this\n                .component,\n            componentProps: this.parameters,\n            ref: (element) => {\n                this.componentInstance = element;\n                if (Object.keys(this._initialProps).length > 0) {\n                    this.componentInstance.update(this._initialProps);\n                    this._initialProps = {}; // don't keep a reference to the users object once no longer required\n                }\n            },\n        });\n        const node = this.context\n            ? React.createElement(ReactPartContext.Provider, { value: this.context }, bridgeComponent)\n            : bridgeComponent;\n        const portal = ReactDOM.createPortal(node, this.parent, uniquePortalKeyGenerator.next());\n        this.ref = {\n            portal,\n            disposable: this.portalStore.addPortal(portal),\n        };\n    }\n    dispose() {\n        var _a;\n        (_a = this.ref) === null || _a === void 0 ? void 0 : _a.disposable.dispose();\n        this.disposed = true;\n    }\n}\n/**\n * A React Hook that returns an array of portals to be rendered by the user of this hook\n * and a disposable function to add a portal. Calling dispose removes this portal from the\n * portal array\n */\nexport const usePortalsLifecycle = () => {\n    const [portals, setPortals] = React.useState([]);\n    React.useDebugValue(`Portal count: ${portals.length}`);\n    const addPortal = React.useCallback((portal) => {\n        setPortals((existingPortals) => [...existingPortals, portal]);\n        let disposed = false;\n        return DockviewDisposable.from(() => {\n            if (disposed) {\n                throw new Error('invalid operation: resource already disposed');\n            }\n            disposed = true;\n            setPortals((existingPortals) => existingPortals.filter((p) => p !== portal));\n        });\n    }, []);\n    return [portals, addPortal];\n};\nexport function isReactComponent(component) {\n    /**\n     * Yes, we could use \"react-is\" but that would introduce an unwanted peer dependency\n     * so for now we will check in a rather crude fashion...\n     */\n    return (typeof component === 'function' /** Functional Componnts */ ||\n        !!(component === null || component === void 0 ? void 0 : component.$$typeof) /** React.memo(...) Components */);\n}\n","import { ReactPart } from '../react';\nimport { DockviewEmitter, } from 'dockview-core';\nexport class ReactPanelContentPart {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._onDidFocus = new DockviewEmitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new DockviewEmitter();\n        this.onDidBlur = this._onDidBlur.event;\n        this._element = document.createElement('div');\n        this._element.className = 'dv-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    focus() {\n        // TODO\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n        });\n    }\n    update(event) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update({ params: event.params });\n    }\n    layout(_width, _height) {\n        // noop\n    }\n    dispose() {\n        var _a;\n        this._onDidFocus.dispose();\n        this._onDidBlur.dispose();\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { ReactPart } from '../react';\nexport class ReactPanelHeaderPart {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._element = document.createElement('div');\n        this._element.className = 'dv-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    focus() {\n        //noop\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n        });\n    }\n    update(event) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update({ params: event.params });\n    }\n    layout(_width, _height) {\n        // noop - retrieval from api\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { ReactPart } from '../react';\nexport class ReactWatermarkPart {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._element = document.createElement('div');\n        this._element.className = 'dv-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            group: parameters.group,\n            containerApi: parameters.containerApi,\n        });\n    }\n    focus() {\n        // noop\n    }\n    update(params) {\n        var _a, _b, _c;\n        if (this.parameters) {\n            this.parameters.params = params.params;\n        }\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update({ params: (_c = (_b = this.parameters) === null || _b === void 0 ? void 0 : _b.params) !== null && _c !== void 0 ? _c : {} });\n    }\n    layout(_width, _height) {\n        // noop - retrieval from api\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { ReactPart } from '../react';\nimport { DockviewCompositeDisposable, DockviewMutableDisposable, } from 'dockview-core';\nexport class ReactHeaderActionsRendererPart {\n    get element() {\n        return this._element;\n    }\n    get part() {\n        return this._part;\n    }\n    constructor(component, reactPortalStore, _group) {\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._group = _group;\n        this.mutableDisposable = new DockviewMutableDisposable();\n        this._element = document.createElement('div');\n        this._element.className = 'dv-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    init(parameters) {\n        this.mutableDisposable.value = new DockviewCompositeDisposable(this._group.model.onDidAddPanel(() => {\n            this.updatePanels();\n        }), this._group.model.onDidRemovePanel(() => {\n            this.updatePanels();\n        }), this._group.model.onDidActivePanelChange(() => {\n            this.updateActivePanel();\n        }), parameters.api.onDidActiveChange(() => {\n            this.updateGroupActive();\n        }));\n        this._part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n            panels: this._group.model.panels,\n            activePanel: this._group.model.activePanel,\n            isGroupActive: this._group.api.isActive,\n            group: this._group,\n        });\n    }\n    dispose() {\n        var _a;\n        this.mutableDisposable.dispose();\n        (_a = this._part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n    update(event) {\n        var _a;\n        (_a = this._part) === null || _a === void 0 ? void 0 : _a.update(event.params);\n    }\n    updatePanels() {\n        this.update({ params: { panels: this._group.model.panels } });\n    }\n    updateActivePanel() {\n        this.update({\n            params: {\n                activePanel: this._group.model.activePanel,\n            },\n        });\n    }\n    updateGroupActive() {\n        this.update({\n            params: {\n                isGroupActive: this._group.api.isActive,\n            },\n        });\n    }\n}\n","import React from 'react';\nimport { PROPERTY_KEYS_DOCKVIEW, createDockview, } from 'dockview-core';\nimport { ReactPanelContentPart } from './reactContentPart';\nimport { ReactPanelHeaderPart } from './reactHeaderPart';\nimport { usePortalsLifecycle } from '../react';\nimport { ReactWatermarkPart } from './reactWatermarkPart';\nimport { ReactHeaderActionsRendererPart } from './headerActionsRenderer';\nfunction createGroupControlElement(component, store) {\n    return component\n        ? (groupPanel) => {\n            return new ReactHeaderActionsRendererPart(component, store, groupPanel);\n        }\n        : undefined;\n}\nconst DEFAULT_REACT_TAB = 'props.defaultTabComponent';\nfunction extractCoreOptions(props) {\n    const coreOptions = PROPERTY_KEYS_DOCKVIEW.reduce((obj, key) => {\n        if (key in props) {\n            obj[key] = props[key];\n        }\n        return obj;\n    }, {});\n    return coreOptions;\n}\nexport const DockviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const dockviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    const prevProps = React.useRef({});\n    React.useEffect(() => {\n        const changes = {};\n        PROPERTY_KEYS_DOCKVIEW.forEach((propKey) => {\n            const key = propKey;\n            const propValue = props[key];\n            if (key in props && propValue !== prevProps.current[key]) {\n                changes[key] = propValue;\n            }\n        });\n        if (dockviewRef.current) {\n            dockviewRef.current.updateOptions(changes);\n        }\n        else {\n            // not yet fully initialized\n        }\n        prevProps.current = props;\n    }, PROPERTY_KEYS_DOCKVIEW.map((key) => props[key]));\n    React.useEffect(() => {\n        var _a;\n        if (!domRef.current) {\n            return;\n        }\n        const frameworkTabComponents = (_a = props.tabComponents) !== null && _a !== void 0 ? _a : {};\n        if (props.defaultTabComponent) {\n            frameworkTabComponents[DEFAULT_REACT_TAB] =\n                props.defaultTabComponent;\n        }\n        const frameworkOptions = {\n            createLeftHeaderActionComponent: createGroupControlElement(props.leftHeaderActionsComponent, { addPortal }),\n            createRightHeaderActionComponent: createGroupControlElement(props.rightHeaderActionsComponent, { addPortal }),\n            createPrefixHeaderActionComponent: createGroupControlElement(props.prefixHeaderActionsComponent, { addPortal }),\n            createComponent: (options) => {\n                return new ReactPanelContentPart(options.id, props.components[options.name], {\n                    addPortal,\n                });\n            },\n            createTabComponent(options) {\n                return new ReactPanelHeaderPart(options.id, frameworkTabComponents[options.name], {\n                    addPortal,\n                });\n            },\n            createWatermarkComponent: props.watermarkComponent\n                ? () => {\n                    return new ReactWatermarkPart('watermark', props.watermarkComponent, {\n                        addPortal,\n                    });\n                }\n                : undefined,\n            defaultTabComponent: props.defaultTabComponent\n                ? DEFAULT_REACT_TAB\n                : undefined,\n        };\n        const api = createDockview(domRef.current, Object.assign(Object.assign({}, extractCoreOptions(props)), frameworkOptions));\n        const { clientWidth, clientHeight } = domRef.current;\n        api.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api });\n        }\n        dockviewRef.current = api;\n        return () => {\n            api.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const disposable = dockviewRef.current.onDidDrop((event) => {\n            if (props.onDidDrop) {\n                props.onDidDrop(event);\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.onDidDrop]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const disposable = dockviewRef.current.onWillDrop((event) => {\n            if (props.onWillDrop) {\n                props.onWillDrop(event);\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.onWillDrop]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createComponent: (options) => {\n                return new ReactPanelContentPart(options.id, props.components[options.name], {\n                    addPortal,\n                });\n            },\n        });\n    }, [props.components]);\n    React.useEffect(() => {\n        var _a;\n        if (!dockviewRef.current) {\n            return;\n        }\n        const frameworkTabComponents = (_a = props.tabComponents) !== null && _a !== void 0 ? _a : {};\n        if (props.defaultTabComponent) {\n            frameworkTabComponents[DEFAULT_REACT_TAB] =\n                props.defaultTabComponent;\n        }\n        dockviewRef.current.updateOptions({\n            defaultTabComponent: props.defaultTabComponent\n                ? DEFAULT_REACT_TAB\n                : undefined,\n            createTabComponent(options) {\n                return new ReactPanelHeaderPart(options.id, frameworkTabComponents[options.name], {\n                    addPortal,\n                });\n            },\n        });\n    }, [props.tabComponents, props.defaultTabComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createWatermarkComponent: props.watermarkComponent\n                ? () => {\n                    return new ReactWatermarkPart('watermark', props.watermarkComponent, {\n                        addPortal,\n                    });\n                }\n                : undefined,\n        });\n    }, [props.watermarkComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createRightHeaderActionComponent: createGroupControlElement(props.rightHeaderActionsComponent, { addPortal }),\n        });\n    }, [props.rightHeaderActionsComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createLeftHeaderActionComponent: createGroupControlElement(props.leftHeaderActionsComponent, { addPortal }),\n        });\n    }, [props.leftHeaderActionsComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createPrefixHeaderActionComponent: createGroupControlElement(props.prefixHeaderActionsComponent, { addPortal }),\n        });\n    }, [props.prefixHeaderActionsComponent]);\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nDockviewReact.displayName = 'DockviewComponent';\n","import React from 'react';\nexport const CloseButton = () => (React.createElement(\"svg\", { height: \"11\", width: \"11\", viewBox: \"0 0 28 28\", \"aria-hidden\": 'false', focusable: false, className: \"dockview-svg\" },\n    React.createElement(\"path\", { d: \"M2.1 27.3L0 25.2L11.55 13.65L0 2.1L2.1 0L13.65 11.55L25.2 0L27.3 2.1L15.75 13.65L27.3 25.2L25.2 27.3L13.65 15.75L2.1 27.3Z\" })));\nexport const ExpandMore = () => {\n    return (React.createElement(\"svg\", { width: \"11\", height: \"11\", viewBox: \"0 0 24 15\", \"aria-hidden\": 'false', focusable: false, className: \"dockview-svg\" },\n        React.createElement(\"path\", { d: \"M12 14.15L0 2.15L2.15 0L12 9.9L21.85 0.0499992L24 2.2L12 14.15Z\" })));\n};\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React from 'react';\nimport { CloseButton } from '../svg';\nfunction useTitle(api) {\n    const [title, setTitle] = React.useState(api.title);\n    React.useEffect(() => {\n        const disposable = api.onDidTitleChange((event) => {\n            setTitle(event.title);\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [api]);\n    return title;\n}\nexport const DockviewDefaultTab = (_a) => {\n    var { api, containerApi: _containerApi, params: _params, hideClose, closeActionOverride } = _a, rest = __rest(_a, [\"api\", \"containerApi\", \"params\", \"hideClose\", \"closeActionOverride\"]);\n    const title = useTitle(api);\n    const onClose = React.useCallback((event) => {\n        event.preventDefault();\n        if (closeActionOverride) {\n            closeActionOverride();\n        }\n        else {\n            api.close();\n        }\n    }, [api, closeActionOverride]);\n    const onPointerDown = React.useCallback((e) => {\n        e.preventDefault();\n    }, []);\n    const onClick = React.useCallback((event) => {\n        if (event.defaultPrevented) {\n            return;\n        }\n        api.setActive();\n        if (rest.onClick) {\n            rest.onClick(event);\n        }\n    }, [api, rest.onClick]);\n    return (React.createElement(\"div\", Object.assign({ \"data-testid\": \"dockview-dv-default-tab\" }, rest, { onClick: onClick, className: \"dv-default-tab\" }),\n        React.createElement(\"span\", { className: \"dv-default-tab-content\" }, title),\n        !hideClose && (React.createElement(\"div\", { className: \"dv-default-tab-action\", onPointerDown: onPointerDown, onClick: onClose },\n            React.createElement(CloseButton, null)))));\n};\n","import { SplitviewApi, SplitviewPanel, } from 'dockview-core';\nimport { ReactPart } from '../react';\nexport class ReactPanelView extends SplitviewPanel {\n    constructor(id, component, reactComponent, reactPortalStore) {\n        super(id, component);\n        this.reactComponent = reactComponent;\n        this.reactPortalStore = reactPortalStore;\n    }\n    getComponent() {\n        var _a, _b;\n        return new ReactPart(this.element, this.reactPortalStore, this.reactComponent, {\n            params: (_b = (_a = this._params) === null || _a === void 0 ? void 0 : _a.params) !== null && _b !== void 0 ? _b : {},\n            api: this.api,\n            containerApi: new SplitviewApi(this._params.accessor),\n        });\n    }\n}\n","import React from 'react';\nimport { createSplitview, PROPERTY_KEYS_SPLITVIEW, } from 'dockview-core';\nimport { usePortalsLifecycle } from '../react';\nimport { ReactPanelView } from './view';\nfunction extractCoreOptions(props) {\n    const coreOptions = PROPERTY_KEYS_SPLITVIEW.reduce((obj, key) => {\n        if (key in props) {\n            obj[key] = props[key];\n        }\n        return obj;\n    }, {});\n    return coreOptions;\n}\nexport const SplitviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const splitviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    const prevProps = React.useRef({});\n    React.useEffect(() => {\n        const changes = {};\n        PROPERTY_KEYS_SPLITVIEW.forEach((propKey) => {\n            const key = propKey;\n            const propValue = props[key];\n            if (key in props && propValue !== prevProps.current[key]) {\n                changes[key] = propValue;\n            }\n        });\n        if (splitviewRef.current) {\n            splitviewRef.current.updateOptions(changes);\n        }\n        else {\n            // not yet fully initialized\n        }\n        prevProps.current = props;\n    }, PROPERTY_KEYS_SPLITVIEW.map((key) => props[key]));\n    React.useEffect(() => {\n        if (!domRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const frameworkOptions = {\n            createComponent: (options) => {\n                return new ReactPanelView(options.id, options.name, props.components[options.name], { addPortal });\n            },\n        };\n        const api = createSplitview(domRef.current, Object.assign(Object.assign({}, extractCoreOptions(props)), frameworkOptions));\n        const { clientWidth, clientHeight } = domRef.current;\n        api.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api });\n        }\n        splitviewRef.current = api;\n        return () => {\n            api.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!splitviewRef.current) {\n            return;\n        }\n        splitviewRef.current.updateOptions({\n            createComponent: (options) => {\n                return new ReactPanelView(options.id, options.name, props.components[options.name], { addPortal });\n            },\n        });\n    }, [props.components]);\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nSplitviewReact.displayName = 'SplitviewComponent';\n","import { GridviewApi, GridviewPanel, } from 'dockview-core';\nimport { ReactPart } from '../react';\nexport class ReactGridPanelView extends GridviewPanel {\n    constructor(id, component, reactComponent, reactPortalStore) {\n        super(id, component);\n        this.reactComponent = reactComponent;\n        this.reactPortalStore = reactPortalStore;\n    }\n    getComponent() {\n        var _a, _b;\n        return new ReactPart(this.element, this.reactPortalStore, this.reactComponent, {\n            params: (_b = (_a = this._params) === null || _a === void 0 ? void 0 : _a.params) !== null && _b !== void 0 ? _b : {},\n            api: this.api,\n            // TODO: fix casting hack\n            containerApi: new GridviewApi(this._params\n                .accessor),\n        });\n    }\n}\n","import React from 'react';\nimport { createGridview, PROPERTY_KEYS_GRIDVIEW, } from 'dockview-core';\nimport { ReactGridPanelView } from './view';\nimport { usePortalsLifecycle } from '../react';\nfunction extractCoreOptions(props) {\n    const coreOptions = PROPERTY_KEYS_GRIDVIEW.reduce((obj, key) => {\n        if (key in props) {\n            obj[key] = props[key];\n        }\n        return obj;\n    }, {});\n    return coreOptions;\n}\nexport const GridviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const gridviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    const prevProps = React.useRef({});\n    React.useEffect(() => {\n        const changes = {};\n        PROPERTY_KEYS_GRIDVIEW.forEach((propKey) => {\n            const key = propKey;\n            const propValue = props[key];\n            if (key in props && propValue !== prevProps.current[key]) {\n                changes[key] = propValue;\n            }\n        });\n        if (gridviewRef.current) {\n            gridviewRef.current.updateOptions(changes);\n        }\n        else {\n            // not yet fully initialized\n        }\n        prevProps.current = props;\n    }, PROPERTY_KEYS_GRIDVIEW.map((key) => props[key]));\n    React.useEffect(() => {\n        if (!domRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const frameworkOptions = {\n            createComponent: (options) => {\n                return new ReactGridPanelView(options.id, options.name, props.components[options.name], { addPortal });\n            },\n        };\n        const api = createGridview(domRef.current, Object.assign(Object.assign({}, extractCoreOptions(props)), frameworkOptions));\n        const { clientWidth, clientHeight } = domRef.current;\n        api.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api });\n        }\n        gridviewRef.current = api;\n        return () => {\n            api.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!gridviewRef.current) {\n            return;\n        }\n        gridviewRef.current.updateOptions({\n            createComponent: (options) => {\n                return new ReactGridPanelView(options.id, options.name, props.components[options.name], { addPortal });\n            },\n        });\n    }, [props.components]);\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nGridviewReact.displayName = 'GridviewComponent';\n","import { ReactPart } from '../react';\nexport class PanePanelSection {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._element = document.createElement('div');\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            title: parameters.title,\n            containerApi: parameters.containerApi,\n        });\n    }\n    toJSON() {\n        return {\n            id: this.id,\n        };\n    }\n    update(params) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update(params.params);\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import React from 'react';\nimport { createPaneview, PROPERTY_KEYS_PANEVIEW, } from 'dockview-core';\nimport { usePortalsLifecycle } from '../react';\nimport { PanePanelSection } from './view';\nfunction extractCoreOptions(props) {\n    const coreOptions = PROPERTY_KEYS_PANEVIEW.reduce((obj, key) => {\n        if (key in props) {\n            obj[key] = props[key];\n        }\n        return obj;\n    }, {});\n    return coreOptions;\n}\nexport const PaneviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const paneviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    const prevProps = React.useRef({});\n    React.useEffect(() => {\n        const changes = {};\n        PROPERTY_KEYS_PANEVIEW.forEach((propKey) => {\n            const key = propKey;\n            const propValue = props[key];\n            if (key in props && propValue !== prevProps.current[key]) {\n                changes[key] = propValue;\n            }\n        });\n        if (paneviewRef.current) {\n            paneviewRef.current.updateOptions(changes);\n        }\n        else {\n            // not yet fully initialized\n        }\n        prevProps.current = props;\n    }, PROPERTY_KEYS_PANEVIEW.map((key) => props[key]));\n    React.useEffect(() => {\n        var _a;\n        if (!domRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const headerComponents = (_a = props.headerComponents) !== null && _a !== void 0 ? _a : {};\n        const frameworkOptions = {\n            createComponent: (options) => {\n                return new PanePanelSection(options.id, props.components[options.name], { addPortal });\n            },\n            createHeaderComponent: (options) => {\n                return new PanePanelSection(options.id, headerComponents[options.name], { addPortal });\n            },\n        };\n        const api = createPaneview(domRef.current, Object.assign(Object.assign({}, extractCoreOptions(props)), frameworkOptions));\n        const { clientWidth, clientHeight } = domRef.current;\n        api.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api });\n        }\n        paneviewRef.current = api;\n        return () => {\n            api.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return;\n        }\n        paneviewRef.current.updateOptions({\n            createComponent: (options) => {\n                return new PanePanelSection(options.id, props.components[options.name], { addPortal });\n            },\n        });\n    }, [props.components]);\n    React.useEffect(() => {\n        var _a;\n        if (!paneviewRef.current) {\n            return;\n        }\n        const headerComponents = (_a = props.headerComponents) !== null && _a !== void 0 ? _a : {};\n        paneviewRef.current.updateOptions({\n            createHeaderComponent: (options) => {\n                return new PanePanelSection(options.id, headerComponents[options.name], { addPortal });\n            },\n        });\n    }, [props.headerComponents]);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const disposable = paneviewRef.current.onDidDrop((event) => {\n            if (props.onDidDrop) {\n                props.onDidDrop(event);\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.onDidDrop]);\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nPaneviewReact.displayName = 'PaneviewComponent';\n","import * as React from 'react';\nimport './codeSandboxButton.scss';\nimport { ThemePicker } from './container';\n\nconst BASE_SANDBOX_URL =\n    'https://codesandbox.io/s/github/mathuo/dockview/tree/master/packages/docs/sandboxes';\n\nconst createSvgElementFromPath = (params: {\n    height: string;\n    width: string;\n    viewbox: string;\n    path: string;\n}) => {\n    return (\n        <svg\n            height={params.height}\n            width={params.width}\n            viewBox={params.viewbox}\n            focusable={false}\n            className={'dockview-svg'}\n        >\n            <path d={params.path} />\n        </svg>\n    );\n};\n\nconst CloseButton = () =>\n    createSvgElementFromPath({\n        width: '16',\n        height: '16',\n        viewbox: '0 0 50 58',\n        path: 'M22.5581 50.9938V30.1717L4.65116 19.869V31.7386L12.8536 36.4939V45.4198L22.5581 50.9938ZM27.2093 51.1162L37.0931 45.4226V36.2851L45.3488 31.501V19.7801L27.2093 30.2529V51.1162ZM42.9633 15.7867L33.4288 10.2615L25.0571 15.1193L16.6219 10.2567L7.00237 15.8557L24.9542 26.1842L42.9633 15.7867ZM0 43.4008V14.5498L24.9974 0L50 14.4887V43.3552L24.9969 57.7584L0 43.4008Z',\n    });\n\nexport const CodeSandboxButton = (props: {\n    id: string;\n    hideThemePicker?: boolean;\n}) => {\n    const url = React.useMemo(() => {\n        if (!props.id) {\n            return '';\n        }\n        return `${BASE_SANDBOX_URL}/${props.id}`;\n    }, [props.id]);\n\n    return (\n        <>\n            {!props.hideThemePicker && <ThemePicker />}\n            <span\n                className=\"codesandbox-button\"\n                style={{ display: 'flex', alignItems: 'center' }}\n            >\n                <span className=\"codesandbox-button-pretext\">{`Open in `}</span>\n                <a\n                    href={url}\n                    target={'_blank'}\n                    rel='noopener'\n                    className=\"codesandbox-button-content\"\n                >\n                    <span\n                        style={{\n                            fontWeight: 'bold',\n                            paddingRight: '4px',\n                        }}\n                    >\n                        CodeSandbox\n                    </span>\n                    <CloseButton />\n                </a>\n            </span>\n        </>\n    );\n};\n","import * as React from 'react';\nimport './spinner.scss';\n\nexport const Spinner = () => {\n    return (\n        <div className=\"lds-ellipsis\">\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n        </div>\n    );\n};\n","import * as React from 'react';\nimport { CodeSandboxButton } from './codeSandboxButton';\nimport useBaseUrl from '@docusaurus/useBaseUrl';\nimport './container.scss';\nimport { Spinner } from './spinner';\nimport BrowserOnly from '@docusaurus/BrowserOnly';\n\nexport const Container = (props: {\n    children?: React.ReactNode;\n    height?: number;\n    injectVanillaJS?: (parent: HTMLElement) => void;\n    sandboxId?: string;\n}) => {\n    const ref = React.useRef<HTMLDivElement>(null);\n\n    React.useEffect(() => {\n        if (!props.injectVanillaJS) {\n            return;\n        }\n\n        props.injectVanillaJS(ref.current);\n    }, [props.injectVanillaJS]);\n\n    return (\n        <BrowserOnly>\n            {() => (\n                <>\n                    <div\n                        ref={ref}\n                        style={{\n                            height: props.height\n                                ? `${props.height}px`\n                                : '300px',\n                        }}\n                    >\n                        {props.children}\n                    </div>\n                    <div\n                        style={{\n                            padding: '2px 0px',\n                            display: 'flex',\n                            alignItems: 'center',\n                            fontSize: '14px',\n                        }}\n                    >\n                        <span style={{ flexGrow: 1 }} />\n                        {props.sandboxId && (\n                            <CodeSandboxButton id={props.sandboxId} />\n                        )}\n                    </div>\n                </>\n            )}\n        </BrowserOnly>\n    );\n};\n\nconst ReactIcon = (props: { height: number; width: number }) => {\n    return (\n        <img\n            // className=\"dockview-svg\"\n            style={{ marginRight: '0px 4px' }}\n            height={props.height}\n            width={props.width}\n            src={useBaseUrl('img/react-icon.svg')}\n        />\n    );\n};\n\nconst JavascriptIcon = (props: { height: number; width: number }) => {\n    return (\n        <img\n            // className=\"dockview-svg \"\n            style={{ marginRight: '0px 4px' }}\n            height={props.height}\n            width={props.width}\n            src={useBaseUrl('img/js-icon.svg')}\n        />\n    );\n};\n\nconst themes = [\n    'dockview-theme-abyss',\n    'dockview-theme-dark',\n    'dockview-theme-light',\n    'dockview-theme-vs',\n    'dockview-theme-dracula',\n    'dockview-theme-replit',\n];\n\nfunction useLocalStorageItem(key: string, defaultValue: string): string {\n    const [item, setItem] = React.useState<string | null>(\n        localStorage.getItem(key)\n    );\n\n    React.useEffect(() => {\n        const listener = (event: StorageEvent) => {\n            setItem(localStorage.getItem(key));\n        };\n\n        window.addEventListener('storage', listener);\n\n        setItem(localStorage.getItem(key));\n\n        return () => {\n            window.removeEventListener('storage', listener);\n        };\n    }, [key]);\n\n    return item === null ? defaultValue : item;\n}\n\nexport const ThemePicker = () => {\n    const [theme, setTheme] = React.useState<string>(\n        localStorage.getItem('dv-theme-class-name') || themes[0]\n    );\n\n    React.useEffect(() => {\n        localStorage.setItem('dv-theme-class-name', theme);\n        window.dispatchEvent(new StorageEvent('storage'));\n    }, [theme]);\n\n    return (\n        <div\n            style={{\n              \n                height: '20px',\n                display: 'flex',\n                alignItems: 'center',\n                padding: '0px 0px 0px 4px',\n            }}\n        >\n            <span style={{ paddingRight: '4px' }}>{'Theme: '}</span>\n            <select\n                style={{ backgroundColor: 'inherit', color: 'inherit' }}\n                onChange={(e) => setTheme(e.target.value)}\n                value={theme}\n            >\n                {themes.map((theme) => (\n                    <option key={theme} value={theme}>\n                        {theme}\n                    </option>\n                ))}\n            </select>\n        </div>\n    );\n};\n\nexport function useTheme(): string {\n    return useLocalStorageItem('dv-theme-class-name', 'dockview-theme-abyss');\n}\n\nexport const MultiFrameworkContainer2 = (props: {\n    react: React.FC;\n    typescript?: (parent: HTMLElement) => { dispose: () => void };\n    sandboxId: string;\n    height?: number;\n    hideThemePicker?: boolean;\n}) => {\n    const ref = React.useRef<HTMLDivElement>(null);\n\n    const [framework, setFramework] = React.useState<string>('React');\n\n    const [animation, setAnimation] = React.useState<boolean>(false);\n\n    const theme = useLocalStorageItem(\n        'dv-theme-class-name',\n        'dockview-theme-abyss'\n    );\n\n    React.useEffect(() => {\n        setAnimation(true);\n\n        setTimeout(() => {\n            setAnimation(false);\n        }, 500);\n    }, [framework]);\n\n    React.useEffect(() => {\n        if (!ref.current) {\n            return;\n        }\n\n        if (framework === 'Javascript') {\n            const disposable = props.typescript(ref.current);\n\n            return () => {\n                disposable.dispose();\n            };\n        }\n\n        return;\n    }, [props.typescript, framework]);\n\n    const sandboxId = React.useMemo(() => {\n        if (framework === 'Javascript') {\n            return `javascript/${props.sandboxId}`;\n        }\n        return props.sandboxId;\n    }, [props.sandboxId, framework]);\n\n    return (\n        <>\n            <div\n                ref={ref}\n                style={{\n                    position: 'relative',\n                    height: props.height ? `${props.height}px` : '300px',\n                }}\n            >\n                {animation && (\n                    <div\n                        style={{\n                            background: 'rgba(30,30,30)',\n                            position: 'absolute',\n                            zIndex: 9999,\n                            top: 0,\n                            left: 0,\n                            width: '100%',\n                            height: '100%',\n                            display: 'flex',\n                            justifyContent: 'center',\n                            alignItems: 'center',\n                        }}\n                    >\n                        <Spinner />\n                    </div>\n                )}\n                {framework === 'React' && <props.react theme={theme} />}\n            </div>\n            <div\n                style={{\n                    margin: '2px 0px',\n                    padding: '2px 0px',\n                    display: 'flex',\n                    alignItems: 'center',\n                    fontSize: '14px',\n                    height: '24px',\n                }}\n            >\n                <div\n                    className=\"framework-button\"\n                    style={{\n                        display: 'flex',\n                        alignItems: 'center',\n                        cursor: 'pointer',\n                    }}\n                >\n                    {props.typescript &&\n                        (framework === 'React' ? (\n                            <ReactIcon height={16} width={16} />\n                        ) : (\n                            <JavascriptIcon height={16} width={16} />\n                        ))}\n                    {props.typescript && (\n                        <select\n                            style={{\n                                border: 'none',\n                                fontWeight: 'bold',\n                                backgroundColor: 'inherit',\n                                cursor: 'inherit',\n                                color: 'inherit',\n                                height: '24px',\n                            }}\n                            onChange={(e) => {\n                                const target = e.target as HTMLSelectElement;\n                                setFramework(target.value);\n                            }}\n                        >\n                            <option value=\"React\">{'React'}</option>\n                            <option value=\"Javascript\">{'Javascript'}</option>\n                        </select>\n                    )}\n                </div>\n                <span style={{ flexGrow: 1 }} />\n                <CodeSandboxButton\n                    id={sandboxId}\n                    hideThemePicker={props.hideThemePicker}\n                />\n            </div>\n        </>\n    );\n};\n\nexport const MultiFrameworkContainer = (props: {\n    react: React.FC;\n    typescript?: (parent: HTMLElement) => { dispose: () => void };\n    sandboxId: string;\n    height?: number;\n    hideThemePicker?: boolean;\n}) => {\n    return (\n        <BrowserOnly>\n            {() => <MultiFrameworkContainer2 {...props} />}\n        </BrowserOnly>\n    );\n};\n","import {\n    DockviewApi,\n    DockviewReact,\n    DockviewReadyEvent,\n    IDockviewPanelProps,\n} from 'dockview';\nimport './app.scss';\nimport * as React from 'react';\n\nconst components = {\n    default: (props: IDockviewPanelProps<{ title: string }>) => {\n        const [active, setActive] = React.useState<boolean>(props.api.isActive);\n        const ref = React.useRef<HTMLInputElement>(null);\n\n        React.useEffect(() => {\n            const disposable = props.api.onDidActiveChange((event) => {\n                setActive(props.api.isActive);\n            });\n\n            return () => {\n                disposable.dispose();\n            };\n        }, [props.api]);\n\n        return (\n            <div\n                className=\"keyboard-example-panel\"\n                style={{ padding: '20px', color: 'white' }}\n            >\n                <div style={{ padding: '10px 0px' }}>\n                    <span>{props.api.title}</span>\n                </div>\n                <div className=\"keyboard-example-description\">\n                    {'Use '}\n                    <span className=\"keyboard-example-shortcut\">\n                        {'Ctrl+ArrowLeft'}\n                    </span>\n                    {' and '}\n                    <span className=\"keyboard-example-shortcut \">\n                        {'Ctrl+ArrowRight'}\n                    </span>\n                    {' to nativgate between tabs.'}\n                </div>\n\n                <div>\n                    <span>{'isPanelActive: '}</span>\n                    <span>{active ? 'true' : 'false'}</span>\n                </div>\n            </div>\n        );\n    },\n};\n\nconst DockviewDemo = (props: { theme?: string }) => {\n    const [api, setApi] = React.useState<DockviewApi>();\n\n    const onReady = (event: DockviewReadyEvent) => {\n        event.api.addPanel({\n            id: 'panel_1',\n            component: 'default',\n            title: 'Panel 1',\n        });\n        event.api.addPanel({\n            id: 'panel_2',\n            component: 'default',\n            title: 'Panel 2',\n        });\n        event.api.addPanel({\n            id: 'panel_3',\n            component: 'default',\n            title: 'Panel 3',\n        });\n        event.api.addPanel({\n            id: 'panel_4',\n            component: 'default',\n            title: 'Panel 4',\n            position: { referencePanel: 'panel_3', direction: 'right' },\n        });\n        event.api.addPanel({\n            id: 'panel_5',\n            component: 'default',\n            title: 'Panel 5',\n            position: { referencePanel: 'panel_4', direction: 'within' },\n        });\n\n        event.api.getPanel('panel_1')!.api.setActive();\n\n        setApi(event.api);\n    };\n\n    const onKeyDown = (event: React.KeyboardEvent) => {\n        if (!api) {\n            return;\n        }\n\n        if (event.ctrlKey && event.code === 'ArrowLeft') {\n            // move backwards\n            api.moveToPrevious({ includePanel: true });\n        }\n\n        if (event.ctrlKey && event.code === 'ArrowRight') {\n            // move backwards\n            api.moveToNext({ includePanel: true });\n        }\n    };\n\n    return (\n        <div style={{ height: '100%' }} onKeyDown={onKeyDown}>\n            <DockviewReact\n                components={components}\n                onReady={onReady}\n                className={props.theme || 'dockview-theme-abyss'}\n            />\n        </div>\n    );\n};\n\nexport default DockviewDemo;\n","\n\nexport const frontMatter = {\n\ttitle: 'Keyboard'\n};\nexport const contentTitle = 'Keyboard Navigation';\nexport const metadata = {\n  \"id\": \"advanced/keyboard\",\n  \"title\": \"Keyboard\",\n  \"description\": \"Keyboard shortcuts\",\n  \"source\": \"@site/docs/advanced/keyboard.mdx\",\n  \"sourceDirName\": \"advanced\",\n  \"slug\": \"/advanced/keyboard\",\n  \"permalink\": \"/docs/advanced/keyboard\",\n  \"draft\": false,\n  \"unlisted\": false,\n  \"tags\": [],\n  \"version\": \"current\",\n  \"frontMatter\": {\n    \"title\": \"Keyboard\"\n  },\n  \"sidebar\": \"tutorialSidebar\",\n  \"previous\": {\n    \"title\": \"iframes\",\n    \"permalink\": \"/docs/advanced/iframe\"\n  },\n  \"next\": {\n    \"title\": \"Nested Instances\",\n    \"permalink\": \"/docs/advanced/nested\"\n  }\n};\nexport const assets = {\n\n};\n\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport {MultiFrameworkContainer} from '@site/src/components/ui/container';\nimport DockviewKeyboard from '@site/sandboxes/keyboard-dockview/src/app';\nexport const toc = [];\nfunction _createMdxContent(props) {\n  const _components = {\n    h1: \"h1\",\n    p: \"p\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      id: \"keyboard-navigation\",\n      children: \"Keyboard Navigation\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Keyboard shortcuts\"\n    }), \"\\n\", _jsx(MultiFrameworkContainer, {\n      height: 600,\n      sandboxId: \"keyboard-dockview\",\n      react: DockviewKeyboard\n    })]\n  });\n}\nexport default function MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\n\n","/**\n * @typedef {import('mdx/types.js').MDXComponents} MDXComponents\n * @typedef {import('react').Component<{}, {}, unknown>} Component\n * @typedef {import('react').ReactNode} ReactNode\n */\n\n/**\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Readonly<MDXComponents>} currentComponents\n *   Current components from the context.\n * @returns {MDXComponents}\n *   Additional components.\n *\n * @typedef Props\n *   Configuration for `MDXProvider`.\n * @property {ReactNode | null | undefined} [children]\n *   Children (optional).\n * @property {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context (default: `false`).\n */\n\nimport React from 'react'\n\n/** @type {Readonly<MDXComponents>} */\nconst emptyComponents = {}\n\nconst MDXContext = React.createContext(emptyComponents)\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @returns {MDXComponents}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(\n    function () {\n      // Custom merge via a function prop\n      if (typeof components === 'function') {\n        return components(contextComponents)\n      }\n\n      return {...contextComponents, ...components}\n    },\n    [contextComponents, components]\n  )\n}\n\n/**\n * Provider for MDX context.\n *\n * @param {Readonly<Props>} props\n *   Props.\n * @returns {JSX.Element}\n *   Element.\n * @satisfies {Component}\n */\nexport function MDXProvider(props) {\n  /** @type {Readonly<MDXComponents>} */\n  let allComponents\n\n  if (props.disableParentContext) {\n    allComponents =\n      typeof props.components === 'function'\n        ? props.components(emptyComponents)\n        : props.components || emptyComponents\n  } else {\n    allComponents = useMDXComponents(props.components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    props.children\n  )\n}\n"],"names":["BrowserOnly","_ref","children","fallback","useIsBrowser","_jsx","_Fragment","TransferObject","PanelTransfer","constructor","viewId","groupId","panelId","super","this","PaneTransfer","paneId","LocalSelectionTransfer","getInstance","INSTANCE","hasData","proto","clearData","undefined","data","getData","setData","getPanelData","panelTransfer","prototype","getPaneData","paneTransfer","Event","Disposable","any","_len","arguments","length","Array","_key","listener","disposables","map","child","dispose","forEach","d","DockviewEvent","_defaultPrevented","defaultPrevented","preventDefault","AcceptableEvent","_isAccepted","isAccepted","accept","Stacktrace","create","_a","Error","stack","value","print","console","warn","Listener","callback","stacktrace","Emitter","setLeakageMonitorEnabled","isEnabled","ENABLE_TRACKING","MEMORY_LEAK_WATCHER","clear","_last","options","_listeners","_disposed","event","_event","replay","push","index","indexOf","splice","add","fire","e","queueMicrotask","delete","addDisposableWindowListener","element","type","addEventListener","removeEventListener","addDisposableListener","events","Map","size","set","AsapEvent","_onFired","_currentFireCount","_queued","onEvent","fireCountAtTimeOfEventSubscription","NONE","from","func","CompositeDisposable","isDisposed","_isDisposed","args","_disposables","addDisposables","_len2","_key2","arg","MutableDisposable","_disposable","disposable","watchElementResize","cb","observer","ResizeObserver","entires","requestAnimationFrame","firstEntry","observe","unobserve","disconnect","removeClasses","classes","classname","classList","contains","remove","addClasses","toggleClass","className","isToggled","hasClass","isAncestor","testChild","testAncestor","parentNode","getElementsByTagName","tag","slice","call","document","trackFocus","FocusTracker","_onDidFocus","onDidFocus","_onDidBlur","onDidBlur","hasFocus","activeElement","loosingFocus","onFocus","onBlur","window","setTimeout","_refreshStateHandler","HTMLElement","refreshState","QUASI_PREVENT_DEFAULT_KEY","quasiDefaultPrevented","getDomNodePagePosition","domNode","left","top","width","height","getBoundingClientRect","scrollX","scrollY","disableIframePointEvents","iframes","original","WeakMap","iframe","style","pointerEvents","release","get","Classnames","_classNames","setClassNames","classNames","split","filter","v","trim","tail","arr","sequenceEquals","arr1","arr2","i","pushToStart","unshift","pushToEnd","array","findIndex","t","clamp","min","max","Math","sequentialNumberGenerator","next","toString","range","to","result","ViewItem","_size","cachedVisibleSize","_cachedVisibleSize","visible","minimumSize","view","viewMinimumSize","maximumSize","viewMaximumSize","priority","snap","enabled","container","setVisible","toggle","Orientation","SashState","LayoutPriority","Sizing","Distribute","Split","Invisible","Splitview","contentSize","_contentSize","orthogonalSize","_orthogonalSize","viewItems","proportions","_proportions","orientation","_orientation","tmp","HORIZONTAL","reduce","r","item","Number","POSITIVE_INFINITY","startSnappingEnabled","_startSnappingEnabled","updateSashEnablement","endSnappingEnabled","_endSnappingEnabled","disabled","_disabled","margin","_margin","_this","sashes","_onDidSashEnd","onDidSashEnd","_onDidAddView","onDidAddView","_onDidRemoveView","onDidRemoveView","resize","delta","sizes","lowPriorityIndexes","highPriorityIndexes","overloadMinDelta","overloadMaxDelta","snapBefore","snapAfter","x","NEGATIVE_INFINITY","upIndexes","downIndexes","upItems","upSizes","downItems","downSizes","minDeltaUp","_","maxDeltaUp","maxDeltaDown","minDeltaDown","minDelta","maxDelta","snapped","snapView","limitDelta","actualDelta","deltaUp","viewDelta","deltaDown","createContainer","proportionalLayout","viewContainer","createViewContainer","sashContainer","createSashContainer","appendChild","styles","descriptor","views","viewDescriptor","sizing","addView","saveProportions","separatorBorder","removeProperty","setProperty","isViewVisible","setViewVisible","viewItem","distributeEmptySpace","layoutViews","getViewSize","resizeView","indexes","Low","High","round","relayout","getViews","onDidChange","skipLayout","createElement","viewSize","newSize","removeChild","insertBefore","sash","onPointerStart","start","clientX","clientY","sashIndex","fn","firstIndex","s","snapBeforeIndex","findFirstSnapIndex","snapAfterIndex","snappedViewItem","halfSize","floor","onPointerMove","end","sashItem","distributeViewSizes","flexibleViewItems","flexibleSize","removeView","getViewCachedVisibleSize","moveView","layout","previousSize","total","proportion","lowPriorityIndex","emptyDelta","visibleViewItems","sashCount","marginReducedSize","totalLeftOffset","viewLeftOffsets","runningVisiblePanelCount","flag","visiblePanelsBeforeThisView","offset","sashWidth","VERTICAL","previous","collapsesDown","expandsDown","reverseViews","reverse","collapsesUp","expandsUp","position","snappedBefore","snappedAfter","updateSash","MINIMUM","MAXIMUM","DISABLED","ENABLED","state","orientationClassname","PROPERTY_KEYS_SPLITVIEW","properties","disableAutoResizing","Object","keys","Paneview","splitview","paneItems","skipAnimation","_onDidChange","getPanes","pane","onDidChangeExpansionState","setupAnimation","paneItem","addPane","removePane","skipDispose","animationTimer","clearTimeout","LeafNode","minimumWidth","maximumWidth","minimumHeight","maximumHeight","minimumOrthogonalSize","maximumOrthogonalSize","BranchNode","c","Normal","priorities","some","p","childDescriptors","_childrenDisposable","_onDidVisibilityChange","onDidVisibilityChange","childDescriptor","node","setupChildrenEvents","_visible","isChildVisible","setChildVisible","wereAllChildrenHidden","areAllChildrenHidden","moveChild","_removeChild","_addChild","getChildSize","resizeChild","addChild","getChildCachedVisibleSize","findLeaf","candiateNode","last","flipNode","orthogonal","totalSize","childSize","getGridLocation","parentElement","test","el","firstElementChild","lastElementChild","nextElementSibling","indexInParent","getRelativeLocation","rootOrientation","location","direction","getLocationOrientation","directionOrientation","getDirectionOrientation","rest","_index","serializeBranchNode","box","isGridBranchNode","toJSON","Gridview","_root","root","locked","_locked","branch","pop","maximizedView","_maximizedNode","leaf","hasMaximizedView","maximizeView","getNode","exitMaximizedView","getView","hiddenOnMaximize","hideAllViewsBut","parent","exclude","_onDidMaximizedNodeChange","isMaximized","showViewsInReverseOrder","includes","serialize","maxmizedViewLocation","resullt","maximizedNode","_onDidViewVisibilityChange","deserialize","json","deserializer","_deserialize","_deserializeNode","serializedChild","fromJSON","oldRoot","insertOrthogonalSplitviewAtRoot","childReference","progmaticSelect","_getViews","nodeCachedVisibleSize","path","n","l","onDidViewVisibilityChange","onDidMaximizedNodeChange","parentLocation","pathToParent","grandParent","parentIndex","__","newSiblingSize","newSiblingCachedVisibleSize","newParent","newSibling","nodeToRemove","sibling","isSiblingVisible","siblingSizing","PROPERTY_KEYS_GRIDVIEW","hideBorders","Resizable","_element","disableResizing","_disableResizing","entry","offsetParent","currentElement","DocumentFragment","host","isInDocument","contentRect","nextLayoutId","toTarget","BaseGrid","id","_id","_groups","groups","values","gridview","activeGroup","_activeGroup","_onDidRemove","onDidRemove","_onDidAdd","onDidAdd","_onDidMaximizedChange","onDidMaximizedChange","_onDidActiveChange","onDidActiveChange","_bufferOnDidLayoutChange","onDidLayoutChange","_onDidViewVisibilityChangeMicroTaskQueue","onDidViewVisibilityChangeMicroTaskQueue","panel","isVisible","updateOptions","_b","_c","_d","maximizeGroup","doSetGroupActive","isMaximizedGroup","exitMaximizedGroup","hasMaximizedGroup","doAddGroup","group","doRemoveGroup","has","skipActive","getPanel","setActive","removeGroup","moveToNext","moveToPrevious","forceResize","SplitviewApi","component","panels","onDidLayoutFromJSON","removePanel","focus","addPanel","movePanel","PaneviewApi","onDidDrop","onUnhandledDragOverEvent","GridviewApi","onDidAddPanel","onDidAddGroup","onDidRemovePanel","onDidRemoveGroup","onDidActivePanelChange","onDidActiveGroupChange","force","DockviewApi","totalPanels","gap","onDidMovePanel","onWillDrop","onWillShowOverlay","onWillDragGroup","onWillDragPanel","activePanel","getGroupPanel","addGroup","closeAllGroups","getGroup","addFloatingGroup","onDidMaximizedGroupChange","addPopoutGroup","setGap","DragHandler","dataDisposable","pointerEventsDisposable","_onDragStart","onDragStart","configure","isCancelled","dataTransfer","effectAllowed","items","DragAndDropObserver","callbacks","target","registerListeners","onDragEnter","onDragOver","onDragLeave","onDragEnd","onDrop","WillShowOverlayEvent","nativeEvent","directionToPosition","positionToDirection","DEFAULT_ACTIVATION_SIZE","DEFAULT_SIZE","Droptarget","_state","_onDrop","_onWillShowOverlay","_acceptedTargetZonesSet","Set","acceptedTargetZones","dnd","removeDropTarget","clientWidth","clientHeight","rect","currentTarget","y","quadrant","calculateQuadrant","isAlreadyUsed","canDisplayOverlay","willShowOverlayEvent","markAsUsed","targetElement","overlayElement","append","toggleClasses","stopPropagation","setTargetZones","setOverlayModel","model","overlayModel","USED_EVENT_ID","isSmallX","isSmallY","isLeft","isRight","isTop","isBottom","rightClass","leftClass","topClass","bottomClass","sizeOptions","overlayType","activationSizeOptions","activationSize","threshold","xp","yp","calculateQuadrantAsPercentage","calculateQuadrantAsPixels","PROPERTY_KEYS_PANEVIEW","disableDnd","PaneviewUnhandledDragOverEvent","WillFocusEvent","PanelApiImpl","isFocused","_isFocused","isActive","_isActive","_isVisible","_width","_height","_parameters","panelUpdatesDisposable","_onDidDimensionChange","onDidDimensionsChange","_onDidChangeFocus","onDidFocusChange","_onWillFocus","onWillFocus","_onWillVisibilityChange","onWillVisibilityChange","_onActiveChange","onActiveChange","_onDidParametersChange","onDidParametersChange","getParameters","initialize","parameters","update","params","updateParameters","SplitviewPanelApiImpl","_onDidConstraintsChangeInternal","onDidConstraintsChangeInternal","_onDidConstraintsChange","onDidConstraintsChange","_onDidSizeChange","onDidSizeChange","setConstraints","setSize","PaneviewPanelApiImpl","_pane","_onDidExpansionChange","onDidExpansionChange","_onMouseEnter","onMouseEnter","_onMouseLeave","onMouseLeave","setExpanded","isExpanded","BasePanelView","_params","api","tabIndex","outline","overflow","focusTracker","part","init","getComponent","assign","key","PaneviewPanel","headerSize","_minimumBodySize","_maximumBodySize","minimumBodySize","maximumBodySize","headerVisible","_headerVisible","header","display","headerComponent","isHeaderVisible","_onDidChangeExpansionState","_isExpanded","expandedSize","accessor","ev","isPanelExpanded","renderOnce","expanded","body","bodyPart","getBodyComponent","headerPart","getHeaderComponent","title","lineHeight","minHeight","maxHeight","DraggablePaneviewPanel","_onDidDrop","_onUnhandledDragOverEvent","initDragFeatures","accessorId","draggable","handler","firedEvent","containerApi","existingPanel","allPanels","fromIndex","toIndex","ContentContainer","dropTarget","shiftKey","show","hide","renderPanel","asActive","doRender","isPanelActive","content","renderer","renderContainer","detatch","attach","referenceContainer","openPanel","closePanel","TabDragHandler","Tab","_onChanged","onChanged","_onDropped","dragHandler","setContent","GroupDragHandler","dragEvent","getComputedStyle","bgColor","getPropertyValue","color","ghostElement","backgroundColor","padding","fontSize","borderRadius","textContent","setDragImage","addGhostImage","VoidContainer","dropTraget","TabsContainer","tabs","hidden","_hidden","setRightActionsElement","rightActions","rightActionsContainer","setLeftActionsElement","leftActions","leftActionsContainer","setPrefixActionsElement","preActions","preActionsContainer","tab","selectedIndex","_onTabDragStart","onTabDragStart","_onGroupDragStart","onGroupDragStart","singleTabMode","tabContainer","voidContainer","WillShowOverlayLocationEvent","kind","disableFloatingGroups","rootTop","rootLeft","inDragMode","button","_isGroupActive","tabToRemove","updateClassnames","setActivePanel","isActivePanel","find","isFloatingGroupsEnabled","isFloatingWithOnePanel","addTab","DockviewUnhandledDragOverEvent","PROPERTY_KEYS_DOCKVIEW","floatingGroupBounds","popoutUrl","defaultRenderer","debug","rootOverlayModel","noPanelsOverlay","DockviewDidDropEvent","DockviewWillDropEvent","_kind","DockviewGroupPanelModel","_activePanel","_panels","isEmpty","hasWatermark","watermark","tabsContainer","isContentFocused","contentContainer","_location","groupPanel","_onDidLocationChange","mostRecentlyUsed","_overwriteRenderContainer","_panelDisposables","_onMove","onMove","_onWillDrop","_onDidAddPanel","_onDidPanelTitleChange","onDidPanelTitleChange","_onDidPanelParametersChange","onDidPanelParametersChange","_onDidRemovePanel","_onDidActivePanelChange","_api","hideHeader","handleDropEvent","focusContent","rerender","overlayRenderContainer","doAddPanel","updateContainer","createRightHeaderActionComponent","_rightHeaderActions","createLeftHeaderActionComponent","_leftHeaderActions","createPrefixHeaderActionComponent","_prefixHeaderActions","activeView","normalizedIndex","suppressRoll","containsPanel","skipSetActive","updateParentGroup","doSetActivePanel","skipSetGroupActive","groupItemOrId","panelToRemove","_removePanel","closeAllPanels","arrPanelCpy","doClose","isLast","removeEmptyGroup","updateActions","isGroupActive","doRemovePanel","nextPanel","skipSetActiveGroup","hasExistingPanel","updateMru","onDidTitleChange","runEvents","createWatermarkComponent","willDropEvent","getKind","itemId","GridviewPanelApiImpl","GridviewPanel","_priority","_snap","__minimumWidth","__minimumHeight","__maximumHeight","__maximumWidth","_minimumWidth","_evaluatedMinimumWidth","updateConstraints","_maximumWidth","_evaluatedMaximumWidth","_minimumHeight","_evaluatedMinimumHeight","_maximumHeight","_evaluatedMaximumHeight","MAX_SAFE_INTEGER","maximum","minimum","NOT_INITIALIZED_MESSAGE","DockviewGroupPanelApiImpl","_group","_mutableDisposable","onDidLocationChange","close","getWindow","moveTo","moveGroupOrPanel","maximize","exitMaximized","DockviewGroupPanel","activePanelMinimumWidth","activePanelMinimumHeight","activePanelMaximumWidth","activePanelMaximumHeight","_model","_e","_f","constraints","DockviewPanelApiImpl","oldGroup","_onDidGroupChange","setupGroupEventListeners","tabComponent","_tabComponent","_onDidTitleChange","_onDidActiveGroupChange","onDidGroupChange","_onDidRendererChange","onDidRendererChange","groupEventsDisposable","setTitle","setRenderer","previousGroup","_trackGroupActive","hasBecomeHidden","hasBecomeVisible","DockviewPanel","_title","_renderer","contentComponent","isPanelVisible","createSvgElementFromPath","svg","createElementNS","setAttributeNS","viewbox","DefaultTab","_content","action","render","DockviewPanelModel","_tab","createContentComponent","createTabComponent","_isPanelVisible","componentName","createComponent","name","defaultTabComponent","DefaultDockviewDeserialzier","panelData","viewData","Watermark","arialLevelTracker","_orderedList","destroy","setAttribute","zIndex","Overlay","minimumInViewportWidth","minimumInViewportHeight","_onDidChangeEnd","onDidChangeEnd","setupResize","setBounds","bottom","right","bringToFront","bounds","verticalAlignment","horiziontalAlignment","containerRect","overlayRect","xOffset","getMinimumWidth","yOffset","getMinimumHeight","parseFloat","setupDrag","dragTarget","move","track","resizeHandleElement","startPosition","originalY","originalHeight","originalX","originalWidth","moveTop","MAX_VALUE","MINIMUM_HEIGHT","moveBottom","moveLeft","MINIMUM_WIDTH","moveRight","DockviewFloatingGroupPanel","overlay","DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE","DEFAULT_FLOATING_GROUP_POSITION","OverlayRenderContainer","createFocusableElement","focusContainer","box2","visibilityChanged","observerDisposable","correctLayerPosition","floatingGroup","floatingGroups","level","getAttribute","MutationObserver","attributeFilter","attributes","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","rejected","done","then","apply","PopoutWindow","_window","_onWillClose","onWillClose","_onDidClose","onDidClose","dimensions","screenX","screenY","innerWidth","innerHeight","open","url","features","entries","join","externalWindow","createPopoutWindowContainer","onDidOpen","externalDocument","styleSheetList","styleSheets","styleSheet","href","link","rel","head","cssTexts","cssRules","rule","cssText","err","createTextNode","addStyles","StrictEventsSequencing","DEFAULT_ROOT_OVERLAY_MODEL","moveGroupWithoutDestroying","removedPanel","DockviewComponent","flatMap","_options","_floatingGroups","nextGroupId","_deserializer","_onWillDragPanel","_onWillDragGroup","_onDidLayoutFromJSON","_onDidMovePanel","_onDidMaximizedGroupChange","_popoutGroups","_onDidRemoveGroup","_onDidAddGroup","_moving","updateWatermark","_rootDropTarget","orthogonalize","itemToPopout","theme","toClassList","list","cls","startsWith","getDockviewTheme","overridePopoutGroup","getNextGroupId","popoutWindowDisposable","popoutContainer","gready","referenceGroup","referenceLocation","isGroupAddedToDom","floatingBox","returnedGroup","createGroup","movingLock","doSetGroupAndPanelActive","isValidReferenceGroup","popoutGroup","skipPopoutAssociated","skipPopoutReturn","catch","error","popoutReferenceGroupId","popoutReferenceGroup","skipRemoveGroup","anchoredBox","getAnchoredBox","minimumWidthWithinViewport","minimumHeightWithinViewport","querySelector","floatingGroupPanel","skipActiveGroup","createGroupAtLocation","floating","includePanel","collection","floats","popoutGroups","gridReferenceGroup","grid","isArray","createGroupFromSerializedState","createdPanels","serializedFloatingGroups","serializedFloatingGroup","serializedPopoutGroups","serializedPopoutGroup","hasActiveGroup","initial","initialWidth","initialHeight","referencePanel","findGroup","isPanelOptionsWithGroup","createPanel","inactive","floatingGroupOptions","relativeLocation","orientationAtLocation","coordinates","watermarkContainer","isGroupOptionsWithGroup","selectedGroup","refGroup","removedGroup","re","isMoving","destinationGroup","sourceGroupId","sourceItemId","destinationTarget","destinationIndex","sourceGroup","targetLocation","targetParentLocation","sourceLocation","sourceParentLocation","newGroup","targetGroup","updatedReferenceLocation","dropLocation","moveGroup","selectedFloatingGroup","selectedPopoutGroup","GridviewComponent","_onDidLayoutfromJSON","hasOrientationChanged","serializedGridview","queue","registerPanel","f","reference","groupItem","SplitviewComponent","_splitview","_splitviewChangeDisposable","_onDidLayoutChange","skipFocus","doAddView","serializedSplitview","DefaultHeader","_expandedIcon","_collapsedIcon","apiRef","_expander","updateIcon","PaneFramework","PaneviewComponent","paneview","_paneview","_viewDisposables","createHeaderComponent","serializedPaneview","SplitviewPanel","_minimumSize","_evaluatedMinimumSize","_maximumSize","_evaluatedMaximumSize","createDockview","createSplitview","createGridview","createPaneview","ReactComponentBridge","props","ref","triggerRender","React","_props","componentProps","current","Date","now","displayName","uniquePortalKeyGenerator","ReactPartContext","ReactPart","portalStore","context","_initialProps","disposed","createPortal","componentInstance","$$typeof","bridgeComponent","Provider","portal","ReactDOM","addPortal","usePortalsLifecycle","portals","setPortals","existingPortals","DockviewDisposable","ReactPanelContentPart","reactPortalStore","DockviewEmitter","ReactPanelHeaderPart","ReactWatermarkPart","ReactHeaderActionsRendererPart","_part","mutableDisposable","DockviewMutableDisposable","DockviewCompositeDisposable","updatePanels","updateActivePanel","updateGroupActive","createGroupControlElement","store","DEFAULT_REACT_TAB","DockviewReact","domRef","dockviewRef","prevProps","changes","propKey","propValue","frameworkTabComponents","tabComponents","frameworkOptions","leftHeaderActionsComponent","rightHeaderActionsComponent","prefixHeaderActionsComponent","components","watermarkComponent","obj","extractCoreOptions","onReady","CloseButton","viewBox","focusable","__rest","hasOwnProperty","getOwnPropertySymbols","propertyIsEnumerable","DockviewDefaultTab","_containerApi","hideClose","closeActionOverride","useTitle","onClose","onPointerDown","onClick","ReactPanelView","reactComponent","SplitviewReact","splitviewRef","ReactGridPanelView","GridviewReact","gridviewRef","PanePanelSection","PaneviewReact","paneviewRef","headerComponents","CodeSandboxButton","_jsxs","hideThemePicker","ThemePicker","alignItems","fontWeight","paddingRight","Spinner","ReactIcon","marginRight","src","useBaseUrl","JavascriptIcon","themes","useLocalStorageItem","defaultValue","setItem","localStorage","getItem","setTheme","dispatchEvent","StorageEvent","onChange","MultiFrameworkContainer2","framework","setFramework","animation","setAnimation","typescript","sandboxId","background","justifyContent","react","cursor","border","flexGrow","MultiFrameworkContainer","default","active","setApi","onKeyDown","ctrlKey","code","frontMatter","contentTitle","metadata","assets","toc","_createMdxContent","_components","h1","MDXContent","wrapper","MDXLayout","emptyComponents","MDXContext","useMDXComponents","contextComponents","MDXProvider","allComponents","disableParentContext"],"sourceRoot":""}