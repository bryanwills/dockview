{"version":3,"file":"assets/js/6875c492.a213e997.js","mappings":"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","sources":["webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/BlogListPaginator/index.js","webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/BlogPostItems/index.js","webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/BlogTagsPostsPage/index.js","webpack://dockview-docs/../../node_modules/@docusaurus/theme-common/src/utils/unlistedUtils.tsx","webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/Unlisted/index.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/dataTransfer.js","webpack://dockview-docs/../dockview-core/dist/esm/events.js","webpack://dockview-docs/../dockview-core/dist/esm/lifecycle.js","webpack://dockview-docs/../dockview-core/dist/esm/dom.js","webpack://dockview-docs/../dockview-core/dist/esm/array.js","webpack://dockview-docs/../dockview-core/dist/esm/math.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/viewItem.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/splitview.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/options.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/paneview.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/leafNode.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/branchNode.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/gridview.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/options.js","webpack://dockview-docs/../dockview-core/dist/esm/resizable.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/baseComponentGridview.js","webpack://dockview-docs/../dockview-core/dist/esm/api/component.api.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/abstractDragHandler.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/dnd.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/droptarget.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/options.js","webpack://dockview-docs/../dockview-core/dist/esm/api/panelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/api/splitviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/api/paneviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/basePanelView.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/paneviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/draggablePaneviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/panel/content.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/tab/tab.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/groupDragHandler.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/ghost.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/titlebar/voidContainer.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/titlebar/tabsContainer.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/options.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewGroupPanelModel.js","webpack://dockview-docs/../dockview-core/dist/esm/api/gridviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/gridviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/api/dockviewGroupPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewGroupPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/api/dockviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/svg.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/tab/defaultTab.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewPanelModel.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/deserializer.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/watermark/watermark.js","webpack://dockview-docs/../dockview-core/dist/esm/overlay/overlay.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewFloatingGroupPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/constants.js","webpack://dockview-docs/../dockview-core/dist/esm/overlay/overlayRenderContainer.js","webpack://dockview-docs/../dockview-core/dist/esm/popoutWindow.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/strictEventsSequencing.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/gridviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/splitviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/defaultPaneviewHeader.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/paneviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/splitviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/api/entryPoints.js","webpack://dockview-docs/../dockview/dist/esm/react.js","webpack://dockview-docs/../dockview/dist/esm/dockview/reactContentPart.js","webpack://dockview-docs/../dockview/dist/esm/dockview/reactHeaderPart.js","webpack://dockview-docs/../dockview/dist/esm/dockview/reactWatermarkPart.js","webpack://dockview-docs/../dockview/dist/esm/dockview/headerActionsRenderer.js","webpack://dockview-docs/../dockview/dist/esm/dockview/dockview.js","webpack://dockview-docs/../dockview/dist/esm/svg.js","webpack://dockview-docs/../dockview/dist/esm/dockview/defaultTab.js","webpack://dockview-docs/../dockview/dist/esm/splitview/view.js","webpack://dockview-docs/../dockview/dist/esm/splitview/splitview.js","webpack://dockview-docs/../dockview/dist/esm/gridview/view.js","webpack://dockview-docs/../dockview/dist/esm/gridview/gridview.js","webpack://dockview-docs/../dockview/dist/esm/paneview/view.js","webpack://dockview-docs/../dockview/dist/esm/paneview/paneview.js","webpack://dockview-docs/./src/theme/Admonition/Layout/styles.module.css","webpack://dockview-docs/./src/theme/Admonition/Layout/index.js","webpack://dockview-docs/./src/theme/Admonition/Icon/Note.js","webpack://dockview-docs/./src/theme/Admonition/Type/Note.js","webpack://dockview-docs/./src/theme/Admonition/Icon/Tip.js","webpack://dockview-docs/./src/theme/Admonition/Type/Tip.js","webpack://dockview-docs/./src/theme/Admonition/Icon/Info.js","webpack://dockview-docs/./src/theme/Admonition/Type/Info.js","webpack://dockview-docs/./src/theme/Admonition/Icon/Warning.js","webpack://dockview-docs/./src/theme/Admonition/Type/Warning.js","webpack://dockview-docs/./src/theme/Admonition/Icon/Danger.js","webpack://dockview-docs/./src/theme/Admonition/Type/Danger.js","webpack://dockview-docs/./src/theme/Admonition/Type/Caution.js","webpack://dockview-docs/./src/theme/Admonition/Types.js","webpack://dockview-docs/./src/theme/Admonition/index.js","webpack://dockview-docs/./src/theme/MDXComponents.js","webpack://dockview-docs/./src/components/frameworkSpecific.tsx","webpack://dockview-docs/./src/components/ui/codeRunner.tsx"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport Translate, {translate} from '@docusaurus/Translate';\nimport PaginatorNavLink from '@theme/PaginatorNavLink';\nexport default function BlogListPaginator(props) {\n  const {metadata} = props;\n  const {previousPage, nextPage} = metadata;\n  return (\n    <nav\n      className=\"pagination-nav\"\n      aria-label={translate({\n        id: 'theme.blog.paginator.navAriaLabel',\n        message: 'Blog list page navigation',\n        description: 'The ARIA label for the blog pagination',\n      })}>\n      {previousPage && (\n        <PaginatorNavLink\n          permalink={previousPage}\n          title={\n            <Translate\n              id=\"theme.blog.paginator.newerEntries\"\n              description=\"The label used to navigate to the newer blog posts page (previous page)\">\n              Newer Entries\n            </Translate>\n          }\n        />\n      )}\n      {nextPage && (\n        <PaginatorNavLink\n          permalink={nextPage}\n          title={\n            <Translate\n              id=\"theme.blog.paginator.olderEntries\"\n              description=\"The label used to navigate to the older blog posts page (next page)\">\n              Older Entries\n            </Translate>\n          }\n          isNext\n        />\n      )}\n    </nav>\n  );\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport {BlogPostProvider} from '@docusaurus/theme-common/internal';\nimport BlogPostItem from '@theme/BlogPostItem';\nexport default function BlogPostItems({\n  items,\n  component: BlogPostItemComponent = BlogPostItem,\n}) {\n  return (\n    <>\n      {items.map(({content: BlogPostContent}) => (\n        <BlogPostProvider\n          key={BlogPostContent.metadata.permalink}\n          content={BlogPostContent}>\n          <BlogPostItemComponent>\n            <BlogPostContent />\n          </BlogPostItemComponent>\n        </BlogPostProvider>\n      ))}\n    </>\n  );\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport clsx from 'clsx';\nimport Translate, {translate} from '@docusaurus/Translate';\nimport {\n  PageMetadata,\n  HtmlClassNameProvider,\n  ThemeClassNames,\n  usePluralForm,\n} from '@docusaurus/theme-common';\nimport Link from '@docusaurus/Link';\nimport BlogLayout from '@theme/BlogLayout';\nimport BlogListPaginator from '@theme/BlogListPaginator';\nimport SearchMetadata from '@theme/SearchMetadata';\nimport BlogPostItems from '@theme/BlogPostItems';\nimport Unlisted from '@theme/Unlisted';\nimport Heading from '@theme/Heading';\n// Very simple pluralization: probably good enough for now\nfunction useBlogPostsPlural() {\n  const {selectMessage} = usePluralForm();\n  return (count) =>\n    selectMessage(\n      count,\n      translate(\n        {\n          id: 'theme.blog.post.plurals',\n          description:\n            'Pluralized label for \"{count} posts\". Use as much plural forms (separated by \"|\") as your language support (see https://www.unicode.org/cldr/cldr-aux/charts/34/supplemental/language_plural_rules.html)',\n          message: 'One post|{count} posts',\n        },\n        {count},\n      ),\n    );\n}\nfunction useBlogTagsPostsPageTitle(tag) {\n  const blogPostsPlural = useBlogPostsPlural();\n  return translate(\n    {\n      id: 'theme.blog.tagTitle',\n      description: 'The title of the page for a blog tag',\n      message: '{nPosts} tagged with \"{tagName}\"',\n    },\n    {nPosts: blogPostsPlural(tag.count), tagName: tag.label},\n  );\n}\nfunction BlogTagsPostsPageMetadata({tag}) {\n  const title = useBlogTagsPostsPageTitle(tag);\n  return (\n    <>\n      <PageMetadata title={title} />\n      <SearchMetadata tag=\"blog_tags_posts\" />\n    </>\n  );\n}\nfunction BlogTagsPostsPageContent({tag, items, sidebar, listMetadata}) {\n  const title = useBlogTagsPostsPageTitle(tag);\n  return (\n    <BlogLayout sidebar={sidebar}>\n      {tag.unlisted && <Unlisted />}\n      <header className=\"margin-bottom--xl\">\n        <Heading as=\"h1\">{title}</Heading>\n        <Link href={tag.allTagsPath}>\n          <Translate\n            id=\"theme.tags.tagsPageLink\"\n            description=\"The label of the link targeting the tag list page\">\n            View All Tags\n          </Translate>\n        </Link>\n      </header>\n      <BlogPostItems items={items} />\n      <BlogListPaginator metadata={listMetadata} />\n    </BlogLayout>\n  );\n}\nexport default function BlogTagsPostsPage(props) {\n  return (\n    <HtmlClassNameProvider\n      className={clsx(\n        ThemeClassNames.wrapper.blogPages,\n        ThemeClassNames.page.blogTagPostListPage,\n      )}>\n      <BlogTagsPostsPageMetadata {...props} />\n      <BlogTagsPostsPageContent {...props} />\n    </HtmlClassNameProvider>\n  );\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Translate from '@docusaurus/Translate';\nimport Head from '@docusaurus/Head';\n\nexport function UnlistedBannerTitle(): JSX.Element {\n  return (\n    <Translate\n      id=\"theme.unlistedContent.title\"\n      description=\"The unlisted content banner title\">\n      Unlisted page\n    </Translate>\n  );\n}\n\nexport function UnlistedBannerMessage(): JSX.Element {\n  return (\n    <Translate\n      id=\"theme.unlistedContent.message\"\n      description=\"The unlisted content banner message\">\n      This page is unlisted. Search engines will not index it, and only users\n      having a direct link can access it.\n    </Translate>\n  );\n}\n\nexport function UnlistedMetadata(): JSX.Element {\n  return (\n    <Head>\n      <meta name=\"robots\" content=\"noindex, nofollow\" />\n    </Head>\n  );\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport clsx from 'clsx';\nimport {\n  ThemeClassNames,\n  UnlistedBannerTitle,\n  UnlistedBannerMessage,\n  UnlistedMetadata,\n} from '@docusaurus/theme-common';\nimport Admonition from '@theme/Admonition';\nfunction UnlistedBanner({className}) {\n  return (\n    <Admonition\n      type=\"caution\"\n      title={<UnlistedBannerTitle />}\n      className={clsx(className, ThemeClassNames.common.unlistedBanner)}>\n      <UnlistedBannerMessage />\n    </Admonition>\n  );\n}\nexport default function Unlisted(props) {\n  return (\n    <>\n      {/*\n        Unlisted metadata declared here for simplicity.\n        Ensures we never forget to add the correct noindex metadata.\n        Also gives a central place for user to swizzle override default metadata.\n        */}\n      <UnlistedMetadata />\n      <UnlistedBanner {...props} />\n    </>\n  );\n}\n","class TransferObject {\n}\nexport class PanelTransfer extends TransferObject {\n    constructor(viewId, groupId, panelId) {\n        super();\n        this.viewId = viewId;\n        this.groupId = groupId;\n        this.panelId = panelId;\n    }\n}\nexport class PaneTransfer extends TransferObject {\n    constructor(viewId, paneId) {\n        super();\n        this.viewId = viewId;\n        this.paneId = paneId;\n    }\n}\n/**\n * A singleton to store transfer data during drag & drop operations that are only valid within the application.\n */\nexport class LocalSelectionTransfer {\n    constructor() {\n        // protect against external instantiation\n    }\n    static getInstance() {\n        return LocalSelectionTransfer.INSTANCE;\n    }\n    hasData(proto) {\n        return proto && proto === this.proto;\n    }\n    clearData(proto) {\n        if (this.hasData(proto)) {\n            this.proto = undefined;\n            this.data = undefined;\n        }\n    }\n    getData(proto) {\n        if (this.hasData(proto)) {\n            return this.data;\n        }\n        return undefined;\n    }\n    setData(data, proto) {\n        if (proto) {\n            this.data = data;\n            this.proto = proto;\n        }\n    }\n}\nLocalSelectionTransfer.INSTANCE = new LocalSelectionTransfer();\nexport function getPanelData() {\n    const panelTransfer = LocalSelectionTransfer.getInstance();\n    const isPanelEvent = panelTransfer.hasData(PanelTransfer.prototype);\n    if (!isPanelEvent) {\n        return undefined;\n    }\n    return panelTransfer.getData(PanelTransfer.prototype)[0];\n}\nexport function getPaneData() {\n    const paneTransfer = LocalSelectionTransfer.getInstance();\n    const isPanelEvent = paneTransfer.hasData(PaneTransfer.prototype);\n    if (!isPanelEvent) {\n        return undefined;\n    }\n    return paneTransfer.getData(PaneTransfer.prototype)[0];\n}\n","export var Event;\n(function (Event) {\n    Event.any = (...children) => {\n        return (listener) => {\n            const disposables = children.map((child) => child(listener));\n            return {\n                dispose: () => {\n                    disposables.forEach((d) => {\n                        d.dispose();\n                    });\n                },\n            };\n        };\n    };\n})(Event || (Event = {}));\nexport class DockviewEvent {\n    constructor() {\n        this._defaultPrevented = false;\n    }\n    get defaultPrevented() {\n        return this._defaultPrevented;\n    }\n    preventDefault() {\n        this._defaultPrevented = true;\n    }\n}\nexport class AcceptableEvent {\n    constructor() {\n        this._isAccepted = false;\n    }\n    get isAccepted() {\n        return this._isAccepted;\n    }\n    accept() {\n        this._isAccepted = true;\n    }\n}\nclass LeakageMonitor {\n    constructor() {\n        this.events = new Map();\n    }\n    get size() {\n        return this.events.size;\n    }\n    add(event, stacktrace) {\n        this.events.set(event, stacktrace);\n    }\n    delete(event) {\n        this.events.delete(event);\n    }\n    clear() {\n        this.events.clear();\n    }\n}\nclass Stacktrace {\n    static create() {\n        var _a;\n        return new Stacktrace((_a = new Error().stack) !== null && _a !== void 0 ? _a : '');\n    }\n    constructor(value) {\n        this.value = value;\n    }\n    print() {\n        console.warn('dockview: stacktrace', this.value);\n    }\n}\nclass Listener {\n    constructor(callback, stacktrace) {\n        this.callback = callback;\n        this.stacktrace = stacktrace;\n    }\n}\n// relatively simple event emitter taken from https://github.com/microsoft/vscode/blob/master/src/vs/base/common/event.ts\nexport class Emitter {\n    static setLeakageMonitorEnabled(isEnabled) {\n        if (isEnabled !== Emitter.ENABLE_TRACKING) {\n            Emitter.MEMORY_LEAK_WATCHER.clear();\n        }\n        Emitter.ENABLE_TRACKING = isEnabled;\n    }\n    get value() {\n        return this._last;\n    }\n    constructor(options) {\n        this.options = options;\n        this._listeners = [];\n        this._disposed = false;\n    }\n    get event() {\n        if (!this._event) {\n            this._event = (callback) => {\n                var _a;\n                if (((_a = this.options) === null || _a === void 0 ? void 0 : _a.replay) && this._last !== undefined) {\n                    callback(this._last);\n                }\n                const listener = new Listener(callback, Emitter.ENABLE_TRACKING ? Stacktrace.create() : undefined);\n                this._listeners.push(listener);\n                return {\n                    dispose: () => {\n                        const index = this._listeners.indexOf(listener);\n                        if (index > -1) {\n                            this._listeners.splice(index, 1);\n                        }\n                        else if (Emitter.ENABLE_TRACKING) {\n                            // console.warn(\n                            //     `dockview: listener already disposed`,\n                            //     Stacktrace.create().print()\n                            // );\n                        }\n                    },\n                };\n            };\n            if (Emitter.ENABLE_TRACKING) {\n                Emitter.MEMORY_LEAK_WATCHER.add(this._event, Stacktrace.create());\n            }\n        }\n        return this._event;\n    }\n    fire(e) {\n        this._last = e;\n        for (const listener of this._listeners) {\n            listener.callback(e);\n        }\n    }\n    dispose() {\n        if (!this._disposed) {\n            this._disposed = true;\n            if (this._listeners.length > 0) {\n                if (Emitter.ENABLE_TRACKING) {\n                    queueMicrotask(() => {\n                        var _a;\n                        // don't check until stack of execution is completed to allow for out-of-order disposals within the same execution block\n                        for (const listener of this._listeners) {\n                            console.warn('dockview: stacktrace', (_a = listener.stacktrace) === null || _a === void 0 ? void 0 : _a.print());\n                        }\n                    });\n                }\n                this._listeners = [];\n            }\n            if (Emitter.ENABLE_TRACKING && this._event) {\n                Emitter.MEMORY_LEAK_WATCHER.delete(this._event);\n            }\n        }\n    }\n}\nEmitter.ENABLE_TRACKING = false;\nEmitter.MEMORY_LEAK_WATCHER = new LeakageMonitor();\nexport function addDisposableWindowListener(element, type, listener, options) {\n    element.addEventListener(type, listener, options);\n    return {\n        dispose: () => {\n            element.removeEventListener(type, listener, options);\n        },\n    };\n}\nexport function addDisposableListener(element, type, listener, options) {\n    element.addEventListener(type, listener, options);\n    return {\n        dispose: () => {\n            element.removeEventListener(type, listener, options);\n        },\n    };\n}\n/**\n *\n * Event Emitter that fires events from a Microtask callback, only one event will fire per event-loop cycle.\n *\n * It's kind of like using an `asapScheduler` in RxJs with additional logic to only fire once per event-loop cycle.\n * This implementation exists to avoid external dependencies.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/queueMicrotask\n * @see https://rxjs.dev/api/index/const/asapScheduler\n */\nexport class AsapEvent {\n    constructor() {\n        this._onFired = new Emitter();\n        this._currentFireCount = 0;\n        this._queued = false;\n        this.onEvent = (e) => {\n            /**\n             * when the event is first subscribed to take note of the current fire count\n             */\n            const fireCountAtTimeOfEventSubscription = this._currentFireCount;\n            return this._onFired.event(() => {\n                /**\n                 * if the current fire count is greater than the fire count at event subscription\n                 * then the event has been fired since we subscribed and it's ok to \"on_next\" the event.\n                 *\n                 * if the count is not greater then what we are recieving is an event from the microtask\n                 * queue that was triggered before we actually subscribed and therfore we should ignore it.\n                 */\n                if (this._currentFireCount > fireCountAtTimeOfEventSubscription) {\n                    e();\n                }\n            });\n        };\n    }\n    fire() {\n        this._currentFireCount++;\n        if (this._queued) {\n            return;\n        }\n        this._queued = true;\n        queueMicrotask(() => {\n            this._queued = false;\n            this._onFired.fire();\n        });\n    }\n    dispose() {\n        this._onFired.dispose();\n    }\n}\n","export var Disposable;\n(function (Disposable) {\n    Disposable.NONE = {\n        dispose: () => {\n            // noop\n        },\n    };\n    function from(func) {\n        return {\n            dispose: () => {\n                func();\n            },\n        };\n    }\n    Disposable.from = from;\n})(Disposable || (Disposable = {}));\nexport class CompositeDisposable {\n    get isDisposed() {\n        return this._isDisposed;\n    }\n    constructor(...args) {\n        this._isDisposed = false;\n        this._disposables = args;\n    }\n    addDisposables(...args) {\n        args.forEach((arg) => this._disposables.push(arg));\n    }\n    dispose() {\n        if (this._isDisposed) {\n            return;\n        }\n        this._isDisposed = true;\n        this._disposables.forEach((arg) => arg.dispose());\n        this._disposables = [];\n    }\n}\nexport class MutableDisposable {\n    constructor() {\n        this._disposable = Disposable.NONE;\n    }\n    set value(disposable) {\n        if (this._disposable) {\n            this._disposable.dispose();\n        }\n        this._disposable = disposable;\n    }\n    dispose() {\n        if (this._disposable) {\n            this._disposable.dispose();\n            this._disposable = Disposable.NONE;\n        }\n    }\n}\n","import { Emitter, addDisposableListener, addDisposableWindowListener, } from './events';\nimport { CompositeDisposable } from './lifecycle';\nexport class OverflowObserver extends CompositeDisposable {\n    constructor(el) {\n        super();\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._value = null;\n        this.addDisposables(this._onDidChange, watchElementResize(el, (entry) => {\n            const hasScrollX = entry.target.scrollWidth > entry.target.clientWidth;\n            const hasScrollY = entry.target.scrollHeight > entry.target.clientHeight;\n            this._value = { hasScrollX, hasScrollY };\n            this._onDidChange.fire(this._value);\n        }));\n    }\n}\nexport function watchElementResize(element, cb) {\n    const observer = new ResizeObserver((entires) => {\n        /**\n         * Fast browser window resize produces Error: ResizeObserver loop limit exceeded.\n         * The error isn't visible in browser console, doesn't affect functionality, but degrades performance.\n         * See https://stackoverflow.com/questions/49384120/resizeobserver-loop-limit-exceeded/58701523#58701523\n         */\n        requestAnimationFrame(() => {\n            const firstEntry = entires[0];\n            cb(firstEntry);\n        });\n    });\n    observer.observe(element);\n    return {\n        dispose: () => {\n            observer.unobserve(element);\n            observer.disconnect();\n        },\n    };\n}\nexport const removeClasses = (element, ...classes) => {\n    for (const classname of classes) {\n        if (element.classList.contains(classname)) {\n            element.classList.remove(classname);\n        }\n    }\n};\nexport const addClasses = (element, ...classes) => {\n    for (const classname of classes) {\n        if (!element.classList.contains(classname)) {\n            element.classList.add(classname);\n        }\n    }\n};\nexport const toggleClass = (element, className, isToggled) => {\n    const hasClass = element.classList.contains(className);\n    if (isToggled && !hasClass) {\n        element.classList.add(className);\n    }\n    if (!isToggled && hasClass) {\n        element.classList.remove(className);\n    }\n};\nexport function isAncestor(testChild, testAncestor) {\n    while (testChild) {\n        if (testChild === testAncestor) {\n            return true;\n        }\n        testChild = testChild.parentNode;\n    }\n    return false;\n}\nexport function getElementsByTagName(tag) {\n    return Array.prototype.slice.call(document.getElementsByTagName(tag), 0);\n}\nexport function trackFocus(element) {\n    return new FocusTracker(element);\n}\n/**\n * Track focus on an element. Ensure tabIndex is set when an HTMLElement is not focusable by default\n */\nclass FocusTracker extends CompositeDisposable {\n    constructor(element) {\n        super();\n        this._onDidFocus = new Emitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new Emitter();\n        this.onDidBlur = this._onDidBlur.event;\n        this.addDisposables(this._onDidFocus, this._onDidBlur);\n        let hasFocus = isAncestor(document.activeElement, element);\n        let loosingFocus = false;\n        const onFocus = () => {\n            loosingFocus = false;\n            if (!hasFocus) {\n                hasFocus = true;\n                this._onDidFocus.fire();\n            }\n        };\n        const onBlur = () => {\n            if (hasFocus) {\n                loosingFocus = true;\n                window.setTimeout(() => {\n                    if (loosingFocus) {\n                        loosingFocus = false;\n                        hasFocus = false;\n                        this._onDidBlur.fire();\n                    }\n                }, 0);\n            }\n        };\n        this._refreshStateHandler = () => {\n            const currentNodeHasFocus = isAncestor(document.activeElement, element);\n            if (currentNodeHasFocus !== hasFocus) {\n                if (hasFocus) {\n                    onBlur();\n                }\n                else {\n                    onFocus();\n                }\n            }\n        };\n        if (element instanceof HTMLElement) {\n            this.addDisposables(addDisposableListener(element, 'focus', onFocus, true));\n            this.addDisposables(addDisposableListener(element, 'blur', onBlur, true));\n        }\n        else {\n            this.addDisposables(addDisposableWindowListener(element, 'focus', onFocus, true));\n            this.addDisposables(addDisposableWindowListener(element, 'blur', onBlur, true));\n        }\n    }\n    refreshState() {\n        this._refreshStateHandler();\n    }\n}\n// quasi: apparently, but not really; seemingly\nconst QUASI_PREVENT_DEFAULT_KEY = 'dv-quasiPreventDefault';\n// mark an event directly for other listeners to check\nexport function quasiPreventDefault(event) {\n    event[QUASI_PREVENT_DEFAULT_KEY] = true;\n}\n// check if this event has been marked\nexport function quasiDefaultPrevented(event) {\n    return event[QUASI_PREVENT_DEFAULT_KEY];\n}\nexport function addStyles(document, styleSheetList) {\n    const styleSheets = Array.from(styleSheetList);\n    for (const styleSheet of styleSheets) {\n        if (styleSheet.href) {\n            const link = document.createElement('link');\n            link.href = styleSheet.href;\n            link.type = styleSheet.type;\n            link.rel = 'stylesheet';\n            document.head.appendChild(link);\n        }\n        let cssTexts = [];\n        try {\n            if (styleSheet.cssRules) {\n                cssTexts = Array.from(styleSheet.cssRules).map((rule) => rule.cssText);\n            }\n        }\n        catch (err) {\n            // security errors (lack of permissions), ignore\n        }\n        for (const rule of cssTexts) {\n            const style = document.createElement('style');\n            style.appendChild(document.createTextNode(rule));\n            document.head.appendChild(style);\n        }\n    }\n}\nexport function getDomNodePagePosition(domNode) {\n    const { left, top, width, height } = domNode.getBoundingClientRect();\n    return {\n        left: left + window.scrollX,\n        top: top + window.scrollY,\n        width: width,\n        height: height,\n    };\n}\n/**\n * Check whether an element is in the DOM (including the Shadow DOM)\n * @see https://terodox.tech/how-to-tell-if-an-element-is-in-the-dom-including-the-shadow-dom/\n */\nexport function isInDocument(element) {\n    let currentElement = element;\n    while (currentElement === null || currentElement === void 0 ? void 0 : currentElement.parentNode) {\n        if (currentElement.parentNode === document) {\n            return true;\n        }\n        else if (currentElement.parentNode instanceof DocumentFragment) {\n            // handle shadow DOMs\n            currentElement = currentElement.parentNode.host;\n        }\n        else {\n            currentElement = currentElement.parentNode;\n        }\n    }\n    return false;\n}\nexport function addTestId(element, id) {\n    element.setAttribute('data-testid', id);\n}\nexport function disableIframePointEvents() {\n    const iframes = [\n        ...getElementsByTagName('iframe'),\n        ...getElementsByTagName('webview'),\n    ];\n    const original = new WeakMap(); // don't hold onto HTMLElement references longer than required\n    for (const iframe of iframes) {\n        original.set(iframe, iframe.style.pointerEvents);\n        iframe.style.pointerEvents = 'none';\n    }\n    return {\n        release: () => {\n            var _a;\n            for (const iframe of iframes) {\n                iframe.style.pointerEvents = (_a = original.get(iframe)) !== null && _a !== void 0 ? _a : 'auto';\n            }\n            iframes.splice(0, iframes.length); // don't hold onto HTMLElement references longer than required\n        },\n    };\n}\nexport function getDockviewTheme(element) {\n    function toClassList(element) {\n        const list = [];\n        for (let i = 0; i < element.classList.length; i++) {\n            list.push(element.classList.item(i));\n        }\n        return list;\n    }\n    let theme = undefined;\n    let parent = element;\n    while (parent !== null) {\n        theme = toClassList(parent).find((cls) => cls.startsWith('dockview-theme-'));\n        if (typeof theme === 'string') {\n            break;\n        }\n        parent = parent.parentElement;\n    }\n    return theme;\n}\nexport class Classnames {\n    constructor(element) {\n        this.element = element;\n        this._classNames = [];\n    }\n    setClassNames(classNames) {\n        for (const className of this._classNames) {\n            toggleClass(this.element, className, false);\n        }\n        this._classNames = classNames\n            .split(' ')\n            .filter((v) => v.trim().length > 0);\n        for (const className of this._classNames) {\n            toggleClass(this.element, className, true);\n        }\n    }\n}\n","export function tail(arr) {\n    if (arr.length === 0) {\n        throw new Error('Invalid tail call');\n    }\n    return [arr.slice(0, arr.length - 1), arr[arr.length - 1]];\n}\nexport function last(arr) {\n    return arr.length > 0 ? arr[arr.length - 1] : undefined;\n}\nexport function sequenceEquals(arr1, arr2) {\n    if (arr1.length !== arr2.length) {\n        return false;\n    }\n    for (let i = 0; i < arr1.length; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Pushes an element to the start of the array, if found.\n */\nexport function pushToStart(arr, value) {\n    const index = arr.indexOf(value);\n    if (index > -1) {\n        arr.splice(index, 1);\n        arr.unshift(value);\n    }\n}\n/**\n * Pushes an element to the end of the array, if found.\n */\nexport function pushToEnd(arr, value) {\n    const index = arr.indexOf(value);\n    if (index > -1) {\n        arr.splice(index, 1);\n        arr.push(value);\n    }\n}\nexport function firstIndex(array, fn) {\n    for (let i = 0; i < array.length; i++) {\n        const element = array[i];\n        if (fn(element)) {\n            return i;\n        }\n    }\n    return -1;\n}\nexport function remove(array, value) {\n    const index = array.findIndex((t) => t === value);\n    if (index > -1) {\n        array.splice(index, 1);\n        return true;\n    }\n    return false;\n}\n","export const clamp = (value, min, max) => {\n    if (min > max) {\n        /**\n         * caveat: an error should be thrown here if this was a proper `clamp` function but we need to handle\n         * cases where `min` > `max` and in those cases return `min`.\n         */\n        return min;\n    }\n    return Math.min(max, Math.max(value, min));\n};\nexport const sequentialNumberGenerator = () => {\n    let value = 1;\n    return { next: () => (value++).toString() };\n};\nexport const range = (from, to) => {\n    const result = [];\n    if (typeof to !== 'number') {\n        to = from;\n        from = 0;\n    }\n    if (from <= to) {\n        for (let i = from; i < to; i++) {\n            result.push(i);\n        }\n    }\n    else {\n        for (let i = from; i > to; i--) {\n            result.push(i);\n        }\n    }\n    return result;\n};\n","import { clamp } from '../math';\nexport class ViewItem {\n    set size(size) {\n        this._size = size;\n    }\n    get size() {\n        return this._size;\n    }\n    get cachedVisibleSize() {\n        return this._cachedVisibleSize;\n    }\n    get visible() {\n        return typeof this._cachedVisibleSize === 'undefined';\n    }\n    get minimumSize() {\n        return this.visible ? this.view.minimumSize : 0;\n    }\n    get viewMinimumSize() {\n        return this.view.minimumSize;\n    }\n    get maximumSize() {\n        return this.visible ? this.view.maximumSize : 0;\n    }\n    get viewMaximumSize() {\n        return this.view.maximumSize;\n    }\n    get priority() {\n        return this.view.priority;\n    }\n    get snap() {\n        return !!this.view.snap;\n    }\n    set enabled(enabled) {\n        this.container.style.pointerEvents = enabled ? '' : 'none';\n    }\n    constructor(container, view, size, disposable) {\n        this.container = container;\n        this.view = view;\n        this.disposable = disposable;\n        this._cachedVisibleSize = undefined;\n        if (typeof size === 'number') {\n            this._size = size;\n            this._cachedVisibleSize = undefined;\n            container.classList.add('visible');\n        }\n        else {\n            this._size = 0;\n            this._cachedVisibleSize = size.cachedVisibleSize;\n        }\n    }\n    setVisible(visible, size) {\n        var _a;\n        if (visible === this.visible) {\n            return;\n        }\n        if (visible) {\n            this.size = clamp((_a = this._cachedVisibleSize) !== null && _a !== void 0 ? _a : 0, this.viewMinimumSize, this.viewMaximumSize);\n            this._cachedVisibleSize = undefined;\n        }\n        else {\n            this._cachedVisibleSize =\n                typeof size === 'number' ? size : this.size;\n            this.size = 0;\n        }\n        this.container.classList.toggle('visible', visible);\n        if (this.view.setVisible) {\n            this.view.setVisible(visible);\n        }\n    }\n    dispose() {\n        this.disposable.dispose();\n        return this.view;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/splitview\n *--------------------------------------------------------------------------------------------*/\nimport { removeClasses, addClasses, toggleClass, disableIframePointEvents, } from '../dom';\nimport { Emitter } from '../events';\nimport { pushToStart, pushToEnd, firstIndex } from '../array';\nimport { range, clamp } from '../math';\nimport { ViewItem } from './viewItem';\nexport var Orientation;\n(function (Orientation) {\n    Orientation[\"HORIZONTAL\"] = \"HORIZONTAL\";\n    Orientation[\"VERTICAL\"] = \"VERTICAL\";\n})(Orientation || (Orientation = {}));\nexport var SashState;\n(function (SashState) {\n    SashState[SashState[\"MAXIMUM\"] = 0] = \"MAXIMUM\";\n    SashState[SashState[\"MINIMUM\"] = 1] = \"MINIMUM\";\n    SashState[SashState[\"DISABLED\"] = 2] = \"DISABLED\";\n    SashState[SashState[\"ENABLED\"] = 3] = \"ENABLED\";\n})(SashState || (SashState = {}));\nexport var LayoutPriority;\n(function (LayoutPriority) {\n    LayoutPriority[\"Low\"] = \"low\";\n    LayoutPriority[\"High\"] = \"high\";\n    LayoutPriority[\"Normal\"] = \"normal\";\n})(LayoutPriority || (LayoutPriority = {}));\nexport var Sizing;\n(function (Sizing) {\n    Sizing.Distribute = { type: 'distribute' };\n    function Split(index) {\n        return { type: 'split', index };\n    }\n    Sizing.Split = Split;\n    function Invisible(cachedVisibleSize) {\n        return { type: 'invisible', cachedVisibleSize };\n    }\n    Sizing.Invisible = Invisible;\n})(Sizing || (Sizing = {}));\nexport class Splitview {\n    get contentSize() {\n        return this._contentSize;\n    }\n    get size() {\n        return this._size;\n    }\n    set size(value) {\n        this._size = value;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    set orthogonalSize(value) {\n        this._orthogonalSize = value;\n    }\n    get length() {\n        return this.viewItems.length;\n    }\n    get proportions() {\n        return this._proportions ? [...this._proportions] : undefined;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    set orientation(value) {\n        this._orientation = value;\n        const tmp = this.size;\n        this.size = this.orthogonalSize;\n        this.orthogonalSize = tmp;\n        removeClasses(this.element, 'dv-horizontal', 'dv-vertical');\n        this.element.classList.add(this.orientation == Orientation.HORIZONTAL\n            ? 'dv-horizontal'\n            : 'dv-vertical');\n    }\n    get minimumSize() {\n        return this.viewItems.reduce((r, item) => r + item.minimumSize, 0);\n    }\n    get maximumSize() {\n        return this.length === 0\n            ? Number.POSITIVE_INFINITY\n            : this.viewItems.reduce((r, item) => r + item.maximumSize, 0);\n    }\n    get startSnappingEnabled() {\n        return this._startSnappingEnabled;\n    }\n    set startSnappingEnabled(startSnappingEnabled) {\n        if (this._startSnappingEnabled === startSnappingEnabled) {\n            return;\n        }\n        this._startSnappingEnabled = startSnappingEnabled;\n        this.updateSashEnablement();\n    }\n    get endSnappingEnabled() {\n        return this._endSnappingEnabled;\n    }\n    set endSnappingEnabled(endSnappingEnabled) {\n        if (this._endSnappingEnabled === endSnappingEnabled) {\n            return;\n        }\n        this._endSnappingEnabled = endSnappingEnabled;\n        this.updateSashEnablement();\n    }\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = value;\n        toggleClass(this.element, 'dv-splitview-disabled', value);\n    }\n    get margin() {\n        return this._margin;\n    }\n    set margin(value) {\n        this._margin = value;\n    }\n    constructor(container, options) {\n        var _a;\n        this.container = container;\n        this.viewItems = [];\n        this.sashes = [];\n        this._size = 0;\n        this._orthogonalSize = 0;\n        this._contentSize = 0;\n        this._proportions = undefined;\n        this._startSnappingEnabled = true;\n        this._endSnappingEnabled = true;\n        this._disabled = false;\n        this._margin = 0;\n        this._onDidSashEnd = new Emitter();\n        this.onDidSashEnd = this._onDidSashEnd.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        this.resize = (index, delta, sizes = this.viewItems.map((x) => x.size), lowPriorityIndexes, highPriorityIndexes, overloadMinDelta = Number.NEGATIVE_INFINITY, overloadMaxDelta = Number.POSITIVE_INFINITY, snapBefore, snapAfter) => {\n            if (index < 0 || index > this.viewItems.length) {\n                return 0;\n            }\n            const upIndexes = range(index, -1);\n            const downIndexes = range(index + 1, this.viewItems.length);\n            //\n            if (highPriorityIndexes) {\n                for (const i of highPriorityIndexes) {\n                    pushToStart(upIndexes, i);\n                    pushToStart(downIndexes, i);\n                }\n            }\n            if (lowPriorityIndexes) {\n                for (const i of lowPriorityIndexes) {\n                    pushToEnd(upIndexes, i);\n                    pushToEnd(downIndexes, i);\n                }\n            }\n            //\n            const upItems = upIndexes.map((i) => this.viewItems[i]);\n            const upSizes = upIndexes.map((i) => sizes[i]);\n            //\n            const downItems = downIndexes.map((i) => this.viewItems[i]);\n            const downSizes = downIndexes.map((i) => sizes[i]);\n            //\n            const minDeltaUp = upIndexes.reduce((_, i) => _ + this.viewItems[i].minimumSize - sizes[i], 0);\n            const maxDeltaUp = upIndexes.reduce((_, i) => _ + this.viewItems[i].maximumSize - sizes[i], 0);\n            //\n            const maxDeltaDown = downIndexes.length === 0\n                ? Number.POSITIVE_INFINITY\n                : downIndexes.reduce((_, i) => _ + sizes[i] - this.viewItems[i].minimumSize, 0);\n            const minDeltaDown = downIndexes.length === 0\n                ? Number.NEGATIVE_INFINITY\n                : downIndexes.reduce((_, i) => _ + sizes[i] - this.viewItems[i].maximumSize, 0);\n            //\n            const minDelta = Math.max(minDeltaUp, minDeltaDown);\n            const maxDelta = Math.min(maxDeltaDown, maxDeltaUp);\n            //\n            let snapped = false;\n            if (snapBefore) {\n                const snapView = this.viewItems[snapBefore.index];\n                const visible = delta >= snapBefore.limitDelta;\n                snapped = visible !== snapView.visible;\n                snapView.setVisible(visible, snapBefore.size);\n            }\n            if (!snapped && snapAfter) {\n                const snapView = this.viewItems[snapAfter.index];\n                const visible = delta < snapAfter.limitDelta;\n                snapped = visible !== snapView.visible;\n                snapView.setVisible(visible, snapAfter.size);\n            }\n            if (snapped) {\n                return this.resize(index, delta, sizes, lowPriorityIndexes, highPriorityIndexes, overloadMinDelta, overloadMaxDelta);\n            }\n            //\n            const tentativeDelta = clamp(delta, minDelta, maxDelta);\n            let actualDelta = 0;\n            //\n            let deltaUp = tentativeDelta;\n            for (let i = 0; i < upItems.length; i++) {\n                const item = upItems[i];\n                const size = clamp(upSizes[i] + deltaUp, item.minimumSize, item.maximumSize);\n                const viewDelta = size - upSizes[i];\n                actualDelta += viewDelta;\n                deltaUp -= viewDelta;\n                item.size = size;\n            }\n            //\n            let deltaDown = actualDelta;\n            for (let i = 0; i < downItems.length; i++) {\n                const item = downItems[i];\n                const size = clamp(downSizes[i] - deltaDown, item.minimumSize, item.maximumSize);\n                const viewDelta = size - downSizes[i];\n                deltaDown += viewDelta;\n                item.size = size;\n            }\n            //\n            return delta;\n        };\n        this._orientation = options.orientation;\n        this.element = this.createContainer();\n        this.margin = (_a = options.margin) !== null && _a !== void 0 ? _a : 0;\n        this.proportionalLayout =\n            options.proportionalLayout === undefined\n                ? true\n                : !!options.proportionalLayout;\n        this.viewContainer = this.createViewContainer();\n        this.sashContainer = this.createSashContainer();\n        this.element.appendChild(this.sashContainer);\n        this.element.appendChild(this.viewContainer);\n        this.container.appendChild(this.element);\n        this.style(options.styles);\n        // We have an existing set of view, add them now\n        if (options.descriptor) {\n            this._size = options.descriptor.size;\n            options.descriptor.views.forEach((viewDescriptor, index) => {\n                const sizing = viewDescriptor.visible === undefined ||\n                    viewDescriptor.visible\n                    ? viewDescriptor.size\n                    : {\n                        type: 'invisible',\n                        cachedVisibleSize: viewDescriptor.size,\n                    };\n                const view = viewDescriptor.view;\n                this.addView(view, sizing, index, true\n                // true skip layout\n                );\n            });\n            // Initialize content size and proportions for first layout\n            this._contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n            this.saveProportions();\n        }\n    }\n    style(styles) {\n        if ((styles === null || styles === void 0 ? void 0 : styles.separatorBorder) === 'transparent') {\n            removeClasses(this.element, 'dv-separator-border');\n            this.element.style.removeProperty('--dv-separator-border');\n        }\n        else {\n            addClasses(this.element, 'dv-separator-border');\n            if (styles === null || styles === void 0 ? void 0 : styles.separatorBorder) {\n                this.element.style.setProperty('--dv-separator-border', styles.separatorBorder);\n            }\n        }\n    }\n    isViewVisible(index) {\n        if (index < 0 || index >= this.viewItems.length) {\n            throw new Error('Index out of bounds');\n        }\n        const viewItem = this.viewItems[index];\n        return viewItem.visible;\n    }\n    setViewVisible(index, visible) {\n        if (index < 0 || index >= this.viewItems.length) {\n            throw new Error('Index out of bounds');\n        }\n        const viewItem = this.viewItems[index];\n        viewItem.setVisible(visible, viewItem.size);\n        this.distributeEmptySpace(index);\n        this.layoutViews();\n        this.saveProportions();\n    }\n    getViewSize(index) {\n        if (index < 0 || index >= this.viewItems.length) {\n            return -1;\n        }\n        return this.viewItems[index].size;\n    }\n    resizeView(index, size) {\n        if (index < 0 || index >= this.viewItems.length) {\n            return;\n        }\n        const indexes = range(this.viewItems.length).filter((i) => i !== index);\n        const lowPriorityIndexes = [\n            ...indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low),\n            index,\n        ];\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        const item = this.viewItems[index];\n        size = Math.round(size);\n        size = clamp(size, item.minimumSize, Math.min(item.maximumSize, this._size));\n        item.size = size;\n        this.relayout(lowPriorityIndexes, highPriorityIndexes);\n    }\n    getViews() {\n        return this.viewItems.map((x) => x.view);\n    }\n    onDidChange(item, size) {\n        const index = this.viewItems.indexOf(item);\n        if (index < 0 || index >= this.viewItems.length) {\n            return;\n        }\n        size = typeof size === 'number' ? size : item.size;\n        size = clamp(size, item.minimumSize, item.maximumSize);\n        item.size = size;\n        const indexes = range(this.viewItems.length).filter((i) => i !== index);\n        const lowPriorityIndexes = [\n            ...indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low),\n            index,\n        ];\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        /**\n         * add this view we are changing to the low-index list since we have determined the size\n         * here and don't want it changed\n         */\n        this.relayout([...lowPriorityIndexes, index], highPriorityIndexes);\n    }\n    addView(view, size = { type: 'distribute' }, index = this.viewItems.length, skipLayout) {\n        const container = document.createElement('div');\n        container.className = 'dv-view';\n        container.appendChild(view.element);\n        let viewSize;\n        if (typeof size === 'number') {\n            viewSize = size;\n        }\n        else if (size.type === 'split') {\n            viewSize = this.getViewSize(size.index) / 2;\n        }\n        else if (size.type === 'invisible') {\n            viewSize = { cachedVisibleSize: size.cachedVisibleSize };\n        }\n        else {\n            viewSize = view.minimumSize;\n        }\n        const disposable = view.onDidChange((newSize) => this.onDidChange(viewItem, newSize.size));\n        const viewItem = new ViewItem(container, view, viewSize, {\n            dispose: () => {\n                disposable.dispose();\n                this.viewContainer.removeChild(container);\n            },\n        });\n        if (index === this.viewItems.length) {\n            this.viewContainer.appendChild(container);\n        }\n        else {\n            this.viewContainer.insertBefore(container, this.viewContainer.children.item(index));\n        }\n        this.viewItems.splice(index, 0, viewItem);\n        if (this.viewItems.length > 1) {\n            //add sash\n            const sash = document.createElement('div');\n            sash.className = 'dv-sash';\n            const onPointerStart = (event) => {\n                for (const item of this.viewItems) {\n                    item.enabled = false;\n                }\n                const iframes = disableIframePointEvents();\n                const start = this._orientation === Orientation.HORIZONTAL\n                    ? event.clientX\n                    : event.clientY;\n                const sashIndex = firstIndex(this.sashes, (s) => s.container === sash);\n                //\n                const sizes = this.viewItems.map((x) => x.size);\n                //\n                let snapBefore;\n                let snapAfter;\n                const upIndexes = range(sashIndex, -1);\n                const downIndexes = range(sashIndex + 1, this.viewItems.length);\n                const minDeltaUp = upIndexes.reduce((r, i) => r + (this.viewItems[i].minimumSize - sizes[i]), 0);\n                const maxDeltaUp = upIndexes.reduce((r, i) => r + (this.viewItems[i].viewMaximumSize - sizes[i]), 0);\n                const maxDeltaDown = downIndexes.length === 0\n                    ? Number.POSITIVE_INFINITY\n                    : downIndexes.reduce((r, i) => r +\n                        (sizes[i] - this.viewItems[i].minimumSize), 0);\n                const minDeltaDown = downIndexes.length === 0\n                    ? Number.NEGATIVE_INFINITY\n                    : downIndexes.reduce((r, i) => r +\n                        (sizes[i] -\n                            this.viewItems[i].viewMaximumSize), 0);\n                const minDelta = Math.max(minDeltaUp, minDeltaDown);\n                const maxDelta = Math.min(maxDeltaDown, maxDeltaUp);\n                const snapBeforeIndex = this.findFirstSnapIndex(upIndexes);\n                const snapAfterIndex = this.findFirstSnapIndex(downIndexes);\n                if (typeof snapBeforeIndex === 'number') {\n                    const snappedViewItem = this.viewItems[snapBeforeIndex];\n                    const halfSize = Math.floor(snappedViewItem.viewMinimumSize / 2);\n                    snapBefore = {\n                        index: snapBeforeIndex,\n                        limitDelta: snappedViewItem.visible\n                            ? minDelta - halfSize\n                            : minDelta + halfSize,\n                        size: snappedViewItem.size,\n                    };\n                }\n                if (typeof snapAfterIndex === 'number') {\n                    const snappedViewItem = this.viewItems[snapAfterIndex];\n                    const halfSize = Math.floor(snappedViewItem.viewMinimumSize / 2);\n                    snapAfter = {\n                        index: snapAfterIndex,\n                        limitDelta: snappedViewItem.visible\n                            ? maxDelta + halfSize\n                            : maxDelta - halfSize,\n                        size: snappedViewItem.size,\n                    };\n                }\n                const onPointerMove = (event) => {\n                    const current = this._orientation === Orientation.HORIZONTAL\n                        ? event.clientX\n                        : event.clientY;\n                    const delta = current - start;\n                    this.resize(sashIndex, delta, sizes, undefined, undefined, minDelta, maxDelta, snapBefore, snapAfter);\n                    this.distributeEmptySpace();\n                    this.layoutViews();\n                };\n                const end = () => {\n                    for (const item of this.viewItems) {\n                        item.enabled = true;\n                    }\n                    iframes.release();\n                    this.saveProportions();\n                    document.removeEventListener('pointermove', onPointerMove);\n                    document.removeEventListener('pointerup', end);\n                    document.removeEventListener('pointercancel', end);\n                    this._onDidSashEnd.fire(undefined);\n                };\n                document.addEventListener('pointermove', onPointerMove);\n                document.addEventListener('pointerup', end);\n                document.addEventListener('pointercancel', end);\n            };\n            sash.addEventListener('pointerdown', onPointerStart);\n            const sashItem = {\n                container: sash,\n                disposable: () => {\n                    sash.removeEventListener('pointerdown', onPointerStart);\n                    this.sashContainer.removeChild(sash);\n                },\n            };\n            this.sashContainer.appendChild(sash);\n            this.sashes.push(sashItem);\n        }\n        if (!skipLayout) {\n            this.relayout([index]);\n        }\n        if (!skipLayout &&\n            typeof size !== 'number' &&\n            size.type === 'distribute') {\n            this.distributeViewSizes();\n        }\n        this._onDidAddView.fire(view);\n    }\n    distributeViewSizes() {\n        const flexibleViewItems = [];\n        let flexibleSize = 0;\n        for (const item of this.viewItems) {\n            if (item.maximumSize - item.minimumSize > 0) {\n                flexibleViewItems.push(item);\n                flexibleSize += item.size;\n            }\n        }\n        const size = Math.floor(flexibleSize / flexibleViewItems.length);\n        for (const item of flexibleViewItems) {\n            item.size = clamp(size, item.minimumSize, item.maximumSize);\n        }\n        const indexes = range(this.viewItems.length);\n        const lowPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low);\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        this.relayout(lowPriorityIndexes, highPriorityIndexes);\n    }\n    removeView(index, sizing, skipLayout = false) {\n        // Remove view\n        const viewItem = this.viewItems.splice(index, 1)[0];\n        viewItem.dispose();\n        // Remove sash\n        if (this.viewItems.length >= 1) {\n            const sashIndex = Math.max(index - 1, 0);\n            const sashItem = this.sashes.splice(sashIndex, 1)[0];\n            sashItem.disposable();\n        }\n        if (!skipLayout) {\n            this.relayout();\n        }\n        if (sizing && sizing.type === 'distribute') {\n            this.distributeViewSizes();\n        }\n        this._onDidRemoveView.fire(viewItem.view);\n        return viewItem.view;\n    }\n    getViewCachedVisibleSize(index) {\n        if (index < 0 || index >= this.viewItems.length) {\n            throw new Error('Index out of bounds');\n        }\n        const viewItem = this.viewItems[index];\n        return viewItem.cachedVisibleSize;\n    }\n    moveView(from, to) {\n        const cachedVisibleSize = this.getViewCachedVisibleSize(from);\n        const sizing = typeof cachedVisibleSize === 'undefined'\n            ? this.getViewSize(from)\n            : Sizing.Invisible(cachedVisibleSize);\n        const view = this.removeView(from, undefined, true);\n        this.addView(view, sizing, to);\n    }\n    layout(size, orthogonalSize) {\n        const previousSize = Math.max(this.size, this._contentSize);\n        this.size = size;\n        this.orthogonalSize = orthogonalSize;\n        if (!this.proportions) {\n            const indexes = range(this.viewItems.length);\n            const lowPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low);\n            const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n            this.resize(this.viewItems.length - 1, size - previousSize, undefined, lowPriorityIndexes, highPriorityIndexes);\n        }\n        else {\n            let total = 0;\n            for (let i = 0; i < this.viewItems.length; i++) {\n                const item = this.viewItems[i];\n                const proportion = this.proportions[i];\n                if (typeof proportion === 'number') {\n                    total += proportion;\n                }\n                else {\n                    size -= item.size;\n                }\n            }\n            for (let i = 0; i < this.viewItems.length; i++) {\n                const item = this.viewItems[i];\n                const proportion = this.proportions[i];\n                if (typeof proportion === 'number' && total > 0) {\n                    item.size = clamp(Math.round((proportion * size) / total), item.minimumSize, item.maximumSize);\n                }\n            }\n        }\n        this.distributeEmptySpace();\n        this.layoutViews();\n    }\n    relayout(lowPriorityIndexes, highPriorityIndexes) {\n        const contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n        this.resize(this.viewItems.length - 1, this._size - contentSize, undefined, lowPriorityIndexes, highPriorityIndexes);\n        this.distributeEmptySpace();\n        this.layoutViews();\n        this.saveProportions();\n    }\n    distributeEmptySpace(lowPriorityIndex) {\n        const contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n        let emptyDelta = this.size - contentSize;\n        const indexes = range(this.viewItems.length - 1, -1);\n        const lowPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low);\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        for (const index of highPriorityIndexes) {\n            pushToStart(indexes, index);\n        }\n        for (const index of lowPriorityIndexes) {\n            pushToEnd(indexes, index);\n        }\n        if (typeof lowPriorityIndex === 'number') {\n            pushToEnd(indexes, lowPriorityIndex);\n        }\n        for (let i = 0; emptyDelta !== 0 && i < indexes.length; i++) {\n            const item = this.viewItems[indexes[i]];\n            const size = clamp(item.size + emptyDelta, item.minimumSize, item.maximumSize);\n            const viewDelta = size - item.size;\n            emptyDelta -= viewDelta;\n            item.size = size;\n        }\n    }\n    saveProportions() {\n        if (this.proportionalLayout && this._contentSize > 0) {\n            this._proportions = this.viewItems.map((i) => i.visible ? i.size / this._contentSize : undefined);\n        }\n    }\n    /**\n     * Margin explain:\n     *\n     * For `n` views in a splitview there will be `n-1` margins `m`.\n     *\n     * To fit the margins each view must reduce in size by `(m * (n - 1)) / n`.\n     *\n     * For each view `i` the offet must be adjusted by `m * i/(n - 1)`.\n     */\n    layoutViews() {\n        this._contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n        this.updateSashEnablement();\n        if (this.viewItems.length === 0) {\n            return;\n        }\n        const visibleViewItems = this.viewItems.filter((i) => i.visible);\n        const sashCount = Math.max(0, visibleViewItems.length - 1);\n        const marginReducedSize = (this.margin * sashCount) / Math.max(1, visibleViewItems.length);\n        let totalLeftOffset = 0;\n        const viewLeftOffsets = [];\n        const sashWidth = 4; // hardcoded in css\n        const runningVisiblePanelCount = this.viewItems.reduce((arr, viewItem, i) => {\n            const flag = viewItem.visible ? 1 : 0;\n            if (i === 0) {\n                arr.push(flag);\n            }\n            else {\n                arr.push(arr[i - 1] + flag);\n            }\n            return arr;\n        }, []);\n        // calculate both view and cash positions\n        this.viewItems.forEach((view, i) => {\n            totalLeftOffset += this.viewItems[i].size;\n            viewLeftOffsets.push(totalLeftOffset);\n            const size = view.visible ? view.size - marginReducedSize : 0;\n            const visiblePanelsBeforeThisView = Math.max(0, runningVisiblePanelCount[i] - 1);\n            const offset = i === 0 || visiblePanelsBeforeThisView === 0\n                ? 0\n                : viewLeftOffsets[i - 1] +\n                    (visiblePanelsBeforeThisView / sashCount) *\n                        marginReducedSize;\n            if (i < this.viewItems.length - 1) {\n                // calculate sash position\n                const newSize = view.visible\n                    ? offset + size - sashWidth / 2 + this.margin / 2\n                    : offset;\n                if (this._orientation === Orientation.HORIZONTAL) {\n                    this.sashes[i].container.style.left = `${newSize}px`;\n                    this.sashes[i].container.style.top = `0px`;\n                }\n                if (this._orientation === Orientation.VERTICAL) {\n                    this.sashes[i].container.style.left = `0px`;\n                    this.sashes[i].container.style.top = `${newSize}px`;\n                }\n            }\n            // calculate view position\n            if (this._orientation === Orientation.HORIZONTAL) {\n                view.container.style.width = `${size}px`;\n                view.container.style.left = `${offset}px`;\n                view.container.style.top = '';\n                view.container.style.height = '';\n            }\n            if (this._orientation === Orientation.VERTICAL) {\n                view.container.style.height = `${size}px`;\n                view.container.style.top = `${offset}px`;\n                view.container.style.width = '';\n                view.container.style.left = '';\n            }\n            view.view.layout(view.size - marginReducedSize, this._orthogonalSize);\n        });\n    }\n    findFirstSnapIndex(indexes) {\n        // visible views first\n        for (const index of indexes) {\n            const viewItem = this.viewItems[index];\n            if (!viewItem.visible) {\n                continue;\n            }\n            if (viewItem.snap) {\n                return index;\n            }\n        }\n        // then, hidden views\n        for (const index of indexes) {\n            const viewItem = this.viewItems[index];\n            if (viewItem.visible &&\n                viewItem.maximumSize - viewItem.minimumSize > 0) {\n                return undefined;\n            }\n            if (!viewItem.visible && viewItem.snap) {\n                return index;\n            }\n        }\n        return undefined;\n    }\n    updateSashEnablement() {\n        let previous = false;\n        const collapsesDown = this.viewItems.map((i) => (previous = i.size - i.minimumSize > 0 || previous));\n        previous = false;\n        const expandsDown = this.viewItems.map((i) => (previous = i.maximumSize - i.size > 0 || previous));\n        const reverseViews = [...this.viewItems].reverse();\n        previous = false;\n        const collapsesUp = reverseViews\n            .map((i) => (previous = i.size - i.minimumSize > 0 || previous))\n            .reverse();\n        previous = false;\n        const expandsUp = reverseViews\n            .map((i) => (previous = i.maximumSize - i.size > 0 || previous))\n            .reverse();\n        let position = 0;\n        for (let index = 0; index < this.sashes.length; index++) {\n            const sash = this.sashes[index];\n            const viewItem = this.viewItems[index];\n            position += viewItem.size;\n            const min = !(collapsesDown[index] && expandsUp[index + 1]);\n            const max = !(expandsDown[index] && collapsesUp[index + 1]);\n            if (min && max) {\n                const upIndexes = range(index, -1);\n                const downIndexes = range(index + 1, this.viewItems.length);\n                const snapBeforeIndex = this.findFirstSnapIndex(upIndexes);\n                const snapAfterIndex = this.findFirstSnapIndex(downIndexes);\n                const snappedBefore = typeof snapBeforeIndex === 'number' &&\n                    !this.viewItems[snapBeforeIndex].visible;\n                const snappedAfter = typeof snapAfterIndex === 'number' &&\n                    !this.viewItems[snapAfterIndex].visible;\n                if (snappedBefore &&\n                    collapsesUp[index] &&\n                    (position > 0 || this.startSnappingEnabled)) {\n                    this.updateSash(sash, SashState.MINIMUM);\n                }\n                else if (snappedAfter &&\n                    collapsesDown[index] &&\n                    (position < this._contentSize || this.endSnappingEnabled)) {\n                    this.updateSash(sash, SashState.MAXIMUM);\n                }\n                else {\n                    this.updateSash(sash, SashState.DISABLED);\n                }\n            }\n            else if (min && !max) {\n                this.updateSash(sash, SashState.MINIMUM);\n            }\n            else if (!min && max) {\n                this.updateSash(sash, SashState.MAXIMUM);\n            }\n            else {\n                this.updateSash(sash, SashState.ENABLED);\n            }\n        }\n    }\n    updateSash(sash, state) {\n        toggleClass(sash.container, 'dv-disabled', state === SashState.DISABLED);\n        toggleClass(sash.container, 'dv-enabled', state === SashState.ENABLED);\n        toggleClass(sash.container, 'dv-maximum', state === SashState.MAXIMUM);\n        toggleClass(sash.container, 'dv-minimum', state === SashState.MINIMUM);\n    }\n    createViewContainer() {\n        const element = document.createElement('div');\n        element.className = 'dv-view-container';\n        return element;\n    }\n    createSashContainer() {\n        const element = document.createElement('div');\n        element.className = 'dv-sash-container';\n        return element;\n    }\n    createContainer() {\n        const element = document.createElement('div');\n        const orientationClassname = this._orientation === Orientation.HORIZONTAL\n            ? 'dv-horizontal'\n            : 'dv-vertical';\n        element.className = `dv-split-view-container ${orientationClassname}`;\n        return element;\n    }\n    dispose() {\n        this._onDidSashEnd.dispose();\n        this._onDidAddView.dispose();\n        this._onDidRemoveView.dispose();\n        for (let i = 0; i < this.element.children.length; i++) {\n            if (this.element.children.item(i) === this.element) {\n                this.element.removeChild(this.element);\n                break;\n            }\n        }\n        for (const viewItem of this.viewItems) {\n            viewItem.dispose();\n        }\n        this.element.remove();\n    }\n}\n","export const PROPERTY_KEYS_SPLITVIEW = (() => {\n    /**\n     * by readong the keys from an empty value object TypeScript will error\n     * when we add or remove new properties to `DockviewOptions`\n     */\n    const properties = {\n        orientation: undefined,\n        descriptor: undefined,\n        proportionalLayout: undefined,\n        styles: undefined,\n        margin: undefined,\n        disableAutoResizing: undefined,\n        className: undefined,\n    };\n    return Object.keys(properties);\n})();\n","import { Splitview, Orientation, } from '../splitview/splitview';\nimport { CompositeDisposable } from '../lifecycle';\nimport { Emitter } from '../events';\nimport { addClasses, removeClasses } from '../dom';\nexport class Paneview extends CompositeDisposable {\n    get onDidAddView() {\n        return this.splitview.onDidAddView;\n    }\n    get onDidRemoveView() {\n        return this.splitview.onDidRemoveView;\n    }\n    get minimumSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumSize() {\n        return this.splitview.maximumSize;\n    }\n    get orientation() {\n        return this.splitview.orientation;\n    }\n    get size() {\n        return this.splitview.size;\n    }\n    get orthogonalSize() {\n        return this.splitview.orthogonalSize;\n    }\n    constructor(container, options) {\n        var _a;\n        super();\n        this.paneItems = [];\n        this.skipAnimation = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._orientation = (_a = options.orientation) !== null && _a !== void 0 ? _a : Orientation.VERTICAL;\n        this.element = document.createElement('div');\n        this.element.className = 'dv-pane-container';\n        container.appendChild(this.element);\n        this.splitview = new Splitview(this.element, {\n            orientation: this._orientation,\n            proportionalLayout: false,\n            descriptor: options.descriptor,\n        });\n        // if we've added views from the descriptor we need to\n        // add the panes to our Pane array and setup animation\n        this.getPanes().forEach((pane) => {\n            const disposable = new CompositeDisposable(pane.onDidChangeExpansionState(() => {\n                this.setupAnimation();\n                this._onDidChange.fire(undefined);\n            }));\n            const paneItem = {\n                pane,\n                disposable: {\n                    dispose: () => {\n                        disposable.dispose();\n                    },\n                },\n            };\n            this.paneItems.push(paneItem);\n            pane.orthogonalSize = this.splitview.orthogonalSize;\n        });\n        this.addDisposables(this._onDidChange, this.splitview.onDidSashEnd(() => {\n            this._onDidChange.fire(undefined);\n        }), this.splitview.onDidAddView(() => {\n            this._onDidChange.fire();\n        }), this.splitview.onDidRemoveView(() => {\n            this._onDidChange.fire();\n        }));\n    }\n    setViewVisible(index, visible) {\n        this.splitview.setViewVisible(index, visible);\n    }\n    addPane(pane, size, index = this.splitview.length, skipLayout = false) {\n        const disposable = pane.onDidChangeExpansionState(() => {\n            this.setupAnimation();\n            this._onDidChange.fire(undefined);\n        });\n        const paneItem = {\n            pane,\n            disposable: {\n                dispose: () => {\n                    disposable.dispose();\n                },\n            },\n        };\n        this.paneItems.splice(index, 0, paneItem);\n        pane.orthogonalSize = this.splitview.orthogonalSize;\n        this.splitview.addView(pane, size, index, skipLayout);\n    }\n    getViewSize(index) {\n        return this.splitview.getViewSize(index);\n    }\n    getPanes() {\n        return this.splitview.getViews();\n    }\n    removePane(index, options = { skipDispose: false }) {\n        const paneItem = this.paneItems.splice(index, 1)[0];\n        this.splitview.removeView(index);\n        if (!options.skipDispose) {\n            paneItem.disposable.dispose();\n            paneItem.pane.dispose();\n        }\n        return paneItem;\n    }\n    moveView(from, to) {\n        if (from === to) {\n            return;\n        }\n        const view = this.removePane(from, { skipDispose: true });\n        this.skipAnimation = true;\n        try {\n            this.addPane(view.pane, view.pane.size, to, false);\n        }\n        finally {\n            this.skipAnimation = false;\n        }\n    }\n    layout(size, orthogonalSize) {\n        this.splitview.layout(size, orthogonalSize);\n    }\n    setupAnimation() {\n        if (this.skipAnimation) {\n            return;\n        }\n        if (this.animationTimer) {\n            clearTimeout(this.animationTimer);\n            this.animationTimer = undefined;\n        }\n        addClasses(this.element, 'dv-animated');\n        this.animationTimer = setTimeout(() => {\n            this.animationTimer = undefined;\n            removeClasses(this.element, 'dv-animated');\n        }, 200);\n    }\n    dispose() {\n        super.dispose();\n        if (this.animationTimer) {\n            clearTimeout(this.animationTimer);\n            this.animationTimer = undefined;\n        }\n        this.paneItems.forEach((paneItem) => {\n            paneItem.disposable.dispose();\n            paneItem.pane.dispose();\n        });\n        this.paneItems = [];\n        this.splitview.dispose();\n        this.element.remove();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Orientation } from '../splitview/splitview';\nimport { Emitter } from '../events';\nexport class LeafNode {\n    get minimumWidth() {\n        return this.view.minimumWidth;\n    }\n    get maximumWidth() {\n        return this.view.maximumWidth;\n    }\n    get minimumHeight() {\n        return this.view.minimumHeight;\n    }\n    get maximumHeight() {\n        return this.view.maximumHeight;\n    }\n    get priority() {\n        return this.view.priority;\n    }\n    get snap() {\n        return this.view.snap;\n    }\n    get minimumSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumHeight\n            : this.minimumWidth;\n    }\n    get maximumSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumHeight\n            : this.maximumWidth;\n    }\n    get minimumOrthogonalSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumWidth\n            : this.minimumHeight;\n    }\n    get maximumOrthogonalSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumWidth\n            : this.maximumHeight;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    get size() {\n        return this._size;\n    }\n    get element() {\n        return this.view.element;\n    }\n    get width() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.orthogonalSize\n            : this.size;\n    }\n    get height() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.size\n            : this.orthogonalSize;\n    }\n    constructor(view, orientation, orthogonalSize, size = 0) {\n        this.view = view;\n        this.orientation = orientation;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._orthogonalSize = orthogonalSize;\n        this._size = size;\n        this._disposable = this.view.onDidChange((event) => {\n            if (event) {\n                this._onDidChange.fire({\n                    size: this.orientation === Orientation.VERTICAL\n                        ? event.width\n                        : event.height,\n                    orthogonalSize: this.orientation === Orientation.VERTICAL\n                        ? event.height\n                        : event.width,\n                });\n            }\n            else {\n                this._onDidChange.fire({});\n            }\n        });\n    }\n    setVisible(visible) {\n        if (this.view.setVisible) {\n            this.view.setVisible(visible);\n        }\n    }\n    layout(size, orthogonalSize) {\n        this._size = size;\n        this._orthogonalSize = orthogonalSize;\n        this.view.layout(this.width, this.height);\n    }\n    dispose() {\n        this._onDidChange.dispose();\n        this._disposable.dispose();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Splitview, Orientation, LayoutPriority, } from '../splitview/splitview';\nimport { Emitter, Event } from '../events';\nimport { LeafNode } from './leafNode';\nimport { CompositeDisposable, Disposable } from '../lifecycle';\nexport class BranchNode extends CompositeDisposable {\n    get width() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.size\n            : this.orthogonalSize;\n    }\n    get height() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.orthogonalSize\n            : this.size;\n    }\n    get minimumSize() {\n        return this.children.length === 0\n            ? 0\n            : Math.max(...this.children.map((c, index) => this.splitview.isViewVisible(index)\n                ? c.minimumOrthogonalSize\n                : 0));\n    }\n    get maximumSize() {\n        return Math.min(...this.children.map((c, index) => this.splitview.isViewVisible(index)\n            ? c.maximumOrthogonalSize\n            : Number.POSITIVE_INFINITY));\n    }\n    get minimumOrthogonalSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumOrthogonalSize() {\n        return this.splitview.maximumSize;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    get size() {\n        return this._size;\n    }\n    get minimumWidth() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumOrthogonalSize\n            : this.minimumSize;\n    }\n    get minimumHeight() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumSize\n            : this.minimumOrthogonalSize;\n    }\n    get maximumWidth() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumOrthogonalSize\n            : this.maximumSize;\n    }\n    get maximumHeight() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumSize\n            : this.maximumOrthogonalSize;\n    }\n    get priority() {\n        if (this.children.length === 0) {\n            return LayoutPriority.Normal;\n        }\n        const priorities = this.children.map((c) => typeof c.priority === 'undefined'\n            ? LayoutPriority.Normal\n            : c.priority);\n        if (priorities.some((p) => p === LayoutPriority.High)) {\n            return LayoutPriority.High;\n        }\n        else if (priorities.some((p) => p === LayoutPriority.Low)) {\n            return LayoutPriority.Low;\n        }\n        return LayoutPriority.Normal;\n    }\n    get disabled() {\n        return this.splitview.disabled;\n    }\n    set disabled(value) {\n        this.splitview.disabled = value;\n    }\n    get margin() {\n        return this.splitview.margin;\n    }\n    set margin(value) {\n        this.splitview.margin = value;\n        this.children.forEach((child) => {\n            if (child instanceof BranchNode) {\n                child.margin = value;\n            }\n        });\n    }\n    constructor(orientation, proportionalLayout, styles, size, orthogonalSize, disabled, margin, childDescriptors) {\n        super();\n        this.orientation = orientation;\n        this.proportionalLayout = proportionalLayout;\n        this.styles = styles;\n        this._childrenDisposable = Disposable.NONE;\n        this.children = [];\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._onDidVisibilityChange = new Emitter();\n        this.onDidVisibilityChange = this._onDidVisibilityChange.event;\n        this._orthogonalSize = orthogonalSize;\n        this._size = size;\n        this.element = document.createElement('div');\n        this.element.className = 'dv-branch-node';\n        if (!childDescriptors) {\n            this.splitview = new Splitview(this.element, {\n                orientation: this.orientation,\n                proportionalLayout,\n                styles,\n                margin,\n            });\n            this.splitview.layout(this.size, this.orthogonalSize);\n        }\n        else {\n            const descriptor = {\n                views: childDescriptors.map((childDescriptor) => {\n                    return {\n                        view: childDescriptor.node,\n                        size: childDescriptor.node.size,\n                        visible: childDescriptor.node instanceof LeafNode &&\n                            childDescriptor.visible !== undefined\n                            ? childDescriptor.visible\n                            : true,\n                    };\n                }),\n                size: this.orthogonalSize,\n            };\n            this.children = childDescriptors.map((c) => c.node);\n            this.splitview = new Splitview(this.element, {\n                orientation: this.orientation,\n                descriptor,\n                proportionalLayout,\n                styles,\n                margin,\n            });\n        }\n        this.disabled = disabled;\n        this.addDisposables(this._onDidChange, this._onDidVisibilityChange, this.splitview.onDidSashEnd(() => {\n            this._onDidChange.fire({});\n        }));\n        this.setupChildrenEvents();\n    }\n    setVisible(_visible) {\n        // noop\n    }\n    isChildVisible(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.isViewVisible(index);\n    }\n    setChildVisible(index, visible) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        if (this.splitview.isViewVisible(index) === visible) {\n            return;\n        }\n        const wereAllChildrenHidden = this.splitview.contentSize === 0;\n        this.splitview.setViewVisible(index, visible);\n        // }\n        const areAllChildrenHidden = this.splitview.contentSize === 0;\n        // If all children are hidden then the parent should hide the entire splitview\n        // If the entire splitview is hidden then the parent should show the splitview when a child is shown\n        if ((visible && wereAllChildrenHidden) ||\n            (!visible && areAllChildrenHidden)) {\n            this._onDidVisibilityChange.fire({ visible });\n        }\n    }\n    moveChild(from, to) {\n        if (from === to) {\n            return;\n        }\n        if (from < 0 || from >= this.children.length) {\n            throw new Error('Invalid from index');\n        }\n        if (from < to) {\n            to--;\n        }\n        this.splitview.moveView(from, to);\n        const child = this._removeChild(from);\n        this._addChild(child, to);\n    }\n    getChildSize(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.getViewSize(index);\n    }\n    resizeChild(index, size) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.resizeView(index, size);\n    }\n    layout(size, orthogonalSize) {\n        this._size = orthogonalSize;\n        this._orthogonalSize = size;\n        this.splitview.layout(orthogonalSize, size);\n    }\n    addChild(node, size, index, skipLayout) {\n        if (index < 0 || index > this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.addView(node, size, index, skipLayout);\n        this._addChild(node, index);\n    }\n    getChildCachedVisibleSize(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.getViewCachedVisibleSize(index);\n    }\n    removeChild(index, sizing) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.removeView(index, sizing);\n        return this._removeChild(index);\n    }\n    _addChild(node, index) {\n        this.children.splice(index, 0, node);\n        this.setupChildrenEvents();\n    }\n    _removeChild(index) {\n        const [child] = this.children.splice(index, 1);\n        this.setupChildrenEvents();\n        return child;\n    }\n    setupChildrenEvents() {\n        this._childrenDisposable.dispose();\n        this._childrenDisposable = new CompositeDisposable(Event.any(...this.children.map((c) => c.onDidChange))((e) => {\n            /**\n             * indicate a change has occured to allows any re-rendering but don't bubble\n             * event because that was specific to this branch\n             */\n            this._onDidChange.fire({ size: e.orthogonalSize });\n        }), ...this.children.map((c, i) => {\n            if (c instanceof BranchNode) {\n                return c.onDidVisibilityChange(({ visible }) => {\n                    this.setChildVisible(i, visible);\n                });\n            }\n            return Disposable.NONE;\n        }));\n    }\n    dispose() {\n        this._childrenDisposable.dispose();\n        this.splitview.dispose();\n        this.children.forEach((child) => child.dispose());\n        super.dispose();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Orientation, Sizing, } from '../splitview/splitview';\nimport { tail } from '../array';\nimport { LeafNode } from './leafNode';\nimport { BranchNode } from './branchNode';\nimport { Emitter } from '../events';\nimport { MutableDisposable } from '../lifecycle';\nfunction findLeaf(candiateNode, last) {\n    if (candiateNode instanceof LeafNode) {\n        return candiateNode;\n    }\n    if (candiateNode instanceof BranchNode) {\n        return findLeaf(candiateNode.children[last ? candiateNode.children.length - 1 : 0], last);\n    }\n    throw new Error('invalid node');\n}\nfunction flipNode(node, size, orthogonalSize) {\n    if (node instanceof BranchNode) {\n        const result = new BranchNode(orthogonal(node.orientation), node.proportionalLayout, node.styles, size, orthogonalSize, node.disabled, node.margin);\n        let totalSize = 0;\n        for (let i = node.children.length - 1; i >= 0; i--) {\n            const child = node.children[i];\n            const childSize = child instanceof BranchNode ? child.orthogonalSize : child.size;\n            let newSize = node.size === 0\n                ? 0\n                : Math.round((size * childSize) / node.size);\n            totalSize += newSize;\n            // The last view to add should adjust to rounding errors\n            if (i === 0) {\n                newSize += size - totalSize;\n            }\n            result.addChild(flipNode(child, orthogonalSize, newSize), newSize, 0, true);\n        }\n        return result;\n    }\n    else {\n        return new LeafNode(node.view, orthogonal(node.orientation), orthogonalSize);\n    }\n}\nexport function indexInParent(element) {\n    const parentElement = element.parentElement;\n    if (!parentElement) {\n        throw new Error('Invalid grid element');\n    }\n    let el = parentElement.firstElementChild;\n    let index = 0;\n    while (el !== element && el !== parentElement.lastElementChild && el) {\n        el = el.nextElementSibling;\n        index++;\n    }\n    return index;\n}\n/**\n * Find the grid location of a specific DOM element by traversing the parent\n * chain and finding each child index on the way.\n *\n * This will break as soon as DOM structures of the Splitview or Gridview change.\n */\nexport function getGridLocation(element) {\n    const parentElement = element.parentElement;\n    if (!parentElement) {\n        throw new Error('Invalid grid element');\n    }\n    if (/\\bdv-grid-view\\b/.test(parentElement.className)) {\n        return [];\n    }\n    const index = indexInParent(parentElement);\n    const ancestor = parentElement.parentElement.parentElement.parentElement;\n    return [...getGridLocation(ancestor), index];\n}\nexport function getRelativeLocation(rootOrientation, location, direction) {\n    const orientation = getLocationOrientation(rootOrientation, location);\n    const directionOrientation = getDirectionOrientation(direction);\n    if (orientation === directionOrientation) {\n        const [rest, _index] = tail(location);\n        let index = _index;\n        if (direction === 'right' || direction === 'bottom') {\n            index += 1;\n        }\n        return [...rest, index];\n    }\n    else {\n        const index = direction === 'right' || direction === 'bottom' ? 1 : 0;\n        return [...location, index];\n    }\n}\nexport function getDirectionOrientation(direction) {\n    return direction === 'top' || direction === 'bottom'\n        ? Orientation.VERTICAL\n        : Orientation.HORIZONTAL;\n}\nexport function getLocationOrientation(rootOrientation, location) {\n    return location.length % 2 === 0\n        ? orthogonal(rootOrientation)\n        : rootOrientation;\n}\nexport const orthogonal = (orientation) => orientation === Orientation.HORIZONTAL\n    ? Orientation.VERTICAL\n    : Orientation.HORIZONTAL;\nexport function isGridBranchNode(node) {\n    return !!node.children;\n}\nconst serializeBranchNode = (node, orientation) => {\n    const size = orientation === Orientation.VERTICAL ? node.box.width : node.box.height;\n    if (!isGridBranchNode(node)) {\n        if (typeof node.cachedVisibleSize === 'number') {\n            return {\n                type: 'leaf',\n                data: node.view.toJSON(),\n                size: node.cachedVisibleSize,\n                visible: false,\n            };\n        }\n        return { type: 'leaf', data: node.view.toJSON(), size };\n    }\n    return {\n        type: 'branch',\n        data: node.children.map((c) => serializeBranchNode(c, orthogonal(orientation))),\n        size,\n    };\n};\nexport class Gridview {\n    get length() {\n        return this._root ? this._root.children.length : 0;\n    }\n    get orientation() {\n        return this.root.orientation;\n    }\n    set orientation(orientation) {\n        if (this.root.orientation === orientation) {\n            return;\n        }\n        const { size, orthogonalSize } = this.root;\n        this.root = flipNode(this.root, orthogonalSize, size);\n        this.root.layout(size, orthogonalSize);\n    }\n    get width() {\n        return this.root.width;\n    }\n    get height() {\n        return this.root.height;\n    }\n    get minimumWidth() {\n        return this.root.minimumWidth;\n    }\n    get minimumHeight() {\n        return this.root.minimumHeight;\n    }\n    get maximumWidth() {\n        return this.root.maximumHeight;\n    }\n    get maximumHeight() {\n        return this.root.maximumHeight;\n    }\n    get locked() {\n        return this._locked;\n    }\n    set locked(value) {\n        this._locked = value;\n        const branch = [this.root];\n        /**\n         * simple depth-first-search to cover all nodes\n         *\n         * @see https://en.wikipedia.org/wiki/Depth-first_search\n         */\n        while (branch.length > 0) {\n            const node = branch.pop();\n            if (node instanceof BranchNode) {\n                node.disabled = value;\n                branch.push(...node.children);\n            }\n        }\n    }\n    get margin() {\n        return this._margin;\n    }\n    set margin(value) {\n        this._margin = value;\n        this.root.margin = value;\n    }\n    maximizedView() {\n        var _a;\n        return (_a = this._maximizedNode) === null || _a === void 0 ? void 0 : _a.leaf.view;\n    }\n    hasMaximizedView() {\n        return this._maximizedNode !== undefined;\n    }\n    maximizeView(view) {\n        var _a;\n        const location = getGridLocation(view.element);\n        const [_, node] = this.getNode(location);\n        if (!(node instanceof LeafNode)) {\n            return;\n        }\n        if (((_a = this._maximizedNode) === null || _a === void 0 ? void 0 : _a.leaf) === node) {\n            return;\n        }\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        serializeBranchNode(this.getView(), this.orientation);\n        const hiddenOnMaximize = [];\n        function hideAllViewsBut(parent, exclude) {\n            for (let i = 0; i < parent.children.length; i++) {\n                const child = parent.children[i];\n                if (child instanceof LeafNode) {\n                    if (child !== exclude) {\n                        if (parent.isChildVisible(i)) {\n                            parent.setChildVisible(i, false);\n                        }\n                        else {\n                            hiddenOnMaximize.push(child);\n                        }\n                    }\n                }\n                else {\n                    hideAllViewsBut(child, exclude);\n                }\n            }\n        }\n        hideAllViewsBut(this.root, node);\n        this._maximizedNode = { leaf: node, hiddenOnMaximize };\n        this._onDidMaximizedNodeChange.fire({\n            view: node.view,\n            isMaximized: true,\n        });\n    }\n    exitMaximizedView() {\n        if (!this._maximizedNode) {\n            return;\n        }\n        const hiddenOnMaximize = this._maximizedNode.hiddenOnMaximize;\n        function showViewsInReverseOrder(parent) {\n            for (let index = parent.children.length - 1; index >= 0; index--) {\n                const child = parent.children[index];\n                if (child instanceof LeafNode) {\n                    if (!hiddenOnMaximize.includes(child)) {\n                        parent.setChildVisible(index, true);\n                    }\n                }\n                else {\n                    showViewsInReverseOrder(child);\n                }\n            }\n        }\n        showViewsInReverseOrder(this.root);\n        const tmp = this._maximizedNode.leaf;\n        this._maximizedNode = undefined;\n        this._onDidMaximizedNodeChange.fire({\n            view: tmp.view,\n            isMaximized: false,\n        });\n    }\n    serialize() {\n        const maximizedView = this.maximizedView();\n        let maxmizedViewLocation;\n        if (maximizedView) {\n            /**\n             * The minimum information we can get away with in order to serialize a maxmized view is it's location within the grid\n             * which is represented as a branch of indices\n             */\n            maxmizedViewLocation = getGridLocation(maximizedView.element);\n        }\n        if (this.hasMaximizedView()) {\n            /**\n             * the saved layout cannot be in its maxmized state otherwise all of the underlying\n             * view dimensions will be wrong\n             *\n             * To counteract this we temporaily remove the maximized view to compute the serialized output\n             * of the grid before adding back the maxmized view as to not alter the layout from the users\n             * perspective when `.toJSON()` is called\n             */\n            this.exitMaximizedView();\n        }\n        const root = serializeBranchNode(this.getView(), this.orientation);\n        const resullt = {\n            root,\n            width: this.width,\n            height: this.height,\n            orientation: this.orientation,\n        };\n        if (maxmizedViewLocation) {\n            resullt.maximizedNode = {\n                location: maxmizedViewLocation,\n            };\n        }\n        if (maximizedView) {\n            // replace any maximzied view that was removed for serialization purposes\n            this.maximizeView(maximizedView);\n        }\n        return resullt;\n    }\n    dispose() {\n        this.disposable.dispose();\n        this._onDidChange.dispose();\n        this._onDidMaximizedNodeChange.dispose();\n        this._onDidViewVisibilityChange.dispose();\n        this.root.dispose();\n        this._maximizedNode = undefined;\n        this.element.remove();\n    }\n    clear() {\n        const orientation = this.root.orientation;\n        this.root = new BranchNode(orientation, this.proportionalLayout, this.styles, this.root.size, this.root.orthogonalSize, this.locked, this.margin);\n    }\n    deserialize(json, deserializer) {\n        const orientation = json.orientation;\n        const height = orientation === Orientation.VERTICAL ? json.height : json.width;\n        this._deserialize(json.root, orientation, deserializer, height);\n        /**\n         * The deserialied layout must be positioned through this.layout(...)\n         * before any maximizedNode can be positioned\n         */\n        this.layout(json.width, json.height);\n        if (json.maximizedNode) {\n            const location = json.maximizedNode.location;\n            const [_, node] = this.getNode(location);\n            if (!(node instanceof LeafNode)) {\n                return;\n            }\n            this.maximizeView(node.view);\n        }\n    }\n    _deserialize(root, orientation, deserializer, orthogonalSize) {\n        this.root = this._deserializeNode(root, orientation, deserializer, orthogonalSize);\n    }\n    _deserializeNode(node, orientation, deserializer, orthogonalSize) {\n        var _a;\n        let result;\n        if (node.type === 'branch') {\n            const serializedChildren = node.data;\n            const children = serializedChildren.map((serializedChild) => {\n                return {\n                    node: this._deserializeNode(serializedChild, orthogonal(orientation), deserializer, node.size),\n                    visible: serializedChild.visible,\n                };\n            });\n            result = new BranchNode(orientation, this.proportionalLayout, this.styles, node.size, // <- orthogonal size - flips at each depth\n            orthogonalSize, // <- size - flips at each depth,\n            this.locked, this.margin, children);\n        }\n        else {\n            const view = deserializer.fromJSON(node);\n            if (typeof node.visible === 'boolean') {\n                (_a = view.setVisible) === null || _a === void 0 ? void 0 : _a.call(view, node.visible);\n            }\n            result = new LeafNode(view, orientation, orthogonalSize, node.size);\n        }\n        return result;\n    }\n    get root() {\n        return this._root;\n    }\n    set root(root) {\n        const oldRoot = this._root;\n        if (oldRoot) {\n            oldRoot.dispose();\n            this._maximizedNode = undefined;\n            this.element.removeChild(oldRoot.element);\n        }\n        this._root = root;\n        this.element.appendChild(this._root.element);\n        this.disposable.value = this._root.onDidChange((e) => {\n            this._onDidChange.fire(e);\n        });\n    }\n    /**\n     * If the root is orientated as a VERTICAL node then nest the existing root within a new HORIZIONTAL root node\n     * If the root is orientated as a HORIZONTAL node then nest the existing root within a new VERITCAL root node\n     */\n    insertOrthogonalSplitviewAtRoot() {\n        if (!this._root) {\n            return;\n        }\n        const oldRoot = this.root;\n        oldRoot.element.remove();\n        this._root = new BranchNode(orthogonal(oldRoot.orientation), this.proportionalLayout, this.styles, this.root.orthogonalSize, this.root.size, this.locked, this.margin);\n        if (oldRoot.children.length === 0) {\n            // no data so no need to add anything back in\n        }\n        else if (oldRoot.children.length === 1) {\n            // can remove one level of redundant branching if there is only a single child\n            const childReference = oldRoot.children[0];\n            const child = oldRoot.removeChild(0); // remove to prevent disposal when disposing of unwanted root\n            child.dispose();\n            oldRoot.dispose();\n            this._root.addChild(\n            /**\n             * the child node will have the same orientation as the new root since\n             * we are removing the inbetween node.\n             * the entire 'tree' must be flipped recursively to ensure that the orientation\n             * flips at each level\n             */\n            flipNode(childReference, childReference.orthogonalSize, childReference.size), Sizing.Distribute, 0);\n        }\n        else {\n            this._root.addChild(oldRoot, Sizing.Distribute, 0);\n        }\n        this.element.appendChild(this._root.element);\n        this.disposable.value = this._root.onDidChange((e) => {\n            this._onDidChange.fire(e);\n        });\n    }\n    next(location) {\n        return this.progmaticSelect(location);\n    }\n    previous(location) {\n        return this.progmaticSelect(location, true);\n    }\n    getView(location) {\n        const node = location ? this.getNode(location)[1] : this.root;\n        return this._getViews(node, this.orientation);\n    }\n    _getViews(node, orientation, cachedVisibleSize) {\n        const box = { height: node.height, width: node.width };\n        if (node instanceof LeafNode) {\n            return { box, view: node.view, cachedVisibleSize };\n        }\n        const children = [];\n        for (let i = 0; i < node.children.length; i++) {\n            const child = node.children[i];\n            const nodeCachedVisibleSize = node.getChildCachedVisibleSize(i);\n            children.push(this._getViews(child, orthogonal(orientation), nodeCachedVisibleSize));\n        }\n        return { box, children };\n    }\n    progmaticSelect(location, reverse = false) {\n        const [path, node] = this.getNode(location);\n        if (!(node instanceof LeafNode)) {\n            throw new Error('invalid location');\n        }\n        for (let i = path.length - 1; i > -1; i--) {\n            const n = path[i];\n            const l = location[i] || 0;\n            const canProgressInCurrentLevel = reverse\n                ? l - 1 > -1\n                : l + 1 < n.children.length;\n            if (canProgressInCurrentLevel) {\n                return findLeaf(n.children[reverse ? l - 1 : l + 1], reverse);\n            }\n        }\n        return findLeaf(this.root, reverse);\n    }\n    constructor(proportionalLayout, styles, orientation, locked, margin) {\n        this.proportionalLayout = proportionalLayout;\n        this.styles = styles;\n        this._locked = false;\n        this._margin = 0;\n        this._maximizedNode = undefined;\n        this.disposable = new MutableDisposable();\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._onDidViewVisibilityChange = new Emitter();\n        this.onDidViewVisibilityChange = this._onDidViewVisibilityChange.event;\n        this._onDidMaximizedNodeChange = new Emitter();\n        this.onDidMaximizedNodeChange = this._onDidMaximizedNodeChange.event;\n        this.element = document.createElement('div');\n        this.element.className = 'dv-grid-view';\n        this._locked = locked !== null && locked !== void 0 ? locked : false;\n        this._margin = margin !== null && margin !== void 0 ? margin : 0;\n        this.root = new BranchNode(orientation, proportionalLayout, styles, 0, 0, this.locked, this.margin);\n    }\n    isViewVisible(location) {\n        const [rest, index] = tail(location);\n        const [, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid from location');\n        }\n        return parent.isChildVisible(index);\n    }\n    setViewVisible(location, visible) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [rest, index] = tail(location);\n        const [, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid from location');\n        }\n        this._onDidViewVisibilityChange.fire();\n        parent.setChildVisible(index, visible);\n    }\n    moveView(parentLocation, from, to) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [, parent] = this.getNode(parentLocation);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        parent.moveChild(from, to);\n    }\n    addView(view, size, location) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [rest, index] = tail(location);\n        const [pathToParent, parent] = this.getNode(rest);\n        if (parent instanceof BranchNode) {\n            const node = new LeafNode(view, orthogonal(parent.orientation), parent.orthogonalSize);\n            parent.addChild(node, size, index);\n        }\n        else {\n            const [grandParent, ..._] = [...pathToParent].reverse();\n            const [parentIndex, ...__] = [...rest].reverse();\n            let newSiblingSize = 0;\n            const newSiblingCachedVisibleSize = grandParent.getChildCachedVisibleSize(parentIndex);\n            if (typeof newSiblingCachedVisibleSize === 'number') {\n                newSiblingSize = Sizing.Invisible(newSiblingCachedVisibleSize);\n            }\n            const child = grandParent.removeChild(parentIndex);\n            child.dispose();\n            const newParent = new BranchNode(parent.orientation, this.proportionalLayout, this.styles, parent.size, parent.orthogonalSize, this.locked, this.margin);\n            grandParent.addChild(newParent, parent.size, parentIndex);\n            const newSibling = new LeafNode(parent.view, grandParent.orientation, parent.size);\n            newParent.addChild(newSibling, newSiblingSize, 0);\n            if (typeof size !== 'number' && size.type === 'split') {\n                size = { type: 'split', index: 0 };\n            }\n            const node = new LeafNode(view, grandParent.orientation, parent.size);\n            newParent.addChild(node, size, index);\n        }\n    }\n    remove(view, sizing) {\n        const location = getGridLocation(view.element);\n        return this.removeView(location, sizing);\n    }\n    removeView(location, sizing) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [rest, index] = tail(location);\n        const [pathToParent, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        const nodeToRemove = parent.children[index];\n        if (!(nodeToRemove instanceof LeafNode)) {\n            throw new Error('Invalid location');\n        }\n        parent.removeChild(index, sizing);\n        nodeToRemove.dispose();\n        if (parent.children.length !== 1) {\n            return nodeToRemove.view;\n        }\n        // if the parent has only one child and we know the parent is a BranchNode we can make the tree\n        // more efficiently spaced by replacing the parent BranchNode with the child.\n        // if that child is a LeafNode then we simply replace the BranchNode with the child otherwise if the child\n        // is a BranchNode too we should spread it's children into the grandparent.\n        // refer to the remaining child as the sibling\n        const sibling = parent.children[0];\n        if (pathToParent.length === 0) {\n            // if the parent is root\n            if (sibling instanceof LeafNode) {\n                // if the sibling is a leaf node no action is required\n                return nodeToRemove.view;\n            }\n            // otherwise the sibling is a branch node. since the parent is the root and the root has only one child\n            // which is a branch node we can just set this branch node to be the new root node\n            // for good housekeeping we'll removing the sibling from it's existing tree\n            parent.removeChild(0, sizing);\n            // and set that sibling node to be root\n            this.root = sibling;\n            return nodeToRemove.view;\n        }\n        // otherwise the parent is apart of a large sub-tree\n        const [grandParent, ..._] = [...pathToParent].reverse();\n        const [parentIndex, ...__] = [...rest].reverse();\n        const isSiblingVisible = parent.isChildVisible(0);\n        // either way we need to remove the sibling from it's existing tree\n        parent.removeChild(0, sizing);\n        // note the sizes of all of the grandparents children\n        const sizes = grandParent.children.map((_size, i) => grandParent.getChildSize(i));\n        // remove the parent from the grandparent since we are moving the sibling to take the parents place\n        // this parent is no longer used and can be disposed of\n        grandParent.removeChild(parentIndex, sizing).dispose();\n        if (sibling instanceof BranchNode) {\n            // replace the parent with the siblings children\n            sizes.splice(parentIndex, 1, ...sibling.children.map((c) => c.size));\n            // and add those siblings to the grandparent\n            for (let i = 0; i < sibling.children.length; i++) {\n                const child = sibling.children[i];\n                grandParent.addChild(child, child.size, parentIndex + i);\n            }\n            /**\n             * clean down the branch node since we need to dipose of it and\n             * when .dispose() it called on a branch it will dispose of any\n             * views it is holding onto.\n             */\n            while (sibling.children.length > 0) {\n                sibling.removeChild(0);\n            }\n        }\n        else {\n            // otherwise create a new leaf node and add that to the grandparent\n            const newSibling = new LeafNode(sibling.view, orthogonal(sibling.orientation), sibling.size);\n            const siblingSizing = isSiblingVisible\n                ? sibling.orthogonalSize\n                : Sizing.Invisible(sibling.orthogonalSize);\n            grandParent.addChild(newSibling, siblingSizing, parentIndex);\n        }\n        // the containing node of the sibling is no longer required and can be disposed of\n        sibling.dispose();\n        // resize everything\n        for (let i = 0; i < sizes.length; i++) {\n            grandParent.resizeChild(i, sizes[i]);\n        }\n        return nodeToRemove.view;\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.root.orientation === Orientation.HORIZONTAL\n            ? [height, width]\n            : [width, height];\n        this.root.layout(size, orthogonalSize);\n    }\n    getNode(location, node = this.root, path = []) {\n        if (location.length === 0) {\n            return [path, node];\n        }\n        if (!(node instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        const [index, ...rest] = location;\n        if (index < 0 || index >= node.children.length) {\n            throw new Error('Invalid location');\n        }\n        const child = node.children[index];\n        path.push(node);\n        return this.getNode(rest, child, path);\n    }\n}\n","export const PROPERTY_KEYS_GRIDVIEW = (() => {\n    /**\n     * by readong the keys from an empty value object TypeScript will error\n     * when we add or remove new properties to `DockviewOptions`\n     */\n    const properties = {\n        disableAutoResizing: undefined,\n        proportionalLayout: undefined,\n        orientation: undefined,\n        hideBorders: undefined,\n        className: undefined,\n    };\n    return Object.keys(properties);\n})();\n","import { isInDocument, watchElementResize } from './dom';\nimport { CompositeDisposable } from './lifecycle';\nexport class Resizable extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    get disableResizing() {\n        return this._disableResizing;\n    }\n    set disableResizing(value) {\n        this._disableResizing = value;\n    }\n    constructor(parentElement, disableResizing = false) {\n        super();\n        this._disableResizing = disableResizing;\n        this._element = parentElement;\n        this.addDisposables(watchElementResize(this._element, (entry) => {\n            if (this.isDisposed) {\n                /**\n                 * resize is delayed through requestAnimationFrame so there is a small chance\n                 * the component has already been disposed of\n                 */\n                return;\n            }\n            if (this.disableResizing) {\n                return;\n            }\n            if (!this._element.offsetParent) {\n                /**\n                 * offsetParent === null is equivalent to display: none being set on the element or one\n                 * of it's parents. In the display: none case the size will become (0, 0) which we do\n                 * not want to propagate.\n                 *\n                 * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/offsetParent\n                 *\n                 * You could use checkVisibility() but at the time of writing it's not supported across\n                 * all Browsers\n                 *\n                 * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/checkVisibility\n                 */\n                return;\n            }\n            if (!isInDocument(this._element)) {\n                /**\n                 * since the event is dispatched through requestAnimationFrame there is a small chance\n                 * the component is no longer attached to the DOM, if that is the case the dimensions\n                 * are mostly likely all zero and meaningless. we should skip this case.\n                 */\n                return;\n            }\n            const { width, height } = entry.contentRect;\n            this.layout(width, height);\n        }));\n    }\n}\n","import { Emitter, Event, AsapEvent } from '../events';\nimport { getGridLocation, Gridview } from './gridview';\nimport { Disposable } from '../lifecycle';\nimport { sequentialNumberGenerator } from '../math';\nimport { Sizing } from '../splitview/splitview';\nimport { Resizable } from '../resizable';\nimport { Classnames } from '../dom';\nconst nextLayoutId = sequentialNumberGenerator();\nexport function toTarget(direction) {\n    switch (direction) {\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'above':\n            return 'top';\n        case 'below':\n            return 'bottom';\n        case 'within':\n        default:\n            return 'center';\n    }\n}\nexport class BaseGrid extends Resizable {\n    get id() {\n        return this._id;\n    }\n    get size() {\n        return this._groups.size;\n    }\n    get groups() {\n        return Array.from(this._groups.values()).map((_) => _.value);\n    }\n    get width() {\n        return this.gridview.width;\n    }\n    get height() {\n        return this.gridview.height;\n    }\n    get minimumHeight() {\n        return this.gridview.minimumHeight;\n    }\n    get maximumHeight() {\n        return this.gridview.maximumHeight;\n    }\n    get minimumWidth() {\n        return this.gridview.minimumWidth;\n    }\n    get maximumWidth() {\n        return this.gridview.maximumWidth;\n    }\n    get activeGroup() {\n        return this._activeGroup;\n    }\n    get locked() {\n        return this.gridview.locked;\n    }\n    set locked(value) {\n        this.gridview.locked = value;\n    }\n    constructor(parentElement, options) {\n        var _a;\n        super(document.createElement('div'), options.disableAutoResizing);\n        this._id = nextLayoutId.next();\n        this._groups = new Map();\n        this._onDidRemove = new Emitter();\n        this.onDidRemove = this._onDidRemove.event;\n        this._onDidAdd = new Emitter();\n        this.onDidAdd = this._onDidAdd.event;\n        this._onDidMaximizedChange = new Emitter();\n        this.onDidMaximizedChange = this._onDidMaximizedChange.event;\n        this._onDidActiveChange = new Emitter();\n        this.onDidActiveChange = this._onDidActiveChange.event;\n        this._bufferOnDidLayoutChange = new AsapEvent();\n        this.onDidLayoutChange = this._bufferOnDidLayoutChange.onEvent;\n        this._onDidViewVisibilityChangeMicroTaskQueue = new AsapEvent();\n        this.onDidViewVisibilityChangeMicroTaskQueue = this._onDidViewVisibilityChangeMicroTaskQueue.onEvent;\n        this.element.style.height = '100%';\n        this.element.style.width = '100%';\n        this._classNames = new Classnames(this.element);\n        this._classNames.setClassNames((_a = options.className) !== null && _a !== void 0 ? _a : '');\n        parentElement.appendChild(this.element);\n        this.gridview = new Gridview(!!options.proportionalLayout, options.styles, options.orientation, options.locked, options.margin);\n        this.gridview.locked = !!options.locked;\n        this.element.appendChild(this.gridview.element);\n        this.layout(0, 0, true); // set some elements height/widths\n        this.addDisposables(this.gridview.onDidMaximizedNodeChange((event) => {\n            this._onDidMaximizedChange.fire({\n                panel: event.view,\n                isMaximized: event.isMaximized,\n            });\n        }), this.gridview.onDidViewVisibilityChange(() => this._onDidViewVisibilityChangeMicroTaskQueue.fire()), this.onDidViewVisibilityChangeMicroTaskQueue(() => {\n            this.layout(this.width, this.height, true);\n        }), Disposable.from(() => {\n            var _a;\n            (_a = this.element.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(this.element);\n        }), this.gridview.onDidChange(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), Event.any(this.onDidAdd, this.onDidRemove, this.onDidActiveChange)(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), this._onDidMaximizedChange, this._onDidViewVisibilityChangeMicroTaskQueue, this._bufferOnDidLayoutChange);\n    }\n    setVisible(panel, visible) {\n        this.gridview.setViewVisible(getGridLocation(panel.element), visible);\n        this._bufferOnDidLayoutChange.fire();\n    }\n    isVisible(panel) {\n        return this.gridview.isViewVisible(getGridLocation(panel.element));\n    }\n    updateOptions(options) {\n        var _a, _b, _c, _d;\n        if (typeof options.proportionalLayout === 'boolean') {\n            // this.gridview.proportionalLayout = options.proportionalLayout; // not supported\n        }\n        if (options.orientation) {\n            this.gridview.orientation = options.orientation;\n        }\n        if ('styles' in options) {\n            // this.gridview.styles = options.styles; // not supported\n        }\n        if ('disableResizing' in options) {\n            this.disableResizing = (_a = options.disableAutoResizing) !== null && _a !== void 0 ? _a : false;\n        }\n        if ('locked' in options) {\n            this.locked = (_b = options.locked) !== null && _b !== void 0 ? _b : false;\n        }\n        if ('margin' in options) {\n            this.gridview.margin = (_c = options.margin) !== null && _c !== void 0 ? _c : 0;\n        }\n        if ('className' in options) {\n            this._classNames.setClassNames((_d = options.className) !== null && _d !== void 0 ? _d : '');\n        }\n    }\n    maximizeGroup(panel) {\n        this.gridview.maximizeView(panel);\n        this.doSetGroupActive(panel);\n    }\n    isMaximizedGroup(panel) {\n        return this.gridview.maximizedView() === panel;\n    }\n    exitMaximizedGroup() {\n        this.gridview.exitMaximizedView();\n    }\n    hasMaximizedGroup() {\n        return this.gridview.hasMaximizedView();\n    }\n    doAddGroup(group, location = [0], size) {\n        this.gridview.addView(group, size !== null && size !== void 0 ? size : Sizing.Distribute, location);\n        this._onDidAdd.fire(group);\n    }\n    doRemoveGroup(group, options) {\n        if (!this._groups.has(group.id)) {\n            throw new Error('invalid operation');\n        }\n        const item = this._groups.get(group.id);\n        const view = this.gridview.remove(group, Sizing.Distribute);\n        if (item && !(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n            item.disposable.dispose();\n            item.value.dispose();\n            this._groups.delete(group.id);\n            this._onDidRemove.fire(group);\n        }\n        if (!(options === null || options === void 0 ? void 0 : options.skipActive) && this._activeGroup === group) {\n            const groups = Array.from(this._groups.values());\n            this.doSetGroupActive(groups.length > 0 ? groups[0].value : undefined);\n        }\n        return view;\n    }\n    getPanel(id) {\n        var _a;\n        return (_a = this._groups.get(id)) === null || _a === void 0 ? void 0 : _a.value;\n    }\n    doSetGroupActive(group) {\n        if (this._activeGroup === group) {\n            return;\n        }\n        if (this._activeGroup) {\n            this._activeGroup.setActive(false);\n        }\n        if (group) {\n            group.setActive(true);\n        }\n        this._activeGroup = group;\n        this._onDidActiveChange.fire(group);\n    }\n    removeGroup(group) {\n        this.doRemoveGroup(group);\n    }\n    moveToNext(options) {\n        var _a;\n        if (!options) {\n            options = {};\n        }\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.next(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupActive(next);\n    }\n    moveToPrevious(options) {\n        var _a;\n        if (!options) {\n            options = {};\n        }\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.previous(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupActive(next);\n    }\n    layout(width, height, forceResize) {\n        const different = forceResize || width !== this.width || height !== this.height;\n        if (!different) {\n            return;\n        }\n        this.gridview.element.style.height = `${height}px`;\n        this.gridview.element.style.width = `${width}px`;\n        this.gridview.layout(width, height);\n    }\n    dispose() {\n        this._onDidActiveChange.dispose();\n        this._onDidAdd.dispose();\n        this._onDidRemove.dispose();\n        for (const group of this.groups) {\n            group.dispose();\n        }\n        this.gridview.dispose();\n        super.dispose();\n    }\n}\n","export class SplitviewApi {\n    /**\n     * The minimum size  the component can reach where size is measured in the direction of orientation provided.\n     */\n    get minimumSize() {\n        return this.component.minimumSize;\n    }\n    /**\n     * The maximum size the component can reach where size is measured in the direction of orientation provided.\n     */\n    get maximumSize() {\n        return this.component.maximumSize;\n    }\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * The current number of panels.\n     */\n    get length() {\n        return this.component.length;\n    }\n    /**\n     * The current orientation of the component.\n     */\n    get orientation() {\n        return this.component.orientation;\n    }\n    /**\n     * The list of current panels.\n     */\n    get panels() {\n        return this.component.panels;\n    }\n    /**\n     * Invoked after a layout is loaded through the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * Invoked whenever any aspect of the layout changes.\n     * If listening to this event it may be worth debouncing ouputs.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked when a view is added.\n     */\n    get onDidAddView() {\n        return this.component.onDidAddView;\n    }\n    /**\n     * Invoked when a view is removed.\n     */\n    get onDidRemoveView() {\n        return this.component.onDidRemoveView;\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     * Removes an existing panel and optionally provide a `Sizing` method\n     * for the subsequent resize.\n     */\n    removePanel(panel, sizing) {\n        this.component.removePanel(panel, sizing);\n    }\n    /**\n     * Focus the component.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Get the reference to a panel given it's `string` id.\n     */\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Layout the panel with a width and height.\n     */\n    layout(width, height) {\n        return this.component.layout(width, height);\n    }\n    /**\n     * Add a new panel and return the created instance.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Move a panel given it's current and desired index.\n     */\n    movePanel(from, to) {\n        this.component.movePanel(from, to);\n    }\n    /**\n     * Deserialize a layout to built a splitivew.\n     */\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    /** Serialize a layout */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Remove all panels and clear the component.\n     */\n    clear() {\n        this.component.clear();\n    }\n    /**\n     * Update configuratable options.\n     */\n    updateOptions(options) {\n        this.component.updateOptions(options);\n    }\n    /**\n     * Release resources and teardown component. Do not call when using framework versions of dockview.\n     */\n    dispose() {\n        this.component.dispose();\n    }\n}\nexport class PaneviewApi {\n    /**\n     * The minimum size  the component can reach where size is measured in the direction of orientation provided.\n     */\n    get minimumSize() {\n        return this.component.minimumSize;\n    }\n    /**\n     * The maximum size the component can reach where size is measured in the direction of orientation provided.\n     */\n    get maximumSize() {\n        return this.component.maximumSize;\n    }\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * All panel objects.\n     */\n    get panels() {\n        return this.component.panels;\n    }\n    /**\n     * Invoked when any layout change occures, an aggregation of many events.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked after a layout is deserialzied using the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * Invoked when a panel is added. May be called multiple times when moving panels.\n     */\n    get onDidAddView() {\n        return this.component.onDidAddView;\n    }\n    /**\n     * Invoked when a panel is removed. May be called multiple times when moving panels.\n     */\n    get onDidRemoveView() {\n        return this.component.onDidRemoveView;\n    }\n    /**\n     * Invoked when a Drag'n'Drop event occurs that the component was unable to handle. Exposed for custom Drag'n'Drop functionality.\n     */\n    get onDidDrop() {\n        return this.component.onDidDrop;\n    }\n    get onUnhandledDragOverEvent() {\n        return this.component.onUnhandledDragOverEvent;\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     * Remove a panel given the panel object.\n     */\n    removePanel(panel) {\n        this.component.removePanel(panel);\n    }\n    /**\n     * Get a panel object given a `string` id. May return `undefined`.\n     */\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Move a panel given it's current and desired index.\n     */\n    movePanel(from, to) {\n        this.component.movePanel(from, to);\n    }\n    /**\n     *  Focus the component. Will try to focus an active panel if one exists.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Force resize the component to an exact width and height. Read about auto-resizing before using.\n     */\n    layout(width, height) {\n        this.component.layout(width, height);\n    }\n    /**\n     * Add a panel and return the created object.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Create a component from a serialized object.\n     */\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    /**\n     * Create a serialized object of the current component.\n     */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Reset the component back to an empty and default state.\n     */\n    clear() {\n        this.component.clear();\n    }\n    /**\n     * Update configuratable options.\n     */\n    updateOptions(options) {\n        this.component.updateOptions(options);\n    }\n    /**\n     * Release resources and teardown component. Do not call when using framework versions of dockview.\n     */\n    dispose() {\n        this.component.dispose();\n    }\n}\nexport class GridviewApi {\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * Minimum height of the component.\n     */\n    get minimumHeight() {\n        return this.component.minimumHeight;\n    }\n    /**\n     * Maximum height of the component.\n     */\n    get maximumHeight() {\n        return this.component.maximumHeight;\n    }\n    /**\n     * Minimum width of the component.\n     */\n    get minimumWidth() {\n        return this.component.minimumWidth;\n    }\n    /**\n     * Maximum width of the component.\n     */\n    get maximumWidth() {\n        return this.component.maximumWidth;\n    }\n    /**\n     * Invoked when any layout change occures, an aggregation of many events.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked when a panel is added. May be called multiple times when moving panels.\n     */\n    get onDidAddPanel() {\n        return this.component.onDidAddGroup;\n    }\n    /**\n     * Invoked when a panel is removed. May be called multiple times when moving panels.\n     */\n    get onDidRemovePanel() {\n        return this.component.onDidRemoveGroup;\n    }\n    /**\n     * Invoked when the active panel changes. May be undefined if no panel is active.\n     */\n    get onDidActivePanelChange() {\n        return this.component.onDidActiveGroupChange;\n    }\n    /**\n     * Invoked after a layout is deserialzied using the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * All panel objects.\n     */\n    get panels() {\n        return this.component.groups;\n    }\n    /**\n     * Current orientation. Can be changed after initialization.\n     */\n    get orientation() {\n        return this.component.orientation;\n    }\n    set orientation(value) {\n        this.component.updateOptions({ orientation: value });\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     *  Focus the component. Will try to focus an active panel if one exists.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Force resize the component to an exact width and height. Read about auto-resizing before using.\n     */\n    layout(width, height, force = false) {\n        this.component.layout(width, height, force);\n    }\n    /**\n     * Add a panel and return the created object.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Remove a panel given the panel object.\n     */\n    removePanel(panel, sizing) {\n        this.component.removePanel(panel, sizing);\n    }\n    /**\n     * Move a panel in a particular direction relative to another panel.\n     */\n    movePanel(panel, options) {\n        this.component.movePanel(panel, options);\n    }\n    /**\n     * Get a panel object given a `string` id. May return `undefined`.\n     */\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Create a component from a serialized object.\n     */\n    fromJSON(data) {\n        return this.component.fromJSON(data);\n    }\n    /**\n     * Create a serialized object of the current component.\n     */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Reset the component back to an empty and default state.\n     */\n    clear() {\n        this.component.clear();\n    }\n    updateOptions(options) {\n        this.component.updateOptions(options);\n    }\n    /**\n     * Release resources and teardown component. Do not call when using framework versions of dockview.\n     */\n    dispose() {\n        this.component.dispose();\n    }\n}\nexport class DockviewApi {\n    /**\n     * The unique identifier for this instance. Used to manage scope of Drag'n'Drop events.\n     */\n    get id() {\n        return this.component.id;\n    }\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * Minimum height of the component.\n     */\n    get minimumHeight() {\n        return this.component.minimumHeight;\n    }\n    /**\n     * Maximum height of the component.\n     */\n    get maximumHeight() {\n        return this.component.maximumHeight;\n    }\n    /**\n     * Minimum width of the component.\n     */\n    get minimumWidth() {\n        return this.component.minimumWidth;\n    }\n    /**\n     * Maximum width of the component.\n     */\n    get maximumWidth() {\n        return this.component.maximumWidth;\n    }\n    /**\n     * Total number of groups.\n     */\n    get size() {\n        return this.component.size;\n    }\n    /**\n     * Total number of panels.\n     */\n    get totalPanels() {\n        return this.component.totalPanels;\n    }\n    get gap() {\n        return this.component.gap;\n    }\n    /**\n     * Invoked when the active group changes. May be undefined if no group is active.\n     */\n    get onDidActiveGroupChange() {\n        return this.component.onDidActiveGroupChange;\n    }\n    /**\n     * Invoked when a group is added. May be called multiple times when moving groups.\n     */\n    get onDidAddGroup() {\n        return this.component.onDidAddGroup;\n    }\n    /**\n     * Invoked when a group is removed. May be called multiple times when moving groups.\n     */\n    get onDidRemoveGroup() {\n        return this.component.onDidRemoveGroup;\n    }\n    /**\n     * Invoked when the active panel changes. May be undefined if no panel is active.\n     */\n    get onDidActivePanelChange() {\n        return this.component.onDidActivePanelChange;\n    }\n    /**\n     * Invoked when a panel is added. May be called multiple times when moving panels.\n     */\n    get onDidAddPanel() {\n        return this.component.onDidAddPanel;\n    }\n    /**\n     * Invoked when a panel is removed. May be called multiple times when moving panels.\n     */\n    get onDidRemovePanel() {\n        return this.component.onDidRemovePanel;\n    }\n    get onDidMovePanel() {\n        return this.component.onDidMovePanel;\n    }\n    /**\n     * Invoked after a layout is deserialzied using the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * Invoked when any layout change occures, an aggregation of many events.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked when a Drag'n'Drop event occurs that the component was unable to handle. Exposed for custom Drag'n'Drop functionality.\n     */\n    get onDidDrop() {\n        return this.component.onDidDrop;\n    }\n    /**\n     * Invoked when a Drag'n'Drop event occurs but before dockview handles it giving the user an opportunity to intecept and\n     * prevent the event from occuring using the standard `preventDefault()` syntax.\n     *\n     * Preventing certain events may causes unexpected behaviours, use carefully.\n     */\n    get onWillDrop() {\n        return this.component.onWillDrop;\n    }\n    /**\n     * Invoked before an overlay is shown indicating a drop target.\n     *\n     * Calling `event.preventDefault()` will prevent the overlay being shown and prevent\n     * the any subsequent drop event.\n     */\n    get onWillShowOverlay() {\n        return this.component.onWillShowOverlay;\n    }\n    /**\n     * Invoked before a group is dragged.\n     *\n     * Calling `event.nativeEvent.preventDefault()` will prevent the group drag starting.\n     *\n     */\n    get onWillDragGroup() {\n        return this.component.onWillDragGroup;\n    }\n    /**\n     * Invoked before a panel is dragged.\n     *\n     * Calling `event.nativeEvent.preventDefault()` will prevent the panel drag starting.\n     */\n    get onWillDragPanel() {\n        return this.component.onWillDragPanel;\n    }\n    get onUnhandledDragOverEvent() {\n        return this.component.onUnhandledDragOverEvent;\n    }\n    /**\n     * All panel objects.\n     */\n    get panels() {\n        return this.component.panels;\n    }\n    /**\n     * All group objects.\n     */\n    get groups() {\n        return this.component.groups;\n    }\n    /**\n     *  Active panel object.\n     */\n    get activePanel() {\n        return this.component.activePanel;\n    }\n    /**\n     * Active group object.\n     */\n    get activeGroup() {\n        return this.component.activeGroup;\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     *  Focus the component. Will try to focus an active panel if one exists.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Get a panel object given a `string` id. May return `undefined`.\n     */\n    getPanel(id) {\n        return this.component.getGroupPanel(id);\n    }\n    /**\n     * Force resize the component to an exact width and height. Read about auto-resizing before using.\n     */\n    layout(width, height, force = false) {\n        this.component.layout(width, height, force);\n    }\n    /**\n     * Add a panel and return the created object.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Remove a panel given the panel object.\n     */\n    removePanel(panel) {\n        this.component.removePanel(panel);\n    }\n    /**\n     * Add a group and return the created object.\n     */\n    addGroup(options) {\n        return this.component.addGroup(options);\n    }\n    /**\n     * Close all groups and panels.\n     */\n    closeAllGroups() {\n        return this.component.closeAllGroups();\n    }\n    /**\n     * Remove a group and any panels within the group.\n     */\n    removeGroup(group) {\n        this.component.removeGroup(group);\n    }\n    /**\n     * Get a group object given a `string` id. May return undefined.\n     */\n    getGroup(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Add a floating group\n     */\n    addFloatingGroup(item, options) {\n        return this.component.addFloatingGroup(item, options);\n    }\n    /**\n     * Create a component from a serialized object.\n     */\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    /**\n     * Create a serialized object of the current component.\n     */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Reset the component back to an empty and default state.\n     */\n    clear() {\n        this.component.clear();\n    }\n    /**\n     * Move the focus progmatically to the next panel or group.\n     */\n    moveToNext(options) {\n        this.component.moveToNext(options);\n    }\n    /**\n     * Move the focus progmatically to the previous panel or group.\n     */\n    moveToPrevious(options) {\n        this.component.moveToPrevious(options);\n    }\n    maximizeGroup(panel) {\n        this.component.maximizeGroup(panel.group);\n    }\n    hasMaximizedGroup() {\n        return this.component.hasMaximizedGroup();\n    }\n    exitMaximizedGroup() {\n        this.component.exitMaximizedGroup();\n    }\n    get onDidMaximizedGroupChange() {\n        return this.component.onDidMaximizedGroupChange;\n    }\n    /**\n     * Add a popout group in a new Window\n     */\n    addPopoutGroup(item, options) {\n        return this.component.addPopoutGroup(item, options);\n    }\n    setGap(gap) {\n        this.component.updateOptions({ gap });\n    }\n    updateOptions(options) {\n        this.component.updateOptions(options);\n    }\n    /**\n     * Release resources and teardown component. Do not call when using framework versions of dockview.\n     */\n    dispose() {\n        this.component.dispose();\n    }\n}\n","import { disableIframePointEvents } from '../dom';\nimport { addDisposableListener, Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nexport class DragHandler extends CompositeDisposable {\n    constructor(el) {\n        super();\n        this.el = el;\n        this.dataDisposable = new MutableDisposable();\n        this.pointerEventsDisposable = new MutableDisposable();\n        this._onDragStart = new Emitter();\n        this.onDragStart = this._onDragStart.event;\n        this.addDisposables(this._onDragStart, this.dataDisposable, this.pointerEventsDisposable);\n        this.configure();\n    }\n    isCancelled(_event) {\n        return false;\n    }\n    configure() {\n        this.addDisposables(this._onDragStart, addDisposableListener(this.el, 'dragstart', (event) => {\n            if (event.defaultPrevented || this.isCancelled(event)) {\n                event.preventDefault();\n                return;\n            }\n            const iframes = disableIframePointEvents();\n            this.pointerEventsDisposable.value = {\n                dispose: () => {\n                    iframes.release();\n                },\n            };\n            this.el.classList.add('dv-dragged');\n            setTimeout(() => this.el.classList.remove('dv-dragged'), 0);\n            this.dataDisposable.value = this.getData(event);\n            this._onDragStart.fire(event);\n            if (event.dataTransfer) {\n                event.dataTransfer.effectAllowed = 'move';\n                const hasData = event.dataTransfer.items.length > 0;\n                if (!hasData) {\n                    /**\n                     * Although this is not used by dockview many third party dnd libraries will check\n                     * dataTransfer.types to determine valid drag events.\n                     *\n                     * For example: in react-dnd if dataTransfer.types is not set then the dragStart event will be cancelled\n                     * through .preventDefault(). Since this is applied globally to all drag events this would break dockviews\n                     * dnd logic. You can see the code at\n                     * https://github.com/react-dnd/react-dnd/blob/main/packages/backend-html5/src/HTML5BackendImpl.ts#L542\n                     */\n                    event.dataTransfer.setData('text/plain', '');\n                }\n            }\n        }), addDisposableListener(this.el, 'dragend', () => {\n            this.pointerEventsDisposable.dispose();\n            this.dataDisposable.dispose();\n        }));\n    }\n}\n","import { addDisposableListener } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nexport class DragAndDropObserver extends CompositeDisposable {\n    constructor(element, callbacks) {\n        super();\n        this.element = element;\n        this.callbacks = callbacks;\n        this.target = null;\n        this.registerListeners();\n    }\n    onDragEnter(e) {\n        this.target = e.target;\n        this.callbacks.onDragEnter(e);\n    }\n    onDragOver(e) {\n        e.preventDefault(); // needed so that the drop event fires (https://stackoverflow.com/questions/21339924/drop-event-not-firing-in-chrome)\n        if (this.callbacks.onDragOver) {\n            this.callbacks.onDragOver(e);\n        }\n    }\n    onDragLeave(e) {\n        if (this.target === e.target) {\n            this.target = null;\n            this.callbacks.onDragLeave(e);\n        }\n    }\n    onDragEnd(e) {\n        this.target = null;\n        this.callbacks.onDragEnd(e);\n    }\n    onDrop(e) {\n        this.callbacks.onDrop(e);\n    }\n    registerListeners() {\n        this.addDisposables(addDisposableListener(this.element, 'dragenter', (e) => {\n            this.onDragEnter(e);\n        }, true));\n        this.addDisposables(addDisposableListener(this.element, 'dragover', (e) => {\n            this.onDragOver(e);\n        }, true));\n        this.addDisposables(addDisposableListener(this.element, 'dragleave', (e) => {\n            this.onDragLeave(e);\n        }));\n        this.addDisposables(addDisposableListener(this.element, 'dragend', (e) => {\n            this.onDragEnd(e);\n        }));\n        this.addDisposables(addDisposableListener(this.element, 'drop', (e) => {\n            this.onDrop(e);\n        }));\n    }\n}\n","import { toggleClass } from '../dom';\nimport { DockviewEvent, Emitter } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nimport { DragAndDropObserver } from './dnd';\nimport { clamp } from '../math';\nexport class WillShowOverlayEvent extends DockviewEvent {\n    get nativeEvent() {\n        return this.options.nativeEvent;\n    }\n    get position() {\n        return this.options.position;\n    }\n    constructor(options) {\n        super();\n        this.options = options;\n    }\n}\nexport function directionToPosition(direction) {\n    switch (direction) {\n        case 'above':\n            return 'top';\n        case 'below':\n            return 'bottom';\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'within':\n            return 'center';\n        default:\n            throw new Error(`invalid direction '${direction}'`);\n    }\n}\nexport function positionToDirection(position) {\n    switch (position) {\n        case 'top':\n            return 'above';\n        case 'bottom':\n            return 'below';\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'center':\n            return 'within';\n        default:\n            throw new Error(`invalid position '${position}'`);\n    }\n}\nconst DEFAULT_ACTIVATION_SIZE = {\n    value: 20,\n    type: 'percentage',\n};\nconst DEFAULT_SIZE = {\n    value: 50,\n    type: 'percentage',\n};\nconst SMALL_WIDTH_BOUNDARY = 100;\nconst SMALL_HEIGHT_BOUNDARY = 100;\nexport class Droptarget extends CompositeDisposable {\n    get state() {\n        return this._state;\n    }\n    constructor(element, options) {\n        super();\n        this.element = element;\n        this.options = options;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        // use a set to take advantage of #<set>.has\n        this._acceptedTargetZonesSet = new Set(this.options.acceptedTargetZones);\n        this.dnd = new DragAndDropObserver(this.element, {\n            onDragEnter: () => undefined,\n            onDragOver: (e) => {\n                if (this._acceptedTargetZonesSet.size === 0) {\n                    this.removeDropTarget();\n                    return;\n                }\n                const width = this.element.clientWidth;\n                const height = this.element.clientHeight;\n                if (width === 0 || height === 0) {\n                    return; // avoid div!0\n                }\n                const rect = e.currentTarget.getBoundingClientRect();\n                const x = e.clientX - rect.left;\n                const y = e.clientY - rect.top;\n                const quadrant = this.calculateQuadrant(this._acceptedTargetZonesSet, x, y, width, height);\n                /**\n                 * If the event has already been used by another DropTarget instance\n                 * then don't show a second drop target, only one target should be\n                 * active at any one time\n                 */\n                if (this.isAlreadyUsed(e) || quadrant === null) {\n                    // no drop target should be displayed\n                    this.removeDropTarget();\n                    return;\n                }\n                if (!this.options.canDisplayOverlay(e, quadrant)) {\n                    this.removeDropTarget();\n                    return;\n                }\n                const willShowOverlayEvent = new WillShowOverlayEvent({\n                    nativeEvent: e,\n                    position: quadrant,\n                });\n                /**\n                 * Provide an opportunity to prevent the overlay appearing and in turn\n                 * any dnd behaviours\n                 */\n                this._onWillShowOverlay.fire(willShowOverlayEvent);\n                if (willShowOverlayEvent.defaultPrevented) {\n                    this.removeDropTarget();\n                    return;\n                }\n                this.markAsUsed(e);\n                if (!this.targetElement) {\n                    this.targetElement = document.createElement('div');\n                    this.targetElement.className = 'dv-drop-target-dropzone';\n                    this.overlayElement = document.createElement('div');\n                    this.overlayElement.className = 'dv-drop-target-selection';\n                    this._state = 'center';\n                    this.targetElement.appendChild(this.overlayElement);\n                    this.element.classList.add('dv-drop-target');\n                    this.element.append(this.targetElement);\n                }\n                this.toggleClasses(quadrant, width, height);\n                this._state = quadrant;\n            },\n            onDragLeave: () => {\n                this.removeDropTarget();\n            },\n            onDragEnd: () => {\n                this.removeDropTarget();\n            },\n            onDrop: (e) => {\n                e.preventDefault();\n                const state = this._state;\n                this.removeDropTarget();\n                if (state) {\n                    // only stop the propagation of the event if we are dealing with it\n                    // which is only when the target has state\n                    e.stopPropagation();\n                    this._onDrop.fire({ position: state, nativeEvent: e });\n                }\n            },\n        });\n        this.addDisposables(this._onDrop, this._onWillShowOverlay, this.dnd);\n    }\n    setTargetZones(acceptedTargetZones) {\n        this._acceptedTargetZonesSet = new Set(acceptedTargetZones);\n    }\n    setOverlayModel(model) {\n        this.options.overlayModel = model;\n    }\n    dispose() {\n        this.removeDropTarget();\n        super.dispose();\n    }\n    /**\n     * Add a property to the event object for other potential listeners to check\n     */\n    markAsUsed(event) {\n        event[Droptarget.USED_EVENT_ID] = true;\n    }\n    /**\n     * Check is the event has already been used by another instance of DropTarget\n     */\n    isAlreadyUsed(event) {\n        const value = event[Droptarget.USED_EVENT_ID];\n        return typeof value === 'boolean' && value;\n    }\n    toggleClasses(quadrant, width, height) {\n        var _a, _b;\n        if (!this.overlayElement) {\n            return;\n        }\n        const isSmallX = width < SMALL_WIDTH_BOUNDARY;\n        const isSmallY = height < SMALL_HEIGHT_BOUNDARY;\n        const isLeft = quadrant === 'left';\n        const isRight = quadrant === 'right';\n        const isTop = quadrant === 'top';\n        const isBottom = quadrant === 'bottom';\n        const rightClass = !isSmallX && isRight;\n        const leftClass = !isSmallX && isLeft;\n        const topClass = !isSmallY && isTop;\n        const bottomClass = !isSmallY && isBottom;\n        let size = 1;\n        const sizeOptions = (_b = (_a = this.options.overlayModel) === null || _a === void 0 ? void 0 : _a.size) !== null && _b !== void 0 ? _b : DEFAULT_SIZE;\n        if (sizeOptions.type === 'percentage') {\n            size = clamp(sizeOptions.value, 0, 100) / 100;\n        }\n        else {\n            if (rightClass || leftClass) {\n                size = clamp(0, sizeOptions.value, width) / width;\n            }\n            if (topClass || bottomClass) {\n                size = clamp(0, sizeOptions.value, height) / height;\n            }\n        }\n        const box = { top: '0px', left: '0px', width: '100%', height: '100%' };\n        /**\n         * You can also achieve the overlay placement using the transform CSS property\n         * to translate and scale the element however this has the undesired effect of\n         * 'skewing' the element. Comment left here for anybody that ever revisits this.\n         *\n         * @see https://developer.mozilla.org/en-US/docs/Web/CSS/transform\n         *\n         * right\n         * translateX(${100 * (1 - size) / 2}%) scaleX(${scale})\n         *\n         * left\n         * translateX(-${100 * (1 - size) / 2}%) scaleX(${scale})\n         *\n         * top\n         * translateY(-${100 * (1 - size) / 2}%) scaleY(${scale})\n         *\n         * bottom\n         * translateY(${100 * (1 - size) / 2}%) scaleY(${scale})\n         */\n        if (rightClass) {\n            box.left = `${100 * (1 - size)}%`;\n            box.width = `${100 * size}%`;\n        }\n        else if (leftClass) {\n            box.width = `${100 * size}%`;\n        }\n        else if (topClass) {\n            box.height = `${100 * size}%`;\n        }\n        else if (bottomClass) {\n            box.top = `${100 * (1 - size)}%`;\n            box.height = `${100 * size}%`;\n        }\n        this.overlayElement.style.top = box.top;\n        this.overlayElement.style.left = box.left;\n        this.overlayElement.style.width = box.width;\n        this.overlayElement.style.height = box.height;\n        toggleClass(this.overlayElement, 'dv-drop-target-small-vertical', isSmallY);\n        toggleClass(this.overlayElement, 'dv-drop-target-small-horizontal', isSmallX);\n        toggleClass(this.overlayElement, 'dv-drop-target-left', isLeft);\n        toggleClass(this.overlayElement, 'dv-drop-target-right', isRight);\n        toggleClass(this.overlayElement, 'dv-drop-target-top', isTop);\n        toggleClass(this.overlayElement, 'dv-drop-target-bottom', isBottom);\n        toggleClass(this.overlayElement, 'dv-drop-target-center', quadrant === 'center');\n    }\n    calculateQuadrant(overlayType, x, y, width, height) {\n        var _a, _b;\n        const activationSizeOptions = (_b = (_a = this.options.overlayModel) === null || _a === void 0 ? void 0 : _a.activationSize) !== null && _b !== void 0 ? _b : DEFAULT_ACTIVATION_SIZE;\n        const isPercentage = activationSizeOptions.type === 'percentage';\n        if (isPercentage) {\n            return calculateQuadrantAsPercentage(overlayType, x, y, width, height, activationSizeOptions.value);\n        }\n        return calculateQuadrantAsPixels(overlayType, x, y, width, height, activationSizeOptions.value);\n    }\n    removeDropTarget() {\n        if (this.targetElement) {\n            this._state = undefined;\n            this.element.removeChild(this.targetElement);\n            this.targetElement = undefined;\n            this.overlayElement = undefined;\n            this.element.classList.remove('dv-drop-target');\n        }\n    }\n}\nDroptarget.USED_EVENT_ID = '__dockview_droptarget_event_is_used__';\nexport function calculateQuadrantAsPercentage(overlayType, x, y, width, height, threshold) {\n    const xp = (100 * x) / width;\n    const yp = (100 * y) / height;\n    if (overlayType.has('left') && xp < threshold) {\n        return 'left';\n    }\n    if (overlayType.has('right') && xp > 100 - threshold) {\n        return 'right';\n    }\n    if (overlayType.has('top') && yp < threshold) {\n        return 'top';\n    }\n    if (overlayType.has('bottom') && yp > 100 - threshold) {\n        return 'bottom';\n    }\n    if (!overlayType.has('center')) {\n        return null;\n    }\n    return 'center';\n}\nexport function calculateQuadrantAsPixels(overlayType, x, y, width, height, threshold) {\n    if (overlayType.has('left') && x < threshold) {\n        return 'left';\n    }\n    if (overlayType.has('right') && x > width - threshold) {\n        return 'right';\n    }\n    if (overlayType.has('top') && y < threshold) {\n        return 'top';\n    }\n    if (overlayType.has('bottom') && y > height - threshold) {\n        return 'bottom';\n    }\n    if (!overlayType.has('center')) {\n        return null;\n    }\n    return 'center';\n}\n","import { AcceptableEvent } from '../events';\nexport const PROPERTY_KEYS_PANEVIEW = (() => {\n    /**\n     * by readong the keys from an empty value object TypeScript will error\n     * when we add or remove new properties to `DockviewOptions`\n     */\n    const properties = {\n        disableAutoResizing: undefined,\n        disableDnd: undefined,\n        className: undefined,\n    };\n    return Object.keys(properties);\n})();\nexport class PaneviewUnhandledDragOverEvent extends AcceptableEvent {\n    constructor(nativeEvent, position, getData, panel) {\n        super();\n        this.nativeEvent = nativeEvent;\n        this.position = position;\n        this.getData = getData;\n        this.panel = panel;\n    }\n}\n","import { DockviewEvent, Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nexport class WillFocusEvent extends DockviewEvent {\n    constructor() {\n        super();\n    }\n}\n/**\n * A core api implementation that should be used across all panel-like objects\n */\nexport class PanelApiImpl extends CompositeDisposable {\n    get isFocused() {\n        return this._isFocused;\n    }\n    get isActive() {\n        return this._isActive;\n    }\n    get isVisible() {\n        return this._isVisible;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    constructor(id, component) {\n        super();\n        this.id = id;\n        this.component = component;\n        this._isFocused = false;\n        this._isActive = false;\n        this._isVisible = true;\n        this._width = 0;\n        this._height = 0;\n        this._parameters = {};\n        this.panelUpdatesDisposable = new MutableDisposable();\n        this._onDidDimensionChange = new Emitter();\n        this.onDidDimensionsChange = this._onDidDimensionChange.event;\n        this._onDidChangeFocus = new Emitter();\n        this.onDidFocusChange = this._onDidChangeFocus.event;\n        //\n        this._onWillFocus = new Emitter();\n        this.onWillFocus = this._onWillFocus.event;\n        //\n        this._onDidVisibilityChange = new Emitter();\n        this.onDidVisibilityChange = this._onDidVisibilityChange.event;\n        this._onWillVisibilityChange = new Emitter();\n        this.onWillVisibilityChange = this._onWillVisibilityChange.event;\n        this._onDidActiveChange = new Emitter();\n        this.onDidActiveChange = this._onDidActiveChange.event;\n        this._onActiveChange = new Emitter();\n        this.onActiveChange = this._onActiveChange.event;\n        this._onDidParametersChange = new Emitter();\n        this.onDidParametersChange = this._onDidParametersChange.event;\n        this.addDisposables(this.onDidFocusChange((event) => {\n            this._isFocused = event.isFocused;\n        }), this.onDidActiveChange((event) => {\n            this._isActive = event.isActive;\n        }), this.onDidVisibilityChange((event) => {\n            this._isVisible = event.isVisible;\n        }), this.onDidDimensionsChange((event) => {\n            this._width = event.width;\n            this._height = event.height;\n        }), this.panelUpdatesDisposable, this._onDidDimensionChange, this._onDidChangeFocus, this._onDidVisibilityChange, this._onDidActiveChange, this._onWillFocus, this._onActiveChange, this._onWillFocus, this._onWillVisibilityChange, this._onDidParametersChange);\n    }\n    getParameters() {\n        return this._parameters;\n    }\n    initialize(panel) {\n        this.panelUpdatesDisposable.value = this._onDidParametersChange.event((parameters) => {\n            this._parameters = parameters;\n            panel.update({\n                params: parameters,\n            });\n        });\n    }\n    setVisible(isVisible) {\n        this._onWillVisibilityChange.fire({ isVisible });\n    }\n    setActive() {\n        this._onActiveChange.fire();\n    }\n    updateParameters(parameters) {\n        this._onDidParametersChange.fire(parameters);\n    }\n}\n","import { Emitter } from '../events';\nimport { PanelApiImpl } from './panelApi';\nexport class SplitviewPanelApiImpl extends PanelApiImpl {\n    //\n    constructor(id, component) {\n        super(id, component);\n        this._onDidConstraintsChangeInternal = new Emitter();\n        this.onDidConstraintsChangeInternal = this._onDidConstraintsChangeInternal.event;\n        //\n        this._onDidConstraintsChange = new Emitter({\n            replay: true,\n        });\n        this.onDidConstraintsChange = this._onDidConstraintsChange.event;\n        //\n        this._onDidSizeChange = new Emitter();\n        this.onDidSizeChange = this._onDidSizeChange.event;\n        this.addDisposables(this._onDidConstraintsChangeInternal, this._onDidConstraintsChange, this._onDidSizeChange);\n    }\n    setConstraints(value) {\n        this._onDidConstraintsChangeInternal.fire(value);\n    }\n    setSize(event) {\n        this._onDidSizeChange.fire(event);\n    }\n}\n","import { Emitter } from '../events';\nimport { SplitviewPanelApiImpl } from './splitviewPanelApi';\nexport class PaneviewPanelApiImpl extends SplitviewPanelApiImpl {\n    set pane(pane) {\n        this._pane = pane;\n    }\n    constructor(id, component) {\n        super(id, component);\n        this._onDidExpansionChange = new Emitter({\n            replay: true,\n        });\n        this.onDidExpansionChange = this._onDidExpansionChange.event;\n        this._onMouseEnter = new Emitter({});\n        this.onMouseEnter = this._onMouseEnter.event;\n        this._onMouseLeave = new Emitter({});\n        this.onMouseLeave = this._onMouseLeave.event;\n        this.addDisposables(this._onDidExpansionChange, this._onMouseEnter, this._onMouseLeave);\n    }\n    setExpanded(isExpanded) {\n        var _a;\n        (_a = this._pane) === null || _a === void 0 ? void 0 : _a.setExpanded(isExpanded);\n    }\n    get isExpanded() {\n        var _a;\n        return !!((_a = this._pane) === null || _a === void 0 ? void 0 : _a.isExpanded());\n    }\n}\n","import { trackFocus } from '../dom';\nimport { CompositeDisposable } from '../lifecycle';\nimport { WillFocusEvent } from '../api/panelApi';\nexport class BasePanelView extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    get params() {\n        var _a;\n        return (_a = this._params) === null || _a === void 0 ? void 0 : _a.params;\n    }\n    constructor(id, component, api) {\n        super();\n        this.id = id;\n        this.component = component;\n        this.api = api;\n        this._height = 0;\n        this._width = 0;\n        this._element = document.createElement('div');\n        this._element.tabIndex = -1;\n        this._element.style.outline = 'none';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n        this._element.style.overflow = 'hidden';\n        const focusTracker = trackFocus(this._element);\n        this.addDisposables(this.api, focusTracker.onDidFocus(() => {\n            this.api._onDidChangeFocus.fire({ isFocused: true });\n        }), focusTracker.onDidBlur(() => {\n            this.api._onDidChangeFocus.fire({ isFocused: false });\n        }), focusTracker);\n    }\n    focus() {\n        const event = new WillFocusEvent();\n        this.api._onWillFocus.fire(event);\n        if (event.defaultPrevented) {\n            return;\n        }\n        this._element.focus();\n    }\n    layout(width, height) {\n        this._width = width;\n        this._height = height;\n        this.api._onDidDimensionChange.fire({ width, height });\n        if (this.part) {\n            if (this._params) {\n                this.part.update(this._params.params);\n            }\n        }\n    }\n    init(parameters) {\n        this._params = parameters;\n        this.part = this.getComponent();\n    }\n    update(event) {\n        var _a, _b;\n        // merge the new parameters with the existing parameters\n        this._params = Object.assign(Object.assign({}, this._params), { params: Object.assign(Object.assign({}, (_a = this._params) === null || _a === void 0 ? void 0 : _a.params), event.params) });\n        /**\n         * delete new keys that have a value of undefined,\n         * allow values of null\n         */\n        for (const key of Object.keys(event.params)) {\n            if (event.params[key] === undefined) {\n                delete this._params.params[key];\n            }\n        }\n        // update the view with the updated props\n        (_b = this.part) === null || _b === void 0 ? void 0 : _b.update({ params: this._params.params });\n    }\n    toJSON() {\n        var _a, _b;\n        const params = (_b = (_a = this._params) === null || _a === void 0 ? void 0 : _a.params) !== null && _b !== void 0 ? _b : {};\n        return {\n            id: this.id,\n            component: this.component,\n            params: Object.keys(params).length > 0 ? params : undefined,\n        };\n    }\n    dispose() {\n        var _a;\n        this.api.dispose();\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n        super.dispose();\n    }\n}\n","import { PaneviewPanelApiImpl } from '../api/paneviewPanelApi';\nimport { addClasses, removeClasses } from '../dom';\nimport { addDisposableListener, Emitter } from '../events';\nimport { BasePanelView, } from '../gridview/basePanelView';\nimport { Orientation } from '../splitview/splitview';\nexport class PaneviewPanel extends BasePanelView {\n    set orientation(value) {\n        this._orientation = value;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    get minimumSize() {\n        const headerSize = this.headerSize;\n        const expanded = this.isExpanded();\n        const minimumBodySize = expanded ? this._minimumBodySize : 0;\n        return headerSize + minimumBodySize;\n    }\n    get maximumSize() {\n        const headerSize = this.headerSize;\n        const expanded = this.isExpanded();\n        const maximumBodySize = expanded ? this._maximumBodySize : 0;\n        return headerSize + maximumBodySize;\n    }\n    get size() {\n        return this._size;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    set orthogonalSize(size) {\n        this._orthogonalSize = size;\n    }\n    get minimumBodySize() {\n        return this._minimumBodySize;\n    }\n    set minimumBodySize(value) {\n        this._minimumBodySize = typeof value === 'number' ? value : 0;\n    }\n    get maximumBodySize() {\n        return this._maximumBodySize;\n    }\n    set maximumBodySize(value) {\n        this._maximumBodySize =\n            typeof value === 'number' ? value : Number.POSITIVE_INFINITY;\n    }\n    get headerVisible() {\n        return this._headerVisible;\n    }\n    set headerVisible(value) {\n        this._headerVisible = value;\n        this.header.style.display = value ? '' : 'none';\n    }\n    constructor(id, component, headerComponent, orientation, isExpanded, isHeaderVisible) {\n        super(id, component, new PaneviewPanelApiImpl(id, component));\n        this.headerComponent = headerComponent;\n        this._onDidChangeExpansionState = new Emitter({ replay: true });\n        this.onDidChangeExpansionState = this._onDidChangeExpansionState.event;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this.headerSize = 22;\n        this._orthogonalSize = 0;\n        this._size = 0;\n        this._minimumBodySize = 100;\n        this._maximumBodySize = Number.POSITIVE_INFINITY;\n        this._isExpanded = false;\n        this.expandedSize = 0;\n        this.api.pane = this; // TODO cannot use 'this' before 'super'\n        this.api.initialize(this);\n        this._isExpanded = isExpanded;\n        this._headerVisible = isHeaderVisible;\n        this._onDidChangeExpansionState.fire(this.isExpanded()); // initialize value\n        this._orientation = orientation;\n        this.element.classList.add('dv-pane');\n        this.addDisposables(this.api.onWillVisibilityChange((event) => {\n            const { isVisible } = event;\n            const { accessor } = this._params;\n            accessor.setVisible(this, isVisible);\n        }), this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire({ size: event.size });\n        }), addDisposableListener(this.element, 'mouseenter', (ev) => {\n            this.api._onMouseEnter.fire(ev);\n        }), addDisposableListener(this.element, 'mouseleave', (ev) => {\n            this.api._onMouseLeave.fire(ev);\n        }));\n        this.addDisposables(this._onDidChangeExpansionState, this.onDidChangeExpansionState((isPanelExpanded) => {\n            this.api._onDidExpansionChange.fire({\n                isExpanded: isPanelExpanded,\n            });\n        }), this.api.onDidFocusChange((e) => {\n            if (!this.header) {\n                return;\n            }\n            if (e.isFocused) {\n                addClasses(this.header, 'focused');\n            }\n            else {\n                removeClasses(this.header, 'focused');\n            }\n        }));\n        this.renderOnce();\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    isExpanded() {\n        return this._isExpanded;\n    }\n    setExpanded(expanded) {\n        if (this._isExpanded === expanded) {\n            return;\n        }\n        this._isExpanded = expanded;\n        if (expanded) {\n            if (this.animationTimer) {\n                clearTimeout(this.animationTimer);\n            }\n            if (this.body) {\n                this.element.appendChild(this.body);\n            }\n        }\n        else {\n            this.animationTimer = setTimeout(() => {\n                var _a;\n                (_a = this.body) === null || _a === void 0 ? void 0 : _a.remove();\n            }, 200);\n        }\n        this._onDidChange.fire(expanded ? { size: this.width } : {});\n        this._onDidChangeExpansionState.fire(expanded);\n    }\n    layout(size, orthogonalSize) {\n        this._size = size;\n        this._orthogonalSize = orthogonalSize;\n        const [width, height] = this.orientation === Orientation.HORIZONTAL\n            ? [size, orthogonalSize]\n            : [orthogonalSize, size];\n        if (this.isExpanded()) {\n            this.expandedSize = width;\n        }\n        super.layout(width, height);\n    }\n    init(parameters) {\n        var _a, _b;\n        super.init(parameters);\n        if (typeof parameters.minimumBodySize === 'number') {\n            this.minimumBodySize = parameters.minimumBodySize;\n        }\n        if (typeof parameters.maximumBodySize === 'number') {\n            this.maximumBodySize = parameters.maximumBodySize;\n        }\n        this.bodyPart = this.getBodyComponent();\n        this.headerPart = this.getHeaderComponent();\n        this.bodyPart.init(Object.assign(Object.assign({}, parameters), { api: this.api }));\n        this.headerPart.init(Object.assign(Object.assign({}, parameters), { api: this.api }));\n        (_a = this.body) === null || _a === void 0 ? void 0 : _a.append(this.bodyPart.element);\n        (_b = this.header) === null || _b === void 0 ? void 0 : _b.append(this.headerPart.element);\n        if (typeof parameters.isExpanded === 'boolean') {\n            this.setExpanded(parameters.isExpanded);\n        }\n    }\n    toJSON() {\n        const params = this._params;\n        return Object.assign(Object.assign({}, super.toJSON()), { headerComponent: this.headerComponent, title: params.title });\n    }\n    renderOnce() {\n        this.header = document.createElement('div');\n        this.header.tabIndex = 0;\n        this.header.className = 'dv-pane-header';\n        this.header.style.height = `${this.headerSize}px`;\n        this.header.style.lineHeight = `${this.headerSize}px`;\n        this.header.style.minHeight = `${this.headerSize}px`;\n        this.header.style.maxHeight = `${this.headerSize}px`;\n        this.element.appendChild(this.header);\n        this.body = document.createElement('div');\n        this.body.className = 'dv-pane-body';\n        this.element.appendChild(this.body);\n    }\n    // TODO slightly hacky by-pass of the component to create a body and header component\n    getComponent() {\n        return {\n            update: (params) => {\n                var _a, _b;\n                (_a = this.bodyPart) === null || _a === void 0 ? void 0 : _a.update({ params });\n                (_b = this.headerPart) === null || _b === void 0 ? void 0 : _b.update({ params });\n            },\n            dispose: () => {\n                var _a, _b;\n                (_a = this.bodyPart) === null || _a === void 0 ? void 0 : _a.dispose();\n                (_b = this.headerPart) === null || _b === void 0 ? void 0 : _b.dispose();\n            },\n        };\n    }\n}\n","import { PaneviewApi } from '../api/component.api';\nimport { DragHandler } from '../dnd/abstractDragHandler';\nimport { getPaneData, LocalSelectionTransfer, PaneTransfer, } from '../dnd/dataTransfer';\nimport { Droptarget } from '../dnd/droptarget';\nimport { Emitter } from '../events';\nimport { PaneviewUnhandledDragOverEvent, } from './options';\nimport { PaneviewPanel, } from './paneviewPanel';\nexport class DraggablePaneviewPanel extends PaneviewPanel {\n    constructor(accessor, id, component, headerComponent, orientation, isExpanded, disableDnd) {\n        super(id, component, headerComponent, orientation, isExpanded, true);\n        this.accessor = accessor;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onUnhandledDragOverEvent = new Emitter();\n        this.onUnhandledDragOverEvent = this._onUnhandledDragOverEvent.event;\n        this.addDisposables(this._onDidDrop, this._onUnhandledDragOverEvent);\n        if (!disableDnd) {\n            this.initDragFeatures();\n        }\n    }\n    initDragFeatures() {\n        if (!this.header) {\n            return;\n        }\n        const id = this.id;\n        const accessorId = this.accessor.id;\n        this.header.draggable = true;\n        this.handler = new (class PaneDragHandler extends DragHandler {\n            getData() {\n                LocalSelectionTransfer.getInstance().setData([new PaneTransfer(accessorId, id)], PaneTransfer.prototype);\n                return {\n                    dispose: () => {\n                        LocalSelectionTransfer.getInstance().clearData(PaneTransfer.prototype);\n                    },\n                };\n            }\n        })(this.header);\n        this.target = new Droptarget(this.element, {\n            acceptedTargetZones: ['top', 'bottom'],\n            overlayModel: {\n                activationSize: { type: 'percentage', value: 50 },\n            },\n            canDisplayOverlay: (event, position) => {\n                const data = getPaneData();\n                if (data) {\n                    if (data.paneId !== this.id &&\n                        data.viewId === this.accessor.id) {\n                        return true;\n                    }\n                }\n                const firedEvent = new PaneviewUnhandledDragOverEvent(event, position, getPaneData, this);\n                this._onUnhandledDragOverEvent.fire(firedEvent);\n                return firedEvent.isAccepted;\n            },\n        });\n        this.addDisposables(this._onDidDrop, this.handler, this.target, this.target.onDrop((event) => {\n            this.onDrop(event);\n        }));\n    }\n    onDrop(event) {\n        const data = getPaneData();\n        if (!data || data.viewId !== this.accessor.id) {\n            // if there is no local drag event for this panel\n            // or if the drag event was creating by another Paneview instance\n            this._onDidDrop.fire(Object.assign(Object.assign({}, event), { panel: this, api: new PaneviewApi(this.accessor), getData: getPaneData }));\n            return;\n        }\n        const containerApi = this._params\n            .containerApi;\n        const panelId = data.paneId;\n        const existingPanel = containerApi.getPanel(panelId);\n        if (!existingPanel) {\n            // if the panel doesn't exist\n            this._onDidDrop.fire(Object.assign(Object.assign({}, event), { panel: this, getData: getPaneData, api: new PaneviewApi(this.accessor) }));\n            return;\n        }\n        const allPanels = containerApi.panels;\n        const fromIndex = allPanels.indexOf(existingPanel);\n        let toIndex = containerApi.panels.indexOf(this);\n        if (event.position === 'left' || event.position === 'top') {\n            toIndex = Math.max(0, toIndex - 1);\n        }\n        if (event.position === 'right' || event.position === 'bottom') {\n            if (fromIndex > toIndex) {\n                toIndex++;\n            }\n            toIndex = Math.min(allPanels.length - 1, toIndex);\n        }\n        containerApi.movePanel(fromIndex, toIndex);\n    }\n}\n","import { CompositeDisposable, MutableDisposable, } from '../../../lifecycle';\nimport { Emitter } from '../../../events';\nimport { trackFocus } from '../../../dom';\nimport { Droptarget } from '../../../dnd/droptarget';\nimport { getPanelData } from '../../../dnd/dataTransfer';\nexport class ContentContainer extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor(accessor, group) {\n        super();\n        this.accessor = accessor;\n        this.group = group;\n        this.disposable = new MutableDisposable();\n        this._onDidFocus = new Emitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new Emitter();\n        this.onDidBlur = this._onDidBlur.event;\n        this._element = document.createElement('div');\n        this._element.className = 'dv-content-container';\n        this._element.tabIndex = -1;\n        this.addDisposables(this._onDidFocus, this._onDidBlur);\n        this.dropTarget = new Droptarget(this.element, {\n            acceptedTargetZones: ['top', 'bottom', 'left', 'right', 'center'],\n            canDisplayOverlay: (event, position) => {\n                if (this.group.locked === 'no-drop-target' ||\n                    (this.group.locked && position === 'center')) {\n                    return false;\n                }\n                const data = getPanelData();\n                if (!data &&\n                    event.shiftKey &&\n                    this.group.location.type !== 'floating') {\n                    return false;\n                }\n                if (data && data.viewId === this.accessor.id) {\n                    if (data.groupId === this.group.id) {\n                        if (position === 'center') {\n                            // don't allow to drop on self for center position\n                            return false;\n                        }\n                        if (data.panelId === null) {\n                            // don't allow group move to drop anywhere on self\n                            return false;\n                        }\n                    }\n                    const groupHasOnePanelAndIsActiveDragElement = this.group.panels.length === 1 &&\n                        data.groupId === this.group.id;\n                    return !groupHasOnePanelAndIsActiveDragElement;\n                }\n                return this.group.canDisplayOverlay(event, position, 'content');\n            },\n        });\n        this.addDisposables(this.dropTarget);\n    }\n    show() {\n        this.element.style.display = '';\n    }\n    hide() {\n        this.element.style.display = 'none';\n    }\n    renderPanel(panel, options = { asActive: true }) {\n        const doRender = options.asActive ||\n            (this.panel && this.group.isPanelActive(this.panel));\n        if (this.panel &&\n            this.panel.view.content.element.parentElement === this._element) {\n            /**\n             * If the currently attached panel is mounted directly to the content then remove it\n             */\n            this._element.removeChild(this.panel.view.content.element);\n        }\n        this.panel = panel;\n        let container;\n        switch (panel.api.renderer) {\n            case 'onlyWhenVisible':\n                this.group.renderContainer.detatch(panel);\n                if (this.panel) {\n                    if (doRender) {\n                        this._element.appendChild(this.panel.view.content.element);\n                    }\n                }\n                container = this._element;\n                break;\n            case 'always':\n                if (panel.view.content.element.parentElement === this._element) {\n                    this._element.removeChild(panel.view.content.element);\n                }\n                container = this.group.renderContainer.attach({\n                    panel,\n                    referenceContainer: this,\n                });\n                break;\n            default:\n                throw new Error(`dockview: invalid renderer type '${panel.api.renderer}'`);\n        }\n        if (doRender) {\n            const focusTracker = trackFocus(container);\n            const disposable = new CompositeDisposable();\n            disposable.addDisposables(focusTracker, focusTracker.onDidFocus(() => this._onDidFocus.fire()), focusTracker.onDidBlur(() => this._onDidBlur.fire()));\n            this.disposable.value = disposable;\n        }\n    }\n    openPanel(panel) {\n        if (this.panel === panel) {\n            return;\n        }\n        this.renderPanel(panel);\n    }\n    layout(_width, _height) {\n        // noop\n    }\n    closePanel() {\n        var _a;\n        if (this.panel) {\n            if (this.panel.api.renderer === 'onlyWhenVisible') {\n                (_a = this.panel.view.content.element.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(this.panel.view.content.element);\n            }\n        }\n        this.panel = undefined;\n    }\n    dispose() {\n        this.disposable.dispose();\n        super.dispose();\n    }\n}\n","import { addDisposableListener, Emitter } from '../../../events';\nimport { CompositeDisposable } from '../../../lifecycle';\nimport { getPanelData, LocalSelectionTransfer, PanelTransfer, } from '../../../dnd/dataTransfer';\nimport { toggleClass } from '../../../dom';\nimport { Droptarget, } from '../../../dnd/droptarget';\nimport { DragHandler } from '../../../dnd/abstractDragHandler';\nclass TabDragHandler extends DragHandler {\n    constructor(element, accessor, group, panel) {\n        super(element);\n        this.accessor = accessor;\n        this.group = group;\n        this.panel = panel;\n        this.panelTransfer = LocalSelectionTransfer.getInstance();\n    }\n    getData(event) {\n        this.panelTransfer.setData([new PanelTransfer(this.accessor.id, this.group.id, this.panel.id)], PanelTransfer.prototype);\n        return {\n            dispose: () => {\n                this.panelTransfer.clearData(PanelTransfer.prototype);\n            },\n        };\n    }\n}\nexport class Tab extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor(panel, accessor, group) {\n        super();\n        this.panel = panel;\n        this.accessor = accessor;\n        this.group = group;\n        this.content = undefined;\n        this._onChanged = new Emitter();\n        this.onChanged = this._onChanged.event;\n        this._onDropped = new Emitter();\n        this.onDrop = this._onDropped.event;\n        this._onDragStart = new Emitter();\n        this.onDragStart = this._onDragStart.event;\n        this._element = document.createElement('div');\n        this._element.className = 'dv-tab';\n        this._element.tabIndex = 0;\n        this._element.draggable = true;\n        toggleClass(this.element, 'dv-inactive-tab', true);\n        const dragHandler = new TabDragHandler(this._element, this.accessor, this.group, this.panel);\n        this.dropTarget = new Droptarget(this._element, {\n            acceptedTargetZones: ['center'],\n            canDisplayOverlay: (event, position) => {\n                if (this.group.locked) {\n                    return false;\n                }\n                const data = getPanelData();\n                if (data && this.accessor.id === data.viewId) {\n                    if (data.panelId === null &&\n                        data.groupId === this.group.id) {\n                        // don't allow group move to drop on self\n                        return false;\n                    }\n                    return this.panel.id !== data.panelId;\n                }\n                return this.group.model.canDisplayOverlay(event, position, 'tab');\n            },\n        });\n        this.onWillShowOverlay = this.dropTarget.onWillShowOverlay;\n        this.addDisposables(this._onChanged, this._onDropped, this._onDragStart, dragHandler.onDragStart((event) => {\n            this._onDragStart.fire(event);\n        }), dragHandler, addDisposableListener(this._element, 'pointerdown', (event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            this._onChanged.fire(event);\n        }), this.dropTarget.onDrop((event) => {\n            this._onDropped.fire(event);\n        }), this.dropTarget);\n    }\n    setActive(isActive) {\n        toggleClass(this.element, 'dv-active-tab', isActive);\n        toggleClass(this.element, 'dv-inactive-tab', !isActive);\n    }\n    setContent(part) {\n        if (this.content) {\n            this._element.removeChild(this.content.element);\n        }\n        this.content = part;\n        this._element.appendChild(this.content.element);\n    }\n    dispose() {\n        super.dispose();\n    }\n}\n","import { quasiPreventDefault } from '../dom';\nimport { addDisposableListener } from '../events';\nimport { DragHandler } from './abstractDragHandler';\nimport { LocalSelectionTransfer, PanelTransfer } from './dataTransfer';\nimport { addGhostImage } from './ghost';\nexport class GroupDragHandler extends DragHandler {\n    constructor(element, accessor, group) {\n        super(element);\n        this.accessor = accessor;\n        this.group = group;\n        this.panelTransfer = LocalSelectionTransfer.getInstance();\n        this.addDisposables(addDisposableListener(element, 'pointerdown', (e) => {\n            if (e.shiftKey) {\n                /**\n                 * You cannot call e.preventDefault() because that will prevent drag events from firing\n                 * but we also need to stop any group overlay drag events from occuring\n                 * Use a custom event marker that can be checked by the overlay drag events\n                 */\n                quasiPreventDefault(e);\n            }\n        }, true));\n    }\n    isCancelled(_event) {\n        if (this.group.api.location.type === 'floating' && !_event.shiftKey) {\n            return true;\n        }\n        return false;\n    }\n    getData(dragEvent) {\n        const dataTransfer = dragEvent.dataTransfer;\n        this.panelTransfer.setData([new PanelTransfer(this.accessor.id, this.group.id, null)], PanelTransfer.prototype);\n        const style = window.getComputedStyle(this.el);\n        const bgColor = style.getPropertyValue('--dv-activegroup-visiblepanel-tab-background-color');\n        const color = style.getPropertyValue('--dv-activegroup-visiblepanel-tab-color');\n        if (dataTransfer) {\n            const ghostElement = document.createElement('div');\n            ghostElement.style.backgroundColor = bgColor;\n            ghostElement.style.color = color;\n            ghostElement.style.padding = '2px 8px';\n            ghostElement.style.height = '24px';\n            ghostElement.style.fontSize = '11px';\n            ghostElement.style.lineHeight = '20px';\n            ghostElement.style.borderRadius = '12px';\n            ghostElement.style.position = 'absolute';\n            ghostElement.textContent = `Multiple Panels (${this.group.size})`;\n            addGhostImage(dataTransfer, ghostElement);\n        }\n        return {\n            dispose: () => {\n                this.panelTransfer.clearData(PanelTransfer.prototype);\n            },\n        };\n    }\n}\n","import { addClasses, removeClasses } from '../dom';\nexport function addGhostImage(dataTransfer, ghostElement) {\n    // class dockview provides to force ghost image to be drawn on a different layer and prevent weird rendering issues\n    addClasses(ghostElement, 'dv-dragged');\n    document.body.appendChild(ghostElement);\n    dataTransfer.setDragImage(ghostElement, 0, 0);\n    setTimeout(() => {\n        removeClasses(ghostElement, 'dv-dragged');\n        ghostElement.remove();\n    }, 0);\n}\n","import { last } from '../../../array';\nimport { getPanelData } from '../../../dnd/dataTransfer';\nimport { Droptarget, } from '../../../dnd/droptarget';\nimport { GroupDragHandler } from '../../../dnd/groupDragHandler';\nimport { addDisposableListener, Emitter } from '../../../events';\nimport { CompositeDisposable } from '../../../lifecycle';\nexport class VoidContainer extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor(accessor, group) {\n        super();\n        this.accessor = accessor;\n        this.group = group;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this._onDragStart = new Emitter();\n        this.onDragStart = this._onDragStart.event;\n        this._element = document.createElement('div');\n        this._element.className = 'dv-void-container';\n        this._element.draggable = true;\n        this.addDisposables(this._onDrop, this._onDragStart, addDisposableListener(this._element, 'pointerdown', () => {\n            this.accessor.doSetGroupActive(this.group);\n        }));\n        const handler = new GroupDragHandler(this._element, accessor, group);\n        this.dropTraget = new Droptarget(this._element, {\n            acceptedTargetZones: ['center'],\n            canDisplayOverlay: (event, position) => {\n                var _a;\n                const data = getPanelData();\n                if (data && this.accessor.id === data.viewId) {\n                    if (data.panelId === null &&\n                        data.groupId === this.group.id) {\n                        // don't allow group move to drop on self\n                        return false;\n                    }\n                    // don't show the overlay if the tab being dragged is the last panel of this group\n                    return ((_a = last(this.group.panels)) === null || _a === void 0 ? void 0 : _a.id) !== data.panelId;\n                }\n                return group.model.canDisplayOverlay(event, position, 'header_space');\n            },\n        });\n        this.onWillShowOverlay = this.dropTraget.onWillShowOverlay;\n        this.addDisposables(handler, handler.onDragStart((event) => {\n            this._onDragStart.fire(event);\n        }), this.dropTraget.onDrop((event) => {\n            this._onDrop.fire(event);\n        }), this.dropTraget);\n    }\n}\n","import { CompositeDisposable, } from '../../../lifecycle';\nimport { addDisposableListener, Emitter } from '../../../events';\nimport { Tab } from '../tab/tab';\nimport { VoidContainer } from './voidContainer';\nimport { toggleClass } from '../../../dom';\nimport { WillShowOverlayLocationEvent } from '../../dockviewGroupPanelModel';\nimport { getPanelData } from '../../../dnd/dataTransfer';\nexport class TabsContainer extends CompositeDisposable {\n    get panels() {\n        return this.tabs.map((_) => _.value.panel.id);\n    }\n    get size() {\n        return this.tabs.length;\n    }\n    get hidden() {\n        return this._hidden;\n    }\n    set hidden(value) {\n        this._hidden = value;\n        this.element.style.display = value ? 'none' : '';\n    }\n    show() {\n        if (!this.hidden) {\n            this.element.style.display = '';\n        }\n    }\n    hide() {\n        this._element.style.display = 'none';\n    }\n    setRightActionsElement(element) {\n        if (this.rightActions === element) {\n            return;\n        }\n        if (this.rightActions) {\n            this.rightActions.remove();\n            this.rightActions = undefined;\n        }\n        if (element) {\n            this.rightActionsContainer.appendChild(element);\n            this.rightActions = element;\n        }\n    }\n    setLeftActionsElement(element) {\n        if (this.leftActions === element) {\n            return;\n        }\n        if (this.leftActions) {\n            this.leftActions.remove();\n            this.leftActions = undefined;\n        }\n        if (element) {\n            this.leftActionsContainer.appendChild(element);\n            this.leftActions = element;\n        }\n    }\n    setPrefixActionsElement(element) {\n        if (this.preActions === element) {\n            return;\n        }\n        if (this.preActions) {\n            this.preActions.remove();\n            this.preActions = undefined;\n        }\n        if (element) {\n            this.preActionsContainer.appendChild(element);\n            this.preActions = element;\n        }\n    }\n    get element() {\n        return this._element;\n    }\n    isActive(tab) {\n        return (this.selectedIndex > -1 &&\n            this.tabs[this.selectedIndex].value === tab);\n    }\n    indexOf(id) {\n        return this.tabs.findIndex((tab) => tab.value.panel.id === id);\n    }\n    constructor(accessor, group) {\n        super();\n        this.accessor = accessor;\n        this.group = group;\n        this.tabs = [];\n        this.selectedIndex = -1;\n        this._hidden = false;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this._onTabDragStart = new Emitter();\n        this.onTabDragStart = this._onTabDragStart.event;\n        this._onGroupDragStart = new Emitter();\n        this.onGroupDragStart = this._onGroupDragStart.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        this._element = document.createElement('div');\n        this._element.className = 'dv-tabs-and-actions-container';\n        toggleClass(this._element, 'dv-full-width-single-tab', this.accessor.options.singleTabMode === 'fullwidth');\n        this.rightActionsContainer = document.createElement('div');\n        this.rightActionsContainer.className = 'dv-right-actions-container';\n        this.leftActionsContainer = document.createElement('div');\n        this.leftActionsContainer.className = 'dv-left-actions-container';\n        this.preActionsContainer = document.createElement('div');\n        this.preActionsContainer.className = 'dv-pre-actions-container';\n        this.tabContainer = document.createElement('div');\n        this.tabContainer.className = 'dv-tabs-container';\n        this.voidContainer = new VoidContainer(this.accessor, this.group);\n        this._element.appendChild(this.preActionsContainer);\n        this._element.appendChild(this.tabContainer);\n        this._element.appendChild(this.leftActionsContainer);\n        this._element.appendChild(this.voidContainer.element);\n        this._element.appendChild(this.rightActionsContainer);\n        this.addDisposables(this._onWillShowOverlay, this._onDrop, this._onTabDragStart, this._onGroupDragStart, this.voidContainer, this.voidContainer.onDragStart((event) => {\n            this._onGroupDragStart.fire({\n                nativeEvent: event,\n                group: this.group,\n            });\n        }), this.voidContainer.onDrop((event) => {\n            this._onDrop.fire({\n                event: event.nativeEvent,\n                index: this.tabs.length,\n            });\n        }), this.voidContainer.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'header_space',\n                panel: this.group.activePanel,\n                api: this.accessor.api,\n                group: this.group,\n                getData: getPanelData,\n            }));\n        }), addDisposableListener(this.voidContainer.element, 'pointerdown', (event) => {\n            const isFloatingGroupsEnabled = !this.accessor.options.disableFloatingGroups;\n            if (isFloatingGroupsEnabled &&\n                event.shiftKey &&\n                this.group.api.location.type !== 'floating') {\n                event.preventDefault();\n                const { top, left } = this.element.getBoundingClientRect();\n                const { top: rootTop, left: rootLeft } = this.accessor.element.getBoundingClientRect();\n                this.accessor.addFloatingGroup(this.group, {\n                    x: left - rootLeft + 20,\n                    y: top - rootTop + 20,\n                    inDragMode: true,\n                });\n            }\n        }), addDisposableListener(this.tabContainer, 'pointerdown', (event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            const isLeftClick = event.button === 0;\n            if (isLeftClick) {\n                this.accessor.doSetGroupActive(this.group);\n            }\n        }));\n    }\n    setActive(_isGroupActive) {\n        // noop\n    }\n    delete(id) {\n        const index = this.tabs.findIndex((tab) => tab.value.panel.id === id);\n        const tabToRemove = this.tabs.splice(index, 1)[0];\n        const { value, disposable } = tabToRemove;\n        disposable.dispose();\n        value.dispose();\n        value.element.remove();\n        this.updateClassnames();\n    }\n    setActivePanel(panel) {\n        this.tabs.forEach((tab) => {\n            const isActivePanel = panel.id === tab.value.panel.id;\n            tab.value.setActive(isActivePanel);\n        });\n    }\n    openPanel(panel, index = this.tabs.length) {\n        if (this.tabs.find((tab) => tab.value.panel.id === panel.id)) {\n            return;\n        }\n        const tab = new Tab(panel, this.accessor, this.group);\n        tab.setContent(panel.view.tab);\n        const disposable = new CompositeDisposable(tab.onDragStart((event) => {\n            this._onTabDragStart.fire({ nativeEvent: event, panel });\n        }), tab.onChanged((event) => {\n            const isFloatingGroupsEnabled = !this.accessor.options.disableFloatingGroups;\n            const isFloatingWithOnePanel = this.group.api.location.type === 'floating' &&\n                this.size === 1;\n            if (isFloatingGroupsEnabled &&\n                !isFloatingWithOnePanel &&\n                event.shiftKey) {\n                event.preventDefault();\n                const panel = this.accessor.getGroupPanel(tab.panel.id);\n                const { top, left } = tab.element.getBoundingClientRect();\n                const { top: rootTop, left: rootLeft } = this.accessor.element.getBoundingClientRect();\n                this.accessor.addFloatingGroup(panel, {\n                    x: left - rootLeft,\n                    y: top - rootTop,\n                    inDragMode: true,\n                });\n                return;\n            }\n            const isLeftClick = event.button === 0;\n            if (!isLeftClick || event.defaultPrevented) {\n                return;\n            }\n            if (this.group.activePanel !== panel) {\n                this.group.model.openPanel(panel);\n            }\n        }), tab.onDrop((event) => {\n            this._onDrop.fire({\n                event: event.nativeEvent,\n                index: this.tabs.findIndex((x) => x.value === tab),\n            });\n        }), tab.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'tab',\n                panel: this.group.activePanel,\n                api: this.accessor.api,\n                group: this.group,\n                getData: getPanelData,\n            }));\n        }));\n        const value = { value: tab, disposable };\n        this.addTab(value, index);\n    }\n    closePanel(panel) {\n        this.delete(panel.id);\n    }\n    dispose() {\n        super.dispose();\n        for (const { value, disposable } of this.tabs) {\n            disposable.dispose();\n            value.dispose();\n        }\n        this.tabs = [];\n    }\n    addTab(tab, index = this.tabs.length) {\n        if (index < 0 || index > this.tabs.length) {\n            throw new Error('invalid location');\n        }\n        this.tabContainer.insertBefore(tab.value.element, this.tabContainer.children[index]);\n        this.tabs = [\n            ...this.tabs.slice(0, index),\n            tab,\n            ...this.tabs.slice(index),\n        ];\n        if (this.selectedIndex < 0) {\n            this.selectedIndex = index;\n        }\n        this.updateClassnames();\n    }\n    updateClassnames() {\n        toggleClass(this._element, 'dv-single-tab', this.size === 1);\n    }\n}\n","import { AcceptableEvent } from '../events';\nexport class DockviewUnhandledDragOverEvent extends AcceptableEvent {\n    constructor(nativeEvent, target, position, getData, group) {\n        super();\n        this.nativeEvent = nativeEvent;\n        this.target = target;\n        this.position = position;\n        this.getData = getData;\n        this.group = group;\n    }\n}\nexport const PROPERTY_KEYS_DOCKVIEW = (() => {\n    /**\n     * by readong the keys from an empty value object TypeScript will error\n     * when we add or remove new properties to `DockviewOptions`\n     */\n    const properties = {\n        disableAutoResizing: undefined,\n        hideBorders: undefined,\n        singleTabMode: undefined,\n        disableFloatingGroups: undefined,\n        floatingGroupBounds: undefined,\n        popoutUrl: undefined,\n        defaultRenderer: undefined,\n        debug: undefined,\n        rootOverlayModel: undefined,\n        locked: undefined,\n        disableDnd: undefined,\n        gap: undefined,\n        className: undefined,\n        noPanelsOverlay: undefined,\n    };\n    return Object.keys(properties);\n})();\nexport function isPanelOptionsWithPanel(data) {\n    if (data.referencePanel) {\n        return true;\n    }\n    return false;\n}\nexport function isPanelOptionsWithGroup(data) {\n    if (data.referenceGroup) {\n        return true;\n    }\n    return false;\n}\nexport function isGroupOptionsWithPanel(data) {\n    if (data.referencePanel) {\n        return true;\n    }\n    return false;\n}\nexport function isGroupOptionsWithGroup(data) {\n    if (data.referenceGroup) {\n        return true;\n    }\n    return false;\n}\n","import { DockviewApi } from '../api/component.api';\nimport { getPanelData } from '../dnd/dataTransfer';\nimport { isAncestor, toggleClass } from '../dom';\nimport { addDisposableListener, DockviewEvent, Emitter, } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nimport { ContentContainer, } from './components/panel/content';\nimport { TabsContainer, } from './components/titlebar/tabsContainer';\nimport { DockviewUnhandledDragOverEvent, } from './options';\nexport class DockviewDidDropEvent extends DockviewEvent {\n    get nativeEvent() {\n        return this.options.nativeEvent;\n    }\n    get position() {\n        return this.options.position;\n    }\n    get panel() {\n        return this.options.panel;\n    }\n    get group() {\n        return this.options.group;\n    }\n    get api() {\n        return this.options.api;\n    }\n    constructor(options) {\n        super();\n        this.options = options;\n    }\n    getData() {\n        return this.options.getData();\n    }\n}\nexport class DockviewWillDropEvent extends DockviewDidDropEvent {\n    get kind() {\n        return this._kind;\n    }\n    constructor(options) {\n        super(options);\n        this._kind = options.kind;\n    }\n}\nexport class WillShowOverlayLocationEvent {\n    get kind() {\n        return this.options.kind;\n    }\n    get nativeEvent() {\n        return this.event.nativeEvent;\n    }\n    get position() {\n        return this.event.position;\n    }\n    get defaultPrevented() {\n        return this.event.defaultPrevented;\n    }\n    get panel() {\n        return this.options.panel;\n    }\n    get api() {\n        return this.options.api;\n    }\n    get group() {\n        return this.options.group;\n    }\n    preventDefault() {\n        this.event.preventDefault();\n    }\n    getData() {\n        return this.options.getData();\n    }\n    constructor(event, options) {\n        this.event = event;\n        this.options = options;\n    }\n}\nexport class DockviewGroupPanelModel extends CompositeDisposable {\n    get element() {\n        throw new Error('dockview: not supported');\n    }\n    get activePanel() {\n        return this._activePanel;\n    }\n    get locked() {\n        return this._locked;\n    }\n    set locked(value) {\n        this._locked = value;\n        toggleClass(this.container, 'dv-locked-groupview', value === 'no-drop-target' || value);\n    }\n    get isActive() {\n        return this._isGroupActive;\n    }\n    get panels() {\n        return this._panels;\n    }\n    get size() {\n        return this._panels.length;\n    }\n    get isEmpty() {\n        return this._panels.length === 0;\n    }\n    get hasWatermark() {\n        return !!(this.watermark && this.container.contains(this.watermark.element));\n    }\n    get header() {\n        return this.tabsContainer;\n    }\n    get isContentFocused() {\n        if (!document.activeElement) {\n            return false;\n        }\n        return isAncestor(document.activeElement, this.contentContainer.element);\n    }\n    get location() {\n        return this._location;\n    }\n    set location(value) {\n        this._location = value;\n        toggleClass(this.container, 'dv-groupview-floating', false);\n        toggleClass(this.container, 'dv-groupview-popout', false);\n        switch (value.type) {\n            case 'grid':\n                this.contentContainer.dropTarget.setTargetZones([\n                    'top',\n                    'bottom',\n                    'left',\n                    'right',\n                    'center',\n                ]);\n                break;\n            case 'floating':\n                this.contentContainer.dropTarget.setTargetZones(['center']);\n                this.contentContainer.dropTarget.setTargetZones(value\n                    ? ['center']\n                    : ['top', 'bottom', 'left', 'right', 'center']);\n                toggleClass(this.container, 'dv-groupview-floating', true);\n                break;\n            case 'popout':\n                this.contentContainer.dropTarget.setTargetZones(['center']);\n                toggleClass(this.container, 'dv-groupview-popout', true);\n                break;\n        }\n        this.groupPanel.api._onDidLocationChange.fire({\n            location: this.location,\n        });\n    }\n    constructor(container, accessor, id, options, groupPanel) {\n        var _a;\n        super();\n        this.container = container;\n        this.accessor = accessor;\n        this.id = id;\n        this.options = options;\n        this.groupPanel = groupPanel;\n        this._isGroupActive = false;\n        this._locked = false;\n        this._location = { type: 'grid' };\n        this.mostRecentlyUsed = [];\n        this._overwriteRenderContainer = null;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._width = 0;\n        this._height = 0;\n        this._panels = [];\n        this._panelDisposables = new Map();\n        this._onMove = new Emitter();\n        this.onMove = this._onMove.event;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onWillDrop = new Emitter();\n        this.onWillDrop = this._onWillDrop.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        this._onTabDragStart = new Emitter();\n        this.onTabDragStart = this._onTabDragStart.event;\n        this._onGroupDragStart = new Emitter();\n        this.onGroupDragStart = this._onGroupDragStart.event;\n        this._onDidAddPanel = new Emitter();\n        this.onDidAddPanel = this._onDidAddPanel.event;\n        this._onDidPanelTitleChange = new Emitter();\n        this.onDidPanelTitleChange = this._onDidPanelTitleChange.event;\n        this._onDidPanelParametersChange = new Emitter();\n        this.onDidPanelParametersChange = this._onDidPanelParametersChange.event;\n        this._onDidRemovePanel = new Emitter();\n        this.onDidRemovePanel = this._onDidRemovePanel.event;\n        this._onDidActivePanelChange = new Emitter();\n        this.onDidActivePanelChange = this._onDidActivePanelChange.event;\n        this._onUnhandledDragOverEvent = new Emitter();\n        this.onUnhandledDragOverEvent = this._onUnhandledDragOverEvent.event;\n        toggleClass(this.container, 'dv-groupview', true);\n        this._api = new DockviewApi(this.accessor);\n        this.tabsContainer = new TabsContainer(this.accessor, this.groupPanel);\n        this.contentContainer = new ContentContainer(this.accessor, this);\n        container.append(this.tabsContainer.element, this.contentContainer.element);\n        this.header.hidden = !!options.hideHeader;\n        this.locked = (_a = options.locked) !== null && _a !== void 0 ? _a : false;\n        this.addDisposables(this._onTabDragStart, this._onGroupDragStart, this._onWillShowOverlay, this.tabsContainer.onTabDragStart((event) => {\n            this._onTabDragStart.fire(event);\n        }), this.tabsContainer.onGroupDragStart((event) => {\n            this._onGroupDragStart.fire(event);\n        }), this.tabsContainer.onDrop((event) => {\n            this.handleDropEvent('header', event.event, 'center', event.index);\n        }), this.contentContainer.onDidFocus(() => {\n            this.accessor.doSetGroupActive(this.groupPanel);\n        }), this.contentContainer.onDidBlur(() => {\n            // noop\n        }), this.contentContainer.dropTarget.onDrop((event) => {\n            this.handleDropEvent('content', event.nativeEvent, event.position);\n        }), this.tabsContainer.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(event);\n        }), this.contentContainer.dropTarget.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'content',\n                panel: this.activePanel,\n                api: this._api,\n                group: this.groupPanel,\n                getData: getPanelData,\n            }));\n        }), this._onMove, this._onDidChange, this._onDidDrop, this._onWillDrop, this._onDidAddPanel, this._onDidRemovePanel, this._onDidActivePanelChange, this._onUnhandledDragOverEvent, this._onDidPanelTitleChange, this._onDidPanelParametersChange);\n    }\n    focusContent() {\n        this.contentContainer.element.focus();\n    }\n    set renderContainer(value) {\n        this.panels.forEach((panel) => {\n            this.renderContainer.detatch(panel);\n        });\n        this._overwriteRenderContainer = value;\n        this.panels.forEach((panel) => {\n            this.rerender(panel);\n        });\n    }\n    get renderContainer() {\n        var _a;\n        return ((_a = this._overwriteRenderContainer) !== null && _a !== void 0 ? _a : this.accessor.overlayRenderContainer);\n    }\n    initialize() {\n        if (this.options.panels) {\n            this.options.panels.forEach((panel) => {\n                this.doAddPanel(panel);\n            });\n        }\n        if (this.options.activePanel) {\n            this.openPanel(this.options.activePanel);\n        }\n        // must be run after the constructor otherwise this.parent may not be\n        // correctly initialized\n        this.setActive(this.isActive, true);\n        this.updateContainer();\n        if (this.accessor.options.createRightHeaderActionComponent) {\n            this._rightHeaderActions =\n                this.accessor.options.createRightHeaderActionComponent(this.groupPanel);\n            this.addDisposables(this._rightHeaderActions);\n            this._rightHeaderActions.init({\n                containerApi: this._api,\n                api: this.groupPanel.api,\n                group: this.groupPanel,\n            });\n            this.tabsContainer.setRightActionsElement(this._rightHeaderActions.element);\n        }\n        if (this.accessor.options.createLeftHeaderActionComponent) {\n            this._leftHeaderActions =\n                this.accessor.options.createLeftHeaderActionComponent(this.groupPanel);\n            this.addDisposables(this._leftHeaderActions);\n            this._leftHeaderActions.init({\n                containerApi: this._api,\n                api: this.groupPanel.api,\n                group: this.groupPanel,\n            });\n            this.tabsContainer.setLeftActionsElement(this._leftHeaderActions.element);\n        }\n        if (this.accessor.options.createPrefixHeaderActionComponent) {\n            this._prefixHeaderActions =\n                this.accessor.options.createPrefixHeaderActionComponent(this.groupPanel);\n            this.addDisposables(this._prefixHeaderActions);\n            this._prefixHeaderActions.init({\n                containerApi: this._api,\n                api: this.groupPanel.api,\n                group: this.groupPanel,\n            });\n            this.tabsContainer.setPrefixActionsElement(this._prefixHeaderActions.element);\n        }\n    }\n    rerender(panel) {\n        this.contentContainer.renderPanel(panel, { asActive: false });\n    }\n    indexOf(panel) {\n        return this.tabsContainer.indexOf(panel.id);\n    }\n    toJSON() {\n        var _a;\n        const result = {\n            views: this.tabsContainer.panels,\n            activeView: (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.id,\n            id: this.id,\n        };\n        if (this.locked !== false) {\n            result.locked = this.locked;\n        }\n        if (this.header.hidden) {\n            result.hideHeader = true;\n        }\n        return result;\n    }\n    moveToNext(options) {\n        if (!options) {\n            options = {};\n        }\n        if (!options.panel) {\n            options.panel = this.activePanel;\n        }\n        const index = options.panel ? this.panels.indexOf(options.panel) : -1;\n        let normalizedIndex;\n        if (index < this.panels.length - 1) {\n            normalizedIndex = index + 1;\n        }\n        else if (!options.suppressRoll) {\n            normalizedIndex = 0;\n        }\n        else {\n            return;\n        }\n        this.openPanel(this.panels[normalizedIndex]);\n    }\n    moveToPrevious(options) {\n        if (!options) {\n            options = {};\n        }\n        if (!options.panel) {\n            options.panel = this.activePanel;\n        }\n        if (!options.panel) {\n            return;\n        }\n        const index = this.panels.indexOf(options.panel);\n        let normalizedIndex;\n        if (index > 0) {\n            normalizedIndex = index - 1;\n        }\n        else if (!options.suppressRoll) {\n            normalizedIndex = this.panels.length - 1;\n        }\n        else {\n            return;\n        }\n        this.openPanel(this.panels[normalizedIndex]);\n    }\n    containsPanel(panel) {\n        return this.panels.includes(panel);\n    }\n    init(_params) {\n        //noop\n    }\n    update(_params) {\n        //noop\n    }\n    focus() {\n        var _a;\n        (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    openPanel(panel, options = {}) {\n        /**\n         * set the panel group\n         * add the panel\n         * check if group active\n         * check if panel active\n         */\n        if (typeof options.index !== 'number' ||\n            options.index > this.panels.length) {\n            options.index = this.panels.length;\n        }\n        const skipSetActive = !!options.skipSetActive;\n        // ensure the group is updated before we fire any events\n        panel.updateParentGroup(this.groupPanel, {\n            skipSetActive: options.skipSetActive,\n        });\n        this.doAddPanel(panel, options.index, {\n            skipSetActive: skipSetActive,\n        });\n        if (this._activePanel === panel) {\n            this.contentContainer.renderPanel(panel, { asActive: true });\n            return;\n        }\n        if (!skipSetActive) {\n            this.doSetActivePanel(panel);\n        }\n        if (!options.skipSetGroupActive) {\n            this.accessor.doSetGroupActive(this.groupPanel);\n        }\n        if (!options.skipSetActive) {\n            this.updateContainer();\n        }\n    }\n    removePanel(groupItemOrId, options = {\n        skipSetActive: false,\n    }) {\n        const id = typeof groupItemOrId === 'string'\n            ? groupItemOrId\n            : groupItemOrId.id;\n        const panelToRemove = this._panels.find((panel) => panel.id === id);\n        if (!panelToRemove) {\n            throw new Error('invalid operation');\n        }\n        return this._removePanel(panelToRemove, options);\n    }\n    closeAllPanels() {\n        if (this.panels.length > 0) {\n            // take a copy since we will be edting the array as we iterate through\n            const arrPanelCpy = [...this.panels];\n            for (const panel of arrPanelCpy) {\n                this.doClose(panel);\n            }\n        }\n        else {\n            this.accessor.removeGroup(this.groupPanel);\n        }\n    }\n    closePanel(panel) {\n        this.doClose(panel);\n    }\n    doClose(panel) {\n        const isLast = this.panels.length === 1 && this.accessor.groups.length === 1;\n        this.accessor.removePanel(panel, isLast && this.accessor.options.noPanelsOverlay === 'emptyGroup'\n            ? { removeEmptyGroup: false }\n            : undefined);\n    }\n    isPanelActive(panel) {\n        return this._activePanel === panel;\n    }\n    updateActions(element) {\n        this.tabsContainer.setRightActionsElement(element);\n    }\n    setActive(isGroupActive, force = false) {\n        if (!force && this.isActive === isGroupActive) {\n            return;\n        }\n        this._isGroupActive = isGroupActive;\n        toggleClass(this.container, 'dv-active-group', isGroupActive);\n        toggleClass(this.container, 'dv-inactive-group', !isGroupActive);\n        this.tabsContainer.setActive(this.isActive);\n        if (!this._activePanel && this.panels.length > 0) {\n            this.doSetActivePanel(this.panels[0]);\n        }\n        this.updateContainer();\n    }\n    layout(width, height) {\n        var _a;\n        this._width = width;\n        this._height = height;\n        this.contentContainer.layout(this._width, this._height);\n        if ((_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.layout) {\n            this._activePanel.layout(this._width, this._height);\n        }\n    }\n    _removePanel(panel, options) {\n        const isActivePanel = this._activePanel === panel;\n        this.doRemovePanel(panel);\n        if (isActivePanel && this.panels.length > 0) {\n            const nextPanel = this.mostRecentlyUsed[0];\n            this.openPanel(nextPanel, {\n                skipSetActive: options.skipSetActive,\n                skipSetGroupActive: options.skipSetActiveGroup,\n            });\n        }\n        if (this._activePanel && this.panels.length === 0) {\n            this.doSetActivePanel(undefined);\n        }\n        if (!options.skipSetActive) {\n            this.updateContainer();\n        }\n        return panel;\n    }\n    doRemovePanel(panel) {\n        const index = this.panels.indexOf(panel);\n        if (this._activePanel === panel) {\n            this.contentContainer.closePanel();\n        }\n        this.tabsContainer.delete(panel.id);\n        this._panels.splice(index, 1);\n        if (this.mostRecentlyUsed.includes(panel)) {\n            const index = this.mostRecentlyUsed.indexOf(panel);\n            this.mostRecentlyUsed.splice(index, 1);\n        }\n        const disposable = this._panelDisposables.get(panel.id);\n        if (disposable) {\n            disposable.dispose();\n            this._panelDisposables.delete(panel.id);\n        }\n        this._onDidRemovePanel.fire({ panel });\n    }\n    doAddPanel(panel, index = this.panels.length, options = { skipSetActive: false }) {\n        const existingPanel = this._panels.indexOf(panel);\n        const hasExistingPanel = existingPanel > -1;\n        this.tabsContainer.show();\n        this.contentContainer.show();\n        this.tabsContainer.openPanel(panel, index);\n        if (!options.skipSetActive) {\n            this.contentContainer.openPanel(panel);\n        }\n        if (hasExistingPanel) {\n            // TODO - need to ensure ordering hasn't changed and if it has need to re-order this.panels\n            return;\n        }\n        this.updateMru(panel);\n        this.panels.splice(index, 0, panel);\n        this._panelDisposables.set(panel.id, new CompositeDisposable(panel.api.onDidTitleChange((event) => this._onDidPanelTitleChange.fire(event)), panel.api.onDidParametersChange((event) => this._onDidPanelParametersChange.fire(event))));\n        this._onDidAddPanel.fire({ panel });\n    }\n    doSetActivePanel(panel) {\n        if (this._activePanel === panel) {\n            return;\n        }\n        this._activePanel = panel;\n        if (panel) {\n            this.tabsContainer.setActivePanel(panel);\n            panel.layout(this._width, this._height);\n            this.updateMru(panel);\n            this._onDidActivePanelChange.fire({\n                panel,\n            });\n        }\n    }\n    updateMru(panel) {\n        if (this.mostRecentlyUsed.includes(panel)) {\n            this.mostRecentlyUsed.splice(this.mostRecentlyUsed.indexOf(panel), 1);\n        }\n        this.mostRecentlyUsed = [panel, ...this.mostRecentlyUsed];\n    }\n    updateContainer() {\n        var _a, _b;\n        this.panels.forEach((panel) => panel.runEvents());\n        if (this.isEmpty && !this.watermark) {\n            const watermark = this.accessor.createWatermarkComponent();\n            watermark.init({\n                containerApi: this._api,\n                group: this.groupPanel,\n            });\n            this.watermark = watermark;\n            addDisposableListener(this.watermark.element, 'pointerdown', () => {\n                if (!this.isActive) {\n                    this.accessor.doSetGroupActive(this.groupPanel);\n                }\n            });\n            this.contentContainer.element.appendChild(this.watermark.element);\n        }\n        if (!this.isEmpty && this.watermark) {\n            this.watermark.element.remove();\n            (_b = (_a = this.watermark).dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n            this.watermark = undefined;\n        }\n    }\n    canDisplayOverlay(event, position, target) {\n        const firedEvent = new DockviewUnhandledDragOverEvent(event, target, position, getPanelData, this.accessor.getPanel(this.id));\n        this._onUnhandledDragOverEvent.fire(firedEvent);\n        return firedEvent.isAccepted;\n    }\n    handleDropEvent(type, event, position, index) {\n        if (this.locked === 'no-drop-target') {\n            return;\n        }\n        function getKind() {\n            switch (type) {\n                case 'header':\n                    return typeof index === 'number' ? 'tab' : 'header_space';\n                case 'content':\n                    return 'content';\n            }\n        }\n        const panel = typeof index === 'number' ? this.panels[index] : undefined;\n        const willDropEvent = new DockviewWillDropEvent({\n            nativeEvent: event,\n            position,\n            panel,\n            getData: () => getPanelData(),\n            kind: getKind(),\n            group: this.groupPanel,\n            api: this._api,\n        });\n        this._onWillDrop.fire(willDropEvent);\n        if (willDropEvent.defaultPrevented) {\n            return;\n        }\n        const data = getPanelData();\n        if (data && data.viewId === this.accessor.id) {\n            if (data.panelId === null) {\n                // this is a group move dnd event\n                const { groupId } = data;\n                this._onMove.fire({\n                    target: position,\n                    groupId: groupId,\n                    index,\n                });\n                return;\n            }\n            const fromSameGroup = this.tabsContainer.indexOf(data.panelId) !== -1;\n            if (fromSameGroup && this.tabsContainer.size === 1) {\n                return;\n            }\n            const { groupId, panelId } = data;\n            const isSameGroup = this.id === groupId;\n            if (isSameGroup && !position) {\n                const oldIndex = this.tabsContainer.indexOf(panelId);\n                if (oldIndex === index) {\n                    return;\n                }\n            }\n            this._onMove.fire({\n                target: position,\n                groupId: data.groupId,\n                itemId: data.panelId,\n                index,\n            });\n        }\n        else {\n            this._onDidDrop.fire(new DockviewDidDropEvent({\n                nativeEvent: event,\n                position,\n                panel,\n                getData: () => getPanelData(),\n                group: this.groupPanel,\n                api: this._api,\n            }));\n        }\n    }\n    dispose() {\n        var _a, _b, _c;\n        super.dispose();\n        (_a = this.watermark) === null || _a === void 0 ? void 0 : _a.element.remove();\n        (_c = (_b = this.watermark) === null || _b === void 0 ? void 0 : _b.dispose) === null || _c === void 0 ? void 0 : _c.call(_b);\n        this.watermark = undefined;\n        for (const panel of this.panels) {\n            panel.dispose();\n        }\n        this.tabsContainer.dispose();\n        this.contentContainer.dispose();\n    }\n}\n","import { Emitter } from '../events';\nimport { PanelApiImpl } from './panelApi';\nexport class GridviewPanelApiImpl extends PanelApiImpl {\n    constructor(id, component, panel) {\n        super(id, component);\n        this._onDidConstraintsChangeInternal = new Emitter();\n        this.onDidConstraintsChangeInternal = this._onDidConstraintsChangeInternal.event;\n        this._onDidConstraintsChange = new Emitter();\n        this.onDidConstraintsChange = this._onDidConstraintsChange.event;\n        this._onDidSizeChange = new Emitter();\n        this.onDidSizeChange = this._onDidSizeChange.event;\n        this.addDisposables(this._onDidConstraintsChangeInternal, this._onDidConstraintsChange, this._onDidSizeChange);\n        if (panel) {\n            this.initialize(panel);\n        }\n    }\n    setConstraints(value) {\n        this._onDidConstraintsChangeInternal.fire(value);\n    }\n    setSize(event) {\n        this._onDidSizeChange.fire(event);\n    }\n}\n","import { BasePanelView, } from './basePanelView';\nimport { GridviewPanelApiImpl, } from '../api/gridviewPanelApi';\nimport { Emitter } from '../events';\nexport class GridviewPanel extends BasePanelView {\n    get priority() {\n        return this._priority;\n    }\n    get snap() {\n        return this._snap;\n    }\n    get minimumWidth() {\n        /**\n         * defer to protected function to allow subclasses to override easily.\n         * see https://github.com/microsoft/TypeScript/issues/338\n         */\n        return this.__minimumWidth();\n    }\n    get minimumHeight() {\n        /**\n         * defer to protected function to allow subclasses to override easily.\n         * see https://github.com/microsoft/TypeScript/issues/338\n         */\n        return this.__minimumHeight();\n    }\n    get maximumHeight() {\n        /**\n         * defer to protected function to allow subclasses to override easily.\n         * see https://github.com/microsoft/TypeScript/issues/338\n         */\n        return this.__maximumHeight();\n    }\n    get maximumWidth() {\n        /**\n         * defer to protected function to allow subclasses to override easily.\n         * see https://github.com/microsoft/TypeScript/issues/338\n         */\n        return this.__maximumWidth();\n    }\n    __minimumWidth() {\n        const width = typeof this._minimumWidth === 'function'\n            ? this._minimumWidth()\n            : this._minimumWidth;\n        if (width !== this._evaluatedMinimumWidth) {\n            this._evaluatedMinimumWidth = width;\n            this.updateConstraints();\n        }\n        return width;\n    }\n    __maximumWidth() {\n        const width = typeof this._maximumWidth === 'function'\n            ? this._maximumWidth()\n            : this._maximumWidth;\n        if (width !== this._evaluatedMaximumWidth) {\n            this._evaluatedMaximumWidth = width;\n            this.updateConstraints();\n        }\n        return width;\n    }\n    __minimumHeight() {\n        const height = typeof this._minimumHeight === 'function'\n            ? this._minimumHeight()\n            : this._minimumHeight;\n        if (height !== this._evaluatedMinimumHeight) {\n            this._evaluatedMinimumHeight = height;\n            this.updateConstraints();\n        }\n        return height;\n    }\n    __maximumHeight() {\n        const height = typeof this._maximumHeight === 'function'\n            ? this._maximumHeight()\n            : this._maximumHeight;\n        if (height !== this._evaluatedMaximumHeight) {\n            this._evaluatedMaximumHeight = height;\n            this.updateConstraints();\n        }\n        return height;\n    }\n    get isActive() {\n        return this.api.isActive;\n    }\n    get isVisible() {\n        return this.api.isVisible;\n    }\n    constructor(id, component, options, api) {\n        super(id, component, api !== null && api !== void 0 ? api : new GridviewPanelApiImpl(id, component));\n        this._evaluatedMinimumWidth = 0;\n        this._evaluatedMaximumWidth = Number.MAX_SAFE_INTEGER;\n        this._evaluatedMinimumHeight = 0;\n        this._evaluatedMaximumHeight = Number.MAX_SAFE_INTEGER;\n        this._minimumWidth = 0;\n        this._minimumHeight = 0;\n        this._maximumWidth = Number.MAX_SAFE_INTEGER;\n        this._maximumHeight = Number.MAX_SAFE_INTEGER;\n        this._snap = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        if (typeof (options === null || options === void 0 ? void 0 : options.minimumWidth) === 'number') {\n            this._minimumWidth = options.minimumWidth;\n        }\n        if (typeof (options === null || options === void 0 ? void 0 : options.maximumWidth) === 'number') {\n            this._maximumWidth = options.maximumWidth;\n        }\n        if (typeof (options === null || options === void 0 ? void 0 : options.minimumHeight) === 'number') {\n            this._minimumHeight = options.minimumHeight;\n        }\n        if (typeof (options === null || options === void 0 ? void 0 : options.maximumHeight) === 'number') {\n            this._maximumHeight = options.maximumHeight;\n        }\n        this.api.initialize(this); // TODO: required to by-pass 'super before this' requirement\n        this.addDisposables(this.api.onWillVisibilityChange((event) => {\n            const { isVisible } = event;\n            const { accessor } = this._params;\n            accessor.setVisible(this, isVisible);\n        }), this.api.onActiveChange(() => {\n            const { accessor } = this._params;\n            accessor.doSetGroupActive(this);\n        }), this.api.onDidConstraintsChangeInternal((event) => {\n            if (typeof event.minimumWidth === 'number' ||\n                typeof event.minimumWidth === 'function') {\n                this._minimumWidth = event.minimumWidth;\n            }\n            if (typeof event.minimumHeight === 'number' ||\n                typeof event.minimumHeight === 'function') {\n                this._minimumHeight = event.minimumHeight;\n            }\n            if (typeof event.maximumWidth === 'number' ||\n                typeof event.maximumWidth === 'function') {\n                this._maximumWidth = event.maximumWidth;\n            }\n            if (typeof event.maximumHeight === 'number' ||\n                typeof event.maximumHeight === 'function') {\n                this._maximumHeight = event.maximumHeight;\n            }\n        }), this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire({\n                height: event.height,\n                width: event.width,\n            });\n        }), this._onDidChange);\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    init(parameters) {\n        if (parameters.maximumHeight) {\n            this._maximumHeight = parameters.maximumHeight;\n        }\n        if (parameters.minimumHeight) {\n            this._minimumHeight = parameters.minimumHeight;\n        }\n        if (parameters.maximumWidth) {\n            this._maximumWidth = parameters.maximumWidth;\n        }\n        if (parameters.minimumWidth) {\n            this._minimumWidth = parameters.minimumWidth;\n        }\n        this._priority = parameters.priority;\n        this._snap = !!parameters.snap;\n        super.init(parameters);\n        if (typeof parameters.isVisible === 'boolean') {\n            this.setVisible(parameters.isVisible);\n        }\n    }\n    updateConstraints() {\n        this.api._onDidConstraintsChange.fire({\n            minimumWidth: this._evaluatedMinimumWidth,\n            maximumWidth: this._evaluatedMaximumWidth,\n            minimumHeight: this._evaluatedMinimumHeight,\n            maximumHeight: this._evaluatedMaximumHeight,\n        });\n    }\n    toJSON() {\n        const state = super.toJSON();\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ? undefined : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        return Object.assign(Object.assign({}, state), { minimumHeight: minimum(this.minimumHeight), maximumHeight: maximum(this.maximumHeight), minimumWidth: minimum(this.minimumWidth), maximumWidth: maximum(this.maximumWidth), snap: this.snap, priority: this.priority });\n    }\n}\n","import { positionToDirection } from '../dnd/droptarget';\nimport { Emitter } from '../events';\nimport { MutableDisposable } from '../lifecycle';\nimport { GridviewPanelApiImpl } from './gridviewPanelApi';\nconst NOT_INITIALIZED_MESSAGE = 'dockview: DockviewGroupPanelApiImpl not initialized';\nexport class DockviewGroupPanelApiImpl extends GridviewPanelApiImpl {\n    get location() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        return this._group.model.location;\n    }\n    constructor(id, accessor) {\n        super(id, '__dockviewgroup__');\n        this.accessor = accessor;\n        this._mutableDisposable = new MutableDisposable();\n        this._onDidLocationChange = new Emitter();\n        this.onDidLocationChange = this._onDidLocationChange.event;\n        this._onDidActivePanelChange = new Emitter();\n        this.onDidActivePanelChange = this._onDidActivePanelChange.event;\n        this.addDisposables(this._onDidLocationChange, this._onDidActivePanelChange, this._mutableDisposable);\n    }\n    close() {\n        if (!this._group) {\n            return;\n        }\n        return this.accessor.removeGroup(this._group);\n    }\n    getWindow() {\n        return this.location.type === 'popout'\n            ? this.location.getWindow()\n            : window;\n    }\n    moveTo(options) {\n        var _a, _b, _c;\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        const group = (_a = options.group) !== null && _a !== void 0 ? _a : this.accessor.addGroup({\n            direction: positionToDirection((_b = options.position) !== null && _b !== void 0 ? _b : 'right'),\n            skipSetActive: true,\n        });\n        this.accessor.moveGroupOrPanel({\n            from: { groupId: this._group.id },\n            to: {\n                group,\n                position: options.group\n                    ? (_c = options.position) !== null && _c !== void 0 ? _c : 'center'\n                    : 'center',\n                index: options.index,\n            },\n        });\n    }\n    maximize() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        if (this.location.type !== 'grid') {\n            // only grid groups can be maximized\n            return;\n        }\n        this.accessor.maximizeGroup(this._group);\n    }\n    isMaximized() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        return this.accessor.isMaximizedGroup(this._group);\n    }\n    exitMaximized() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        if (this.isMaximized()) {\n            this.accessor.exitMaximizedGroup();\n        }\n    }\n    initialize(group) {\n        /**\n         * TODO: Annoying initialization order caveat, find a better way to initialize and avoid needing null checks\n         *\n         * Due to the order on initialization we know that the model isn't defined until later in the same stack-frame of setup.\n         * By queuing a microtask we can ensure the setup is completed within the same stack-frame, but after everything else has\n         * finished ensuring the `model` is defined.\n         */\n        this._group = group;\n        queueMicrotask(() => {\n            this._mutableDisposable.value =\n                this._group.model.onDidActivePanelChange((event) => {\n                    this._onDidActivePanelChange.fire(event);\n                });\n        });\n    }\n}\n","import { DockviewGroupPanelModel, } from './dockviewGroupPanelModel';\nimport { GridviewPanel } from '../gridview/gridviewPanel';\nimport { DockviewGroupPanelApiImpl, } from '../api/dockviewGroupPanelApi';\nconst MINIMUM_DOCKVIEW_GROUP_PANEL_WIDTH = 100;\nconst MINIMUM_DOCKVIEW_GROUP_PANEL_HEIGHT = 100;\nexport class DockviewGroupPanel extends GridviewPanel {\n    get minimumWidth() {\n        var _a;\n        const activePanelMinimumWidth = (_a = this.activePanel) === null || _a === void 0 ? void 0 : _a.minimumWidth;\n        if (typeof activePanelMinimumWidth === 'number') {\n            return activePanelMinimumWidth;\n        }\n        return super.__minimumWidth();\n    }\n    get minimumHeight() {\n        var _a;\n        const activePanelMinimumHeight = (_a = this.activePanel) === null || _a === void 0 ? void 0 : _a.minimumHeight;\n        if (typeof activePanelMinimumHeight === 'number') {\n            return activePanelMinimumHeight;\n        }\n        return super.__minimumHeight();\n    }\n    get maximumWidth() {\n        var _a;\n        const activePanelMaximumWidth = (_a = this.activePanel) === null || _a === void 0 ? void 0 : _a.maximumWidth;\n        if (typeof activePanelMaximumWidth === 'number') {\n            return activePanelMaximumWidth;\n        }\n        return super.__maximumWidth();\n    }\n    get maximumHeight() {\n        var _a;\n        const activePanelMaximumHeight = (_a = this.activePanel) === null || _a === void 0 ? void 0 : _a.maximumHeight;\n        if (typeof activePanelMaximumHeight === 'number') {\n            return activePanelMaximumHeight;\n        }\n        return super.__maximumHeight();\n    }\n    get panels() {\n        return this._model.panels;\n    }\n    get activePanel() {\n        return this._model.activePanel;\n    }\n    get size() {\n        return this._model.size;\n    }\n    get model() {\n        return this._model;\n    }\n    get locked() {\n        return this._model.locked;\n    }\n    set locked(value) {\n        this._model.locked = value;\n    }\n    get header() {\n        return this._model.header;\n    }\n    constructor(accessor, id, options) {\n        var _a, _b, _c, _d, _e, _f;\n        super(id, 'groupview_default', {\n            minimumHeight: (_b = (_a = options.constraints) === null || _a === void 0 ? void 0 : _a.minimumHeight) !== null && _b !== void 0 ? _b : MINIMUM_DOCKVIEW_GROUP_PANEL_HEIGHT,\n            minimumWidth: (_d = (_c = options.constraints) === null || _c === void 0 ? void 0 : _c.maximumHeight) !== null && _d !== void 0 ? _d : MINIMUM_DOCKVIEW_GROUP_PANEL_WIDTH,\n            maximumHeight: (_e = options.constraints) === null || _e === void 0 ? void 0 : _e.maximumHeight,\n            maximumWidth: (_f = options.constraints) === null || _f === void 0 ? void 0 : _f.maximumWidth,\n        }, new DockviewGroupPanelApiImpl(id, accessor));\n        this.api.initialize(this); // cannot use 'this' after after 'super' call\n        this._model = new DockviewGroupPanelModel(this.element, accessor, id, options, this);\n    }\n    focus() {\n        if (!this.api.isActive) {\n            this.api.setActive();\n        }\n        super.focus();\n    }\n    initialize() {\n        this._model.initialize();\n    }\n    setActive(isActive) {\n        super.setActive(isActive);\n        this.model.setActive(isActive);\n    }\n    layout(width, height) {\n        super.layout(width, height);\n        this.model.layout(width, height);\n    }\n    getComponent() {\n        return this._model;\n    }\n    toJSON() {\n        return this.model.toJSON();\n    }\n}\n","import { Emitter } from '../events';\nimport { GridviewPanelApiImpl } from './gridviewPanelApi';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nexport class DockviewPanelApiImpl extends GridviewPanelApiImpl {\n    get location() {\n        return this.group.api.location;\n    }\n    get title() {\n        return this.panel.title;\n    }\n    get isGroupActive() {\n        return this.group.isActive;\n    }\n    get renderer() {\n        return this.panel.renderer;\n    }\n    set group(value) {\n        const oldGroup = this._group;\n        if (this._group !== value) {\n            this._group = value;\n            this._onDidGroupChange.fire({});\n            this.setupGroupEventListeners(oldGroup);\n            this._onDidLocationChange.fire({\n                location: this.group.api.location,\n            });\n        }\n    }\n    get group() {\n        return this._group;\n    }\n    get tabComponent() {\n        return this._tabComponent;\n    }\n    constructor(panel, group, accessor, component, tabComponent) {\n        super(panel.id, component);\n        this.panel = panel;\n        this.accessor = accessor;\n        this._onDidTitleChange = new Emitter();\n        this.onDidTitleChange = this._onDidTitleChange.event;\n        this._onDidActiveGroupChange = new Emitter();\n        this.onDidActiveGroupChange = this._onDidActiveGroupChange.event;\n        this._onDidGroupChange = new Emitter();\n        this.onDidGroupChange = this._onDidGroupChange.event;\n        this._onDidRendererChange = new Emitter();\n        this.onDidRendererChange = this._onDidRendererChange.event;\n        this._onDidLocationChange = new Emitter();\n        this.onDidLocationChange = this._onDidLocationChange.event;\n        this.groupEventsDisposable = new MutableDisposable();\n        this._tabComponent = tabComponent;\n        this.initialize(panel);\n        this._group = group;\n        this.setupGroupEventListeners();\n        this.addDisposables(this.groupEventsDisposable, this._onDidRendererChange, this._onDidTitleChange, this._onDidGroupChange, this._onDidActiveGroupChange, this._onDidLocationChange);\n    }\n    getWindow() {\n        return this.group.api.getWindow();\n    }\n    moveTo(options) {\n        var _a, _b;\n        this.accessor.moveGroupOrPanel({\n            from: { groupId: this._group.id, panelId: this.panel.id },\n            to: {\n                group: (_a = options.group) !== null && _a !== void 0 ? _a : this._group,\n                position: options.group\n                    ? (_b = options.position) !== null && _b !== void 0 ? _b : 'center'\n                    : 'center',\n                index: options.index,\n            },\n        });\n    }\n    setTitle(title) {\n        this.panel.setTitle(title);\n    }\n    setRenderer(renderer) {\n        this.panel.setRenderer(renderer);\n    }\n    close() {\n        this.group.model.closePanel(this.panel);\n    }\n    maximize() {\n        this.group.api.maximize();\n    }\n    isMaximized() {\n        return this.group.api.isMaximized();\n    }\n    exitMaximized() {\n        this.group.api.exitMaximized();\n    }\n    setupGroupEventListeners(previousGroup) {\n        var _a;\n        let _trackGroupActive = (_a = previousGroup === null || previousGroup === void 0 ? void 0 : previousGroup.isActive) !== null && _a !== void 0 ? _a : false; // prevent duplicate events with same state\n        this.groupEventsDisposable.value = new CompositeDisposable(this.group.api.onDidVisibilityChange((event) => {\n            const hasBecomeHidden = !event.isVisible && this.isVisible;\n            const hasBecomeVisible = event.isVisible && !this.isVisible;\n            const isActivePanel = this.group.model.isPanelActive(this.panel);\n            if (hasBecomeHidden || (hasBecomeVisible && isActivePanel)) {\n                this._onDidVisibilityChange.fire(event);\n            }\n        }), this.group.api.onDidLocationChange((event) => {\n            if (this.group !== this.panel.group) {\n                return;\n            }\n            this._onDidLocationChange.fire(event);\n        }), this.group.api.onDidActiveChange(() => {\n            if (this.group !== this.panel.group) {\n                return;\n            }\n            if (_trackGroupActive !== this.isGroupActive) {\n                _trackGroupActive = this.isGroupActive;\n                this._onDidActiveGroupChange.fire({\n                    isActive: this.isGroupActive,\n                });\n            }\n        }));\n    }\n}\n","import { DockviewPanelApiImpl, } from '../api/dockviewPanelApi';\nimport { CompositeDisposable } from '../lifecycle';\nimport { WillFocusEvent } from '../api/panelApi';\nexport class DockviewPanel extends CompositeDisposable {\n    get params() {\n        return this._params;\n    }\n    get title() {\n        return this._title;\n    }\n    get group() {\n        return this._group;\n    }\n    get renderer() {\n        var _a;\n        return (_a = this._renderer) !== null && _a !== void 0 ? _a : this.accessor.renderer;\n    }\n    get minimumWidth() {\n        return this._minimumWidth;\n    }\n    get minimumHeight() {\n        return this._minimumHeight;\n    }\n    get maximumWidth() {\n        return this._maximumWidth;\n    }\n    get maximumHeight() {\n        return this._maximumHeight;\n    }\n    constructor(id, component, tabComponent, accessor, containerApi, group, view, options) {\n        super();\n        this.id = id;\n        this.accessor = accessor;\n        this.containerApi = containerApi;\n        this.view = view;\n        this._renderer = options.renderer;\n        this._group = group;\n        this._minimumWidth = options.minimumWidth;\n        this._minimumHeight = options.minimumHeight;\n        this._maximumWidth = options.maximumWidth;\n        this._maximumHeight = options.maximumHeight;\n        this.api = new DockviewPanelApiImpl(this, this._group, accessor, component, tabComponent);\n        this.addDisposables(this.api.onActiveChange(() => {\n            accessor.setActivePanel(this);\n        }), this.api.onDidSizeChange((event) => {\n            // forward the resize event to the group since if you want to resize a panel\n            // you are actually just resizing the panels parent which is the group\n            this.group.api.setSize(event);\n        }), this.api.onDidRendererChange(() => {\n            this.group.model.rerender(this);\n        }));\n    }\n    init(params) {\n        this._params = params.params;\n        this.view.init(Object.assign(Object.assign({}, params), { api: this.api, containerApi: this.containerApi }));\n        this.setTitle(params.title);\n    }\n    focus() {\n        const event = new WillFocusEvent();\n        this.api._onWillFocus.fire(event);\n        if (event.defaultPrevented) {\n            return;\n        }\n        if (!this.api.isActive) {\n            this.api.setActive();\n        }\n    }\n    toJSON() {\n        return {\n            id: this.id,\n            contentComponent: this.view.contentComponent,\n            tabComponent: this.view.tabComponent,\n            params: Object.keys(this._params || {}).length > 0\n                ? this._params\n                : undefined,\n            title: this.title,\n            renderer: this._renderer,\n            minimumHeight: this._minimumHeight,\n            maximumHeight: this._maximumHeight,\n            minimumWidth: this._minimumWidth,\n            maximumWidth: this._maximumWidth,\n        };\n    }\n    setTitle(title) {\n        const didTitleChange = title !== this.title;\n        if (didTitleChange) {\n            this._title = title;\n            this.api._onDidTitleChange.fire({ title });\n        }\n    }\n    setRenderer(renderer) {\n        const didChange = renderer !== this.renderer;\n        if (didChange) {\n            this._renderer = renderer;\n            this.api._onDidRendererChange.fire({\n                renderer: renderer,\n            });\n        }\n    }\n    update(event) {\n        var _a;\n        // merge the new parameters with the existing parameters\n        this._params = Object.assign(Object.assign({}, ((_a = this._params) !== null && _a !== void 0 ? _a : {})), event.params);\n        /**\n         * delete new keys that have a value of undefined,\n         * allow values of null\n         */\n        for (const key of Object.keys(event.params)) {\n            if (event.params[key] === undefined) {\n                delete this._params[key];\n            }\n        }\n        // update the view with the updated props\n        this.view.update({\n            params: this._params,\n        });\n    }\n    updateParentGroup(group, options) {\n        this._group = group;\n        this.api.group = this._group;\n        const isPanelVisible = this._group.model.isPanelActive(this);\n        const isActive = this.group.api.isActive && isPanelVisible;\n        if (!(options === null || options === void 0 ? void 0 : options.skipSetActive)) {\n            if (this.api.isActive !== isActive) {\n                this.api._onDidActiveChange.fire({\n                    isActive: this.group.api.isActive && isPanelVisible,\n                });\n            }\n        }\n        if (this.api.isVisible !== isPanelVisible) {\n            this.api._onDidVisibilityChange.fire({\n                isVisible: isPanelVisible,\n            });\n        }\n    }\n    runEvents() {\n        const isPanelVisible = this._group.model.isPanelActive(this);\n        const isActive = this.group.api.isActive && isPanelVisible;\n        if (this.api.isActive !== isActive) {\n            this.api._onDidActiveChange.fire({\n                isActive: this.group.api.isActive && isPanelVisible,\n            });\n        }\n        if (this.api.isVisible !== isPanelVisible) {\n            this.api._onDidVisibilityChange.fire({\n                isVisible: isPanelVisible,\n            });\n        }\n    }\n    layout(width, height) {\n        // TODO: Can we somehow do height without header height or indicate what the header height is?\n        this.api._onDidDimensionChange.fire({\n            width,\n            height: height,\n        });\n        this.view.layout(width, height);\n    }\n    dispose() {\n        this.api.dispose();\n        this.view.dispose();\n    }\n}\n","const createSvgElementFromPath = (params) => {\n    const svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n    svg.setAttributeNS(null, 'height', params.height);\n    svg.setAttributeNS(null, 'width', params.width);\n    svg.setAttributeNS(null, 'viewBox', params.viewbox);\n    svg.setAttributeNS(null, 'aria-hidden', 'false');\n    svg.setAttributeNS(null, 'focusable', 'false');\n    svg.classList.add('dv-svg');\n    const path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n    path.setAttributeNS(null, 'd', params.path);\n    svg.appendChild(path);\n    return svg;\n};\nexport const createCloseButton = () => createSvgElementFromPath({\n    width: '11',\n    height: '11',\n    viewbox: '0 0 28 28',\n    path: 'M2.1 27.3L0 25.2L11.55 13.65L0 2.1L2.1 0L13.65 11.55L25.2 0L27.3 2.1L15.75 13.65L27.3 25.2L25.2 27.3L13.65 15.75L2.1 27.3Z',\n});\nexport const createExpandMoreButton = () => createSvgElementFromPath({\n    width: '11',\n    height: '11',\n    viewbox: '0 0 24 15',\n    path: 'M12 14.15L0 2.15L2.15 0L12 9.9L21.85 0.0499992L24 2.2L12 14.15Z',\n});\nexport const createChevronRightButton = () => createSvgElementFromPath({\n    width: '11',\n    height: '11',\n    viewbox: '0 0 15 25',\n    path: 'M2.15 24.1L0 21.95L9.9 12.05L0 2.15L2.15 0L14.2 12.05L2.15 24.1Z',\n});\n","import { CompositeDisposable } from '../../../lifecycle';\nimport { addDisposableListener } from '../../../events';\nimport { createCloseButton } from '../../../svg';\nexport class DefaultTab extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor() {\n        super();\n        this._element = document.createElement('div');\n        this._element.className = 'dv-default-tab';\n        this._content = document.createElement('div');\n        this._content.className = 'dv-default-tab-content';\n        this.action = document.createElement('div');\n        this.action.className = 'dv-default-tab-action';\n        this.action.appendChild(createCloseButton());\n        this._element.appendChild(this._content);\n        this._element.appendChild(this.action);\n        this.addDisposables(addDisposableListener(this.action, 'pointerdown', (ev) => {\n            ev.preventDefault();\n        }));\n        this.render();\n    }\n    init(params) {\n        this._title = params.title;\n        this.addDisposables(params.api.onDidTitleChange((event) => {\n            this._title = event.title;\n            this.render();\n        }), addDisposableListener(this.action, 'pointerdown', (ev) => {\n            ev.preventDefault();\n        }), addDisposableListener(this.action, 'click', (ev) => {\n            if (ev.defaultPrevented) {\n                return;\n            }\n            ev.preventDefault();\n            params.api.close();\n        }));\n        this.render();\n    }\n    render() {\n        var _a;\n        if (this._content.textContent !== this._title) {\n            this._content.textContent = (_a = this._title) !== null && _a !== void 0 ? _a : '';\n        }\n    }\n}\n","import { DefaultTab } from './components/tab/defaultTab';\nexport class DockviewPanelModel {\n    get content() {\n        return this._content;\n    }\n    get tab() {\n        return this._tab;\n    }\n    constructor(accessor, id, contentComponent, tabComponent) {\n        this.accessor = accessor;\n        this.id = id;\n        this.contentComponent = contentComponent;\n        this.tabComponent = tabComponent;\n        this._content = this.createContentComponent(this.id, contentComponent);\n        this._tab = this.createTabComponent(this.id, tabComponent);\n    }\n    init(params) {\n        this.content.init(params);\n        this.tab.init(params);\n    }\n    updateParentGroup(_group, _isPanelVisible) {\n        // noop\n    }\n    layout(width, height) {\n        var _a, _b;\n        (_b = (_a = this.content).layout) === null || _b === void 0 ? void 0 : _b.call(_a, width, height);\n    }\n    update(event) {\n        var _a, _b, _c, _d;\n        (_b = (_a = this.content).update) === null || _b === void 0 ? void 0 : _b.call(_a, event);\n        (_d = (_c = this.tab).update) === null || _d === void 0 ? void 0 : _d.call(_c, event);\n    }\n    dispose() {\n        var _a, _b, _c, _d;\n        (_b = (_a = this.content).dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n        (_d = (_c = this.tab).dispose) === null || _d === void 0 ? void 0 : _d.call(_c);\n    }\n    createContentComponent(id, componentName) {\n        return this.accessor.options.createComponent({\n            id,\n            name: componentName,\n        });\n    }\n    createTabComponent(id, componentName) {\n        const name = componentName !== null && componentName !== void 0 ? componentName : this.accessor.options.defaultTabComponent;\n        if (name) {\n            if (this.accessor.options.createTabComponent) {\n                const component = this.accessor.options.createTabComponent({\n                    id,\n                    name,\n                });\n                if (component) {\n                    return component;\n                }\n                else {\n                    return new DefaultTab();\n                }\n            }\n            console.warn(`dockview: tabComponent '${componentName}' was not found. falling back to the default tab.`);\n        }\n        return new DefaultTab();\n    }\n}\n","import { DockviewPanel } from './dockviewPanel';\nimport { DockviewPanelModel } from './dockviewPanelModel';\nimport { DockviewApi } from '../api/component.api';\nexport class DefaultDockviewDeserialzier {\n    constructor(accessor) {\n        this.accessor = accessor;\n    }\n    fromJSON(panelData, group) {\n        var _a, _b;\n        const panelId = panelData.id;\n        const params = panelData.params;\n        const title = panelData.title;\n        const viewData = panelData.view;\n        const contentComponent = viewData\n            ? viewData.content.id\n            : (_a = panelData.contentComponent) !== null && _a !== void 0 ? _a : 'unknown';\n        const tabComponent = viewData\n            ? (_b = viewData.tab) === null || _b === void 0 ? void 0 : _b.id\n            : panelData.tabComponent;\n        const view = new DockviewPanelModel(this.accessor, panelId, contentComponent, tabComponent);\n        const panel = new DockviewPanel(panelId, contentComponent, tabComponent, this.accessor, new DockviewApi(this.accessor), group, view, {\n            renderer: panelData.renderer,\n            minimumWidth: panelData.minimumWidth,\n            minimumHeight: panelData.minimumHeight,\n            maximumWidth: panelData.maximumWidth,\n            maximumHeight: panelData.maximumHeight,\n        });\n        panel.init({\n            title: title !== null && title !== void 0 ? title : panelId,\n            params: params !== null && params !== void 0 ? params : {},\n        });\n        return panel;\n    }\n}\n","import { CompositeDisposable } from '../../../lifecycle';\nexport class Watermark extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor() {\n        super();\n        this._element = document.createElement('div');\n        this._element.className = 'dv-watermark';\n    }\n    init(_params) {\n        // noop\n    }\n}\n","import { disableIframePointEvents, quasiDefaultPrevented, toggleClass, } from '../dom';\nimport { Emitter, addDisposableListener, addDisposableWindowListener, } from '../events';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nimport { clamp } from '../math';\nclass AriaLevelTracker {\n    constructor() {\n        this._orderedList = [];\n    }\n    push(element) {\n        this._orderedList = [\n            ...this._orderedList.filter((item) => item !== element),\n            element,\n        ];\n        this.update();\n    }\n    destroy(element) {\n        this._orderedList = this._orderedList.filter((item) => item !== element);\n        this.update();\n    }\n    update() {\n        for (let i = 0; i < this._orderedList.length; i++) {\n            this._orderedList[i].setAttribute('aria-level', `${i}`);\n            this._orderedList[i].style.zIndex = `calc(var(--dv-overlay-z-index, 999) + ${i * 2})`;\n        }\n    }\n}\nconst arialLevelTracker = new AriaLevelTracker();\nexport class Overlay extends CompositeDisposable {\n    set minimumInViewportWidth(value) {\n        this.options.minimumInViewportWidth = value;\n    }\n    set minimumInViewportHeight(value) {\n        this.options.minimumInViewportHeight = value;\n    }\n    get element() {\n        return this._element;\n    }\n    get isVisible() {\n        return this._isVisible;\n    }\n    constructor(options) {\n        super();\n        this.options = options;\n        this._element = document.createElement('div');\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._onDidChangeEnd = new Emitter();\n        this.onDidChangeEnd = this._onDidChangeEnd.event;\n        this.addDisposables(this._onDidChange, this._onDidChangeEnd);\n        this._element.className = 'dv-resize-container';\n        this._isVisible = true;\n        this.setupResize('top');\n        this.setupResize('bottom');\n        this.setupResize('left');\n        this.setupResize('right');\n        this.setupResize('topleft');\n        this.setupResize('topright');\n        this.setupResize('bottomleft');\n        this.setupResize('bottomright');\n        this._element.appendChild(this.options.content);\n        this.options.container.appendChild(this._element);\n        // if input bad resize within acceptable boundaries\n        this.setBounds(Object.assign(Object.assign(Object.assign(Object.assign({ height: this.options.height, width: this.options.width }, ('top' in this.options && { top: this.options.top })), ('bottom' in this.options && { bottom: this.options.bottom })), ('left' in this.options && { left: this.options.left })), ('right' in this.options && { right: this.options.right })));\n        arialLevelTracker.push(this._element);\n    }\n    setVisible(isVisible) {\n        if (isVisible === this.isVisible) {\n            return;\n        }\n        this._isVisible = isVisible;\n        toggleClass(this.element, 'dv-hidden', !this.isVisible);\n    }\n    bringToFront() {\n        arialLevelTracker.push(this._element);\n    }\n    setBounds(bounds = {}) {\n        if (typeof bounds.height === 'number') {\n            this._element.style.height = `${bounds.height}px`;\n        }\n        if (typeof bounds.width === 'number') {\n            this._element.style.width = `${bounds.width}px`;\n        }\n        if ('top' in bounds && typeof bounds.top === 'number') {\n            this._element.style.top = `${bounds.top}px`;\n            this._element.style.bottom = 'auto';\n            this.verticalAlignment = 'top';\n        }\n        if ('bottom' in bounds && typeof bounds.bottom === 'number') {\n            this._element.style.bottom = `${bounds.bottom}px`;\n            this._element.style.top = 'auto';\n            this.verticalAlignment = 'bottom';\n        }\n        if ('left' in bounds && typeof bounds.left === 'number') {\n            this._element.style.left = `${bounds.left}px`;\n            this._element.style.right = 'auto';\n            this.horiziontalAlignment = 'left';\n        }\n        if ('right' in bounds && typeof bounds.right === 'number') {\n            this._element.style.right = `${bounds.right}px`;\n            this._element.style.left = 'auto';\n            this.horiziontalAlignment = 'right';\n        }\n        const containerRect = this.options.container.getBoundingClientRect();\n        const overlayRect = this._element.getBoundingClientRect();\n        // region: ensure bounds within allowable limits\n        // a minimum width of minimumViewportWidth must be inside the viewport\n        const xOffset = Math.max(0, this.getMinimumWidth(overlayRect.width));\n        // a minimum height of minimumViewportHeight must be inside the viewport\n        const yOffset = Math.max(0, this.getMinimumHeight(overlayRect.height));\n        if (this.verticalAlignment === 'top') {\n            const top = clamp(overlayRect.top - containerRect.top, -yOffset, Math.max(0, containerRect.height - overlayRect.height + yOffset));\n            this._element.style.top = `${top}px`;\n            this._element.style.bottom = 'auto';\n        }\n        if (this.verticalAlignment === 'bottom') {\n            const bottom = clamp(containerRect.bottom - overlayRect.bottom, -yOffset, Math.max(0, containerRect.height - overlayRect.height + yOffset));\n            this._element.style.bottom = `${bottom}px`;\n            this._element.style.top = 'auto';\n        }\n        if (this.horiziontalAlignment === 'left') {\n            const left = clamp(overlayRect.left - containerRect.left, -xOffset, Math.max(0, containerRect.width - overlayRect.width + xOffset));\n            this._element.style.left = `${left}px`;\n            this._element.style.right = 'auto';\n        }\n        if (this.horiziontalAlignment === 'right') {\n            const right = clamp(containerRect.right - overlayRect.right, -xOffset, Math.max(0, containerRect.width - overlayRect.width + xOffset));\n            this._element.style.right = `${right}px`;\n            this._element.style.left = 'auto';\n        }\n        this._onDidChange.fire();\n    }\n    toJSON() {\n        const container = this.options.container.getBoundingClientRect();\n        const element = this._element.getBoundingClientRect();\n        const result = {};\n        if (this.verticalAlignment === 'top') {\n            result.top = parseFloat(this._element.style.top);\n        }\n        else if (this.verticalAlignment === 'bottom') {\n            result.bottom = parseFloat(this._element.style.bottom);\n        }\n        else {\n            result.top = element.top - container.top;\n        }\n        if (this.horiziontalAlignment === 'left') {\n            result.left = parseFloat(this._element.style.left);\n        }\n        else if (this.horiziontalAlignment === 'right') {\n            result.right = parseFloat(this._element.style.right);\n        }\n        else {\n            result.left = element.left - container.left;\n        }\n        result.width = element.width;\n        result.height = element.height;\n        return result;\n    }\n    setupDrag(dragTarget, options = { inDragMode: false }) {\n        const move = new MutableDisposable();\n        const track = () => {\n            let offset = null;\n            const iframes = disableIframePointEvents();\n            move.value = new CompositeDisposable({\n                dispose: () => {\n                    iframes.release();\n                },\n            }, addDisposableWindowListener(window, 'pointermove', (e) => {\n                const containerRect = this.options.container.getBoundingClientRect();\n                const x = e.clientX - containerRect.left;\n                const y = e.clientY - containerRect.top;\n                toggleClass(this._element, 'dv-resize-container-dragging', true);\n                const overlayRect = this._element.getBoundingClientRect();\n                if (offset === null) {\n                    offset = {\n                        x: e.clientX - overlayRect.left,\n                        y: e.clientY - overlayRect.top,\n                    };\n                }\n                const xOffset = Math.max(0, this.getMinimumWidth(overlayRect.width));\n                const yOffset = Math.max(0, this.getMinimumHeight(overlayRect.height));\n                const top = clamp(y - offset.y, -yOffset, Math.max(0, containerRect.height - overlayRect.height + yOffset));\n                const bottom = clamp(offset.y -\n                    y +\n                    containerRect.height -\n                    overlayRect.height, -yOffset, Math.max(0, containerRect.height - overlayRect.height + yOffset));\n                const left = clamp(x - offset.x, -xOffset, Math.max(0, containerRect.width - overlayRect.width + xOffset));\n                const right = clamp(offset.x - x + containerRect.width - overlayRect.width, -xOffset, Math.max(0, containerRect.width - overlayRect.width + xOffset));\n                const bounds = {};\n                // Anchor to top or to bottom depending on which one is closer\n                if (top <= bottom) {\n                    bounds.top = top;\n                }\n                else {\n                    bounds.bottom = bottom;\n                }\n                // Anchor to left or to right depending on which one is closer\n                if (left <= right) {\n                    bounds.left = left;\n                }\n                else {\n                    bounds.right = right;\n                }\n                this.setBounds(bounds);\n            }), addDisposableWindowListener(window, 'pointerup', () => {\n                toggleClass(this._element, 'dv-resize-container-dragging', false);\n                move.dispose();\n                this._onDidChangeEnd.fire();\n            }));\n        };\n        this.addDisposables(move, addDisposableListener(dragTarget, 'pointerdown', (event) => {\n            if (event.defaultPrevented) {\n                event.preventDefault();\n                return;\n            }\n            // if somebody has marked this event then treat as a defaultPrevented\n            // without actually calling event.preventDefault()\n            if (quasiDefaultPrevented(event)) {\n                return;\n            }\n            track();\n        }), addDisposableListener(this.options.content, 'pointerdown', (event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            // if somebody has marked this event then treat as a defaultPrevented\n            // without actually calling event.preventDefault()\n            if (quasiDefaultPrevented(event)) {\n                return;\n            }\n            if (event.shiftKey) {\n                track();\n            }\n        }), addDisposableListener(this.options.content, 'pointerdown', () => {\n            arialLevelTracker.push(this._element);\n        }, true));\n        if (options.inDragMode) {\n            track();\n        }\n    }\n    setupResize(direction) {\n        const resizeHandleElement = document.createElement('div');\n        resizeHandleElement.className = `dv-resize-handle-${direction}`;\n        this._element.appendChild(resizeHandleElement);\n        const move = new MutableDisposable();\n        this.addDisposables(move, addDisposableListener(resizeHandleElement, 'pointerdown', (e) => {\n            e.preventDefault();\n            let startPosition = null;\n            const iframes = disableIframePointEvents();\n            move.value = new CompositeDisposable(addDisposableWindowListener(window, 'pointermove', (e) => {\n                const containerRect = this.options.container.getBoundingClientRect();\n                const overlayRect = this._element.getBoundingClientRect();\n                const y = e.clientY - containerRect.top;\n                const x = e.clientX - containerRect.left;\n                if (startPosition === null) {\n                    // record the initial dimensions since as all subsequence moves are relative to this\n                    startPosition = {\n                        originalY: y,\n                        originalHeight: overlayRect.height,\n                        originalX: x,\n                        originalWidth: overlayRect.width,\n                    };\n                }\n                let top = undefined;\n                let bottom = undefined;\n                let height = undefined;\n                let left = undefined;\n                let right = undefined;\n                let width = undefined;\n                const moveTop = () => {\n                    top = clamp(y, -Number.MAX_VALUE, startPosition.originalY +\n                        startPosition.originalHeight >\n                        containerRect.height\n                        ? this.getMinimumHeight(containerRect.height)\n                        : Math.max(0, startPosition.originalY +\n                            startPosition.originalHeight -\n                            Overlay.MINIMUM_HEIGHT));\n                    height =\n                        startPosition.originalY +\n                            startPosition.originalHeight -\n                            top;\n                    bottom = containerRect.height - top - height;\n                };\n                const moveBottom = () => {\n                    top =\n                        startPosition.originalY -\n                            startPosition.originalHeight;\n                    height = clamp(y - top, top < 0 &&\n                        typeof this.options\n                            .minimumInViewportHeight === 'number'\n                        ? -top +\n                            this.options.minimumInViewportHeight\n                        : Overlay.MINIMUM_HEIGHT, Number.MAX_VALUE);\n                    bottom = containerRect.height - top - height;\n                };\n                const moveLeft = () => {\n                    left = clamp(x, -Number.MAX_VALUE, startPosition.originalX +\n                        startPosition.originalWidth >\n                        containerRect.width\n                        ? this.getMinimumWidth(containerRect.width)\n                        : Math.max(0, startPosition.originalX +\n                            startPosition.originalWidth -\n                            Overlay.MINIMUM_WIDTH));\n                    width =\n                        startPosition.originalX +\n                            startPosition.originalWidth -\n                            left;\n                    right = containerRect.width - left - width;\n                };\n                const moveRight = () => {\n                    left =\n                        startPosition.originalX -\n                            startPosition.originalWidth;\n                    width = clamp(x - left, left < 0 &&\n                        typeof this.options\n                            .minimumInViewportWidth === 'number'\n                        ? -left +\n                            this.options.minimumInViewportWidth\n                        : Overlay.MINIMUM_WIDTH, Number.MAX_VALUE);\n                    right = containerRect.width - left - width;\n                };\n                switch (direction) {\n                    case 'top':\n                        moveTop();\n                        break;\n                    case 'bottom':\n                        moveBottom();\n                        break;\n                    case 'left':\n                        moveLeft();\n                        break;\n                    case 'right':\n                        moveRight();\n                        break;\n                    case 'topleft':\n                        moveTop();\n                        moveLeft();\n                        break;\n                    case 'topright':\n                        moveTop();\n                        moveRight();\n                        break;\n                    case 'bottomleft':\n                        moveBottom();\n                        moveLeft();\n                        break;\n                    case 'bottomright':\n                        moveBottom();\n                        moveRight();\n                        break;\n                }\n                const bounds = {};\n                // Anchor to top or to bottom depending on which one is closer\n                if (top <= bottom) {\n                    bounds.top = top;\n                }\n                else {\n                    bounds.bottom = bottom;\n                }\n                // Anchor to left or to right depending on which one is closer\n                if (left <= right) {\n                    bounds.left = left;\n                }\n                else {\n                    bounds.right = right;\n                }\n                bounds.height = height;\n                bounds.width = width;\n                this.setBounds(bounds);\n            }), {\n                dispose: () => {\n                    iframes.release();\n                },\n            }, addDisposableWindowListener(window, 'pointerup', () => {\n                move.dispose();\n                this._onDidChangeEnd.fire();\n            }));\n        }));\n    }\n    getMinimumWidth(width) {\n        if (typeof this.options.minimumInViewportWidth === 'number') {\n            return width - this.options.minimumInViewportWidth;\n        }\n        return 0;\n    }\n    getMinimumHeight(height) {\n        if (typeof this.options.minimumInViewportHeight === 'number') {\n            return height - this.options.minimumInViewportHeight;\n        }\n        return 0;\n    }\n    dispose() {\n        arialLevelTracker.destroy(this._element);\n        this._element.remove();\n        super.dispose();\n    }\n}\nOverlay.MINIMUM_HEIGHT = 20;\nOverlay.MINIMUM_WIDTH = 20;\n","import { CompositeDisposable } from '../lifecycle';\nexport class DockviewFloatingGroupPanel extends CompositeDisposable {\n    constructor(group, overlay) {\n        super();\n        this.group = group;\n        this.overlay = overlay;\n        this.addDisposables(overlay);\n    }\n    position(bounds) {\n        this.overlay.setBounds(bounds);\n    }\n}\n","export const DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE = 100;\nexport const DEFAULT_FLOATING_GROUP_POSITION = { left: 100, top: 100, width: 300, height: 300 };\n","import { DragAndDropObserver } from '../dnd/dnd';\nimport { getDomNodePagePosition, toggleClass } from '../dom';\nimport { CompositeDisposable, Disposable, MutableDisposable, } from '../lifecycle';\nfunction createFocusableElement() {\n    const element = document.createElement('div');\n    element.tabIndex = -1;\n    return element;\n}\nexport class OverlayRenderContainer extends CompositeDisposable {\n    constructor(element, accessor) {\n        super();\n        this.element = element;\n        this.accessor = accessor;\n        this.map = {};\n        this._disposed = false;\n        this.addDisposables(Disposable.from(() => {\n            for (const value of Object.values(this.map)) {\n                value.disposable.dispose();\n                value.destroy.dispose();\n            }\n            this._disposed = true;\n        }));\n    }\n    detatch(panel) {\n        if (this.map[panel.api.id]) {\n            const { disposable, destroy } = this.map[panel.api.id];\n            disposable.dispose();\n            destroy.dispose();\n            delete this.map[panel.api.id];\n            return true;\n        }\n        return false;\n    }\n    attach(options) {\n        const { panel, referenceContainer } = options;\n        if (!this.map[panel.api.id]) {\n            const element = createFocusableElement();\n            element.className = 'dv-render-overlay';\n            this.map[panel.api.id] = {\n                panel,\n                disposable: Disposable.NONE,\n                destroy: Disposable.NONE,\n                element,\n            };\n        }\n        const focusContainer = this.map[panel.api.id].element;\n        if (panel.view.content.element.parentElement !== focusContainer) {\n            focusContainer.appendChild(panel.view.content.element);\n        }\n        if (focusContainer.parentElement !== this.element) {\n            this.element.appendChild(focusContainer);\n        }\n        const resize = () => {\n            // TODO propagate position to avoid getDomNodePagePosition calls, possible performance bottleneck?\n            const box = getDomNodePagePosition(referenceContainer.element);\n            const box2 = getDomNodePagePosition(this.element);\n            focusContainer.style.left = `${box.left - box2.left}px`;\n            focusContainer.style.top = `${box.top - box2.top}px`;\n            focusContainer.style.width = `${box.width}px`;\n            focusContainer.style.height = `${box.height}px`;\n            toggleClass(focusContainer, 'dv-render-overlay-float', panel.group.api.location.type === 'floating');\n        };\n        const visibilityChanged = () => {\n            if (panel.api.isVisible) {\n                resize();\n            }\n            focusContainer.style.display = panel.api.isVisible ? '' : 'none';\n        };\n        const observerDisposable = new MutableDisposable();\n        const correctLayerPosition = () => {\n            if (panel.api.location.type === 'floating') {\n                queueMicrotask(() => {\n                    const floatingGroup = this.accessor.floatingGroups.find((group) => group.group === panel.api.group);\n                    if (!floatingGroup) {\n                        return;\n                    }\n                    const element = floatingGroup.overlay.element;\n                    const update = () => {\n                        const level = Number(element.getAttribute('aria-level'));\n                        focusContainer.style.zIndex = `calc(var(--dv-overlay-z-index, 999) + ${level * 2 + 1})`;\n                    };\n                    const observer = new MutationObserver(() => {\n                        update();\n                    });\n                    observerDisposable.value = Disposable.from(() => observer.disconnect());\n                    observer.observe(element, {\n                        attributeFilter: ['aria-level'],\n                        attributes: true,\n                    });\n                    update();\n                });\n            }\n            else {\n                focusContainer.style.zIndex = ''; // reset the z-index, perhaps CSS will take over here\n            }\n        };\n        const disposable = new CompositeDisposable(observerDisposable, \n        /**\n         * since container is positioned absoutely we must explicitly forward\n         * the dnd events for the expect behaviours to continue to occur in terms of dnd\n         *\n         * the dnd observer does not need to be conditional on whether the panel is visible since\n         * non-visible panels are 'display: none' and in such case the dnd observer will not fire.\n         */\n        new DragAndDropObserver(focusContainer, {\n            onDragEnd: (e) => {\n                referenceContainer.dropTarget.dnd.onDragEnd(e);\n            },\n            onDragEnter: (e) => {\n                referenceContainer.dropTarget.dnd.onDragEnter(e);\n            },\n            onDragLeave: (e) => {\n                referenceContainer.dropTarget.dnd.onDragLeave(e);\n            },\n            onDrop: (e) => {\n                referenceContainer.dropTarget.dnd.onDrop(e);\n            },\n            onDragOver: (e) => {\n                referenceContainer.dropTarget.dnd.onDragOver(e);\n            },\n        }), panel.api.onDidVisibilityChange(() => {\n            /**\n             * Control the visibility of the content, however even when not visible (display: none)\n             * the content is still maintained within the DOM hence DOM specific attributes\n             * such as scroll position are maintained when next made visible.\n             */\n            visibilityChanged();\n        }), panel.api.onDidDimensionsChange(() => {\n            if (!panel.api.isVisible) {\n                return;\n            }\n            resize();\n        }), panel.api.onDidLocationChange(() => {\n            correctLayerPosition();\n        }));\n        this.map[panel.api.id].destroy = Disposable.from(() => {\n            var _a;\n            if (panel.view.content.element.parentElement === focusContainer) {\n                focusContainer.removeChild(panel.view.content.element);\n            }\n            (_a = focusContainer.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(focusContainer);\n        });\n        correctLayerPosition();\n        queueMicrotask(() => {\n            if (this.isDisposed) {\n                return;\n            }\n            /**\n             * wait until everything has finished in the current stack-frame call before\n             * calling the first resize as other size-altering events may still occur before\n             * the end of the stack-frame.\n             */\n            visibilityChanged();\n        });\n        // dispose of logic asoccciated with previous reference-container\n        this.map[panel.api.id].disposable.dispose();\n        // and reset the disposable to the active reference-container\n        this.map[panel.api.id].disposable = disposable;\n        return focusContainer;\n    }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { addStyles } from './dom';\nimport { Emitter, addDisposableWindowListener } from './events';\nimport { CompositeDisposable, Disposable } from './lifecycle';\nexport class PopoutWindow extends CompositeDisposable {\n    get window() {\n        var _a, _b;\n        return (_b = (_a = this._window) === null || _a === void 0 ? void 0 : _a.value) !== null && _b !== void 0 ? _b : null;\n    }\n    constructor(target, className, options) {\n        super();\n        this.target = target;\n        this.className = className;\n        this.options = options;\n        this._onWillClose = new Emitter();\n        this.onWillClose = this._onWillClose.event;\n        this._onDidClose = new Emitter();\n        this.onDidClose = this._onDidClose.event;\n        this._window = null;\n        this.addDisposables(this._onWillClose, this._onDidClose, {\n            dispose: () => {\n                this.close();\n            },\n        });\n    }\n    dimensions() {\n        if (!this._window) {\n            return null;\n        }\n        const left = this._window.value.screenX;\n        const top = this._window.value.screenY;\n        const width = this._window.value.innerWidth;\n        const height = this._window.value.innerHeight;\n        return { top, left, width, height };\n    }\n    close() {\n        var _a, _b;\n        if (this._window) {\n            this._onWillClose.fire();\n            (_b = (_a = this.options).onWillClose) === null || _b === void 0 ? void 0 : _b.call(_a, {\n                id: this.target,\n                window: this._window.value,\n            });\n            this._window.disposable.dispose();\n            this._window = null;\n            this._onDidClose.fire();\n        }\n    }\n    open() {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this._window) {\n                throw new Error('instance of popout window is already open');\n            }\n            const url = `${this.options.url}`;\n            const features = Object.entries({\n                top: this.options.top,\n                left: this.options.left,\n                width: this.options.width,\n                height: this.options.height,\n            })\n                .map(([key, value]) => `${key}=${value}`)\n                .join(',');\n            /**\n             * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/open\n             */\n            const externalWindow = window.open(url, this.target, features);\n            if (!externalWindow) {\n                /**\n                 * Popup blocked\n                 */\n                return null;\n            }\n            const disposable = new CompositeDisposable();\n            this._window = { value: externalWindow, disposable };\n            disposable.addDisposables(Disposable.from(() => {\n                externalWindow.close();\n            }), addDisposableWindowListener(window, 'beforeunload', () => {\n                /**\n                 * before the main window closes we should close this popup too\n                 * to be good citizens\n                 *\n                 * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/beforeunload_event\n                 */\n                this.close();\n            }));\n            const container = this.createPopoutWindowContainer();\n            if (this.className) {\n                container.classList.add(this.className);\n            }\n            (_b = (_a = this.options).onDidOpen) === null || _b === void 0 ? void 0 : _b.call(_a, {\n                id: this.target,\n                window: externalWindow,\n            });\n            return new Promise((resolve, reject) => {\n                externalWindow.addEventListener('unload', (e) => {\n                    // if page fails to load before unloading\n                    // this.close();\n                });\n                externalWindow.addEventListener('load', () => {\n                    /**\n                     * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/load_event\n                     */\n                    try {\n                        const externalDocument = externalWindow.document;\n                        externalDocument.title = document.title;\n                        externalDocument.body.appendChild(container);\n                        addStyles(externalDocument, window.document.styleSheets);\n                        /**\n                         * beforeunload must be registered after load for reasons I could not determine\n                         * otherwise the beforeunload event will not fire when the window is closed\n                         */\n                        addDisposableWindowListener(externalWindow, 'beforeunload', () => {\n                            /**\n                             * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/beforeunload_event\n                             */\n                            this.close();\n                        });\n                        resolve(container);\n                    }\n                    catch (err) {\n                        // only except this is the DOM isn't setup. e.g. in a in correctly configured test\n                        reject(err);\n                    }\n                });\n            });\n        });\n    }\n    createPopoutWindowContainer() {\n        const el = document.createElement('div');\n        el.classList.add('dv-popout-window');\n        el.id = 'dv-popout-window';\n        el.style.position = 'absolute';\n        el.style.width = '100%';\n        el.style.height = '100%';\n        el.style.top = '0px';\n        el.style.left = '0px';\n        return el;\n    }\n}\n","import { CompositeDisposable } from '../lifecycle';\nexport class StrictEventsSequencing extends CompositeDisposable {\n    constructor(accessor) {\n        super();\n        this.accessor = accessor;\n        this.init();\n    }\n    init() {\n        const panels = new Set();\n        const groups = new Set();\n        this.addDisposables(this.accessor.onDidAddPanel((panel) => {\n            if (panels.has(panel.api.id)) {\n                throw new Error(`dockview: Invalid event sequence. [onDidAddPanel] called for panel ${panel.api.id} but panel already exists`);\n            }\n            else {\n                panels.add(panel.api.id);\n            }\n        }), this.accessor.onDidRemovePanel((panel) => {\n            if (!panels.has(panel.api.id)) {\n                throw new Error(`dockview: Invalid event sequence. [onDidRemovePanel] called for panel ${panel.api.id} but panel does not exists`);\n            }\n            else {\n                panels.delete(panel.api.id);\n            }\n        }), this.accessor.onDidAddGroup((group) => {\n            if (groups.has(group.api.id)) {\n                throw new Error(`dockview: Invalid event sequence. [onDidAddGroup] called for group ${group.api.id} but group already exists`);\n            }\n            else {\n                groups.add(group.api.id);\n            }\n        }), this.accessor.onDidRemoveGroup((group) => {\n            if (!groups.has(group.api.id)) {\n                throw new Error(`dockview: Invalid event sequence. [onDidRemoveGroup] called for group ${group.api.id} but group does not exists`);\n            }\n            else {\n                groups.delete(group.api.id);\n            }\n        }));\n    }\n}\n","import { getRelativeLocation, getGridLocation, orthogonal, } from '../gridview/gridview';\nimport { directionToPosition, Droptarget, } from '../dnd/droptarget';\nimport { tail, sequenceEquals, remove } from '../array';\nimport { DockviewPanel } from './dockviewPanel';\nimport { CompositeDisposable, Disposable } from '../lifecycle';\nimport { Event, Emitter, addDisposableWindowListener } from '../events';\nimport { Watermark } from './components/watermark/watermark';\nimport { sequentialNumberGenerator } from '../math';\nimport { DefaultDockviewDeserialzier } from './deserializer';\nimport { DockviewUnhandledDragOverEvent, isGroupOptionsWithGroup, isGroupOptionsWithPanel, isPanelOptionsWithGroup, isPanelOptionsWithPanel, } from './options';\nimport { BaseGrid, toTarget, } from '../gridview/baseComponentGridview';\nimport { DockviewApi } from '../api/component.api';\nimport { Orientation } from '../splitview/splitview';\nimport { DockviewDidDropEvent, DockviewWillDropEvent, WillShowOverlayLocationEvent, } from './dockviewGroupPanelModel';\nimport { DockviewGroupPanel } from './dockviewGroupPanel';\nimport { DockviewPanelModel } from './dockviewPanelModel';\nimport { getPanelData } from '../dnd/dataTransfer';\nimport { Overlay } from '../overlay/overlay';\nimport { addTestId, getDockviewTheme, toggleClass, watchElementResize, } from '../dom';\nimport { DockviewFloatingGroupPanel } from './dockviewFloatingGroupPanel';\nimport { DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE, DEFAULT_FLOATING_GROUP_POSITION, } from '../constants';\nimport { OverlayRenderContainer, } from '../overlay/overlayRenderContainer';\nimport { PopoutWindow } from '../popoutWindow';\nimport { StrictEventsSequencing } from './strictEventsSequencing';\nconst DEFAULT_ROOT_OVERLAY_MODEL = {\n    activationSize: { type: 'pixels', value: 10 },\n    size: { type: 'pixels', value: 20 },\n};\nfunction moveGroupWithoutDestroying(options) {\n    const activePanel = options.from.activePanel;\n    const panels = [...options.from.panels].map((panel) => {\n        const removedPanel = options.from.model.removePanel(panel);\n        options.from.model.renderContainer.detatch(panel);\n        return removedPanel;\n    });\n    panels.forEach((panel) => {\n        options.to.model.openPanel(panel, {\n            skipSetActive: activePanel !== panel,\n            skipSetGroupActive: true,\n        });\n    });\n}\nexport class DockviewComponent extends BaseGrid {\n    get orientation() {\n        return this.gridview.orientation;\n    }\n    get totalPanels() {\n        return this.panels.length;\n    }\n    get panels() {\n        return this.groups.flatMap((group) => group.panels);\n    }\n    get options() {\n        return this._options;\n    }\n    get activePanel() {\n        const activeGroup = this.activeGroup;\n        if (!activeGroup) {\n            return undefined;\n        }\n        return activeGroup.activePanel;\n    }\n    get renderer() {\n        var _a;\n        return (_a = this.options.defaultRenderer) !== null && _a !== void 0 ? _a : 'onlyWhenVisible';\n    }\n    get api() {\n        return this._api;\n    }\n    get gap() {\n        return this.gridview.margin;\n    }\n    get floatingGroups() {\n        return this._floatingGroups;\n    }\n    constructor(parentElement, options) {\n        var _a;\n        super(parentElement, {\n            proportionalLayout: true,\n            orientation: Orientation.HORIZONTAL,\n            styles: options.hideBorders\n                ? { separatorBorder: 'transparent' }\n                : undefined,\n            disableAutoResizing: options.disableAutoResizing,\n            locked: options.locked,\n            margin: options.gap,\n            className: options.className,\n        });\n        this.nextGroupId = sequentialNumberGenerator();\n        this._deserializer = new DefaultDockviewDeserialzier(this);\n        this.watermark = null;\n        this._onWillDragPanel = new Emitter();\n        this.onWillDragPanel = this._onWillDragPanel.event;\n        this._onWillDragGroup = new Emitter();\n        this.onWillDragGroup = this._onWillDragGroup.event;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onWillDrop = new Emitter();\n        this.onWillDrop = this._onWillDrop.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        this._onUnhandledDragOverEvent = new Emitter();\n        this.onUnhandledDragOverEvent = this._onUnhandledDragOverEvent.event;\n        this._onDidRemovePanel = new Emitter();\n        this.onDidRemovePanel = this._onDidRemovePanel.event;\n        this._onDidAddPanel = new Emitter();\n        this.onDidAddPanel = this._onDidAddPanel.event;\n        this._onDidLayoutFromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutFromJSON.event;\n        this._onDidActivePanelChange = new Emitter();\n        this.onDidActivePanelChange = this._onDidActivePanelChange.event;\n        this._onDidMovePanel = new Emitter();\n        this.onDidMovePanel = this._onDidMovePanel.event;\n        this._onDidMaximizedGroupChange = new Emitter();\n        this.onDidMaximizedGroupChange = this._onDidMaximizedGroupChange.event;\n        this._floatingGroups = [];\n        this._popoutGroups = [];\n        this._onDidRemoveGroup = new Emitter();\n        this.onDidRemoveGroup = this._onDidRemoveGroup.event;\n        this._onDidAddGroup = new Emitter();\n        this.onDidAddGroup = this._onDidAddGroup.event;\n        this._onDidActiveGroupChange = new Emitter();\n        this.onDidActiveGroupChange = this._onDidActiveGroupChange.event;\n        this._moving = false;\n        this.overlayRenderContainer = new OverlayRenderContainer(this.gridview.element, this);\n        toggleClass(this.gridview.element, 'dv-dockview', true);\n        toggleClass(this.element, 'dv-debug', !!options.debug);\n        if (options.debug) {\n            this.addDisposables(new StrictEventsSequencing(this));\n        }\n        this.addDisposables(this.overlayRenderContainer, this._onWillDragPanel, this._onWillDragGroup, this._onWillShowOverlay, this._onDidActivePanelChange, this._onDidAddPanel, this._onDidRemovePanel, this._onDidLayoutFromJSON, this._onDidDrop, this._onWillDrop, this._onDidMovePanel, this._onDidAddGroup, this._onDidRemoveGroup, this._onDidActiveGroupChange, this._onUnhandledDragOverEvent, this._onDidMaximizedGroupChange, this.onDidViewVisibilityChangeMicroTaskQueue(() => {\n            this.updateWatermark();\n        }), this.onDidAdd((event) => {\n            if (!this._moving) {\n                this._onDidAddGroup.fire(event);\n            }\n        }), this.onDidRemove((event) => {\n            if (!this._moving) {\n                this._onDidRemoveGroup.fire(event);\n            }\n        }), this.onDidActiveChange((event) => {\n            if (!this._moving) {\n                this._onDidActiveGroupChange.fire(event);\n            }\n        }), this.onDidMaximizedChange((event) => {\n            this._onDidMaximizedGroupChange.fire({\n                group: event.panel,\n                isMaximized: event.isMaximized,\n            });\n        }), Event.any(this.onDidAdd, this.onDidRemove)(() => {\n            this.updateWatermark();\n        }), Event.any(this.onDidAddPanel, this.onDidRemovePanel, this.onDidAddGroup, this.onDidRemove, this.onDidMovePanel, this.onDidActivePanelChange)(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), Disposable.from(() => {\n            // iterate over a copy of the array since .dispose() mutates the original array\n            for (const group of [...this._floatingGroups]) {\n                group.dispose();\n            }\n            // iterate over a copy of the array since .dispose() mutates the original array\n            for (const group of [...this._popoutGroups]) {\n                group.disposable.dispose();\n            }\n        }));\n        this._options = options;\n        this._rootDropTarget = new Droptarget(this.element, {\n            canDisplayOverlay: (event, position) => {\n                const data = getPanelData();\n                if (data) {\n                    if (data.viewId !== this.id) {\n                        return false;\n                    }\n                    if (position === 'center') {\n                        // center drop target is only allowed if there are no panels in the grid\n                        // floating panels are allowed\n                        return this.gridview.length === 0;\n                    }\n                    return true;\n                }\n                if (position === 'center' && this.gridview.length !== 0) {\n                    /**\n                     * for external events only show the four-corner drag overlays, disable\n                     * the center position so that external drag events can fall through to the group\n                     * and panel drop target handlers\n                     */\n                    return false;\n                }\n                const firedEvent = new DockviewUnhandledDragOverEvent(event, 'edge', position, getPanelData);\n                this._onUnhandledDragOverEvent.fire(firedEvent);\n                return firedEvent.isAccepted;\n            },\n            acceptedTargetZones: ['top', 'bottom', 'left', 'right', 'center'],\n            overlayModel: (_a = this.options.rootOverlayModel) !== null && _a !== void 0 ? _a : DEFAULT_ROOT_OVERLAY_MODEL,\n        });\n        this.addDisposables(this._rootDropTarget, this._rootDropTarget.onWillShowOverlay((event) => {\n            if (this.gridview.length > 0 && event.position === 'center') {\n                // option only available when no panels in primary grid\n                return;\n            }\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'edge',\n                panel: undefined,\n                api: this._api,\n                group: undefined,\n                getData: getPanelData,\n            }));\n        }), this._rootDropTarget.onDrop((event) => {\n            var _a;\n            const willDropEvent = new DockviewWillDropEvent({\n                nativeEvent: event.nativeEvent,\n                position: event.position,\n                panel: undefined,\n                api: this._api,\n                group: undefined,\n                getData: getPanelData,\n                kind: 'edge',\n            });\n            this._onWillDrop.fire(willDropEvent);\n            if (willDropEvent.defaultPrevented) {\n                return;\n            }\n            const data = getPanelData();\n            if (data) {\n                this.moveGroupOrPanel({\n                    from: {\n                        groupId: data.groupId,\n                        panelId: (_a = data.panelId) !== null && _a !== void 0 ? _a : undefined,\n                    },\n                    to: {\n                        group: this.orthogonalize(event.position),\n                        position: 'center',\n                    },\n                });\n            }\n            else {\n                this._onDidDrop.fire(new DockviewDidDropEvent({\n                    nativeEvent: event.nativeEvent,\n                    position: event.position,\n                    panel: undefined,\n                    api: this._api,\n                    group: undefined,\n                    getData: getPanelData,\n                }));\n            }\n        }), this._rootDropTarget);\n        this._api = new DockviewApi(this);\n        this.updateWatermark();\n    }\n    setVisible(panel, visible) {\n        switch (panel.api.location.type) {\n            case 'grid':\n                super.setVisible(panel, visible);\n                break;\n            case 'floating': {\n                const item = this.floatingGroups.find((floatingGroup) => floatingGroup.group === panel);\n                if (item) {\n                    item.overlay.setVisible(visible);\n                    panel.api._onDidVisibilityChange.fire({\n                        isVisible: visible,\n                    });\n                }\n                break;\n            }\n            case 'popout':\n                console.warn('dockview: You cannot hide a group that is in a popout window');\n                break;\n        }\n    }\n    addPopoutGroup(itemToPopout, options) {\n        var _a, _b, _c, _d, _e;\n        if (itemToPopout instanceof DockviewPanel &&\n            itemToPopout.group.size === 1) {\n            return this.addPopoutGroup(itemToPopout.group, options);\n        }\n        const theme = getDockviewTheme(this.gridview.element);\n        const element = this.element;\n        function getBox() {\n            if (options === null || options === void 0 ? void 0 : options.position) {\n                return options.position;\n            }\n            if (itemToPopout instanceof DockviewGroupPanel) {\n                return itemToPopout.element.getBoundingClientRect();\n            }\n            if (itemToPopout.group) {\n                return itemToPopout.group.element.getBoundingClientRect();\n            }\n            return element.getBoundingClientRect();\n        }\n        const box = getBox();\n        const groupId = (_b = (_a = options === null || options === void 0 ? void 0 : options.overridePopoutGroup) === null || _a === void 0 ? void 0 : _a.id) !== null && _b !== void 0 ? _b : this.getNextGroupId();\n        const _window = new PopoutWindow(`${this.id}-${groupId}`, // unique id\n        theme !== null && theme !== void 0 ? theme : '', {\n            url: (_e = (_c = options === null || options === void 0 ? void 0 : options.popoutUrl) !== null && _c !== void 0 ? _c : (_d = this.options) === null || _d === void 0 ? void 0 : _d.popoutUrl) !== null && _e !== void 0 ? _e : '/popout.html',\n            left: window.screenX + box.left,\n            top: window.screenY + box.top,\n            width: box.width,\n            height: box.height,\n            onDidOpen: options === null || options === void 0 ? void 0 : options.onDidOpen,\n            onWillClose: options === null || options === void 0 ? void 0 : options.onWillClose,\n        });\n        const popoutWindowDisposable = new CompositeDisposable(_window, _window.onDidClose(() => {\n            popoutWindowDisposable.dispose();\n        }));\n        return _window\n            .open()\n            .then((popoutContainer) => {\n            var _a;\n            if (_window.isDisposed) {\n                return false;\n            }\n            if (popoutContainer === null) {\n                popoutWindowDisposable.dispose();\n                return false;\n            }\n            const gready = document.createElement('div');\n            gready.className = 'dv-overlay-render-container';\n            const overlayRenderContainer = new OverlayRenderContainer(gready, this);\n            const referenceGroup = itemToPopout instanceof DockviewPanel\n                ? itemToPopout.group\n                : itemToPopout;\n            const referenceLocation = itemToPopout.api.location.type;\n            /**\n             * The group that is being added doesn't already exist within the DOM, the most likely occurance\n             * of this case is when being called from the `fromJSON(...)` method\n             */\n            const isGroupAddedToDom = referenceGroup.element.parentElement !== null;\n            let group;\n            if (!isGroupAddedToDom) {\n                group = referenceGroup;\n            }\n            else if (options === null || options === void 0 ? void 0 : options.overridePopoutGroup) {\n                group = options.overridePopoutGroup;\n            }\n            else {\n                group = this.createGroup({ id: groupId });\n                this._onDidAddGroup.fire(group);\n            }\n            group.model.renderContainer = overlayRenderContainer;\n            group.layout(_window.window.innerWidth, _window.window.innerHeight);\n            let floatingBox;\n            if (!(options === null || options === void 0 ? void 0 : options.overridePopoutGroup) && isGroupAddedToDom) {\n                if (itemToPopout instanceof DockviewPanel) {\n                    this.movingLock(() => {\n                        const panel = referenceGroup.model.removePanel(itemToPopout);\n                        group.model.openPanel(panel);\n                    });\n                }\n                else {\n                    this.movingLock(() => moveGroupWithoutDestroying({\n                        from: referenceGroup,\n                        to: group,\n                    }));\n                    switch (referenceLocation) {\n                        case 'grid':\n                            referenceGroup.api.setVisible(false);\n                            break;\n                        case 'floating':\n                        case 'popout':\n                            floatingBox = (_a = this._floatingGroups\n                                .find((value) => value.group.api.id ===\n                                itemToPopout.api.id)) === null || _a === void 0 ? void 0 : _a.overlay.toJSON();\n                            this.removeGroup(referenceGroup);\n                            break;\n                    }\n                }\n            }\n            popoutContainer.classList.add('dv-dockview');\n            popoutContainer.style.overflow = 'hidden';\n            popoutContainer.appendChild(gready);\n            popoutContainer.appendChild(group.element);\n            group.model.location = {\n                type: 'popout',\n                getWindow: () => _window.window,\n                popoutUrl: options === null || options === void 0 ? void 0 : options.popoutUrl,\n            };\n            if (isGroupAddedToDom &&\n                itemToPopout.api.location.type === 'grid') {\n                itemToPopout.api.setVisible(false);\n            }\n            this.doSetGroupAndPanelActive(group);\n            popoutWindowDisposable.addDisposables(group.api.onDidActiveChange((event) => {\n                var _a;\n                if (event.isActive) {\n                    (_a = _window.window) === null || _a === void 0 ? void 0 : _a.focus();\n                }\n            }), group.api.onWillFocus(() => {\n                var _a;\n                (_a = _window.window) === null || _a === void 0 ? void 0 : _a.focus();\n            }));\n            let returnedGroup;\n            const isValidReferenceGroup = isGroupAddedToDom &&\n                referenceGroup &&\n                this.getPanel(referenceGroup.id);\n            const value = {\n                window: _window,\n                popoutGroup: group,\n                referenceGroup: isValidReferenceGroup\n                    ? referenceGroup.id\n                    : undefined,\n                disposable: {\n                    dispose: () => {\n                        popoutWindowDisposable.dispose();\n                        return returnedGroup;\n                    },\n                },\n            };\n            popoutWindowDisposable.addDisposables(\n            /**\n             * ResizeObserver seems slow here, I do not know why but we don't need it\n             * since we can reply on the window resize event as we will occupy the full\n             * window dimensions\n             */\n            addDisposableWindowListener(_window.window, 'resize', () => {\n                group.layout(_window.window.innerWidth, _window.window.innerHeight);\n            }), overlayRenderContainer, Disposable.from(() => {\n                if (isGroupAddedToDom &&\n                    this.getPanel(referenceGroup.id)) {\n                    this.movingLock(() => moveGroupWithoutDestroying({\n                        from: group,\n                        to: referenceGroup,\n                    }));\n                    if (!referenceGroup.api.isVisible) {\n                        referenceGroup.api.setVisible(true);\n                    }\n                    if (this.getPanel(group.id)) {\n                        this.doRemoveGroup(group, {\n                            skipPopoutAssociated: true,\n                        });\n                    }\n                }\n                else if (this.getPanel(group.id)) {\n                    group.model.renderContainer =\n                        this.overlayRenderContainer;\n                    returnedGroup = group;\n                    if (floatingBox) {\n                        this.addFloatingGroup(group, {\n                            height: floatingBox.height,\n                            width: floatingBox.width,\n                            position: floatingBox,\n                        });\n                    }\n                    else {\n                        this.doRemoveGroup(group, {\n                            skipDispose: true,\n                            skipActive: true,\n                            skipPopoutReturn: true,\n                        });\n                        group.model.location = { type: 'grid' };\n                        this.movingLock(() => {\n                            // suppress group add events since the group already exists\n                            this.doAddGroup(group, [0]);\n                        });\n                    }\n                    this.doSetGroupAndPanelActive(group);\n                }\n            }));\n            this._popoutGroups.push(value);\n            this.updateWatermark();\n            return true;\n        })\n            .catch((err) => {\n            console.error('dockview: failed to create popout window', err);\n            return false;\n        });\n    }\n    addFloatingGroup(item, options) {\n        var _a, _b, _c, _d, _e;\n        let group;\n        if (item instanceof DockviewPanel) {\n            group = this.createGroup();\n            this._onDidAddGroup.fire(group);\n            this.movingLock(() => this.removePanel(item, {\n                removeEmptyGroup: true,\n                skipDispose: true,\n                skipSetActiveGroup: true,\n            }));\n            this.movingLock(() => group.model.openPanel(item, { skipSetGroupActive: true }));\n        }\n        else {\n            group = item;\n            const popoutReferenceGroupId = (_a = this._popoutGroups.find((_) => _.popoutGroup === group)) === null || _a === void 0 ? void 0 : _a.referenceGroup;\n            const popoutReferenceGroup = popoutReferenceGroupId\n                ? this.getPanel(popoutReferenceGroupId)\n                : undefined;\n            const skip = typeof (options === null || options === void 0 ? void 0 : options.skipRemoveGroup) === 'boolean' &&\n                options.skipRemoveGroup;\n            if (!skip) {\n                if (popoutReferenceGroup) {\n                    this.movingLock(() => moveGroupWithoutDestroying({\n                        from: item,\n                        to: popoutReferenceGroup,\n                    }));\n                    this.doRemoveGroup(item, {\n                        skipPopoutReturn: true,\n                        skipPopoutAssociated: true,\n                    });\n                    this.doRemoveGroup(popoutReferenceGroup, {\n                        skipDispose: true,\n                    });\n                    group = popoutReferenceGroup;\n                }\n                else {\n                    this.doRemoveGroup(item, {\n                        skipDispose: true,\n                        skipPopoutReturn: true,\n                        skipPopoutAssociated: false,\n                    });\n                }\n            }\n        }\n        function getAnchoredBox() {\n            if (options === null || options === void 0 ? void 0 : options.position) {\n                const result = {};\n                if ('left' in options.position) {\n                    result.left = Math.max(options.position.left, 0);\n                }\n                else if ('right' in options.position) {\n                    result.right = Math.max(options.position.right, 0);\n                }\n                else {\n                    result.left = DEFAULT_FLOATING_GROUP_POSITION.left;\n                }\n                if ('top' in options.position) {\n                    result.top = Math.max(options.position.top, 0);\n                }\n                else if ('bottom' in options.position) {\n                    result.bottom = Math.max(options.position.bottom, 0);\n                }\n                else {\n                    result.top = DEFAULT_FLOATING_GROUP_POSITION.top;\n                }\n                if (typeof options.width === 'number') {\n                    result.width = Math.max(options.width, 0);\n                }\n                else {\n                    result.width = DEFAULT_FLOATING_GROUP_POSITION.width;\n                }\n                if (typeof options.height === 'number') {\n                    result.height = Math.max(options.height, 0);\n                }\n                else {\n                    result.height = DEFAULT_FLOATING_GROUP_POSITION.height;\n                }\n                return result;\n            }\n            return {\n                left: typeof (options === null || options === void 0 ? void 0 : options.x) === 'number'\n                    ? Math.max(options.x, 0)\n                    : DEFAULT_FLOATING_GROUP_POSITION.left,\n                top: typeof (options === null || options === void 0 ? void 0 : options.y) === 'number'\n                    ? Math.max(options.y, 0)\n                    : DEFAULT_FLOATING_GROUP_POSITION.top,\n                width: typeof (options === null || options === void 0 ? void 0 : options.width) === 'number'\n                    ? Math.max(options.width, 0)\n                    : DEFAULT_FLOATING_GROUP_POSITION.width,\n                height: typeof (options === null || options === void 0 ? void 0 : options.height) === 'number'\n                    ? Math.max(options.height, 0)\n                    : DEFAULT_FLOATING_GROUP_POSITION.height,\n            };\n        }\n        const anchoredBox = getAnchoredBox();\n        const overlay = new Overlay(Object.assign(Object.assign({ container: this.gridview.element, content: group.element }, anchoredBox), { minimumInViewportWidth: this.options.floatingGroupBounds === 'boundedWithinViewport'\n                ? undefined\n                : (_c = (_b = this.options.floatingGroupBounds) === null || _b === void 0 ? void 0 : _b.minimumWidthWithinViewport) !== null && _c !== void 0 ? _c : DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE, minimumInViewportHeight: this.options.floatingGroupBounds === 'boundedWithinViewport'\n                ? undefined\n                : (_e = (_d = this.options.floatingGroupBounds) === null || _d === void 0 ? void 0 : _d.minimumHeightWithinViewport) !== null && _e !== void 0 ? _e : DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE }));\n        const el = group.element.querySelector('.dv-void-container');\n        if (!el) {\n            throw new Error('failed to find drag handle');\n        }\n        overlay.setupDrag(el, {\n            inDragMode: typeof (options === null || options === void 0 ? void 0 : options.inDragMode) === 'boolean'\n                ? options.inDragMode\n                : false,\n        });\n        const floatingGroupPanel = new DockviewFloatingGroupPanel(group, overlay);\n        const disposable = new CompositeDisposable(group.api.onDidActiveChange((event) => {\n            if (event.isActive) {\n                overlay.bringToFront();\n            }\n        }), watchElementResize(group.element, (entry) => {\n            const { width, height } = entry.contentRect;\n            group.layout(width, height); // let the group know it's size is changing so it can fire events to the panel\n        }));\n        floatingGroupPanel.addDisposables(overlay.onDidChange(() => {\n            // this is either a resize or a move\n            // to inform the panels .layout(...) the group with it's current size\n            // don't care about resize since the above watcher handles that\n            group.layout(group.width, group.height);\n        }), overlay.onDidChangeEnd(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), group.onDidChange((event) => {\n            overlay.setBounds({\n                height: event === null || event === void 0 ? void 0 : event.height,\n                width: event === null || event === void 0 ? void 0 : event.width,\n            });\n        }), {\n            dispose: () => {\n                disposable.dispose();\n                remove(this._floatingGroups, floatingGroupPanel);\n                group.model.location = { type: 'grid' };\n                this.updateWatermark();\n            },\n        });\n        this._floatingGroups.push(floatingGroupPanel);\n        group.model.location = { type: 'floating' };\n        if (!(options === null || options === void 0 ? void 0 : options.skipActiveGroup)) {\n            this.doSetGroupAndPanelActive(group);\n        }\n        this.updateWatermark();\n    }\n    orthogonalize(position) {\n        switch (position) {\n            case 'top':\n            case 'bottom':\n                if (this.gridview.orientation === Orientation.HORIZONTAL) {\n                    // we need to add to a vertical splitview but the current root is a horizontal splitview.\n                    // insert a vertical splitview at the root level and add the existing view as a child\n                    this.gridview.insertOrthogonalSplitviewAtRoot();\n                }\n                break;\n            case 'left':\n            case 'right':\n                if (this.gridview.orientation === Orientation.VERTICAL) {\n                    // we need to add to a horizontal splitview but the current root is a vertical splitview.\n                    // insert a horiziontal splitview at the root level and add the existing view as a child\n                    this.gridview.insertOrthogonalSplitviewAtRoot();\n                }\n                break;\n            default:\n                break;\n        }\n        switch (position) {\n            case 'top':\n            case 'left':\n            case 'center':\n                return this.createGroupAtLocation([0]); // insert into first position\n            case 'bottom':\n            case 'right':\n                return this.createGroupAtLocation([this.gridview.length]); // insert into last position\n            default:\n                throw new Error(`unsupported position ${position}`);\n        }\n    }\n    updateOptions(options) {\n        var _a, _b, _c, _d;\n        super.updateOptions(options);\n        if ('floatingGroupBounds' in options) {\n            for (const group of this._floatingGroups) {\n                switch (options.floatingGroupBounds) {\n                    case 'boundedWithinViewport':\n                        group.overlay.minimumInViewportHeight = undefined;\n                        group.overlay.minimumInViewportWidth = undefined;\n                        break;\n                    case undefined:\n                        group.overlay.minimumInViewportHeight =\n                            DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE;\n                        group.overlay.minimumInViewportWidth =\n                            DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE;\n                        break;\n                    default:\n                        group.overlay.minimumInViewportHeight =\n                            (_a = options.floatingGroupBounds) === null || _a === void 0 ? void 0 : _a.minimumHeightWithinViewport;\n                        group.overlay.minimumInViewportWidth =\n                            (_b = options.floatingGroupBounds) === null || _b === void 0 ? void 0 : _b.minimumWidthWithinViewport;\n                }\n                group.overlay.setBounds();\n            }\n        }\n        if ('rootOverlayModel' in options) {\n            this._rootDropTarget.setOverlayModel((_c = options.rootOverlayModel) !== null && _c !== void 0 ? _c : DEFAULT_ROOT_OVERLAY_MODEL);\n        }\n        if ('gap' in options) {\n            this.gridview.margin = (_d = options.gap) !== null && _d !== void 0 ? _d : 0;\n        }\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        this.layout(this.gridview.width, this.gridview.height, true);\n    }\n    layout(width, height, forceResize) {\n        super.layout(width, height, forceResize);\n        if (this._floatingGroups) {\n            for (const floating of this._floatingGroups) {\n                // ensure floting groups stay within visible boundaries\n                floating.overlay.setBounds();\n            }\n        }\n    }\n    focus() {\n        var _a;\n        (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    getGroupPanel(id) {\n        return this.panels.find((panel) => panel.id === id);\n    }\n    setActivePanel(panel) {\n        panel.group.model.openPanel(panel);\n        this.doSetGroupAndPanelActive(panel.group);\n    }\n    moveToNext(options = {}) {\n        var _a;\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        if (options.includePanel && options.group) {\n            if (options.group.activePanel !==\n                options.group.panels[options.group.panels.length - 1]) {\n                options.group.model.moveToNext({ suppressRoll: true });\n                return;\n            }\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.next(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupAndPanelActive(next);\n    }\n    moveToPrevious(options = {}) {\n        var _a;\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        if (options.includePanel && options.group) {\n            if (options.group.activePanel !== options.group.panels[0]) {\n                options.group.model.moveToPrevious({ suppressRoll: true });\n                return;\n            }\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.previous(location)) === null || _a === void 0 ? void 0 : _a.view;\n        if (next) {\n            this.doSetGroupAndPanelActive(next);\n        }\n    }\n    /**\n     * Serialize the current state of the layout\n     *\n     * @returns A JSON respresentation of the layout\n     */\n    toJSON() {\n        var _a;\n        const data = this.gridview.serialize();\n        const panels = this.panels.reduce((collection, panel) => {\n            collection[panel.id] = panel.toJSON();\n            return collection;\n        }, {});\n        const floats = this._floatingGroups.map((group) => {\n            return {\n                data: group.group.toJSON(),\n                position: group.overlay.toJSON(),\n            };\n        });\n        const popoutGroups = this._popoutGroups.map((group) => {\n            return {\n                data: group.popoutGroup.toJSON(),\n                gridReferenceGroup: group.referenceGroup,\n                position: group.window.dimensions(),\n                url: group.popoutGroup.api.location.type === 'popout'\n                    ? group.popoutGroup.api.location.popoutUrl\n                    : undefined,\n            };\n        });\n        const result = {\n            grid: data,\n            panels,\n            activeGroup: (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.id,\n        };\n        if (floats.length > 0) {\n            result.floatingGroups = floats;\n        }\n        if (popoutGroups.length > 0) {\n            result.popoutGroups = popoutGroups;\n        }\n        return result;\n    }\n    fromJSON(data) {\n        var _a, _b, _c;\n        this.clear();\n        if (typeof data !== 'object' || data === null) {\n            throw new Error('serialized layout must be a non-null object');\n        }\n        const { grid, panels, activeGroup } = data;\n        if (grid.root.type !== 'branch' || !Array.isArray(grid.root.data)) {\n            throw new Error('root must be of type branch');\n        }\n        try {\n            // take note of the existing dimensions\n            const width = this.width;\n            const height = this.height;\n            const createGroupFromSerializedState = (data) => {\n                const { id, locked, hideHeader, views, activeView } = data;\n                if (typeof id !== 'string') {\n                    throw new Error('group id must be of type string');\n                }\n                const group = this.createGroup({\n                    id,\n                    locked: !!locked,\n                    hideHeader: !!hideHeader,\n                });\n                this._onDidAddGroup.fire(group);\n                const createdPanels = [];\n                for (const child of views) {\n                    /**\n                     * Run the deserializer step seperately since this may fail to due corrupted external state.\n                     * In running this section first we avoid firing lots of 'add' events in the event of a failure\n                     * due to a corruption of input data.\n                     */\n                    const panel = this._deserializer.fromJSON(panels[child], group);\n                    createdPanels.push(panel);\n                }\n                for (let i = 0; i < views.length; i++) {\n                    const panel = createdPanels[i];\n                    const isActive = typeof activeView === 'string' &&\n                        activeView === panel.id;\n                    group.model.openPanel(panel, {\n                        skipSetActive: !isActive,\n                        skipSetGroupActive: true,\n                    });\n                }\n                if (!group.activePanel && group.panels.length > 0) {\n                    group.model.openPanel(group.panels[group.panels.length - 1], {\n                        skipSetGroupActive: true,\n                    });\n                }\n                return group;\n            };\n            this.gridview.deserialize(grid, {\n                fromJSON: (node) => {\n                    return createGroupFromSerializedState(node.data);\n                },\n            });\n            this.layout(width, height, true);\n            const serializedFloatingGroups = (_a = data.floatingGroups) !== null && _a !== void 0 ? _a : [];\n            for (const serializedFloatingGroup of serializedFloatingGroups) {\n                const { data, position } = serializedFloatingGroup;\n                const group = createGroupFromSerializedState(data);\n                this.addFloatingGroup(group, {\n                    position: position,\n                    width: position.width,\n                    height: position.height,\n                    skipRemoveGroup: true,\n                    inDragMode: false,\n                });\n            }\n            const serializedPopoutGroups = (_b = data.popoutGroups) !== null && _b !== void 0 ? _b : [];\n            for (const serializedPopoutGroup of serializedPopoutGroups) {\n                const { data, position, gridReferenceGroup, url } = serializedPopoutGroup;\n                const group = createGroupFromSerializedState(data);\n                this.addPopoutGroup((_c = (gridReferenceGroup\n                    ? this.getPanel(gridReferenceGroup)\n                    : undefined)) !== null && _c !== void 0 ? _c : group, {\n                    position: position !== null && position !== void 0 ? position : undefined,\n                    overridePopoutGroup: gridReferenceGroup\n                        ? group\n                        : undefined,\n                    popoutUrl: url,\n                });\n            }\n            for (const floatingGroup of this._floatingGroups) {\n                floatingGroup.overlay.setBounds();\n            }\n            if (typeof activeGroup === 'string') {\n                const panel = this.getPanel(activeGroup);\n                if (panel) {\n                    this.doSetGroupAndPanelActive(panel);\n                }\n            }\n        }\n        catch (err) {\n            console.error('dockview: failed to deserialize layout. Reverting changes', err);\n            /**\n             * Takes all the successfully created groups and remove all of their panels.\n             */\n            for (const group of this.groups) {\n                for (const panel of group.panels) {\n                    this.removePanel(panel, {\n                        removeEmptyGroup: false,\n                        skipDispose: false,\n                    });\n                }\n            }\n            /**\n             * To remove a group we cannot call this.removeGroup(...) since this makes assumptions about\n             * the underlying HTMLElement existing in the Gridview.\n             */\n            for (const group of this.groups) {\n                group.dispose();\n                this._groups.delete(group.id);\n                this._onDidRemoveGroup.fire(group);\n            }\n            // iterate over a reassigned array since original array will be modified\n            for (const floatingGroup of [...this._floatingGroups]) {\n                floatingGroup.dispose();\n            }\n            // fires clean-up events and clears the underlying HTML gridview.\n            this.clear();\n            /**\n             * even though we have cleaned-up we still want to inform the caller of their error\n             * and we'll do this through re-throwing the original error since afterall you would\n             * expect trying to load a corrupted layout to result in an error and not silently fail...\n             */\n            throw err;\n        }\n        this.updateWatermark();\n        this._onDidLayoutFromJSON.fire();\n    }\n    clear() {\n        const groups = Array.from(this._groups.values()).map((_) => _.value);\n        const hasActiveGroup = !!this.activeGroup;\n        for (const group of groups) {\n            // remove the group will automatically remove the panels\n            this.removeGroup(group, { skipActive: true });\n        }\n        if (hasActiveGroup) {\n            this.doSetGroupAndPanelActive(undefined);\n        }\n        this.gridview.clear();\n    }\n    closeAllGroups() {\n        for (const entry of this._groups.entries()) {\n            const [_, group] = entry;\n            group.value.model.closeAllPanels();\n        }\n    }\n    addPanel(options) {\n        var _a, _b;\n        if (this.panels.find((_) => _.id === options.id)) {\n            throw new Error(`panel with id ${options.id} already exists`);\n        }\n        let referenceGroup;\n        if (options.position && options.floating) {\n            throw new Error('you can only provide one of: position, floating as arguments to .addPanel(...)');\n        }\n        const initial = {\n            width: options.initialWidth,\n            height: options.initialHeight,\n        };\n        let index;\n        if (options.position) {\n            if (isPanelOptionsWithPanel(options.position)) {\n                const referencePanel = typeof options.position.referencePanel === 'string'\n                    ? this.getGroupPanel(options.position.referencePanel)\n                    : options.position.referencePanel;\n                index = options.position.index;\n                if (!referencePanel) {\n                    throw new Error(`referencePanel '${options.position.referencePanel}' does not exist`);\n                }\n                referenceGroup = this.findGroup(referencePanel);\n            }\n            else if (isPanelOptionsWithGroup(options.position)) {\n                referenceGroup =\n                    typeof options.position.referenceGroup === 'string'\n                        ? (_a = this._groups.get(options.position.referenceGroup)) === null || _a === void 0 ? void 0 : _a.value\n                        : options.position.referenceGroup;\n                index = options.position.index;\n                if (!referenceGroup) {\n                    throw new Error(`referenceGroup '${options.position.referenceGroup}' does not exist`);\n                }\n            }\n            else {\n                const group = this.orthogonalize(directionToPosition(options.position.direction));\n                const panel = this.createPanel(options, group);\n                group.model.openPanel(panel, {\n                    skipSetActive: options.inactive,\n                    skipSetGroupActive: options.inactive,\n                    index,\n                });\n                if (!options.inactive) {\n                    this.doSetGroupAndPanelActive(group);\n                }\n                group.api.setSize({\n                    height: initial === null || initial === void 0 ? void 0 : initial.height,\n                    width: initial === null || initial === void 0 ? void 0 : initial.width,\n                });\n                return panel;\n            }\n        }\n        else {\n            referenceGroup = this.activeGroup;\n        }\n        let panel;\n        if (referenceGroup) {\n            const target = toTarget(((_b = options.position) === null || _b === void 0 ? void 0 : _b.direction) || 'within');\n            if (options.floating) {\n                const group = this.createGroup();\n                this._onDidAddGroup.fire(group);\n                const floatingGroupOptions = typeof options.floating === 'object' &&\n                    options.floating !== null\n                    ? options.floating\n                    : {};\n                this.addFloatingGroup(group, Object.assign(Object.assign({}, floatingGroupOptions), { inDragMode: false, skipRemoveGroup: true, skipActiveGroup: true }));\n                panel = this.createPanel(options, group);\n                group.model.openPanel(panel, {\n                    skipSetActive: options.inactive,\n                    skipSetGroupActive: options.inactive,\n                    index,\n                });\n            }\n            else if (referenceGroup.api.location.type === 'floating' ||\n                target === 'center') {\n                panel = this.createPanel(options, referenceGroup);\n                referenceGroup.model.openPanel(panel, {\n                    skipSetActive: options.inactive,\n                    skipSetGroupActive: options.inactive,\n                    index,\n                });\n                referenceGroup.api.setSize({\n                    width: initial === null || initial === void 0 ? void 0 : initial.width,\n                    height: initial === null || initial === void 0 ? void 0 : initial.height,\n                });\n                if (!options.inactive) {\n                    this.doSetGroupAndPanelActive(referenceGroup);\n                }\n            }\n            else {\n                const location = getGridLocation(referenceGroup.element);\n                const relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n                const group = this.createGroupAtLocation(relativeLocation, this.orientationAtLocation(relativeLocation) ===\n                    Orientation.VERTICAL\n                    ? initial === null || initial === void 0 ? void 0 : initial.height\n                    : initial === null || initial === void 0 ? void 0 : initial.width);\n                panel = this.createPanel(options, group);\n                group.model.openPanel(panel, {\n                    skipSetActive: options.inactive,\n                    skipSetGroupActive: options.inactive,\n                    index,\n                });\n                if (!options.inactive) {\n                    this.doSetGroupAndPanelActive(group);\n                }\n            }\n        }\n        else if (options.floating) {\n            const group = this.createGroup();\n            this._onDidAddGroup.fire(group);\n            const coordinates = typeof options.floating === 'object' &&\n                options.floating !== null\n                ? options.floating\n                : {};\n            this.addFloatingGroup(group, Object.assign(Object.assign({}, coordinates), { inDragMode: false, skipRemoveGroup: true, skipActiveGroup: true }));\n            panel = this.createPanel(options, group);\n            group.model.openPanel(panel, {\n                skipSetActive: options.inactive,\n                skipSetGroupActive: options.inactive,\n                index,\n            });\n        }\n        else {\n            const group = this.createGroupAtLocation([0], this.gridview.orientation === Orientation.VERTICAL\n                ? initial === null || initial === void 0 ? void 0 : initial.height\n                : initial === null || initial === void 0 ? void 0 : initial.width);\n            panel = this.createPanel(options, group);\n            group.model.openPanel(panel, {\n                skipSetActive: options.inactive,\n                skipSetGroupActive: options.inactive,\n                index,\n            });\n            if (!options.inactive) {\n                this.doSetGroupAndPanelActive(group);\n            }\n        }\n        return panel;\n    }\n    removePanel(panel, options = {\n        removeEmptyGroup: true,\n    }) {\n        const group = panel.group;\n        if (!group) {\n            throw new Error(`cannot remove panel ${panel.id}. it's missing a group.`);\n        }\n        group.model.removePanel(panel, {\n            skipSetActiveGroup: options.skipSetActiveGroup,\n        });\n        if (!options.skipDispose) {\n            panel.group.model.renderContainer.detatch(panel);\n            panel.dispose();\n        }\n        if (group.size === 0 && options.removeEmptyGroup) {\n            this.removeGroup(group, { skipActive: options.skipSetActiveGroup });\n        }\n    }\n    createWatermarkComponent() {\n        if (this.options.createWatermarkComponent) {\n            return this.options.createWatermarkComponent();\n        }\n        return new Watermark();\n    }\n    updateWatermark() {\n        var _a, _b;\n        if (this.groups.filter((x) => x.api.location.type === 'grid' && x.api.isVisible).length === 0) {\n            if (!this.watermark) {\n                this.watermark = this.createWatermarkComponent();\n                this.watermark.init({\n                    containerApi: new DockviewApi(this),\n                });\n                const watermarkContainer = document.createElement('div');\n                watermarkContainer.className = 'dv-watermark-container';\n                addTestId(watermarkContainer, 'watermark-component');\n                watermarkContainer.appendChild(this.watermark.element);\n                this.gridview.element.appendChild(watermarkContainer);\n            }\n        }\n        else if (this.watermark) {\n            this.watermark.element.parentElement.remove();\n            (_b = (_a = this.watermark).dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n            this.watermark = null;\n        }\n    }\n    addGroup(options) {\n        var _a;\n        if (options) {\n            let referenceGroup;\n            if (isGroupOptionsWithPanel(options)) {\n                const referencePanel = typeof options.referencePanel === 'string'\n                    ? this.panels.find((panel) => panel.id === options.referencePanel)\n                    : options.referencePanel;\n                if (!referencePanel) {\n                    throw new Error(`reference panel ${options.referencePanel} does not exist`);\n                }\n                referenceGroup = this.findGroup(referencePanel);\n                if (!referenceGroup) {\n                    throw new Error(`reference group for reference panel ${options.referencePanel} does not exist`);\n                }\n            }\n            else if (isGroupOptionsWithGroup(options)) {\n                referenceGroup =\n                    typeof options.referenceGroup === 'string'\n                        ? (_a = this._groups.get(options.referenceGroup)) === null || _a === void 0 ? void 0 : _a.value\n                        : options.referenceGroup;\n                if (!referenceGroup) {\n                    throw new Error(`reference group ${options.referenceGroup} does not exist`);\n                }\n            }\n            else {\n                const group = this.orthogonalize(directionToPosition(options.direction));\n                if (!options.skipSetActive) {\n                    this.doSetGroupAndPanelActive(group);\n                }\n                return group;\n            }\n            const target = toTarget(options.direction || 'within');\n            const location = getGridLocation(referenceGroup.element);\n            const relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n            const group = this.createGroup(options);\n            const size = this.getLocationOrientation(relativeLocation) ===\n                Orientation.VERTICAL\n                ? options.initialHeight\n                : options.initialWidth;\n            this.doAddGroup(group, relativeLocation, size);\n            if (!options.skipSetActive) {\n                this.doSetGroupAndPanelActive(group);\n            }\n            return group;\n        }\n        else {\n            const group = this.createGroup(options);\n            this.doAddGroup(group);\n            this.doSetGroupAndPanelActive(group);\n            return group;\n        }\n    }\n    getLocationOrientation(location) {\n        return location.length % 2 == 0 &&\n            this.gridview.orientation === Orientation.HORIZONTAL\n            ? Orientation.HORIZONTAL\n            : Orientation.VERTICAL;\n    }\n    removeGroup(group, options) {\n        this.doRemoveGroup(group, options);\n    }\n    doRemoveGroup(group, options) {\n        var _a;\n        const panels = [...group.panels]; // reassign since group panels will mutate\n        if (!(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n            for (const panel of panels) {\n                this.removePanel(panel, {\n                    removeEmptyGroup: false,\n                    skipDispose: (_a = options === null || options === void 0 ? void 0 : options.skipDispose) !== null && _a !== void 0 ? _a : false,\n                });\n            }\n        }\n        const activePanel = this.activePanel;\n        if (group.api.location.type === 'floating') {\n            const floatingGroup = this._floatingGroups.find((_) => _.group === group);\n            if (floatingGroup) {\n                if (!(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n                    floatingGroup.group.dispose();\n                    this._groups.delete(group.id);\n                    this._onDidRemoveGroup.fire(group);\n                }\n                remove(this._floatingGroups, floatingGroup);\n                floatingGroup.dispose();\n                if (!(options === null || options === void 0 ? void 0 : options.skipActive) && this._activeGroup === group) {\n                    const groups = Array.from(this._groups.values());\n                    this.doSetGroupAndPanelActive(groups.length > 0 ? groups[0].value : undefined);\n                }\n                return floatingGroup.group;\n            }\n            throw new Error('failed to find floating group');\n        }\n        if (group.api.location.type === 'popout') {\n            const selectedGroup = this._popoutGroups.find((_) => _.popoutGroup === group);\n            if (selectedGroup) {\n                if (!(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n                    if (!(options === null || options === void 0 ? void 0 : options.skipPopoutAssociated)) {\n                        const refGroup = selectedGroup.referenceGroup\n                            ? this.getPanel(selectedGroup.referenceGroup)\n                            : undefined;\n                        if (refGroup && refGroup.panels.length === 0) {\n                            this.removeGroup(refGroup);\n                        }\n                    }\n                    selectedGroup.popoutGroup.dispose();\n                    this._groups.delete(group.id);\n                    this._onDidRemoveGroup.fire(group);\n                }\n                remove(this._popoutGroups, selectedGroup);\n                const removedGroup = selectedGroup.disposable.dispose();\n                if (!(options === null || options === void 0 ? void 0 : options.skipPopoutReturn) && removedGroup) {\n                    this.doAddGroup(removedGroup, [0]);\n                    this.doSetGroupAndPanelActive(removedGroup);\n                }\n                if (!(options === null || options === void 0 ? void 0 : options.skipActive) && this._activeGroup === group) {\n                    const groups = Array.from(this._groups.values());\n                    this.doSetGroupAndPanelActive(groups.length > 0 ? groups[0].value : undefined);\n                }\n                this.updateWatermark();\n                return selectedGroup.popoutGroup;\n            }\n            throw new Error('failed to find popout group');\n        }\n        const re = super.doRemoveGroup(group, options);\n        if (!(options === null || options === void 0 ? void 0 : options.skipActive)) {\n            if (this.activePanel !== activePanel) {\n                this._onDidActivePanelChange.fire(this.activePanel);\n            }\n        }\n        return re;\n    }\n    movingLock(func) {\n        const isMoving = this._moving;\n        try {\n            this._moving = true;\n            return func();\n        }\n        finally {\n            this._moving = isMoving;\n        }\n    }\n    moveGroupOrPanel(options) {\n        var _a;\n        const destinationGroup = options.to.group;\n        const sourceGroupId = options.from.groupId;\n        const sourceItemId = options.from.panelId;\n        const destinationTarget = options.to.position;\n        const destinationIndex = options.to.index;\n        const sourceGroup = sourceGroupId\n            ? (_a = this._groups.get(sourceGroupId)) === null || _a === void 0 ? void 0 : _a.value\n            : undefined;\n        if (!sourceGroup) {\n            throw new Error(`Failed to find group id ${sourceGroupId}`);\n        }\n        if (sourceItemId === undefined) {\n            /**\n             * Moving an entire group into another group\n             */\n            this.moveGroup({\n                from: { group: sourceGroup },\n                to: {\n                    group: destinationGroup,\n                    position: destinationTarget,\n                },\n            });\n            return;\n        }\n        if (!destinationTarget || destinationTarget === 'center') {\n            /**\n             * Dropping a panel within another group\n             */\n            const removedPanel = this.movingLock(() => sourceGroup.model.removePanel(sourceItemId, {\n                skipSetActive: false,\n                skipSetActiveGroup: true,\n            }));\n            if (!removedPanel) {\n                throw new Error(`No panel with id ${sourceItemId}`);\n            }\n            if (sourceGroup.model.size === 0) {\n                // remove the group and do not set a new group as active\n                this.doRemoveGroup(sourceGroup, { skipActive: true });\n            }\n            this.movingLock(() => destinationGroup.model.openPanel(removedPanel, {\n                index: destinationIndex,\n                skipSetGroupActive: true,\n            }));\n            this.doSetGroupAndPanelActive(destinationGroup);\n            this._onDidMovePanel.fire({\n                panel: removedPanel,\n                from: sourceGroup,\n            });\n        }\n        else {\n            /**\n             * Dropping a panel to the extremities of a group which will place that panel\n             * into an adjacent group\n             */\n            const referenceLocation = getGridLocation(destinationGroup.element);\n            const targetLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, destinationTarget);\n            if (sourceGroup.size < 2) {\n                /**\n                 * If we are moving from a group which only has one panel left we will consider\n                 * moving the group itself rather than moving the panel into a newly created group\n                 */\n                const [targetParentLocation, to] = tail(targetLocation);\n                if (sourceGroup.api.location.type === 'grid') {\n                    const sourceLocation = getGridLocation(sourceGroup.element);\n                    const [sourceParentLocation, from] = tail(sourceLocation);\n                    if (sequenceEquals(sourceParentLocation, targetParentLocation)) {\n                        // special case when 'swapping' two views within same grid location\n                        // if a group has one tab - we are essentially moving the 'group'\n                        // which is equivalent to swapping two views in this case\n                        this.gridview.moveView(sourceParentLocation, from, to);\n                        this._onDidMovePanel.fire({\n                            panel: this.getGroupPanel(sourceItemId),\n                            from: sourceGroup,\n                        });\n                        return;\n                    }\n                }\n                if (sourceGroup.api.location.type === 'popout') {\n                    /**\n                     * the source group is a popout group with a single panel\n                     *\n                     * 1. remove the panel from the group without triggering any events\n                     * 2. remove the popout group\n                     * 3. create a new group at the requested location and add that panel\n                     */\n                    const popoutGroup = this._popoutGroups.find((group) => group.popoutGroup === sourceGroup);\n                    const removedPanel = this.movingLock(() => popoutGroup.popoutGroup.model.removePanel(popoutGroup.popoutGroup.panels[0], {\n                        skipSetActive: true,\n                        skipSetActiveGroup: true,\n                    }));\n                    this.doRemoveGroup(sourceGroup, { skipActive: true });\n                    const newGroup = this.createGroupAtLocation(targetLocation);\n                    this.movingLock(() => newGroup.model.openPanel(removedPanel));\n                    this.doSetGroupAndPanelActive(newGroup);\n                    this._onDidMovePanel.fire({\n                        panel: this.getGroupPanel(sourceItemId),\n                        from: sourceGroup,\n                    });\n                    return;\n                }\n                // source group will become empty so delete the group\n                const targetGroup = this.movingLock(() => this.doRemoveGroup(sourceGroup, {\n                    skipActive: true,\n                    skipDispose: true,\n                }));\n                // after deleting the group we need to re-evaulate the ref location\n                const updatedReferenceLocation = getGridLocation(destinationGroup.element);\n                const location = getRelativeLocation(this.gridview.orientation, updatedReferenceLocation, destinationTarget);\n                this.movingLock(() => this.doAddGroup(targetGroup, location));\n                this.doSetGroupAndPanelActive(targetGroup);\n                this._onDidMovePanel.fire({\n                    panel: this.getGroupPanel(sourceItemId),\n                    from: sourceGroup,\n                });\n            }\n            else {\n                /**\n                 * The group we are removing from has many panels, we need to remove the panels we are moving,\n                 * create a new group, add the panels to that new group and add the new group in an appropiate position\n                 */\n                const removedPanel = this.movingLock(() => sourceGroup.model.removePanel(sourceItemId, {\n                    skipSetActive: false,\n                    skipSetActiveGroup: true,\n                }));\n                if (!removedPanel) {\n                    throw new Error(`No panel with id ${sourceItemId}`);\n                }\n                const dropLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, destinationTarget);\n                const group = this.createGroupAtLocation(dropLocation);\n                this.movingLock(() => group.model.openPanel(removedPanel, {\n                    skipSetGroupActive: true,\n                }));\n                this.doSetGroupAndPanelActive(group);\n                this._onDidMovePanel.fire({\n                    panel: removedPanel,\n                    from: sourceGroup,\n                });\n            }\n        }\n    }\n    moveGroup(options) {\n        const from = options.from.group;\n        const to = options.to.group;\n        const target = options.to.position;\n        if (target === 'center') {\n            const activePanel = from.activePanel;\n            const panels = this.movingLock(() => [...from.panels].map((p) => from.model.removePanel(p.id, {\n                skipSetActive: true,\n            })));\n            if ((from === null || from === void 0 ? void 0 : from.model.size) === 0) {\n                this.doRemoveGroup(from, { skipActive: true });\n            }\n            this.movingLock(() => {\n                for (const panel of panels) {\n                    to.model.openPanel(panel, {\n                        skipSetActive: panel !== activePanel,\n                        skipSetGroupActive: true,\n                    });\n                }\n            });\n            this.doSetGroupAndPanelActive(to);\n        }\n        else {\n            switch (from.api.location.type) {\n                case 'grid':\n                    this.gridview.removeView(getGridLocation(from.element));\n                    break;\n                case 'floating': {\n                    const selectedFloatingGroup = this._floatingGroups.find((x) => x.group === from);\n                    if (!selectedFloatingGroup) {\n                        throw new Error('failed to find floating group');\n                    }\n                    selectedFloatingGroup.dispose();\n                    break;\n                }\n                case 'popout': {\n                    const selectedPopoutGroup = this._popoutGroups.find((x) => x.popoutGroup === from);\n                    if (!selectedPopoutGroup) {\n                        throw new Error('failed to find popout group');\n                    }\n                    selectedPopoutGroup.disposable.dispose();\n                }\n            }\n            const referenceLocation = getGridLocation(to.element);\n            const dropLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, target);\n            let size;\n            switch (this.gridview.orientation) {\n                case Orientation.VERTICAL:\n                    size =\n                        referenceLocation.length % 2 == 0\n                            ? from.api.width\n                            : from.api.height;\n                    break;\n                case Orientation.HORIZONTAL:\n                    size =\n                        referenceLocation.length % 2 == 0\n                            ? from.api.height\n                            : from.api.width;\n                    break;\n            }\n            this.gridview.addView(from, size, dropLocation);\n        }\n        from.panels.forEach((panel) => {\n            this._onDidMovePanel.fire({ panel, from });\n        });\n    }\n    doSetGroupActive(group) {\n        super.doSetGroupActive(group);\n        const activePanel = this.activePanel;\n        if (!this._moving &&\n            activePanel !== this._onDidActivePanelChange.value) {\n            this._onDidActivePanelChange.fire(activePanel);\n        }\n    }\n    doSetGroupAndPanelActive(group) {\n        super.doSetGroupActive(group);\n        const activePanel = this.activePanel;\n        if (group &&\n            this.hasMaximizedGroup() &&\n            !this.isMaximizedGroup(group)) {\n            this.exitMaximizedGroup();\n        }\n        if (!this._moving &&\n            activePanel !== this._onDidActivePanelChange.value) {\n            this._onDidActivePanelChange.fire(activePanel);\n        }\n    }\n    getNextGroupId() {\n        let id = this.nextGroupId.next();\n        while (this._groups.has(id)) {\n            id = this.nextGroupId.next();\n        }\n        return id;\n    }\n    createGroup(options) {\n        if (!options) {\n            options = {};\n        }\n        let id = options === null || options === void 0 ? void 0 : options.id;\n        if (id && this._groups.has(options.id)) {\n            console.warn(`dockview: Duplicate group id ${options === null || options === void 0 ? void 0 : options.id}. reassigning group id to avoid errors`);\n            id = undefined;\n        }\n        if (!id) {\n            id = this.nextGroupId.next();\n            while (this._groups.has(id)) {\n                id = this.nextGroupId.next();\n            }\n        }\n        const view = new DockviewGroupPanel(this, id, options);\n        view.init({ params: {}, accessor: this });\n        if (!this._groups.has(view.id)) {\n            const disposable = new CompositeDisposable(view.model.onTabDragStart((event) => {\n                this._onWillDragPanel.fire(event);\n            }), view.model.onGroupDragStart((event) => {\n                this._onWillDragGroup.fire(event);\n            }), view.model.onMove((event) => {\n                const { groupId, itemId, target, index } = event;\n                this.moveGroupOrPanel({\n                    from: { groupId: groupId, panelId: itemId },\n                    to: {\n                        group: view,\n                        position: target,\n                        index,\n                    },\n                });\n            }), view.model.onDidDrop((event) => {\n                this._onDidDrop.fire(event);\n            }), view.model.onWillDrop((event) => {\n                this._onWillDrop.fire(event);\n            }), view.model.onWillShowOverlay((event) => {\n                if (this.options.disableDnd) {\n                    event.preventDefault();\n                    return;\n                }\n                this._onWillShowOverlay.fire(event);\n            }), view.model.onUnhandledDragOverEvent((event) => {\n                this._onUnhandledDragOverEvent.fire(event);\n            }), view.model.onDidAddPanel((event) => {\n                if (this._moving) {\n                    return;\n                }\n                this._onDidAddPanel.fire(event.panel);\n            }), view.model.onDidRemovePanel((event) => {\n                if (this._moving) {\n                    return;\n                }\n                this._onDidRemovePanel.fire(event.panel);\n            }), view.model.onDidActivePanelChange((event) => {\n                if (this._moving) {\n                    return;\n                }\n                if (event.panel !== this.activePanel) {\n                    return;\n                }\n                if (this._onDidActivePanelChange.value !== event.panel) {\n                    this._onDidActivePanelChange.fire(event.panel);\n                }\n            }), Event.any(view.model.onDidPanelTitleChange, view.model.onDidPanelParametersChange)(() => {\n                this._bufferOnDidLayoutChange.fire();\n            }));\n            this._groups.set(view.id, { value: view, disposable });\n        }\n        // TODO: must be called after the above listeners have been setup, not an ideal pattern\n        view.initialize();\n        return view;\n    }\n    createPanel(options, group) {\n        var _a, _b, _c;\n        const contentComponent = options.component;\n        const tabComponent = (_a = options.tabComponent) !== null && _a !== void 0 ? _a : this.options.defaultTabComponent;\n        const view = new DockviewPanelModel(this, options.id, contentComponent, tabComponent);\n        const panel = new DockviewPanel(options.id, contentComponent, tabComponent, this, this._api, group, view, {\n            renderer: options.renderer,\n            minimumWidth: options.minimumWidth,\n            minimumHeight: options.minimumHeight,\n            maximumWidth: options.maximumWidth,\n            maximumHeight: options.maximumHeight,\n        });\n        panel.init({\n            title: (_b = options.title) !== null && _b !== void 0 ? _b : options.id,\n            params: (_c = options === null || options === void 0 ? void 0 : options.params) !== null && _c !== void 0 ? _c : {},\n        });\n        return panel;\n    }\n    createGroupAtLocation(location, size) {\n        const group = this.createGroup();\n        this.doAddGroup(group, location, size);\n        return group;\n    }\n    findGroup(panel) {\n        var _a;\n        return (_a = Array.from(this._groups.values()).find((group) => group.value.model.containsPanel(panel))) === null || _a === void 0 ? void 0 : _a.value;\n    }\n    orientationAtLocation(location) {\n        const rootOrientation = this.gridview.orientation;\n        return location.length % 2 == 1\n            ? rootOrientation\n            : orthogonal(rootOrientation);\n    }\n}\n","import { getRelativeLocation, getGridLocation, } from './gridview';\nimport { tail, sequenceEquals } from '../array';\nimport { CompositeDisposable } from '../lifecycle';\nimport { BaseGrid, toTarget, } from './baseComponentGridview';\nimport { Emitter } from '../events';\nexport class GridviewComponent extends BaseGrid {\n    get orientation() {\n        return this.gridview.orientation;\n    }\n    set orientation(value) {\n        this.gridview.orientation = value;\n    }\n    get options() {\n        return this._options;\n    }\n    get deserializer() {\n        return this._deserializer;\n    }\n    set deserializer(value) {\n        this._deserializer = value;\n    }\n    constructor(parentElement, options) {\n        var _a;\n        super(parentElement, {\n            proportionalLayout: (_a = options.proportionalLayout) !== null && _a !== void 0 ? _a : true,\n            orientation: options.orientation,\n            styles: options.hideBorders\n                ? { separatorBorder: 'transparent' }\n                : undefined,\n            disableAutoResizing: options.disableAutoResizing,\n            className: options.className,\n        });\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._onDidRemoveGroup = new Emitter();\n        this.onDidRemoveGroup = this._onDidRemoveGroup.event;\n        this._onDidAddGroup = new Emitter();\n        this.onDidAddGroup = this._onDidAddGroup.event;\n        this._onDidActiveGroupChange = new Emitter();\n        this.onDidActiveGroupChange = this._onDidActiveGroupChange.event;\n        this._options = options;\n        this.addDisposables(this._onDidAddGroup, this._onDidRemoveGroup, this._onDidActiveGroupChange, this.onDidAdd((event) => {\n            this._onDidAddGroup.fire(event);\n        }), this.onDidRemove((event) => {\n            this._onDidRemoveGroup.fire(event);\n        }), this.onDidActiveChange((event) => {\n            this._onDidActiveGroupChange.fire(event);\n        }));\n    }\n    updateOptions(options) {\n        super.updateOptions(options);\n        const hasOrientationChanged = typeof options.orientation === 'string' &&\n            this.gridview.orientation !== options.orientation;\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        if (hasOrientationChanged) {\n            this.gridview.orientation = options.orientation;\n        }\n        this.layout(this.gridview.width, this.gridview.height, true);\n    }\n    removePanel(panel) {\n        this.removeGroup(panel);\n    }\n    /**\n     * Serialize the current state of the layout\n     *\n     * @returns A JSON respresentation of the layout\n     */\n    toJSON() {\n        var _a;\n        const data = this.gridview.serialize();\n        return {\n            grid: data,\n            activePanel: (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.id,\n        };\n    }\n    setVisible(panel, visible) {\n        this.gridview.setViewVisible(getGridLocation(panel.element), visible);\n    }\n    setActive(panel) {\n        this._groups.forEach((value, _key) => {\n            value.value.setActive(panel === value.value);\n        });\n    }\n    focus() {\n        var _a;\n        (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    fromJSON(serializedGridview) {\n        this.clear();\n        const { grid, activePanel } = serializedGridview;\n        try {\n            const queue = [];\n            // take note of the existing dimensions\n            const width = this.width;\n            const height = this.height;\n            this.gridview.deserialize(grid, {\n                fromJSON: (node) => {\n                    const { data } = node;\n                    const view = this.options.createComponent({\n                        id: data.id,\n                        name: data.component,\n                    });\n                    queue.push(() => view.init({\n                        params: data.params,\n                        minimumWidth: data.minimumWidth,\n                        maximumWidth: data.maximumWidth,\n                        minimumHeight: data.minimumHeight,\n                        maximumHeight: data.maximumHeight,\n                        priority: data.priority,\n                        snap: !!data.snap,\n                        accessor: this,\n                        isVisible: node.visible,\n                    }));\n                    this._onDidAddGroup.fire(view);\n                    this.registerPanel(view);\n                    return view;\n                },\n            });\n            this.layout(width, height, true);\n            queue.forEach((f) => f());\n            if (typeof activePanel === 'string') {\n                const panel = this.getPanel(activePanel);\n                if (panel) {\n                    this.doSetGroupActive(panel);\n                }\n            }\n        }\n        catch (err) {\n            /**\n             * To remove a group we cannot call this.removeGroup(...) since this makes assumptions about\n             * the underlying HTMLElement existing in the Gridview.\n             */\n            for (const group of this.groups) {\n                group.dispose();\n                this._groups.delete(group.id);\n                this._onDidRemoveGroup.fire(group);\n            }\n            // fires clean-up events and clears the underlying HTML gridview.\n            this.clear();\n            /**\n             * even though we have cleaned-up we still want to inform the caller of their error\n             * and we'll do this through re-throwing the original error since afterall you would\n             * expect trying to load a corrupted layout to result in an error and not silently fail...\n             */\n            throw err;\n        }\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        const hasActiveGroup = this.activeGroup;\n        const groups = Array.from(this._groups.values()); // reassign since group panels will mutate\n        for (const group of groups) {\n            group.disposable.dispose();\n            this.doRemoveGroup(group.value, { skipActive: true });\n        }\n        if (hasActiveGroup) {\n            this.doSetGroupActive(undefined);\n        }\n        this.gridview.clear();\n    }\n    movePanel(panel, options) {\n        var _a;\n        let relativeLocation;\n        const removedPanel = this.gridview.remove(panel);\n        const referenceGroup = (_a = this._groups.get(options.reference)) === null || _a === void 0 ? void 0 : _a.value;\n        if (!referenceGroup) {\n            throw new Error(`reference group ${options.reference} does not exist`);\n        }\n        const target = toTarget(options.direction);\n        if (target === 'center') {\n            throw new Error(`${target} not supported as an option`);\n        }\n        else {\n            const location = getGridLocation(referenceGroup.element);\n            relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n        }\n        this.doAddGroup(removedPanel, relativeLocation, options.size);\n    }\n    addPanel(options) {\n        var _a, _b, _c, _d;\n        let relativeLocation = (_a = options.location) !== null && _a !== void 0 ? _a : [0];\n        if ((_b = options.position) === null || _b === void 0 ? void 0 : _b.referencePanel) {\n            const referenceGroup = (_c = this._groups.get(options.position.referencePanel)) === null || _c === void 0 ? void 0 : _c.value;\n            if (!referenceGroup) {\n                throw new Error(`reference group ${options.position.referencePanel} does not exist`);\n            }\n            const target = toTarget(options.position.direction);\n            if (target === 'center') {\n                throw new Error(`${target} not supported as an option`);\n            }\n            else {\n                const location = getGridLocation(referenceGroup.element);\n                relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n            }\n        }\n        const view = this.options.createComponent({\n            id: options.id,\n            name: options.component,\n        });\n        view.init({\n            params: (_d = options.params) !== null && _d !== void 0 ? _d : {},\n            minimumWidth: options.minimumWidth,\n            maximumWidth: options.maximumWidth,\n            minimumHeight: options.minimumHeight,\n            maximumHeight: options.maximumHeight,\n            priority: options.priority,\n            snap: !!options.snap,\n            accessor: this,\n            isVisible: true,\n        });\n        this.registerPanel(view);\n        this.doAddGroup(view, relativeLocation, options.size);\n        this.doSetGroupActive(view);\n        return view;\n    }\n    registerPanel(panel) {\n        const disposable = new CompositeDisposable(panel.api.onDidFocusChange((event) => {\n            if (!event.isFocused) {\n                return;\n            }\n            this._groups.forEach((groupItem) => {\n                const group = groupItem.value;\n                if (group !== panel) {\n                    group.setActive(false);\n                }\n                else {\n                    group.setActive(true);\n                }\n            });\n        }));\n        this._groups.set(panel.id, {\n            value: panel,\n            disposable,\n        });\n    }\n    moveGroup(referenceGroup, groupId, target) {\n        const sourceGroup = this.getPanel(groupId);\n        if (!sourceGroup) {\n            throw new Error('invalid operation');\n        }\n        const referenceLocation = getGridLocation(referenceGroup.element);\n        const targetLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, target);\n        const [targetParentLocation, to] = tail(targetLocation);\n        const sourceLocation = getGridLocation(sourceGroup.element);\n        const [sourceParentLocation, from] = tail(sourceLocation);\n        if (sequenceEquals(sourceParentLocation, targetParentLocation)) {\n            // special case when 'swapping' two views within same grid location\n            // if a group has one tab - we are essentially moving the 'group'\n            // which is equivalent to swapping two views in this case\n            this.gridview.moveView(sourceParentLocation, from, to);\n            return;\n        }\n        // source group will become empty so delete the group\n        const targetGroup = this.doRemoveGroup(sourceGroup, {\n            skipActive: true,\n            skipDispose: true,\n        });\n        // after deleting the group we need to re-evaulate the ref location\n        const updatedReferenceLocation = getGridLocation(referenceGroup.element);\n        const location = getRelativeLocation(this.gridview.orientation, updatedReferenceLocation, target);\n        this.doAddGroup(targetGroup, location);\n    }\n    removeGroup(group) {\n        super.removeGroup(group);\n    }\n    dispose() {\n        super.dispose();\n        this._onDidLayoutfromJSON.dispose();\n    }\n}\n","import { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nimport { Orientation, Sizing, Splitview, } from './splitview';\nimport { Emitter } from '../events';\nimport { Resizable } from '../resizable';\nimport { Classnames } from '../dom';\n/**\n * A high-level implementation of splitview that works using 'panels'\n */\nexport class SplitviewComponent extends Resizable {\n    get panels() {\n        return this.splitview.getViews();\n    }\n    get options() {\n        return this._options;\n    }\n    get length() {\n        return this._panels.size;\n    }\n    get orientation() {\n        return this.splitview.orientation;\n    }\n    get splitview() {\n        return this._splitview;\n    }\n    set splitview(value) {\n        this._splitview = value;\n        this._splitviewChangeDisposable.value = new CompositeDisposable(this._splitview.onDidSashEnd(() => {\n            this._onDidLayoutChange.fire(undefined);\n        }), this._splitview.onDidAddView((e) => this._onDidAddView.fire(e)), this._splitview.onDidRemoveView((e) => this._onDidRemoveView.fire(e)));\n    }\n    get minimumSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumSize() {\n        return this.splitview.maximumSize;\n    }\n    get height() {\n        return this.splitview.orientation === Orientation.HORIZONTAL\n            ? this.splitview.orthogonalSize\n            : this.splitview.size;\n    }\n    get width() {\n        return this.splitview.orientation === Orientation.HORIZONTAL\n            ? this.splitview.size\n            : this.splitview.orthogonalSize;\n    }\n    constructor(parentElement, options) {\n        var _a;\n        super(parentElement, options.disableAutoResizing);\n        this._splitviewChangeDisposable = new MutableDisposable();\n        this._panels = new Map();\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        this._onDidLayoutChange = new Emitter();\n        this.onDidLayoutChange = this._onDidLayoutChange.event;\n        this._classNames = new Classnames(this.element);\n        this._classNames.setClassNames((_a = options.className) !== null && _a !== void 0 ? _a : '');\n        this._options = options;\n        this.splitview = new Splitview(this.element, options);\n        this.addDisposables(this._onDidAddView, this._onDidLayoutfromJSON, this._onDidRemoveView, this._onDidLayoutChange);\n    }\n    updateOptions(options) {\n        var _a, _b;\n        if ('className' in options) {\n            this._classNames.setClassNames((_a = options.className) !== null && _a !== void 0 ? _a : '');\n        }\n        if ('disableResizing' in options) {\n            this.disableResizing = (_b = options.disableAutoResizing) !== null && _b !== void 0 ? _b : false;\n        }\n        if (typeof options.orientation === 'string') {\n            this.splitview.orientation = options.orientation;\n        }\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        this.splitview.layout(this.splitview.size, this.splitview.orthogonalSize);\n    }\n    focus() {\n        var _a;\n        (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    movePanel(from, to) {\n        this.splitview.moveView(from, to);\n    }\n    setVisible(panel, visible) {\n        const index = this.panels.indexOf(panel);\n        this.splitview.setViewVisible(index, visible);\n    }\n    setActive(panel, skipFocus) {\n        this._activePanel = panel;\n        this.panels\n            .filter((v) => v !== panel)\n            .forEach((v) => {\n            v.api._onDidActiveChange.fire({ isActive: false });\n            if (!skipFocus) {\n                v.focus();\n            }\n        });\n        panel.api._onDidActiveChange.fire({ isActive: true });\n        if (!skipFocus) {\n            panel.focus();\n        }\n    }\n    removePanel(panel, sizing) {\n        const item = this._panels.get(panel.id);\n        if (!item) {\n            throw new Error(`unknown splitview panel ${panel.id}`);\n        }\n        item.dispose();\n        this._panels.delete(panel.id);\n        const index = this.panels.findIndex((_) => _ === panel);\n        const removedView = this.splitview.removeView(index, sizing);\n        removedView.dispose();\n        const panels = this.panels;\n        if (panels.length > 0) {\n            this.setActive(panels[panels.length - 1]);\n        }\n    }\n    getPanel(id) {\n        return this.panels.find((view) => view.id === id);\n    }\n    addPanel(options) {\n        var _a;\n        if (this._panels.has(options.id)) {\n            throw new Error(`panel ${options.id} already exists`);\n        }\n        const view = this.options.createComponent({\n            id: options.id,\n            name: options.component,\n        });\n        view.orientation = this.splitview.orientation;\n        view.init({\n            params: (_a = options.params) !== null && _a !== void 0 ? _a : {},\n            minimumSize: options.minimumSize,\n            maximumSize: options.maximumSize,\n            snap: options.snap,\n            priority: options.priority,\n            accessor: this,\n        });\n        const size = typeof options.size === 'number' ? options.size : Sizing.Distribute;\n        const index = typeof options.index === 'number' ? options.index : undefined;\n        this.splitview.addView(view, size, index);\n        this.doAddView(view);\n        this.setActive(view);\n        return view;\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.splitview.orientation === Orientation.HORIZONTAL\n            ? [width, height]\n            : [height, width];\n        this.splitview.layout(size, orthogonalSize);\n    }\n    doAddView(view) {\n        const disposable = view.api.onDidFocusChange((event) => {\n            if (!event.isFocused) {\n                return;\n            }\n            this.setActive(view, true);\n        });\n        this._panels.set(view.id, disposable);\n    }\n    toJSON() {\n        var _a;\n        const views = this.splitview\n            .getViews()\n            .map((view, i) => {\n            const size = this.splitview.getViewSize(i);\n            return {\n                size,\n                data: view.toJSON(),\n                snap: !!view.snap,\n                priority: view.priority,\n            };\n        });\n        return {\n            views,\n            activeView: (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.id,\n            size: this.splitview.size,\n            orientation: this.splitview.orientation,\n        };\n    }\n    fromJSON(serializedSplitview) {\n        this.clear();\n        const { views, orientation, size, activeView } = serializedSplitview;\n        const queue = [];\n        // take note of the existing dimensions\n        const width = this.width;\n        const height = this.height;\n        this.splitview = new Splitview(this.element, {\n            orientation,\n            proportionalLayout: this.options.proportionalLayout,\n            descriptor: {\n                size,\n                views: views.map((view) => {\n                    const data = view.data;\n                    if (this._panels.has(data.id)) {\n                        throw new Error(`panel ${data.id} already exists`);\n                    }\n                    const panel = this.options.createComponent({\n                        id: data.id,\n                        name: data.component,\n                    });\n                    queue.push(() => {\n                        var _a;\n                        panel.init({\n                            params: (_a = data.params) !== null && _a !== void 0 ? _a : {},\n                            minimumSize: data.minimumSize,\n                            maximumSize: data.maximumSize,\n                            snap: view.snap,\n                            priority: view.priority,\n                            accessor: this,\n                        });\n                    });\n                    panel.orientation = orientation;\n                    this.doAddView(panel);\n                    setTimeout(() => {\n                        // the original onDidAddView events are missed since they are fired before we can subcribe to them\n                        this._onDidAddView.fire(panel);\n                    }, 0);\n                    return { size: view.size, view: panel };\n                }),\n            },\n        });\n        this.layout(width, height);\n        queue.forEach((f) => f());\n        if (typeof activeView === 'string') {\n            const panel = this.getPanel(activeView);\n            if (panel) {\n                this.setActive(panel);\n            }\n        }\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        for (const disposable of this._panels.values()) {\n            disposable.dispose();\n        }\n        this._panels.clear();\n        while (this.splitview.length > 0) {\n            const view = this.splitview.removeView(0, Sizing.Distribute, true);\n            view.dispose();\n        }\n    }\n    dispose() {\n        for (const disposable of this._panels.values()) {\n            disposable.dispose();\n        }\n        this._panels.clear();\n        const views = this.splitview.getViews();\n        this._splitviewChangeDisposable.dispose();\n        this.splitview.dispose();\n        for (const view of views) {\n            view.dispose();\n        }\n        super.dispose();\n    }\n}\n","import { addDisposableListener } from '../events';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nimport { toggleClass } from '../dom';\nimport { createChevronRightButton, createExpandMoreButton } from '../svg';\nexport class DefaultHeader extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor() {\n        super();\n        this._expandedIcon = createExpandMoreButton();\n        this._collapsedIcon = createChevronRightButton();\n        this.disposable = new MutableDisposable();\n        this.apiRef = {\n            api: null,\n        };\n        this._element = document.createElement('div');\n        this.element.className = 'dv-default-header';\n        this._content = document.createElement('span');\n        this._expander = document.createElement('div');\n        this._expander.className = 'dv-pane-header-icon';\n        this.element.appendChild(this._expander);\n        this.element.appendChild(this._content);\n        this.addDisposables(addDisposableListener(this._element, 'click', () => {\n            var _a;\n            (_a = this.apiRef.api) === null || _a === void 0 ? void 0 : _a.setExpanded(!this.apiRef.api.isExpanded);\n        }));\n    }\n    init(params) {\n        this.apiRef.api = params.api;\n        this._content.textContent = params.title;\n        this.updateIcon();\n        this.disposable.value = params.api.onDidExpansionChange(() => {\n            this.updateIcon();\n        });\n    }\n    updateIcon() {\n        var _a;\n        const isExpanded = !!((_a = this.apiRef.api) === null || _a === void 0 ? void 0 : _a.isExpanded);\n        toggleClass(this._expander, 'collapsed', !isExpanded);\n        if (isExpanded) {\n            if (this._expander.contains(this._collapsedIcon)) {\n                this._collapsedIcon.remove();\n            }\n            if (!this._expander.contains(this._expandedIcon)) {\n                this._expander.appendChild(this._expandedIcon);\n            }\n        }\n        else {\n            if (this._expander.contains(this._expandedIcon)) {\n                this._expandedIcon.remove();\n            }\n            if (!this._expander.contains(this._collapsedIcon)) {\n                this._expander.appendChild(this._collapsedIcon);\n            }\n        }\n    }\n    update(_params) {\n        //\n    }\n    dispose() {\n        this.disposable.dispose();\n        super.dispose();\n    }\n}\n","import { PaneviewApi } from '../api/component.api';\nimport { Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nimport { Orientation, Sizing } from '../splitview/splitview';\nimport { Paneview } from './paneview';\nimport { DraggablePaneviewPanel, } from './draggablePaneviewPanel';\nimport { DefaultHeader } from './defaultPaneviewHeader';\nimport { sequentialNumberGenerator } from '../math';\nimport { Resizable } from '../resizable';\nimport { Classnames } from '../dom';\nconst nextLayoutId = sequentialNumberGenerator();\nexport class PaneFramework extends DraggablePaneviewPanel {\n    constructor(options) {\n        super(options.accessor, options.id, options.component, options.headerComponent, options.orientation, options.isExpanded, options.disableDnd);\n        this.options = options;\n    }\n    getBodyComponent() {\n        return this.options.body;\n    }\n    getHeaderComponent() {\n        return this.options.header;\n    }\n}\nexport class PaneviewComponent extends Resizable {\n    get id() {\n        return this._id;\n    }\n    get panels() {\n        return this.paneview.getPanes();\n    }\n    set paneview(value) {\n        this._paneview = value;\n        this._disposable.value = new CompositeDisposable(this._paneview.onDidChange(() => {\n            this._onDidLayoutChange.fire(undefined);\n        }), this._paneview.onDidAddView((e) => this._onDidAddView.fire(e)), this._paneview.onDidRemoveView((e) => this._onDidRemoveView.fire(e)));\n    }\n    get paneview() {\n        return this._paneview;\n    }\n    get minimumSize() {\n        return this.paneview.minimumSize;\n    }\n    get maximumSize() {\n        return this.paneview.maximumSize;\n    }\n    get height() {\n        return this.paneview.orientation === Orientation.HORIZONTAL\n            ? this.paneview.orthogonalSize\n            : this.paneview.size;\n    }\n    get width() {\n        return this.paneview.orientation === Orientation.HORIZONTAL\n            ? this.paneview.size\n            : this.paneview.orthogonalSize;\n    }\n    get options() {\n        return this._options;\n    }\n    constructor(parentElement, options) {\n        var _a;\n        super(parentElement, options.disableAutoResizing);\n        this._id = nextLayoutId.next();\n        this._disposable = new MutableDisposable();\n        this._viewDisposables = new Map();\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._onDidLayoutChange = new Emitter();\n        this.onDidLayoutChange = this._onDidLayoutChange.event;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        this._onUnhandledDragOverEvent = new Emitter();\n        this.onUnhandledDragOverEvent = this._onUnhandledDragOverEvent.event;\n        this.addDisposables(this._onDidLayoutChange, this._onDidLayoutfromJSON, this._onDidDrop, this._onDidAddView, this._onDidRemoveView, this._onUnhandledDragOverEvent);\n        this._classNames = new Classnames(this.element);\n        this._classNames.setClassNames((_a = options.className) !== null && _a !== void 0 ? _a : '');\n        this._options = options;\n        this.paneview = new Paneview(this.element, {\n            // only allow paneview in the vertical orientation for now\n            orientation: Orientation.VERTICAL,\n        });\n        this.addDisposables(this._disposable);\n    }\n    setVisible(panel, visible) {\n        const index = this.panels.indexOf(panel);\n        this.paneview.setViewVisible(index, visible);\n    }\n    focus() {\n        //noop\n    }\n    updateOptions(options) {\n        var _a, _b;\n        if ('className' in options) {\n            this._classNames.setClassNames((_a = options.className) !== null && _a !== void 0 ? _a : '');\n        }\n        if ('disableResizing' in options) {\n            this.disableResizing = (_b = options.disableAutoResizing) !== null && _b !== void 0 ? _b : false;\n        }\n        this._options = Object.assign(Object.assign({}, this.options), options);\n    }\n    addPanel(options) {\n        var _a;\n        const body = this.options.createComponent({\n            id: options.id,\n            name: options.component,\n        });\n        let header;\n        if (options.headerComponent && this.options.createHeaderComponent) {\n            header = this.options.createHeaderComponent({\n                id: options.id,\n                name: options.headerComponent,\n            });\n        }\n        if (!header) {\n            header = new DefaultHeader();\n        }\n        const view = new PaneFramework({\n            id: options.id,\n            component: options.component,\n            headerComponent: options.headerComponent,\n            header,\n            body,\n            orientation: Orientation.VERTICAL,\n            isExpanded: !!options.isExpanded,\n            disableDnd: !!this.options.disableDnd,\n            accessor: this,\n        });\n        this.doAddPanel(view);\n        const size = typeof options.size === 'number' ? options.size : Sizing.Distribute;\n        const index = typeof options.index === 'number' ? options.index : undefined;\n        view.init({\n            params: (_a = options.params) !== null && _a !== void 0 ? _a : {},\n            minimumBodySize: options.minimumBodySize,\n            maximumBodySize: options.maximumBodySize,\n            isExpanded: options.isExpanded,\n            title: options.title,\n            containerApi: new PaneviewApi(this),\n            accessor: this,\n        });\n        this.paneview.addPane(view, size, index);\n        view.orientation = this.paneview.orientation;\n        return view;\n    }\n    removePanel(panel) {\n        const views = this.panels;\n        const index = views.findIndex((_) => _ === panel);\n        this.paneview.removePane(index);\n        this.doRemovePanel(panel);\n    }\n    movePanel(from, to) {\n        this.paneview.moveView(from, to);\n    }\n    getPanel(id) {\n        return this.panels.find((view) => view.id === id);\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.paneview.orientation === Orientation.HORIZONTAL\n            ? [width, height]\n            : [height, width];\n        this.paneview.layout(size, orthogonalSize);\n    }\n    toJSON() {\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ||\n            value === Number.POSITIVE_INFINITY\n            ? undefined\n            : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        const views = this.paneview\n            .getPanes()\n            .map((view, i) => {\n            const size = this.paneview.getViewSize(i);\n            return {\n                size,\n                data: view.toJSON(),\n                minimumSize: minimum(view.minimumBodySize),\n                maximumSize: maximum(view.maximumBodySize),\n                expanded: view.isExpanded(),\n            };\n        });\n        return {\n            views,\n            size: this.paneview.size,\n        };\n    }\n    fromJSON(serializedPaneview) {\n        this.clear();\n        const { views, size } = serializedPaneview;\n        const queue = [];\n        // take note of the existing dimensions\n        const width = this.width;\n        const height = this.height;\n        this.paneview = new Paneview(this.element, {\n            orientation: Orientation.VERTICAL,\n            descriptor: {\n                size,\n                views: views.map((view) => {\n                    const data = view.data;\n                    const body = this.options.createComponent({\n                        id: data.id,\n                        name: data.component,\n                    });\n                    let header;\n                    if (data.headerComponent &&\n                        this.options.createHeaderComponent) {\n                        header = this.options.createHeaderComponent({\n                            id: data.id,\n                            name: data.headerComponent,\n                        });\n                    }\n                    if (!header) {\n                        header = new DefaultHeader();\n                    }\n                    const panel = new PaneFramework({\n                        id: data.id,\n                        component: data.component,\n                        headerComponent: data.headerComponent,\n                        header,\n                        body,\n                        orientation: Orientation.VERTICAL,\n                        isExpanded: !!view.expanded,\n                        disableDnd: !!this.options.disableDnd,\n                        accessor: this,\n                    });\n                    this.doAddPanel(panel);\n                    queue.push(() => {\n                        var _a;\n                        panel.init({\n                            params: (_a = data.params) !== null && _a !== void 0 ? _a : {},\n                            minimumBodySize: view.minimumSize,\n                            maximumBodySize: view.maximumSize,\n                            title: data.title,\n                            isExpanded: !!view.expanded,\n                            containerApi: new PaneviewApi(this),\n                            accessor: this,\n                        });\n                        panel.orientation = this.paneview.orientation;\n                    });\n                    setTimeout(() => {\n                        // the original onDidAddView events are missed since they are fired before we can subcribe to them\n                        this._onDidAddView.fire(panel);\n                    }, 0);\n                    return { size: view.size, view: panel };\n                }),\n            },\n        });\n        this.layout(width, height);\n        queue.forEach((f) => f());\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        for (const [_, value] of this._viewDisposables.entries()) {\n            value.dispose();\n        }\n        this._viewDisposables.clear();\n        this.paneview.dispose();\n    }\n    doAddPanel(panel) {\n        const disposable = new CompositeDisposable(panel.onDidDrop((event) => {\n            this._onDidDrop.fire(event);\n        }), panel.onUnhandledDragOverEvent((event) => {\n            this._onUnhandledDragOverEvent.fire(event);\n        }));\n        this._viewDisposables.set(panel.id, disposable);\n    }\n    doRemovePanel(panel) {\n        const disposable = this._viewDisposables.get(panel.id);\n        if (disposable) {\n            disposable.dispose();\n            this._viewDisposables.delete(panel.id);\n        }\n    }\n    dispose() {\n        super.dispose();\n        for (const [_, value] of this._viewDisposables.entries()) {\n            value.dispose();\n        }\n        this._viewDisposables.clear();\n        this.paneview.dispose();\n    }\n}\n","import { BasePanelView, } from '../gridview/basePanelView';\nimport { SplitviewPanelApiImpl } from '../api/splitviewPanelApi';\nimport { Orientation } from './splitview';\nimport { Emitter } from '../events';\nexport class SplitviewPanel extends BasePanelView {\n    get priority() {\n        return this._priority;\n    }\n    set orientation(value) {\n        this._orientation = value;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    get minimumSize() {\n        const size = typeof this._minimumSize === 'function'\n            ? this._minimumSize()\n            : this._minimumSize;\n        if (size !== this._evaluatedMinimumSize) {\n            this._evaluatedMinimumSize = size;\n            this.updateConstraints();\n        }\n        return size;\n    }\n    get maximumSize() {\n        const size = typeof this._maximumSize === 'function'\n            ? this._maximumSize()\n            : this._maximumSize;\n        if (size !== this._evaluatedMaximumSize) {\n            this._evaluatedMaximumSize = size;\n            this.updateConstraints();\n        }\n        return size;\n    }\n    get snap() {\n        return this._snap;\n    }\n    constructor(id, componentName) {\n        super(id, componentName, new SplitviewPanelApiImpl(id, componentName));\n        this._evaluatedMinimumSize = 0;\n        this._evaluatedMaximumSize = Number.POSITIVE_INFINITY;\n        this._minimumSize = 0;\n        this._maximumSize = Number.POSITIVE_INFINITY;\n        this._snap = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this.api.initialize(this);\n        this.addDisposables(this._onDidChange, this.api.onWillVisibilityChange((event) => {\n            const { isVisible } = event;\n            const { accessor } = this._params;\n            accessor.setVisible(this, isVisible);\n        }), this.api.onActiveChange(() => {\n            const { accessor } = this._params;\n            accessor.setActive(this);\n        }), this.api.onDidConstraintsChangeInternal((event) => {\n            if (typeof event.minimumSize === 'number' ||\n                typeof event.minimumSize === 'function') {\n                this._minimumSize = event.minimumSize;\n            }\n            if (typeof event.maximumSize === 'number' ||\n                typeof event.maximumSize === 'function') {\n                this._maximumSize = event.maximumSize;\n            }\n            this.updateConstraints();\n        }), this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire({ size: event.size });\n        }));\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    layout(size, orthogonalSize) {\n        const [width, height] = this.orientation === Orientation.HORIZONTAL\n            ? [size, orthogonalSize]\n            : [orthogonalSize, size];\n        super.layout(width, height);\n    }\n    init(parameters) {\n        super.init(parameters);\n        this._priority = parameters.priority;\n        if (parameters.minimumSize) {\n            this._minimumSize = parameters.minimumSize;\n        }\n        if (parameters.maximumSize) {\n            this._maximumSize = parameters.maximumSize;\n        }\n        if (parameters.snap) {\n            this._snap = parameters.snap;\n        }\n    }\n    toJSON() {\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ||\n            value === Number.POSITIVE_INFINITY\n            ? undefined\n            : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        return Object.assign(Object.assign({}, super.toJSON()), { minimumSize: minimum(this.minimumSize), maximumSize: maximum(this.maximumSize) });\n    }\n    updateConstraints() {\n        this.api._onDidConstraintsChange.fire({\n            maximumSize: this._evaluatedMaximumSize,\n            minimumSize: this._evaluatedMinimumSize,\n        });\n    }\n}\n","import { GridviewApi, PaneviewApi, SplitviewApi, } from '../api/component.api';\nimport { DockviewComponent } from '../dockview/dockviewComponent';\nimport { GridviewComponent } from '../gridview/gridviewComponent';\nimport { PaneviewComponent } from '../paneview/paneviewComponent';\nimport { SplitviewComponent } from '../splitview/splitviewComponent';\nexport function createDockview(element, options) {\n    const component = new DockviewComponent(element, options);\n    return component.api;\n}\nexport function createSplitview(element, options) {\n    const component = new SplitviewComponent(element, options);\n    return new SplitviewApi(component);\n}\nexport function createGridview(element, options) {\n    const component = new GridviewComponent(element, options);\n    return new GridviewApi(component);\n}\nexport function createPaneview(element, options) {\n    const component = new PaneviewComponent(element, options);\n    return new PaneviewApi(component);\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { DockviewDisposable, } from 'dockview-core';\n/**\n * This component is intended to interface between vanilla-js and React hence we need to be\n * creative in how we update props.\n * A ref of the component is exposed with an update method; which when called stores the props\n * as a ref within this component and forcefully triggers a re-render of the component using\n * the ref of props we just set on the renderered component as the props passed to the inner\n * component\n */\nconst ReactComponentBridge = (props, ref) => {\n    const [_, triggerRender] = React.useState();\n    const _props = React.useRef(props.componentProps);\n    React.useImperativeHandle(ref, () => ({\n        update: (componentProps) => {\n            _props.current = Object.assign(Object.assign({}, _props.current), componentProps);\n            /**\n             * setting a arbitrary piece of state within this component will\n             * trigger a re-render.\n             * we use this rather than updating through a prop since we can\n             * pass a ref into the vanilla-js world.\n             */\n            triggerRender(Date.now());\n        },\n    }), []);\n    return React.createElement(props.component, _props.current);\n};\nReactComponentBridge.displayName = 'DockviewReactJsBridge';\n/**\n * Since we are storing the React.Portal references in a rendered array they\n * require a key property like any other React element rendered in an array\n * to prevent excessive re-rendering\n */\nconst uniquePortalKeyGenerator = (() => {\n    let value = 1;\n    return { next: () => `dockview_react_portal_key_${(value++).toString()}` };\n})();\nexport const ReactPartContext = React.createContext({});\nexport class ReactPart {\n    constructor(parent, portalStore, component, parameters, context) {\n        this.parent = parent;\n        this.portalStore = portalStore;\n        this.component = component;\n        this.parameters = parameters;\n        this.context = context;\n        this._initialProps = {};\n        this.disposed = false;\n        this.createPortal();\n    }\n    update(props) {\n        if (this.disposed) {\n            throw new Error('invalid operation: resource is already disposed');\n        }\n        if (!this.componentInstance) {\n            // if the component is yet to be mounted store the props\n            this._initialProps = Object.assign(Object.assign({}, this._initialProps), props);\n        }\n        else {\n            this.componentInstance.update(props);\n        }\n    }\n    createPortal() {\n        if (this.disposed) {\n            throw new Error('invalid operation: resource is already disposed');\n        }\n        if (!isReactComponent(this.component)) {\n            /**\n             * we know this isn't a React.FunctionComponent so throw an error here.\n             * if we do not intercept then React library will throw a very obsure error\n             * for the same reason... at least at this point we will emit a sensible stacktrace.\n             */\n            throw new Error('Dockview: Only React.memo(...), React.ForwardRef(...) and functional components are accepted as components');\n        }\n        const bridgeComponent = React.createElement(React.forwardRef(ReactComponentBridge), {\n            component: this\n                .component,\n            componentProps: this.parameters,\n            ref: (element) => {\n                this.componentInstance = element;\n                if (Object.keys(this._initialProps).length > 0) {\n                    this.componentInstance.update(this._initialProps);\n                    this._initialProps = {}; // don't keep a reference to the users object once no longer required\n                }\n            },\n        });\n        const node = this.context\n            ? React.createElement(ReactPartContext.Provider, { value: this.context }, bridgeComponent)\n            : bridgeComponent;\n        const portal = ReactDOM.createPortal(node, this.parent, uniquePortalKeyGenerator.next());\n        this.ref = {\n            portal,\n            disposable: this.portalStore.addPortal(portal),\n        };\n    }\n    dispose() {\n        var _a;\n        (_a = this.ref) === null || _a === void 0 ? void 0 : _a.disposable.dispose();\n        this.disposed = true;\n    }\n}\n/**\n * A React Hook that returns an array of portals to be rendered by the user of this hook\n * and a disposable function to add a portal. Calling dispose removes this portal from the\n * portal array\n */\nexport const usePortalsLifecycle = () => {\n    const [portals, setPortals] = React.useState([]);\n    React.useDebugValue(`Portal count: ${portals.length}`);\n    const addPortal = React.useCallback((portal) => {\n        setPortals((existingPortals) => [...existingPortals, portal]);\n        let disposed = false;\n        return DockviewDisposable.from(() => {\n            if (disposed) {\n                throw new Error('invalid operation: resource already disposed');\n            }\n            disposed = true;\n            setPortals((existingPortals) => existingPortals.filter((p) => p !== portal));\n        });\n    }, []);\n    return [portals, addPortal];\n};\nexport function isReactComponent(component) {\n    /**\n     * Yes, we could use \"react-is\" but that would introduce an unwanted peer dependency\n     * so for now we will check in a rather crude fashion...\n     */\n    return (typeof component === 'function' /** Functional Componnts */ ||\n        !!(component === null || component === void 0 ? void 0 : component.$$typeof) /** React.memo(...) Components */);\n}\n","import { ReactPart } from '../react';\nimport { DockviewEmitter, } from 'dockview-core';\nexport class ReactPanelContentPart {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._onDidFocus = new DockviewEmitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new DockviewEmitter();\n        this.onDidBlur = this._onDidBlur.event;\n        this._element = document.createElement('div');\n        this._element.className = 'dv-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    focus() {\n        // TODO\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n        });\n    }\n    update(event) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update({ params: event.params });\n    }\n    layout(_width, _height) {\n        // noop\n    }\n    dispose() {\n        var _a;\n        this._onDidFocus.dispose();\n        this._onDidBlur.dispose();\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { ReactPart } from '../react';\nexport class ReactPanelHeaderPart {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._element = document.createElement('div');\n        this._element.className = 'dv-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    focus() {\n        //noop\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n        });\n    }\n    update(event) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update({ params: event.params });\n    }\n    layout(_width, _height) {\n        // noop - retrieval from api\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { ReactPart } from '../react';\nexport class ReactWatermarkPart {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._element = document.createElement('div');\n        this._element.className = 'dv-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            group: parameters.group,\n            containerApi: parameters.containerApi,\n        });\n    }\n    focus() {\n        // noop\n    }\n    update(params) {\n        var _a, _b, _c;\n        if (this.parameters) {\n            this.parameters.params = params.params;\n        }\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update({ params: (_c = (_b = this.parameters) === null || _b === void 0 ? void 0 : _b.params) !== null && _c !== void 0 ? _c : {} });\n    }\n    layout(_width, _height) {\n        // noop - retrieval from api\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { ReactPart } from '../react';\nimport { DockviewCompositeDisposable, DockviewMutableDisposable, } from 'dockview-core';\nexport class ReactHeaderActionsRendererPart {\n    get element() {\n        return this._element;\n    }\n    get part() {\n        return this._part;\n    }\n    constructor(component, reactPortalStore, _group) {\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._group = _group;\n        this.mutableDisposable = new DockviewMutableDisposable();\n        this._element = document.createElement('div');\n        this._element.className = 'dv-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    init(parameters) {\n        this.mutableDisposable.value = new DockviewCompositeDisposable(this._group.model.onDidAddPanel(() => {\n            this.updatePanels();\n        }), this._group.model.onDidRemovePanel(() => {\n            this.updatePanels();\n        }), this._group.model.onDidActivePanelChange(() => {\n            this.updateActivePanel();\n        }), parameters.api.onDidActiveChange(() => {\n            this.updateGroupActive();\n        }));\n        this._part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n            panels: this._group.model.panels,\n            activePanel: this._group.model.activePanel,\n            isGroupActive: this._group.api.isActive,\n            group: this._group,\n        });\n    }\n    dispose() {\n        var _a;\n        this.mutableDisposable.dispose();\n        (_a = this._part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n    update(event) {\n        var _a;\n        (_a = this._part) === null || _a === void 0 ? void 0 : _a.update(event.params);\n    }\n    updatePanels() {\n        this.update({ params: { panels: this._group.model.panels } });\n    }\n    updateActivePanel() {\n        this.update({\n            params: {\n                activePanel: this._group.model.activePanel,\n            },\n        });\n    }\n    updateGroupActive() {\n        this.update({\n            params: {\n                isGroupActive: this._group.api.isActive,\n            },\n        });\n    }\n}\n","import React from 'react';\nimport { PROPERTY_KEYS_DOCKVIEW, createDockview, } from 'dockview-core';\nimport { ReactPanelContentPart } from './reactContentPart';\nimport { ReactPanelHeaderPart } from './reactHeaderPart';\nimport { usePortalsLifecycle } from '../react';\nimport { ReactWatermarkPart } from './reactWatermarkPart';\nimport { ReactHeaderActionsRendererPart } from './headerActionsRenderer';\nfunction createGroupControlElement(component, store) {\n    return component\n        ? (groupPanel) => {\n            return new ReactHeaderActionsRendererPart(component, store, groupPanel);\n        }\n        : undefined;\n}\nconst DEFAULT_REACT_TAB = 'props.defaultTabComponent';\nfunction extractCoreOptions(props) {\n    const coreOptions = PROPERTY_KEYS_DOCKVIEW.reduce((obj, key) => {\n        if (key in props) {\n            obj[key] = props[key];\n        }\n        return obj;\n    }, {});\n    return coreOptions;\n}\nexport const DockviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const dockviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    const prevProps = React.useRef({});\n    React.useEffect(() => {\n        const changes = {};\n        PROPERTY_KEYS_DOCKVIEW.forEach((propKey) => {\n            const key = propKey;\n            const propValue = props[key];\n            if (key in props && propValue !== prevProps.current[key]) {\n                changes[key] = propValue;\n            }\n        });\n        if (dockviewRef.current) {\n            dockviewRef.current.updateOptions(changes);\n        }\n        else {\n            // not yet fully initialized\n        }\n        prevProps.current = props;\n    }, PROPERTY_KEYS_DOCKVIEW.map((key) => props[key]));\n    React.useEffect(() => {\n        var _a;\n        if (!domRef.current) {\n            return;\n        }\n        const frameworkTabComponents = (_a = props.tabComponents) !== null && _a !== void 0 ? _a : {};\n        if (props.defaultTabComponent) {\n            frameworkTabComponents[DEFAULT_REACT_TAB] =\n                props.defaultTabComponent;\n        }\n        const frameworkOptions = {\n            createLeftHeaderActionComponent: createGroupControlElement(props.leftHeaderActionsComponent, { addPortal }),\n            createRightHeaderActionComponent: createGroupControlElement(props.rightHeaderActionsComponent, { addPortal }),\n            createPrefixHeaderActionComponent: createGroupControlElement(props.prefixHeaderActionsComponent, { addPortal }),\n            createComponent: (options) => {\n                return new ReactPanelContentPart(options.id, props.components[options.name], {\n                    addPortal,\n                });\n            },\n            createTabComponent(options) {\n                return new ReactPanelHeaderPart(options.id, frameworkTabComponents[options.name], {\n                    addPortal,\n                });\n            },\n            createWatermarkComponent: props.watermarkComponent\n                ? () => {\n                    return new ReactWatermarkPart('watermark', props.watermarkComponent, {\n                        addPortal,\n                    });\n                }\n                : undefined,\n            defaultTabComponent: props.defaultTabComponent\n                ? DEFAULT_REACT_TAB\n                : undefined,\n        };\n        const api = createDockview(domRef.current, Object.assign(Object.assign({}, extractCoreOptions(props)), frameworkOptions));\n        const { clientWidth, clientHeight } = domRef.current;\n        api.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api });\n        }\n        dockviewRef.current = api;\n        return () => {\n            api.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const disposable = dockviewRef.current.onDidDrop((event) => {\n            if (props.onDidDrop) {\n                props.onDidDrop(event);\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.onDidDrop]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const disposable = dockviewRef.current.onWillDrop((event) => {\n            if (props.onWillDrop) {\n                props.onWillDrop(event);\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.onWillDrop]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createComponent: (options) => {\n                return new ReactPanelContentPart(options.id, props.components[options.name], {\n                    addPortal,\n                });\n            },\n        });\n    }, [props.components]);\n    React.useEffect(() => {\n        var _a;\n        if (!dockviewRef.current) {\n            return;\n        }\n        const frameworkTabComponents = (_a = props.tabComponents) !== null && _a !== void 0 ? _a : {};\n        if (props.defaultTabComponent) {\n            frameworkTabComponents[DEFAULT_REACT_TAB] =\n                props.defaultTabComponent;\n        }\n        dockviewRef.current.updateOptions({\n            defaultTabComponent: props.defaultTabComponent\n                ? DEFAULT_REACT_TAB\n                : undefined,\n            createTabComponent(options) {\n                return new ReactPanelHeaderPart(options.id, frameworkTabComponents[options.name], {\n                    addPortal,\n                });\n            },\n        });\n    }, [props.tabComponents, props.defaultTabComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createWatermarkComponent: props.watermarkComponent\n                ? () => {\n                    return new ReactWatermarkPart('watermark', props.watermarkComponent, {\n                        addPortal,\n                    });\n                }\n                : undefined,\n        });\n    }, [props.watermarkComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createRightHeaderActionComponent: createGroupControlElement(props.rightHeaderActionsComponent, { addPortal }),\n        });\n    }, [props.rightHeaderActionsComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createLeftHeaderActionComponent: createGroupControlElement(props.leftHeaderActionsComponent, { addPortal }),\n        });\n    }, [props.leftHeaderActionsComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createPrefixHeaderActionComponent: createGroupControlElement(props.prefixHeaderActionsComponent, { addPortal }),\n        });\n    }, [props.prefixHeaderActionsComponent]);\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nDockviewReact.displayName = 'DockviewComponent';\n","import React from 'react';\nexport const CloseButton = () => (React.createElement(\"svg\", { height: \"11\", width: \"11\", viewBox: \"0 0 28 28\", \"aria-hidden\": 'false', focusable: false, className: \"dockview-svg\" },\n    React.createElement(\"path\", { d: \"M2.1 27.3L0 25.2L11.55 13.65L0 2.1L2.1 0L13.65 11.55L25.2 0L27.3 2.1L15.75 13.65L27.3 25.2L25.2 27.3L13.65 15.75L2.1 27.3Z\" })));\nexport const ExpandMore = () => {\n    return (React.createElement(\"svg\", { width: \"11\", height: \"11\", viewBox: \"0 0 24 15\", \"aria-hidden\": 'false', focusable: false, className: \"dockview-svg\" },\n        React.createElement(\"path\", { d: \"M12 14.15L0 2.15L2.15 0L12 9.9L21.85 0.0499992L24 2.2L12 14.15Z\" })));\n};\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React from 'react';\nimport { CloseButton } from '../svg';\nfunction useTitle(api) {\n    const [title, setTitle] = React.useState(api.title);\n    React.useEffect(() => {\n        const disposable = api.onDidTitleChange((event) => {\n            setTitle(event.title);\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [api]);\n    return title;\n}\nexport const DockviewDefaultTab = (_a) => {\n    var { api, containerApi: _containerApi, params: _params, hideClose, closeActionOverride } = _a, rest = __rest(_a, [\"api\", \"containerApi\", \"params\", \"hideClose\", \"closeActionOverride\"]);\n    const title = useTitle(api);\n    const onClose = React.useCallback((event) => {\n        event.preventDefault();\n        if (closeActionOverride) {\n            closeActionOverride();\n        }\n        else {\n            api.close();\n        }\n    }, [api, closeActionOverride]);\n    const onPointerDown = React.useCallback((e) => {\n        e.preventDefault();\n    }, []);\n    const onClick = React.useCallback((event) => {\n        if (event.defaultPrevented) {\n            return;\n        }\n        api.setActive();\n        if (rest.onClick) {\n            rest.onClick(event);\n        }\n    }, [api, rest.onClick]);\n    return (React.createElement(\"div\", Object.assign({ \"data-testid\": \"dockview-dv-default-tab\" }, rest, { onClick: onClick, className: \"dv-default-tab\" }),\n        React.createElement(\"span\", { className: \"dv-default-tab-content\" }, title),\n        !hideClose && (React.createElement(\"div\", { className: \"dv-default-tab-action\", onPointerDown: onPointerDown, onClick: onClose },\n            React.createElement(CloseButton, null)))));\n};\n","import { SplitviewApi, SplitviewPanel, } from 'dockview-core';\nimport { ReactPart } from '../react';\nexport class ReactPanelView extends SplitviewPanel {\n    constructor(id, component, reactComponent, reactPortalStore) {\n        super(id, component);\n        this.reactComponent = reactComponent;\n        this.reactPortalStore = reactPortalStore;\n    }\n    getComponent() {\n        var _a, _b;\n        return new ReactPart(this.element, this.reactPortalStore, this.reactComponent, {\n            params: (_b = (_a = this._params) === null || _a === void 0 ? void 0 : _a.params) !== null && _b !== void 0 ? _b : {},\n            api: this.api,\n            containerApi: new SplitviewApi(this._params.accessor),\n        });\n    }\n}\n","import React from 'react';\nimport { createSplitview, PROPERTY_KEYS_SPLITVIEW, } from 'dockview-core';\nimport { usePortalsLifecycle } from '../react';\nimport { ReactPanelView } from './view';\nfunction extractCoreOptions(props) {\n    const coreOptions = PROPERTY_KEYS_SPLITVIEW.reduce((obj, key) => {\n        if (key in props) {\n            obj[key] = props[key];\n        }\n        return obj;\n    }, {});\n    return coreOptions;\n}\nexport const SplitviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const splitviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    const prevProps = React.useRef({});\n    React.useEffect(() => {\n        const changes = {};\n        PROPERTY_KEYS_SPLITVIEW.forEach((propKey) => {\n            const key = propKey;\n            const propValue = props[key];\n            if (key in props && propValue !== prevProps.current[key]) {\n                changes[key] = propValue;\n            }\n        });\n        if (splitviewRef.current) {\n            splitviewRef.current.updateOptions(changes);\n        }\n        else {\n            // not yet fully initialized\n        }\n        prevProps.current = props;\n    }, PROPERTY_KEYS_SPLITVIEW.map((key) => props[key]));\n    React.useEffect(() => {\n        if (!domRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const frameworkOptions = {\n            createComponent: (options) => {\n                return new ReactPanelView(options.id, options.name, props.components[options.name], { addPortal });\n            },\n        };\n        const api = createSplitview(domRef.current, Object.assign(Object.assign({}, extractCoreOptions(props)), frameworkOptions));\n        const { clientWidth, clientHeight } = domRef.current;\n        api.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api });\n        }\n        splitviewRef.current = api;\n        return () => {\n            api.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!splitviewRef.current) {\n            return;\n        }\n        splitviewRef.current.updateOptions({\n            createComponent: (options) => {\n                return new ReactPanelView(options.id, options.name, props.components[options.name], { addPortal });\n            },\n        });\n    }, [props.components]);\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nSplitviewReact.displayName = 'SplitviewComponent';\n","import { GridviewApi, GridviewPanel, } from 'dockview-core';\nimport { ReactPart } from '../react';\nexport class ReactGridPanelView extends GridviewPanel {\n    constructor(id, component, reactComponent, reactPortalStore) {\n        super(id, component);\n        this.reactComponent = reactComponent;\n        this.reactPortalStore = reactPortalStore;\n    }\n    getComponent() {\n        var _a, _b;\n        return new ReactPart(this.element, this.reactPortalStore, this.reactComponent, {\n            params: (_b = (_a = this._params) === null || _a === void 0 ? void 0 : _a.params) !== null && _b !== void 0 ? _b : {},\n            api: this.api,\n            // TODO: fix casting hack\n            containerApi: new GridviewApi(this._params\n                .accessor),\n        });\n    }\n}\n","import React from 'react';\nimport { createGridview, PROPERTY_KEYS_GRIDVIEW, } from 'dockview-core';\nimport { ReactGridPanelView } from './view';\nimport { usePortalsLifecycle } from '../react';\nfunction extractCoreOptions(props) {\n    const coreOptions = PROPERTY_KEYS_GRIDVIEW.reduce((obj, key) => {\n        if (key in props) {\n            obj[key] = props[key];\n        }\n        return obj;\n    }, {});\n    return coreOptions;\n}\nexport const GridviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const gridviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    const prevProps = React.useRef({});\n    React.useEffect(() => {\n        const changes = {};\n        PROPERTY_KEYS_GRIDVIEW.forEach((propKey) => {\n            const key = propKey;\n            const propValue = props[key];\n            if (key in props && propValue !== prevProps.current[key]) {\n                changes[key] = propValue;\n            }\n        });\n        if (gridviewRef.current) {\n            gridviewRef.current.updateOptions(changes);\n        }\n        else {\n            // not yet fully initialized\n        }\n        prevProps.current = props;\n    }, PROPERTY_KEYS_GRIDVIEW.map((key) => props[key]));\n    React.useEffect(() => {\n        if (!domRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const frameworkOptions = {\n            createComponent: (options) => {\n                return new ReactGridPanelView(options.id, options.name, props.components[options.name], { addPortal });\n            },\n        };\n        const api = createGridview(domRef.current, Object.assign(Object.assign({}, extractCoreOptions(props)), frameworkOptions));\n        const { clientWidth, clientHeight } = domRef.current;\n        api.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api });\n        }\n        gridviewRef.current = api;\n        return () => {\n            api.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!gridviewRef.current) {\n            return;\n        }\n        gridviewRef.current.updateOptions({\n            createComponent: (options) => {\n                return new ReactGridPanelView(options.id, options.name, props.components[options.name], { addPortal });\n            },\n        });\n    }, [props.components]);\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nGridviewReact.displayName = 'GridviewComponent';\n","import { ReactPart } from '../react';\nexport class PanePanelSection {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._element = document.createElement('div');\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            title: parameters.title,\n            containerApi: parameters.containerApi,\n        });\n    }\n    toJSON() {\n        return {\n            id: this.id,\n        };\n    }\n    update(params) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update(params.params);\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import React from 'react';\nimport { createPaneview, PROPERTY_KEYS_PANEVIEW, } from 'dockview-core';\nimport { usePortalsLifecycle } from '../react';\nimport { PanePanelSection } from './view';\nfunction extractCoreOptions(props) {\n    const coreOptions = PROPERTY_KEYS_PANEVIEW.reduce((obj, key) => {\n        if (key in props) {\n            obj[key] = props[key];\n        }\n        return obj;\n    }, {});\n    return coreOptions;\n}\nexport const PaneviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const paneviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    const prevProps = React.useRef({});\n    React.useEffect(() => {\n        const changes = {};\n        PROPERTY_KEYS_PANEVIEW.forEach((propKey) => {\n            const key = propKey;\n            const propValue = props[key];\n            if (key in props && propValue !== prevProps.current[key]) {\n                changes[key] = propValue;\n            }\n        });\n        if (paneviewRef.current) {\n            paneviewRef.current.updateOptions(changes);\n        }\n        else {\n            // not yet fully initialized\n        }\n        prevProps.current = props;\n    }, PROPERTY_KEYS_PANEVIEW.map((key) => props[key]));\n    React.useEffect(() => {\n        var _a;\n        if (!domRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const headerComponents = (_a = props.headerComponents) !== null && _a !== void 0 ? _a : {};\n        const frameworkOptions = {\n            createComponent: (options) => {\n                return new PanePanelSection(options.id, props.components[options.name], { addPortal });\n            },\n            createHeaderComponent: (options) => {\n                return new PanePanelSection(options.id, headerComponents[options.name], { addPortal });\n            },\n        };\n        const api = createPaneview(domRef.current, Object.assign(Object.assign({}, extractCoreOptions(props)), frameworkOptions));\n        const { clientWidth, clientHeight } = domRef.current;\n        api.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api });\n        }\n        paneviewRef.current = api;\n        return () => {\n            api.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return;\n        }\n        paneviewRef.current.updateOptions({\n            createComponent: (options) => {\n                return new PanePanelSection(options.id, props.components[options.name], { addPortal });\n            },\n        });\n    }, [props.components]);\n    React.useEffect(() => {\n        var _a;\n        if (!paneviewRef.current) {\n            return;\n        }\n        const headerComponents = (_a = props.headerComponents) !== null && _a !== void 0 ? _a : {};\n        paneviewRef.current.updateOptions({\n            createHeaderComponent: (options) => {\n                return new PanePanelSection(options.id, headerComponents[options.name], { addPortal });\n            },\n        });\n    }, [props.headerComponents]);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const disposable = paneviewRef.current.onDidDrop((event) => {\n            if (props.onDidDrop) {\n                props.onDidDrop(event);\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.onDidDrop]);\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nPaneviewReact.displayName = 'PaneviewComponent';\n","// extracted by mini-css-extract-plugin\nexport default {\"admonition\":\"admonition_Gfwi\",\"admonitionHeading\":\"admonitionHeading_f1Ed\",\"admonitionIcon\":\"admonitionIcon_kpSf\",\"admonitionContent\":\"admonitionContent_UjKb\"};","import React from 'react';\nimport clsx from 'clsx';\nimport { ThemeClassNames } from '@docusaurus/theme-common';\nimport styles from './styles.module.css';\nfunction AdmonitionContainer({ type, className, children }) {\n    return (\n        <div\n            className={clsx(\n                ThemeClassNames.common.admonition,\n                ThemeClassNames.common.admonitionType(type),\n                styles.admonition,\n                className\n            )}\n        >\n            {children}\n        </div>\n    );\n}\nfunction AdmonitionHeading({ icon, title }) {\n    return (\n        <div className={styles.admonitionHeading}>\n            <span className={styles.admonitionIcon}>{icon}</span>\n            {/* {title} */}\n        </div>\n    );\n}\nfunction AdmonitionContent({ children }) {\n    return children ? (\n        <div className={styles.admonitionContent}>{children}</div>\n    ) : null;\n}\nexport default function AdmonitionLayout(props) {\n    const { type, icon, title, children, className } = props;\n    return (\n        <AdmonitionContainer type={type} className={className}>\n            <AdmonitionHeading title={title} icon={icon} />\n            <AdmonitionContent>{children}</AdmonitionContent>\n        </AdmonitionContainer>\n    );\n}\n","import React from 'react';\nexport default function AdmonitionIconNote(props) {\n  return (\n    <svg viewBox=\"0 0 14 16\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        d=\"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z\"\n      />\n    </svg>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport Translate from '@docusaurus/Translate';\nimport AdmonitionLayout from '@theme/Admonition/Layout';\nimport IconNote from '@theme/Admonition/Icon/Note';\nconst infimaClassName = 'alert alert--secondary';\nconst defaultProps = {\n  icon: <IconNote />,\n  title: (\n    <Translate\n      id=\"theme.admonition.note\"\n      description=\"The default label used for the Note admonition (:::note)\">\n      note\n    </Translate>\n  ),\n};\nexport default function AdmonitionTypeNote(props) {\n  return (\n    <AdmonitionLayout\n      {...defaultProps}\n      {...props}\n      className={clsx(infimaClassName, props.className)}>\n      {props.children}\n    </AdmonitionLayout>\n  );\n}\n","import React from 'react';\nexport default function AdmonitionIconTip(props) {\n  return (\n    <svg viewBox=\"0 0 12 16\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        d=\"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z\"\n      />\n    </svg>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport Translate from '@docusaurus/Translate';\nimport AdmonitionLayout from '@theme/Admonition/Layout';\nimport IconTip from '@theme/Admonition/Icon/Tip';\nconst infimaClassName = 'alert alert--success';\nconst defaultProps = {\n  icon: <IconTip />,\n  title: (\n    <Translate\n      id=\"theme.admonition.tip\"\n      description=\"The default label used for the Tip admonition (:::tip)\">\n      tip\n    </Translate>\n  ),\n};\nexport default function AdmonitionTypeTip(props) {\n  return (\n    <AdmonitionLayout\n      {...defaultProps}\n      {...props}\n      className={clsx(infimaClassName, props.className)}>\n      {props.children}\n    </AdmonitionLayout>\n  );\n}\n","import React from 'react';\nexport default function AdmonitionIconInfo(props) {\n  return (\n    <svg viewBox=\"0 0 14 16\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        d=\"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z\"\n      />\n    </svg>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport Translate from '@docusaurus/Translate';\nimport AdmonitionLayout from '@theme/Admonition/Layout';\nimport IconInfo from '@theme/Admonition/Icon/Info';\nconst infimaClassName = 'alert alert--info';\nconst defaultProps = {\n  icon: <IconInfo />,\n  title: (\n    <Translate\n      id=\"theme.admonition.info\"\n      description=\"The default label used for the Info admonition (:::info)\">\n      info\n    </Translate>\n  ),\n};\nexport default function AdmonitionTypeInfo(props) {\n  return (\n    <AdmonitionLayout\n      {...defaultProps}\n      {...props}\n      className={clsx(infimaClassName, props.className)}>\n      {props.children}\n    </AdmonitionLayout>\n  );\n}\n","import React from 'react';\nexport default function AdmonitionIconCaution(props) {\n  return (\n    <svg viewBox=\"0 0 16 16\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        d=\"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z\"\n      />\n    </svg>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport Translate from '@docusaurus/Translate';\nimport AdmonitionLayout from '@theme/Admonition/Layout';\nimport IconWarning from '@theme/Admonition/Icon/Warning';\nconst infimaClassName = 'alert alert--warning';\nconst defaultProps = {\n  icon: <IconWarning />,\n  title: (\n    <Translate\n      id=\"theme.admonition.warning\"\n      description=\"The default label used for the Warning admonition (:::warning)\">\n      warning\n    </Translate>\n  ),\n};\nexport default function AdmonitionTypeWarning(props) {\n  return (\n    <AdmonitionLayout\n      {...defaultProps}\n      {...props}\n      className={clsx(infimaClassName, props.className)}>\n      {props.children}\n    </AdmonitionLayout>\n  );\n}\n","import React from 'react';\nexport default function AdmonitionIconDanger(props) {\n  return (\n    <svg viewBox=\"0 0 12 16\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        d=\"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z\"\n      />\n    </svg>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport Translate from '@docusaurus/Translate';\nimport AdmonitionLayout from '@theme/Admonition/Layout';\nimport IconDanger from '@theme/Admonition/Icon/Danger';\nconst infimaClassName = 'alert alert--danger';\nconst defaultProps = {\n  icon: <IconDanger />,\n  title: (\n    <Translate\n      id=\"theme.admonition.danger\"\n      description=\"The default label used for the Danger admonition (:::danger)\">\n      danger\n    </Translate>\n  ),\n};\nexport default function AdmonitionTypeDanger(props) {\n  return (\n    <AdmonitionLayout\n      {...defaultProps}\n      {...props}\n      className={clsx(infimaClassName, props.className)}>\n      {props.children}\n    </AdmonitionLayout>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport Translate from '@docusaurus/Translate';\nimport AdmonitionLayout from '@theme/Admonition/Layout';\nimport IconWarning from '@theme/Admonition/Icon/Warning';\nconst infimaClassName = 'alert alert--warning';\nconst defaultProps = {\n  icon: <IconWarning />,\n  title: (\n    <Translate\n      id=\"theme.admonition.caution\"\n      description=\"The default label used for the Caution admonition (:::caution)\">\n      caution\n    </Translate>\n  ),\n};\n// TODO remove before v4: Caution replaced by Warning\n// see https://github.com/facebook/docusaurus/issues/7558\nexport default function AdmonitionTypeCaution(props) {\n  return (\n    <AdmonitionLayout\n      {...defaultProps}\n      {...props}\n      className={clsx(infimaClassName, props.className)}>\n      {props.children}\n    </AdmonitionLayout>\n  );\n}\n","import React from 'react';\nimport AdmonitionTypeNote from '@theme/Admonition/Type/Note';\nimport AdmonitionTypeTip from '@theme/Admonition/Type/Tip';\nimport AdmonitionTypeInfo from '@theme/Admonition/Type/Info';\nimport AdmonitionTypeWarning from '@theme/Admonition/Type/Warning';\nimport AdmonitionTypeDanger from '@theme/Admonition/Type/Danger';\nimport AdmonitionTypeCaution from '@theme/Admonition/Type/Caution';\nconst admonitionTypes = {\n  note: AdmonitionTypeNote,\n  tip: AdmonitionTypeTip,\n  info: AdmonitionTypeInfo,\n  warning: AdmonitionTypeWarning,\n  danger: AdmonitionTypeDanger,\n};\n// Undocumented legacy admonition type aliases\n// Provide hardcoded/untranslated retrocompatible label\n// See also https://github.com/facebook/docusaurus/issues/7767\nconst admonitionAliases = {\n  secondary: (props) => <AdmonitionTypeNote title=\"secondary\" {...props} />,\n  important: (props) => <AdmonitionTypeInfo title=\"important\" {...props} />,\n  success: (props) => <AdmonitionTypeTip title=\"success\" {...props} />,\n  caution: AdmonitionTypeCaution,\n};\nexport default {\n  ...admonitionTypes,\n  ...admonitionAliases,\n};\n","import React from 'react';\nimport {processAdmonitionProps} from '@docusaurus/theme-common';\nimport AdmonitionTypes from '@theme/Admonition/Types';\nfunction getAdmonitionTypeComponent(type) {\n  const component = AdmonitionTypes[type];\n  if (component) {\n    return component;\n  }\n  console.warn(\n    `No admonition component found for admonition type \"${type}\". Using Info as fallback.`,\n  );\n  return AdmonitionTypes.info;\n}\nexport default function Admonition(unprocessedProps) {\n  const props = processAdmonitionProps(unprocessedProps);\n  const AdmonitionTypeComponent = getAdmonitionTypeComponent(props.type);\n  return <AdmonitionTypeComponent {...props} />;\n}\n","import React from 'react';\n// Import the original mapper\nimport MDXComponents from '@theme-original/MDXComponents';\nimport { FrameworkSpecific } from '@site/src/components/frameworkSpecific';\nimport { CodeRunner } from '../components/ui/codeRunner';\n\nexport default {\n    // Re-use the default mapping\n    ...MDXComponents,\n    // Map the \"<Highlight>\" tag to our Highlight component\n    // `Highlight` will receive all props that were passed to `<Highlight>` in MDX\n    FrameworkSpecific,\n    CodeRunner,\n};\n","import BrowserOnly from '@docusaurus/BrowserOnly';\nimport { DockviewEmitter } from 'dockview';\nimport * as React from 'react';\nimport './frameworkSpecific.css';\n\nexport interface FrameworkDescriptor {\n    value: string;\n    label: string;\n    icon: string;\n}\n\nconst frameworks: FrameworkDescriptor[] = [\n    { value: 'JavaScript', label: 'JavaScript', icon: 'img/js-icon.svg' },\n    { value: 'React', label: 'React', icon: 'img/react-icon.svg' },\n    { value: 'Vue', label: 'Vue', icon: 'img/vue-icon.svg' },\n    // { value: 'Angular', label: 'Angular' },\n];\n\nconst activeFrameworkGlobal = new DockviewEmitter<string>({ replay: true });\n\nexport function useActiveFramework(): [\n    FrameworkDescriptor,\n    (value: string) => void\n] {\n    const [value, setValue] = React.useState<string>(\n        localStorage.getItem('dv-docs-framework') ?? frameworks[0].value\n    );\n\n    React.useEffect(() => {\n        const disposable = activeFrameworkGlobal.event((value) => [\n            setValue(value),\n        ]);\n\n        activeFrameworkGlobal.fire(\n            localStorage.getItem('dv-docs-framework') ?? frameworks[0].value\n        );\n\n        return () => {\n            disposable.dispose();\n        };\n    }, []);\n\n    const setter = React.useCallback((value: string) => {\n        localStorage.setItem('dv-docs-framework', value);\n        setValue(value);\n        activeFrameworkGlobal.fire(value);\n    }, []);\n\n    const option = frameworks.find((_) => _.value === value);\n\n    return [option, setter];\n}\n\nimport * as DropdownMenu from '@radix-ui/react-dropdown-menu';\nimport useBaseUrl from '@docusaurus/useBaseUrl';\n\nconst FrameworkSelector1 = () => {\n    const [activeFramework, setActiveFramework] = useActiveFramework();\n\n    const onChange = (event: React.ChangeEvent<HTMLSelectElement>) => [\n        setActiveFramework(event.target.value),\n    ];\n\n    return (\n        <DropdownMenu.Root>\n            <DropdownMenu.Trigger asChild={true}>\n                <div className=\"framework-menu-item-select\">\n                    <span style={{ padding: '0px 8px' }}>\n                        {activeFramework.label}\n                    </span>\n                    <img\n                        width={20}\n                        height={20}\n                        src={useBaseUrl(activeFramework.icon)}\n                        style={{ marginRight: '8px' }}\n                    />\n                </div>\n            </DropdownMenu.Trigger>\n            <DropdownMenu.Content\n                side=\"bottom\"\n                align=\"end\"\n                sideOffset={10}\n                className=\"DropdownMenuContent\"\n            >\n                {frameworks.map((framework) => {\n                    return (\n                        <DropdownMenu.Item\n                            onClick={() => setActiveFramework(framework.label)}\n                            className=\"DropdownMenuItem\"\n                        >\n                            <div className=\"framework-menu-item\">\n                                <span style={{ paddingRight: '8px' }}>\n                                    {framework.label}\n                                </span>\n                                <img\n                                    width={20}\n                                    height={20}\n                                    src={useBaseUrl(framework.icon)}\n                                />\n                            </div>\n                        </DropdownMenu.Item>\n                    );\n                })}\n            </DropdownMenu.Content>\n        </DropdownMenu.Root>\n    );\n};\n\nexport const FrameworkSelector = () => {\n    return <BrowserOnly>{() => <FrameworkSelector1 />}</BrowserOnly>;\n};\n\nconst FrameworkSpecific1 = (props: {\n    framework: string;\n    children: React.ReactNode;\n}) => {\n    const [activeFramework] = useActiveFramework();\n\n    if (activeFramework.value === props.framework) {\n        return props.children;\n    }\n\n    return null;\n};\n\nexport const FrameworkSpecific = (props: {\n    framework: string;\n    children: React.ReactNode;\n}) => {\n    return <BrowserOnly>{() => <FrameworkSpecific1 {...props} />}</BrowserOnly>;\n};\n","import * as React from 'react';\nimport { useActiveFramework } from '../frameworkSpecific';\nimport BrowserOnly from '@docusaurus/BrowserOnly';\n\nconst BASE_SANDBOX_URL =\n    'https://codesandbox.io/s/github/mathuo/dockview/tree/gh-pages';\n\nexport const _CodeRunner = (props: { id: string; height: number }) => {\n    const [framework] = useActiveFramework();\n\n    const sandboxUrl = `${BASE_SANDBOX_URL}/templates/${\n        props.id\n    }/${framework.label.toLowerCase()}`;\n    const path = `/templates/${\n        props.id\n    }/${framework.value.toLowerCase()}/index.html`;\n    return (\n        <div>\n            <iframe\n                src={path}\n                style={{ width: '100%', height: `${props.height ?? 300}px` }}\n            />\n            <div style={{ display: 'flex', justifyContent: 'flex-end' }}>\n                <CodeSandbox url={sandboxUrl} />\n                <a\n                    target=\"#blank\"\n                    href={path}\n                    className=\"material-symbols-outlined\"\n                >\n                    open_in_new\n                </a>\n            </div>\n        </div>\n    );\n};\n\nexport const CodeRunner = (props: { id: string; height: number }) => {\n    return <BrowserOnly>{() => <_CodeRunner {...props} />}</BrowserOnly>;\n};\n\nconst CodeSandbox = (props: { url: string }) => {\n    return (\n        <span\n            className=\"codesandbox-button\"\n            style={{ display: 'flex', alignItems: 'center' }}\n        >\n            <span className=\"codesandbox-button-pretext\">{`Open in `}</span>\n            <a\n                href={props.url}\n                target={'_blank'}\n                rel=\"noopener\"\n                className=\"codesandbox-button-content\"\n            >\n                <span\n                    style={{\n                        fontWeight: 'bold',\n                        paddingRight: '4px',\n                    }}\n                >\n                    CodeSandbox\n                </span>\n            </a>\n        </span>\n    );\n};\n"],"names":["BlogListPaginator","props","metadata","previousPage","nextPage","_jsxs","className","translate","id","message","description","children","_jsx","PaginatorNavLink","permalink","title","Translate","isNext","BlogPostItems","_ref","items","component","BlogPostItemComponent","BlogPostItem","_Fragment","map","_ref2","content","BlogPostContent","BlogPostProvider","useBlogTagsPostsPageTitle","tag","blogPostsPlural","selectMessage","usePluralForm","count","useBlogPostsPlural","nPosts","tagName","label","BlogTagsPostsPageMetadata","PageMetadata","SearchMetadata","BlogTagsPostsPageContent","sidebar","listMetadata","BlogLayout","unlisted","Unlisted","Heading","as","Link","href","allTagsPath","BlogTagsPostsPage","HtmlClassNameProvider","clsx","ThemeClassNames","wrapper","blogPages","page","blogTagPostListPage","UnlistedBannerTitle","UnlistedBannerMessage","UnlistedMetadata","Head","name","UnlistedBanner","Admonition","type","common","unlistedBanner","TransferObject","PanelTransfer","constructor","viewId","groupId","panelId","super","this","PaneTransfer","paneId","LocalSelectionTransfer","getInstance","INSTANCE","hasData","proto","clearData","undefined","data","getData","setData","getPanelData","panelTransfer","prototype","getPaneData","paneTransfer","Event","Disposable","any","_len","arguments","length","Array","_key","listener","disposables","child","dispose","forEach","d","DockviewEvent","_defaultPrevented","defaultPrevented","preventDefault","AcceptableEvent","_isAccepted","isAccepted","accept","Stacktrace","create","_a","Error","stack","value","print","console","warn","Listener","callback","stacktrace","Emitter","setLeakageMonitorEnabled","isEnabled","ENABLE_TRACKING","MEMORY_LEAK_WATCHER","clear","_last","options","_listeners","_disposed","event","_event","replay","push","index","indexOf","splice","add","fire","e","queueMicrotask","delete","addDisposableWindowListener","element","addEventListener","removeEventListener","addDisposableListener","events","Map","size","set","AsapEvent","_onFired","_currentFireCount","_queued","onEvent","fireCountAtTimeOfEventSubscription","NONE","from","func","CompositeDisposable","isDisposed","_isDisposed","args","_disposables","addDisposables","_len2","_key2","arg","MutableDisposable","_disposable","disposable","watchElementResize","cb","observer","ResizeObserver","entires","requestAnimationFrame","firstEntry","observe","unobserve","disconnect","removeClasses","classes","classname","classList","contains","remove","addClasses","toggleClass","isToggled","hasClass","isAncestor","testChild","testAncestor","parentNode","getElementsByTagName","slice","call","document","trackFocus","FocusTracker","_onDidFocus","onDidFocus","_onDidBlur","onDidBlur","hasFocus","activeElement","loosingFocus","onFocus","onBlur","window","setTimeout","_refreshStateHandler","HTMLElement","refreshState","QUASI_PREVENT_DEFAULT_KEY","quasiDefaultPrevented","getDomNodePagePosition","domNode","left","top","width","height","getBoundingClientRect","scrollX","scrollY","disableIframePointEvents","iframes","original","WeakMap","iframe","style","pointerEvents","release","get","Classnames","_classNames","setClassNames","classNames","split","filter","v","trim","tail","arr","sequenceEquals","arr1","arr2","i","pushToStart","unshift","pushToEnd","array","findIndex","t","clamp","min","max","Math","sequentialNumberGenerator","next","toString","range","to","result","ViewItem","_size","cachedVisibleSize","_cachedVisibleSize","visible","minimumSize","view","viewMinimumSize","maximumSize","viewMaximumSize","priority","snap","enabled","container","setVisible","toggle","Orientation","SashState","LayoutPriority","Sizing","Distribute","Split","Invisible","Splitview","contentSize","_contentSize","orthogonalSize","_orthogonalSize","viewItems","proportions","_proportions","orientation","_orientation","tmp","HORIZONTAL","reduce","r","item","Number","POSITIVE_INFINITY","startSnappingEnabled","_startSnappingEnabled","updateSashEnablement","endSnappingEnabled","_endSnappingEnabled","disabled","_disabled","margin","_margin","_this","sashes","_onDidSashEnd","onDidSashEnd","_onDidAddView","onDidAddView","_onDidRemoveView","onDidRemoveView","resize","delta","sizes","lowPriorityIndexes","highPriorityIndexes","overloadMinDelta","overloadMaxDelta","snapBefore","snapAfter","x","NEGATIVE_INFINITY","upIndexes","downIndexes","upItems","upSizes","downItems","downSizes","minDeltaUp","_","maxDeltaUp","maxDeltaDown","minDeltaDown","minDelta","maxDelta","snapped","snapView","limitDelta","actualDelta","deltaUp","viewDelta","deltaDown","createContainer","proportionalLayout","viewContainer","createViewContainer","sashContainer","createSashContainer","appendChild","styles","descriptor","views","viewDescriptor","sizing","addView","saveProportions","separatorBorder","removeProperty","setProperty","isViewVisible","setViewVisible","viewItem","distributeEmptySpace","layoutViews","getViewSize","resizeView","indexes","Low","High","round","relayout","getViews","onDidChange","skipLayout","createElement","viewSize","newSize","removeChild","insertBefore","sash","onPointerStart","start","clientX","clientY","sashIndex","fn","firstIndex","s","snapBeforeIndex","findFirstSnapIndex","snapAfterIndex","snappedViewItem","halfSize","floor","onPointerMove","end","sashItem","distributeViewSizes","flexibleViewItems","flexibleSize","removeView","getViewCachedVisibleSize","moveView","layout","previousSize","total","proportion","lowPriorityIndex","emptyDelta","visibleViewItems","sashCount","marginReducedSize","totalLeftOffset","viewLeftOffsets","runningVisiblePanelCount","flag","visiblePanelsBeforeThisView","offset","sashWidth","VERTICAL","previous","collapsesDown","expandsDown","reverseViews","reverse","collapsesUp","expandsUp","position","snappedBefore","snappedAfter","updateSash","MINIMUM","MAXIMUM","DISABLED","ENABLED","state","orientationClassname","PROPERTY_KEYS_SPLITVIEW","properties","disableAutoResizing","Object","keys","Paneview","splitview","paneItems","skipAnimation","_onDidChange","getPanes","pane","onDidChangeExpansionState","setupAnimation","paneItem","addPane","removePane","skipDispose","animationTimer","clearTimeout","LeafNode","minimumWidth","maximumWidth","minimumHeight","maximumHeight","minimumOrthogonalSize","maximumOrthogonalSize","BranchNode","c","Normal","priorities","some","p","childDescriptors","_childrenDisposable","_onDidVisibilityChange","onDidVisibilityChange","childDescriptor","node","setupChildrenEvents","_visible","isChildVisible","setChildVisible","wereAllChildrenHidden","areAllChildrenHidden","moveChild","_removeChild","_addChild","getChildSize","resizeChild","addChild","getChildCachedVisibleSize","findLeaf","candiateNode","last","flipNode","orthogonal","totalSize","childSize","getGridLocation","parentElement","test","el","firstElementChild","lastElementChild","nextElementSibling","indexInParent","getRelativeLocation","rootOrientation","location","direction","getLocationOrientation","directionOrientation","getDirectionOrientation","rest","_index","serializeBranchNode","box","isGridBranchNode","toJSON","Gridview","_root","root","locked","_locked","branch","pop","maximizedView","_maximizedNode","leaf","hasMaximizedView","maximizeView","getNode","exitMaximizedView","getView","hiddenOnMaximize","hideAllViewsBut","parent","exclude","_onDidMaximizedNodeChange","isMaximized","showViewsInReverseOrder","includes","serialize","maxmizedViewLocation","resullt","maximizedNode","_onDidViewVisibilityChange","deserialize","json","deserializer","_deserialize","_deserializeNode","serializedChild","fromJSON","oldRoot","insertOrthogonalSplitviewAtRoot","childReference","progmaticSelect","_getViews","nodeCachedVisibleSize","path","n","l","onDidViewVisibilityChange","onDidMaximizedNodeChange","parentLocation","pathToParent","grandParent","parentIndex","__","newSiblingSize","newSiblingCachedVisibleSize","newParent","newSibling","nodeToRemove","sibling","isSiblingVisible","siblingSizing","PROPERTY_KEYS_GRIDVIEW","hideBorders","Resizable","_element","disableResizing","_disableResizing","entry","offsetParent","currentElement","DocumentFragment","host","isInDocument","contentRect","nextLayoutId","toTarget","BaseGrid","_id","_groups","groups","values","gridview","activeGroup","_activeGroup","_onDidRemove","onDidRemove","_onDidAdd","onDidAdd","_onDidMaximizedChange","onDidMaximizedChange","_onDidActiveChange","onDidActiveChange","_bufferOnDidLayoutChange","onDidLayoutChange","_onDidViewVisibilityChangeMicroTaskQueue","onDidViewVisibilityChangeMicroTaskQueue","panel","isVisible","updateOptions","_b","_c","_d","maximizeGroup","doSetGroupActive","isMaximizedGroup","exitMaximizedGroup","hasMaximizedGroup","doAddGroup","group","doRemoveGroup","has","skipActive","getPanel","setActive","removeGroup","moveToNext","moveToPrevious","forceResize","SplitviewApi","panels","onDidLayoutFromJSON","removePanel","focus","addPanel","movePanel","PaneviewApi","onDidDrop","onUnhandledDragOverEvent","GridviewApi","onDidAddPanel","onDidAddGroup","onDidRemovePanel","onDidRemoveGroup","onDidActivePanelChange","onDidActiveGroupChange","force","DockviewApi","totalPanels","gap","onDidMovePanel","onWillDrop","onWillShowOverlay","onWillDragGroup","onWillDragPanel","activePanel","getGroupPanel","addGroup","closeAllGroups","getGroup","addFloatingGroup","onDidMaximizedGroupChange","addPopoutGroup","setGap","DragHandler","dataDisposable","pointerEventsDisposable","_onDragStart","onDragStart","configure","isCancelled","dataTransfer","effectAllowed","DragAndDropObserver","callbacks","target","registerListeners","onDragEnter","onDragOver","onDragLeave","onDragEnd","onDrop","WillShowOverlayEvent","nativeEvent","directionToPosition","positionToDirection","DEFAULT_ACTIVATION_SIZE","DEFAULT_SIZE","Droptarget","_state","_onDrop","_onWillShowOverlay","_acceptedTargetZonesSet","Set","acceptedTargetZones","dnd","removeDropTarget","clientWidth","clientHeight","rect","currentTarget","y","quadrant","calculateQuadrant","isAlreadyUsed","canDisplayOverlay","willShowOverlayEvent","markAsUsed","targetElement","overlayElement","append","toggleClasses","stopPropagation","setTargetZones","setOverlayModel","model","overlayModel","USED_EVENT_ID","isSmallX","isSmallY","isLeft","isRight","isTop","isBottom","rightClass","leftClass","topClass","bottomClass","sizeOptions","overlayType","activationSizeOptions","activationSize","threshold","xp","yp","calculateQuadrantAsPercentage","calculateQuadrantAsPixels","PROPERTY_KEYS_PANEVIEW","disableDnd","PaneviewUnhandledDragOverEvent","WillFocusEvent","PanelApiImpl","isFocused","_isFocused","isActive","_isActive","_isVisible","_width","_height","_parameters","panelUpdatesDisposable","_onDidDimensionChange","onDidDimensionsChange","_onDidChangeFocus","onDidFocusChange","_onWillFocus","onWillFocus","_onWillVisibilityChange","onWillVisibilityChange","_onActiveChange","onActiveChange","_onDidParametersChange","onDidParametersChange","getParameters","initialize","parameters","update","params","updateParameters","SplitviewPanelApiImpl","_onDidConstraintsChangeInternal","onDidConstraintsChangeInternal","_onDidConstraintsChange","onDidConstraintsChange","_onDidSizeChange","onDidSizeChange","setConstraints","setSize","PaneviewPanelApiImpl","_pane","_onDidExpansionChange","onDidExpansionChange","_onMouseEnter","onMouseEnter","_onMouseLeave","onMouseLeave","setExpanded","isExpanded","BasePanelView","_params","api","tabIndex","outline","overflow","focusTracker","part","init","getComponent","assign","key","PaneviewPanel","headerSize","_minimumBodySize","_maximumBodySize","minimumBodySize","maximumBodySize","headerVisible","_headerVisible","header","display","headerComponent","isHeaderVisible","_onDidChangeExpansionState","_isExpanded","expandedSize","accessor","ev","isPanelExpanded","renderOnce","expanded","body","bodyPart","getBodyComponent","headerPart","getHeaderComponent","lineHeight","minHeight","maxHeight","DraggablePaneviewPanel","_onDidDrop","_onUnhandledDragOverEvent","initDragFeatures","accessorId","draggable","handler","firedEvent","containerApi","existingPanel","allPanels","fromIndex","toIndex","ContentContainer","dropTarget","shiftKey","show","hide","renderPanel","asActive","doRender","isPanelActive","renderer","renderContainer","detatch","attach","referenceContainer","openPanel","closePanel","TabDragHandler","Tab","_onChanged","onChanged","_onDropped","dragHandler","setContent","GroupDragHandler","dragEvent","getComputedStyle","bgColor","getPropertyValue","color","ghostElement","backgroundColor","padding","fontSize","borderRadius","textContent","setDragImage","addGhostImage","VoidContainer","dropTraget","TabsContainer","tabs","hidden","_hidden","setRightActionsElement","rightActions","rightActionsContainer","setLeftActionsElement","leftActions","leftActionsContainer","setPrefixActionsElement","preActions","preActionsContainer","tab","selectedIndex","_onTabDragStart","onTabDragStart","_onGroupDragStart","onGroupDragStart","singleTabMode","tabContainer","voidContainer","WillShowOverlayLocationEvent","kind","disableFloatingGroups","rootTop","rootLeft","inDragMode","button","_isGroupActive","tabToRemove","updateClassnames","setActivePanel","isActivePanel","find","isFloatingGroupsEnabled","isFloatingWithOnePanel","addTab","DockviewUnhandledDragOverEvent","PROPERTY_KEYS_DOCKVIEW","floatingGroupBounds","popoutUrl","defaultRenderer","debug","rootOverlayModel","noPanelsOverlay","DockviewDidDropEvent","DockviewWillDropEvent","_kind","DockviewGroupPanelModel","_activePanel","_panels","isEmpty","hasWatermark","watermark","tabsContainer","isContentFocused","contentContainer","_location","groupPanel","_onDidLocationChange","mostRecentlyUsed","_overwriteRenderContainer","_panelDisposables","_onMove","onMove","_onWillDrop","_onDidAddPanel","_onDidPanelTitleChange","onDidPanelTitleChange","_onDidPanelParametersChange","onDidPanelParametersChange","_onDidRemovePanel","_onDidActivePanelChange","_api","hideHeader","handleDropEvent","focusContent","rerender","overlayRenderContainer","doAddPanel","updateContainer","createRightHeaderActionComponent","_rightHeaderActions","createLeftHeaderActionComponent","_leftHeaderActions","createPrefixHeaderActionComponent","_prefixHeaderActions","activeView","normalizedIndex","suppressRoll","containsPanel","skipSetActive","updateParentGroup","doSetActivePanel","skipSetGroupActive","groupItemOrId","panelToRemove","_removePanel","closeAllPanels","arrPanelCpy","doClose","isLast","removeEmptyGroup","updateActions","isGroupActive","doRemovePanel","nextPanel","skipSetActiveGroup","hasExistingPanel","updateMru","onDidTitleChange","runEvents","createWatermarkComponent","willDropEvent","getKind","itemId","GridviewPanelApiImpl","GridviewPanel","_priority","_snap","__minimumWidth","__minimumHeight","__maximumHeight","__maximumWidth","_minimumWidth","_evaluatedMinimumWidth","updateConstraints","_maximumWidth","_evaluatedMaximumWidth","_minimumHeight","_evaluatedMinimumHeight","_maximumHeight","_evaluatedMaximumHeight","MAX_SAFE_INTEGER","maximum","minimum","NOT_INITIALIZED_MESSAGE","DockviewGroupPanelApiImpl","_group","_mutableDisposable","onDidLocationChange","close","getWindow","moveTo","moveGroupOrPanel","maximize","exitMaximized","DockviewGroupPanel","activePanelMinimumWidth","activePanelMinimumHeight","activePanelMaximumWidth","activePanelMaximumHeight","_model","_e","_f","constraints","DockviewPanelApiImpl","oldGroup","_onDidGroupChange","setupGroupEventListeners","tabComponent","_tabComponent","_onDidTitleChange","_onDidActiveGroupChange","onDidGroupChange","_onDidRendererChange","onDidRendererChange","groupEventsDisposable","setTitle","setRenderer","previousGroup","_trackGroupActive","hasBecomeHidden","hasBecomeVisible","DockviewPanel","_title","_renderer","contentComponent","isPanelVisible","createSvgElementFromPath","svg","createElementNS","setAttributeNS","viewbox","DefaultTab","_content","action","render","DockviewPanelModel","_tab","createContentComponent","createTabComponent","_isPanelVisible","componentName","createComponent","defaultTabComponent","DefaultDockviewDeserialzier","panelData","viewData","Watermark","arialLevelTracker","_orderedList","destroy","setAttribute","zIndex","Overlay","minimumInViewportWidth","minimumInViewportHeight","_onDidChangeEnd","onDidChangeEnd","setupResize","setBounds","bottom","right","bringToFront","bounds","verticalAlignment","horiziontalAlignment","containerRect","overlayRect","xOffset","getMinimumWidth","yOffset","getMinimumHeight","parseFloat","setupDrag","dragTarget","move","track","resizeHandleElement","startPosition","originalY","originalHeight","originalX","originalWidth","moveTop","MAX_VALUE","MINIMUM_HEIGHT","moveBottom","moveLeft","MINIMUM_WIDTH","moveRight","DockviewFloatingGroupPanel","overlay","DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE","DEFAULT_FLOATING_GROUP_POSITION","OverlayRenderContainer","createFocusableElement","focusContainer","box2","visibilityChanged","observerDisposable","correctLayerPosition","floatingGroup","floatingGroups","level","getAttribute","MutationObserver","attributeFilter","attributes","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","rejected","done","then","apply","PopoutWindow","_window","_onWillClose","onWillClose","_onDidClose","onDidClose","dimensions","screenX","screenY","innerWidth","innerHeight","open","url","features","entries","join","externalWindow","createPopoutWindowContainer","onDidOpen","externalDocument","styleSheetList","styleSheets","styleSheet","link","rel","head","cssTexts","cssRules","rule","cssText","err","createTextNode","addStyles","StrictEventsSequencing","DEFAULT_ROOT_OVERLAY_MODEL","moveGroupWithoutDestroying","removedPanel","DockviewComponent","flatMap","_options","_floatingGroups","nextGroupId","_deserializer","_onWillDragPanel","_onWillDragGroup","_onDidLayoutFromJSON","_onDidMovePanel","_onDidMaximizedGroupChange","_popoutGroups","_onDidRemoveGroup","_onDidAddGroup","_moving","updateWatermark","_rootDropTarget","orthogonalize","itemToPopout","theme","toClassList","list","cls","startsWith","getDockviewTheme","overridePopoutGroup","getNextGroupId","popoutWindowDisposable","popoutContainer","gready","referenceGroup","referenceLocation","isGroupAddedToDom","floatingBox","returnedGroup","createGroup","movingLock","doSetGroupAndPanelActive","isValidReferenceGroup","popoutGroup","skipPopoutAssociated","skipPopoutReturn","catch","error","popoutReferenceGroupId","popoutReferenceGroup","skipRemoveGroup","anchoredBox","getAnchoredBox","minimumWidthWithinViewport","minimumHeightWithinViewport","querySelector","floatingGroupPanel","skipActiveGroup","createGroupAtLocation","floating","includePanel","collection","floats","popoutGroups","gridReferenceGroup","grid","isArray","createGroupFromSerializedState","createdPanels","serializedFloatingGroups","serializedFloatingGroup","serializedPopoutGroups","serializedPopoutGroup","hasActiveGroup","initial","initialWidth","initialHeight","referencePanel","findGroup","isPanelOptionsWithGroup","createPanel","inactive","floatingGroupOptions","relativeLocation","orientationAtLocation","coordinates","watermarkContainer","isGroupOptionsWithGroup","selectedGroup","refGroup","removedGroup","re","isMoving","destinationGroup","sourceGroupId","sourceItemId","destinationTarget","destinationIndex","sourceGroup","targetLocation","targetParentLocation","sourceLocation","sourceParentLocation","newGroup","targetGroup","updatedReferenceLocation","dropLocation","moveGroup","selectedFloatingGroup","selectedPopoutGroup","GridviewComponent","_onDidLayoutfromJSON","hasOrientationChanged","serializedGridview","queue","registerPanel","f","reference","groupItem","SplitviewComponent","_splitview","_splitviewChangeDisposable","_onDidLayoutChange","skipFocus","doAddView","serializedSplitview","DefaultHeader","_expandedIcon","_collapsedIcon","apiRef","_expander","updateIcon","PaneFramework","PaneviewComponent","paneview","_paneview","_viewDisposables","createHeaderComponent","serializedPaneview","SplitviewPanel","_minimumSize","_evaluatedMinimumSize","_maximumSize","_evaluatedMaximumSize","createDockview","createSplitview","createGridview","createPaneview","ReactComponentBridge","ref","triggerRender","React","_props","componentProps","current","Date","now","displayName","uniquePortalKeyGenerator","ReactPartContext","ReactPart","portalStore","context","_initialProps","disposed","createPortal","componentInstance","$$typeof","bridgeComponent","Provider","portal","ReactDOM","addPortal","usePortalsLifecycle","portals","setPortals","existingPortals","DockviewDisposable","ReactPanelContentPart","reactPortalStore","DockviewEmitter","ReactPanelHeaderPart","ReactWatermarkPart","ReactHeaderActionsRendererPart","_part","mutableDisposable","DockviewMutableDisposable","DockviewCompositeDisposable","updatePanels","updateActivePanel","updateGroupActive","createGroupControlElement","store","DEFAULT_REACT_TAB","DockviewReact","domRef","dockviewRef","prevProps","changes","propKey","propValue","frameworkTabComponents","tabComponents","frameworkOptions","leftHeaderActionsComponent","rightHeaderActionsComponent","prefixHeaderActionsComponent","components","watermarkComponent","obj","extractCoreOptions","onReady","CloseButton","viewBox","focusable","__rest","hasOwnProperty","getOwnPropertySymbols","propertyIsEnumerable","DockviewDefaultTab","_containerApi","hideClose","closeActionOverride","useTitle","onClose","onPointerDown","onClick","ReactPanelView","reactComponent","SplitviewReact","splitviewRef","ReactGridPanelView","GridviewReact","gridviewRef","PanePanelSection","PaneviewReact","paneviewRef","headerComponents","AdmonitionContainer","admonition","admonitionType","AdmonitionHeading","icon","admonitionHeading","admonitionIcon","AdmonitionContent","_ref3","admonitionContent","AdmonitionLayout","AdmonitionIconNote","fillRule","defaultProps","IconNote","AdmonitionTypeNote","AdmonitionIconTip","IconTip","AdmonitionTypeTip","AdmonitionIconInfo","IconInfo","AdmonitionTypeInfo","AdmonitionIconCaution","IconWarning","AdmonitionIconDanger","IconDanger","note","tip","info","warning","danger","secondary","important","success","caution","unprocessedProps","processAdmonitionProps","AdmonitionTypeComponent","AdmonitionTypes","MDXComponents","FrameworkSpecific","CodeRunner","frameworks","activeFrameworkGlobal","useActiveFramework","setValue","localStorage","getItem","setter","setItem","FrameworkSelector1","activeFramework","setActiveFramework","DropdownMenu","asChild","src","useBaseUrl","marginRight","side","align","sideOffset","framework","paddingRight","FrameworkSelector","BrowserOnly","FrameworkSpecific1","_CodeRunner","sandboxUrl","toLowerCase","justifyContent","CodeSandbox","alignItems","fontWeight"],"sourceRoot":""}