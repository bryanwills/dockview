{"version":3,"file":"assets/js/2120f8b9.e816fb68.js","mappings":"+OAEO,MAAMA,EAAc,CAC1BC,KAAM,0BACNC,MAAO,kBACPC,KAAM,CACL,YAGWC,EAAe,gBACfC,EAAW,CACtB,UAAa,gCACb,OAAU,2CACV,MAAS,kBACT,YAAe,wCACf,KAAQ,2BACR,cAAiB,cACjB,KAAQ,CACN,CACE,MAAS,UACT,UAAa,uBAGjB,YAAe,KACf,mBAAqB,EACrB,QAAW,GACX,YAAe,CACb,KAAQ,0BACR,MAAS,kBACT,KAAQ,CACN,YAGJ,UAAY,EACZ,SAAY,CACV,MAAS,kBACT,UAAa,iCAEf,SAAY,CACV,MAAS,kBACT,UAAa,kCAGJC,EAAS,CACtB,iBAAoB,IAKPC,EAAM,CAAC,CAClB,MAAS,qBACT,GAAM,SACN,MAAS,IAEX,SAASC,EAAkBC,GACzB,MAAMC,EAAc,CAClBC,EAAG,IACHC,KAAM,OACNC,GAAI,KACJC,GAAI,KACJC,EAAG,IACHC,GAAI,SACD,YACAP,EAAMQ,YAEX,OAAO,UAAM,WAAW,CACtBC,SAAU,EAAC,UAAMR,EAAYK,EAAG,CAC9BG,SAAU,CAAC,4BAA4B,SAAKR,EAAYC,EAAG,CACzDQ,KAAM,uBACND,SAAU,iBACR,OACF,MAAM,SAAKR,EAAYG,GAAI,CAC7BO,GAAI,SACJF,SAAU,uBACR,MAAM,UAAMR,EAAYM,GAAI,CAC9BE,SAAU,CAAC,MAAM,UAAMR,EAAYI,GAAI,CACrCI,SAAU,CAAC,MAAM,UAAMR,EAAYK,EAAG,CACpCG,SAAU,CAAC,4EAA4E,SAAKR,EAAYC,EAAG,CACzGQ,KAAM,gDACND,SAAU,YAEV,QACF,MAAM,UAAMR,EAAYI,GAAI,CAC9BI,SAAU,CAAC,MAAM,UAAMR,EAAYK,EAAG,CACpCG,SAAU,CAAC,4CAA4C,SAAKR,EAAYC,EAAG,CACzEQ,KAAM,gDACND,SAAU,YAEV,MAAM,UAAMR,EAAYM,GAAI,CAC9BE,SAAU,CAAC,MAAM,UAAMR,EAAYI,GAAI,CACrCI,SAAU,EAAC,SAAKR,EAAYE,KAAM,CAChCM,SAAU,sBACR,wJAAwJ,SAAKR,EAAYE,KAAM,CACjLM,SAAU,uBACR,kDAAkD,SAAKR,EAAYE,KAAM,CAC3EM,SAAU,mBACR,sJAAsJ,SAAKR,EAAYE,KAAM,CAC/KM,SAAU,eACR,qEACF,QACF,QACF,UAGV,CACe,SAASG,EAAWZ,EAAQ,CAAC,GAC1C,MAAOa,QAASC,GAAa,KACxB,YACAd,EAAMQ,YAEX,OAAOM,GAAY,SAAKA,EAAW,IAC9Bd,EACHS,UAAU,SAAKV,EAAmB,IAC7BC,MAEFD,EAAkBC,EACzB,C,wDCzFA,MAAMe,EAAkB,CAAC,EAEnBC,EAAa,gBAAoBD,GAUhC,SAASE,EAAiBT,GAC/B,MAAMU,EAAoB,aAAiBF,GAG3C,OAAO,WACL,WAEE,MAA0B,mBAAfR,EACFA,EAAWU,GAGb,IAAIA,KAAsBV,EACnC,GACA,CAACU,EAAmBV,GAExB,CAWO,SAASW,EAAYnB,GAE1B,IAAIoB,EAWJ,OAREA,EADEpB,EAAMqB,qBAEsB,mBAArBrB,EAAMQ,WACTR,EAAMQ,WAAWO,GACjBf,EAAMQ,YAAcO,EAEVE,EAAiBjB,EAAMQ,YAGlC,gBACLQ,EAAWM,SACX,CAACC,MAAOH,GACRpB,EAAMS,SAEV,C","sources":["webpack://dockview-docs/./blog/2024-05-05-dockview-1.13.1.md?8d4b","webpack://dockview-docs/../../node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["\n\nexport const frontMatter = {\n\tslug: 'dockview-1.13.1-release',\n\ttitle: 'Dockview 1.13.1',\n\ttags: [\n\t\t'release'\n\t]\n};\nexport const contentTitle = 'Release Notes';\nexport const metadata = {\n  \"permalink\": \"/blog/dockview-1.13.1-release\",\n  \"source\": \"@site/blog/2024-05-05-dockview-1.13.1.md\",\n  \"title\": \"Dockview 1.13.1\",\n  \"description\": \"Please reference docs @ dockview.dev.\",\n  \"date\": \"2024-05-05T00:00:00.000Z\",\n  \"formattedDate\": \"May 5, 2024\",\n  \"tags\": [\n    {\n      \"label\": \"release\",\n      \"permalink\": \"/blog/tags/release\"\n    }\n  ],\n  \"readingTime\": 0.515,\n  \"hasTruncateMarker\": false,\n  \"authors\": [],\n  \"frontMatter\": {\n    \"slug\": \"dockview-1.13.1-release\",\n    \"title\": \"Dockview 1.13.1\",\n    \"tags\": [\n      \"release\"\n    ]\n  },\n  \"unlisted\": false,\n  \"prevItem\": {\n    \"title\": \"Dockview 1.14.0\",\n    \"permalink\": \"/blog/dockview-1.14.0-release\"\n  },\n  \"nextItem\": {\n    \"title\": \"Dockview 1.13.0\",\n    \"permalink\": \"/blog/dockview-1.13.0-release\"\n  }\n};\nexport const assets = {\n\"authorsImageUrls\": [],\n};\n\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nexport const toc = [{\n  \"value\": \"ðŸ›  Miscs\",\n  \"id\": \"-miscs\",\n  \"level\": 2\n}];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    code: \"code\",\n    h2: \"h2\",\n    li: \"li\",\n    p: \"p\",\n    ul: \"ul\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsxs(_components.p, {\n      children: [\"Please reference docs @ \", _jsx(_components.a, {\n        href: \"https://dockview.dev\",\n        children: \"dockview.dev\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"-miscs\",\n      children: \"ðŸ›  Miscs\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsxs(_components.p, {\n          children: [\"Bug: fix duplicate group added when adding group with absolute position \", _jsx(_components.a, {\n            href: \"https://github.com/mathuo/dockview/issues/596\",\n            children: \"#596\"\n          })]\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsxs(_components.p, {\n          children: [\"Bug: Adjust onDidLayoutChange behaviour \", _jsx(_components.a, {\n            href: \"https://github.com/mathuo/dockview/issues/597\",\n            children: \"#597\"\n          })]\n        }), \"\\n\", _jsxs(_components.ul, {\n          children: [\"\\n\", _jsxs(_components.li, {\n            children: [_jsx(_components.code, {\n              children: \"onDidLayoutChange\"\n            }), \" is an aggregation of events that constitute a layout change. Previously these events were aggregated and the events were then fired once through a \", _jsx(_components.code, {\n              children: \"setTimeout(..., 0)\"\n            }), \" approach. This has been altered to fire on a \", _jsx(_components.code, {\n              children: \"queueMicrotask\"\n            }), \" event and will only subscribe to events that happen after the event is subscribed to, previously you may have recieved events yet to fire on the \", _jsx(_components.code, {\n              children: \"setTimeout\"\n            }), \" function but within the same event-loop cycle which was a bug.\"]\n          }), \"\\n\"]\n        }), \"\\n\"]\n      }), \"\\n\"]\n    })]\n  });\n}\nexport default function MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\n\n","/**\n * @typedef {import('mdx/types.js').MDXComponents} MDXComponents\n * @typedef {import('react').Component<{}, {}, unknown>} Component\n * @typedef {import('react').ReactNode} ReactNode\n */\n\n/**\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Readonly<MDXComponents>} currentComponents\n *   Current components from the context.\n * @returns {MDXComponents}\n *   Additional components.\n *\n * @typedef Props\n *   Configuration for `MDXProvider`.\n * @property {ReactNode | null | undefined} [children]\n *   Children (optional).\n * @property {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context (default: `false`).\n */\n\nimport React from 'react'\n\n/** @type {Readonly<MDXComponents>} */\nconst emptyComponents = {}\n\nconst MDXContext = React.createContext(emptyComponents)\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @returns {MDXComponents}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(\n    function () {\n      // Custom merge via a function prop\n      if (typeof components === 'function') {\n        return components(contextComponents)\n      }\n\n      return {...contextComponents, ...components}\n    },\n    [contextComponents, components]\n  )\n}\n\n/**\n * Provider for MDX context.\n *\n * @param {Readonly<Props>} props\n *   Props.\n * @returns {JSX.Element}\n *   Element.\n * @satisfies {Component}\n */\nexport function MDXProvider(props) {\n  /** @type {Readonly<MDXComponents>} */\n  let allComponents\n\n  if (props.disableParentContext) {\n    allComponents =\n      typeof props.components === 'function'\n        ? props.components(emptyComponents)\n        : props.components || emptyComponents\n  } else {\n    allComponents = useMDXComponents(props.components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    props.children\n  )\n}\n"],"names":["frontMatter","slug","title","tags","contentTitle","metadata","assets","toc","_createMdxContent","props","_components","a","code","h2","li","p","ul","components","children","href","id","MDXContent","wrapper","MDXLayout","emptyComponents","MDXContext","useMDXComponents","contextComponents","MDXProvider","allComponents","disableParentContext","Provider","value"],"sourceRoot":""}