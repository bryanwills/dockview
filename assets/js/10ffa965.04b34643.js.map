{"version":3,"file":"assets/js/10ffa965.04b34643.js","mappings":"yPAEO,MAAMA,EAAc,CAC1BC,MAAO,WACPC,iBAAkB,GAENC,OAAeC,EACfC,EAAW,CACtB,GAAM,oBACN,MAAS,WACT,YAAe,4EACf,OAAU,mCACV,cAAiB,WACjB,KAAQ,qBACR,UAAa,0BACb,OAAS,EACT,UAAY,EACZ,KAAQ,GACR,QAAW,UACX,gBAAmB,EACnB,YAAe,CACb,MAAS,WACT,iBAAoB,GAEtB,QAAW,kBACX,SAAY,CACV,MAAS,WACT,UAAa,8BAEf,KAAQ,CACN,MAAS,MACT,UAAa,+BAGJC,EAAS,CAEtB,EAKaC,EAAM,GACnB,SAASC,EAAkBC,GACzB,MAAMC,EAAc,CAClBC,EAAG,QACA,YACAF,EAAMG,YAEX,OAAO,UAAM,WAAW,CACtBC,SAAU,EAAC,SAAKH,EAAYC,EAAG,CAC7BE,SAAU,8EACR,MAAM,SAAK,KAAM,CACnBA,SAAU,0CACR,MAAM,SAAK,MAAO,CACpBC,MAAO,CACLC,QAAS,QACTC,eAAgB,UAElBH,UAAU,SAAK,MAAO,CACpBC,MAAO,CACLG,OAAQ,QAEVC,KAAK,OAAW,2BAEhB,MAAM,SAAK,KAAM,CACnBL,SAAU,gDACR,MAAM,SAAK,MAAO,CACpBC,MAAO,CACLC,QAAS,QACTC,eAAgB,UAElBH,UAAU,SAAK,MAAO,CACpBC,MAAO,CACLG,OAAQ,QAEVC,KAAK,OAAW,mCAEhB,MAAM,SAAK,KAAM,CACnBL,SAAU,uCACR,MAAM,SAAK,MAAO,CACpBC,MAAO,CACLC,QAAS,QACTC,eAAgB,UAElBH,UAAU,SAAK,MAAO,CACpBC,MAAO,CACLG,OAAQ,QAEVC,KAAK,OAAW,6BAEhB,MAAM,SAAK,KAAM,CACnBL,SAAU,2DACR,MAAM,SAAK,MAAO,CACpBC,MAAO,CACLC,QAAS,QACTC,eAAgB,UAElBH,UAAU,SAAK,MAAO,CACpBC,MAAO,CACLG,OAAQ,SAEVC,KAAK,OAAW,+BAEhB,MAAM,SAAK,KAAM,CACnBL,SAAU,2DACR,MAAM,SAAK,MAAO,CACpBC,MAAO,CACLC,QAAS,QACTC,eAAgB,UAElBH,UAAU,SAAK,MAAO,CACpBC,MAAO,CACLG,OAAQ,SAEVC,KAAK,OAAW,wCAIxB,CACe,SAASC,EAAWV,EAAQ,CAAC,GAC1C,MAAOW,QAASC,GAAa,KACxB,YACAZ,EAAMG,YAEX,OAAOS,GAAY,SAAKA,EAAW,IAC9BZ,EACHI,UAAU,SAAKL,EAAmB,IAC7BC,MAEFD,EAAkBC,EACzB,C,wDCvGA,MAAMa,EAAkB,CAAC,EAEnBC,EAAa,gBAAoBD,GAUhC,SAASE,EAAiBZ,GAC/B,MAAMa,EAAoB,aAAiBF,GAG3C,OAAO,WACL,WAEE,MAA0B,mBAAfX,EACFA,EAAWa,GAGb,IAAIA,KAAsBb,EACnC,GACA,CAACa,EAAmBb,GAExB,CAWO,SAASc,EAAYjB,GAE1B,IAAIkB,EAWJ,OAREA,EADElB,EAAMmB,qBAEsB,mBAArBnB,EAAMG,WACTH,EAAMG,WAAWU,GACjBb,EAAMG,YAAcU,EAEVE,EAAiBf,EAAMG,YAGlC,gBACLW,EAAWM,SACX,CAACC,MAAOH,GACRlB,EAAMI,SAEV,C","sources":["webpack://dockview-docs/./docs/core/dnd/overview.mdx","webpack://dockview-docs/../../node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["\n\nexport const frontMatter = {\n\ttitle: 'Overview',\n\tsidebar_position: 0\n};\nexport const contentTitle = undefined;\nexport const metadata = {\n  \"id\": \"core/dnd/overview\",\n  \"title\": \"Overview\",\n  \"description\": \"Dockview supports a wide variety of built-in Drag and Drop possibilities.\",\n  \"source\": \"@site/docs/core/dnd/overview.mdx\",\n  \"sourceDirName\": \"core/dnd\",\n  \"slug\": \"/core/dnd/overview\",\n  \"permalink\": \"/docs/core/dnd/overview\",\n  \"draft\": false,\n  \"unlisted\": false,\n  \"tags\": [],\n  \"version\": \"current\",\n  \"sidebarPosition\": 0,\n  \"frontMatter\": {\n    \"title\": \"Overview\",\n    \"sidebar_position\": 0\n  },\n  \"sidebar\": \"tutorialSidebar\",\n  \"previous\": {\n    \"title\": \"Resizing\",\n    \"permalink\": \"/docs/core/panels/resizing\"\n  },\n  \"next\": {\n    \"title\": \"Dnd\",\n    \"permalink\": \"/docs/core/dnd/dragAndDrop\"\n  }\n};\nexport const assets = {\n\n};\n\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport useBaseUrl from '@docusaurus/useBaseUrl';\nexport const toc = [];\nfunction _createMdxContent(props) {\n  const _components = {\n    p: \"p\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: \"Dockview supports a wide variety of built-in Drag and Drop possibilities.\"\n    }), \"\\n\", _jsx(\"h4\", {\n      children: \"Position a tab between two other tabs\"\n    }), \"\\n\", _jsx(\"div\", {\n      style: {\n        display: ' flex',\n        justifyContent: 'center'\n      },\n      children: _jsx(\"img\", {\n        style: {\n          height: '50px'\n        },\n        src: useBaseUrl('/img/add_to_tab.svg')\n      })\n    }), \"\\n\", _jsx(\"h4\", {\n      children: \"Position a tab at the end of a list of tabs\"\n    }), \"\\n\", _jsx(\"div\", {\n      style: {\n        display: ' flex',\n        justifyContent: 'center'\n      },\n      children: _jsx(\"img\", {\n        style: {\n          height: '50px'\n        },\n        src: useBaseUrl('/img/add_to_empty_space.svg')\n      })\n    }), \"\\n\", _jsx(\"h4\", {\n      children: \"Merge one group with another group\"\n    }), \"\\n\", _jsx(\"div\", {\n      style: {\n        display: ' flex',\n        justifyContent: 'center'\n      },\n      children: _jsx(\"img\", {\n        style: {\n          height: '50px'\n        },\n        src: useBaseUrl('/img/add_to_group.svg')\n      })\n    }), \"\\n\", _jsx(\"h4\", {\n      children: \"Move both Tabs and Groups in relation to another group\"\n    }), \"\\n\", _jsx(\"div\", {\n      style: {\n        display: ' flex',\n        justifyContent: 'center'\n      },\n      children: _jsx(\"img\", {\n        style: {\n          height: '300px'\n        },\n        src: useBaseUrl('/img/drop_positions.svg')\n      })\n    }), \"\\n\", _jsx(\"h4\", {\n      children: \"Move both Tabs and Groups in relation to the container\"\n    }), \"\\n\", _jsx(\"div\", {\n      style: {\n        display: ' flex',\n        justifyContent: 'center'\n      },\n      children: _jsx(\"img\", {\n        style: {\n          height: '300px'\n        },\n        src: useBaseUrl('/img/magnet_drop_positions.svg')\n      })\n    })]\n  });\n}\nexport default function MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\n\n","/**\n * @typedef {import('mdx/types.js').MDXComponents} MDXComponents\n * @typedef {import('react').Component<{}, {}, unknown>} Component\n * @typedef {import('react').ReactNode} ReactNode\n */\n\n/**\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Readonly<MDXComponents>} currentComponents\n *   Current components from the context.\n * @returns {MDXComponents}\n *   Additional components.\n *\n * @typedef Props\n *   Configuration for `MDXProvider`.\n * @property {ReactNode | null | undefined} [children]\n *   Children (optional).\n * @property {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context (default: `false`).\n */\n\nimport React from 'react'\n\n/** @type {Readonly<MDXComponents>} */\nconst emptyComponents = {}\n\nconst MDXContext = React.createContext(emptyComponents)\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @returns {MDXComponents}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(\n    function () {\n      // Custom merge via a function prop\n      if (typeof components === 'function') {\n        return components(contextComponents)\n      }\n\n      return {...contextComponents, ...components}\n    },\n    [contextComponents, components]\n  )\n}\n\n/**\n * Provider for MDX context.\n *\n * @param {Readonly<Props>} props\n *   Props.\n * @returns {JSX.Element}\n *   Element.\n * @satisfies {Component}\n */\nexport function MDXProvider(props) {\n  /** @type {Readonly<MDXComponents>} */\n  let allComponents\n\n  if (props.disableParentContext) {\n    allComponents =\n      typeof props.components === 'function'\n        ? props.components(emptyComponents)\n        : props.components || emptyComponents\n  } else {\n    allComponents = useMDXComponents(props.components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    props.children\n  )\n}\n"],"names":["frontMatter","title","sidebar_position","contentTitle","undefined","metadata","assets","toc","_createMdxContent","props","_components","p","components","children","style","display","justifyContent","height","src","MDXContent","wrapper","MDXLayout","emptyComponents","MDXContext","useMDXComponents","contextComponents","MDXProvider","allComponents","disableParentContext","Provider","value"],"sourceRoot":""}