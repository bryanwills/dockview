{"version":3,"file":"assets/js/505.c19d51a2.js","mappings":"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","sources":["webpack://dockview-docs/../dockview-core/dist/esm/dnd/dataTransfer.js","webpack://dockview-docs/../dockview-core/dist/esm/events.js","webpack://dockview-docs/../dockview-core/dist/esm/lifecycle.js","webpack://dockview-docs/../dockview-core/dist/esm/dom.js","webpack://dockview-docs/../dockview-core/dist/esm/array.js","webpack://dockview-docs/../dockview-core/dist/esm/math.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/viewItem.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/splitview.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/paneview.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/leafNode.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/branchNode.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/gridview.js","webpack://dockview-docs/../dockview-core/dist/esm/resizable.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/baseComponentGridview.js","webpack://dockview-docs/../dockview-core/dist/esm/api/component.api.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/abstractDragHandler.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/dnd.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/droptarget.js","webpack://dockview-docs/../dockview-core/dist/esm/api/panelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/api/splitviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/api/paneviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/basePanelView.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/paneviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/draggablePaneviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/panel/content.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/tab/tab.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/groupDragHandler.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/ghost.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/titlebar/voidContainer.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/titlebar/tabsContainer.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/options.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewGroupPanelModel.js","webpack://dockview-docs/../dockview-core/dist/esm/api/gridviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/gridviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/api/dockviewGroupPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewGroupPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/api/dockviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/svg.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/tab/defaultTab.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewPanelModel.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/deserializer.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/watermark/watermark.js","webpack://dockview-docs/../dockview-core/dist/esm/overlay/overlay.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewFloatingGroupPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/constants.js","webpack://dockview-docs/../dockview-core/dist/esm/overlay/overlayRenderContainer.js","webpack://dockview-docs/../dockview-core/dist/esm/popoutWindow.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/panel/componentFactory.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/gridviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/splitviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/defaultPaneviewHeader.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/paneviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/splitviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/api/entryPoints.js","webpack://dockview-docs/../dockview/dist/esm/react.js","webpack://dockview-docs/../dockview/dist/esm/dockview/reactContentPart.js","webpack://dockview-docs/../dockview/dist/esm/dockview/reactHeaderPart.js","webpack://dockview-docs/../dockview/dist/esm/dockview/reactWatermarkPart.js","webpack://dockview-docs/../dockview/dist/esm/dockview/headerActionsRenderer.js","webpack://dockview-docs/../dockview/dist/esm/dockview/dockview.js","webpack://dockview-docs/../dockview/dist/esm/svg.js","webpack://dockview-docs/../dockview/dist/esm/dockview/defaultTab.js","webpack://dockview-docs/../dockview/dist/esm/splitview/view.js","webpack://dockview-docs/../dockview/dist/esm/splitview/splitview.js","webpack://dockview-docs/../dockview/dist/esm/gridview/view.js","webpack://dockview-docs/../dockview/dist/esm/gridview/gridview.js","webpack://dockview-docs/../dockview/dist/esm/paneview/view.js","webpack://dockview-docs/../dockview/dist/esm/paneview/paneview.js","webpack://dockview-docs/./sandboxes/react/splitview/simple/src/app.tsx"],"sourcesContent":["class TransferObject {\n}\nexport class PanelTransfer extends TransferObject {\n    constructor(viewId, groupId, panelId) {\n        super();\n        this.viewId = viewId;\n        this.groupId = groupId;\n        this.panelId = panelId;\n    }\n}\nexport class PaneTransfer extends TransferObject {\n    constructor(viewId, paneId) {\n        super();\n        this.viewId = viewId;\n        this.paneId = paneId;\n    }\n}\n/**\n * A singleton to store transfer data during drag & drop operations that are only valid within the application.\n */\nexport class LocalSelectionTransfer {\n    constructor() {\n        // protect against external instantiation\n    }\n    static getInstance() {\n        return LocalSelectionTransfer.INSTANCE;\n    }\n    hasData(proto) {\n        return proto && proto === this.proto;\n    }\n    clearData(proto) {\n        if (this.hasData(proto)) {\n            this.proto = undefined;\n            this.data = undefined;\n        }\n    }\n    getData(proto) {\n        if (this.hasData(proto)) {\n            return this.data;\n        }\n        return undefined;\n    }\n    setData(data, proto) {\n        if (proto) {\n            this.data = data;\n            this.proto = proto;\n        }\n    }\n}\nLocalSelectionTransfer.INSTANCE = new LocalSelectionTransfer();\nexport function getPanelData() {\n    const panelTransfer = LocalSelectionTransfer.getInstance();\n    const isPanelEvent = panelTransfer.hasData(PanelTransfer.prototype);\n    if (!isPanelEvent) {\n        return undefined;\n    }\n    return panelTransfer.getData(PanelTransfer.prototype)[0];\n}\nexport function getPaneData() {\n    const paneTransfer = LocalSelectionTransfer.getInstance();\n    const isPanelEvent = paneTransfer.hasData(PaneTransfer.prototype);\n    if (!isPanelEvent) {\n        return undefined;\n    }\n    return paneTransfer.getData(PaneTransfer.prototype)[0];\n}\n","export var Event;\n(function (Event) {\n    Event.any = (...children) => {\n        return (listener) => {\n            const disposables = children.map((child) => child(listener));\n            return {\n                dispose: () => {\n                    disposables.forEach((d) => {\n                        d.dispose();\n                    });\n                },\n            };\n        };\n    };\n})(Event || (Event = {}));\nexport class DockviewEvent {\n    constructor() {\n        this._defaultPrevented = false;\n    }\n    get defaultPrevented() {\n        return this._defaultPrevented;\n    }\n    preventDefault() {\n        this._defaultPrevented = true;\n    }\n}\nclass LeakageMonitor {\n    constructor() {\n        this.events = new Map();\n    }\n    get size() {\n        return this.events.size;\n    }\n    add(event, stacktrace) {\n        this.events.set(event, stacktrace);\n    }\n    delete(event) {\n        this.events.delete(event);\n    }\n    clear() {\n        this.events.clear();\n    }\n}\nclass Stacktrace {\n    static create() {\n        var _a;\n        return new Stacktrace((_a = new Error().stack) !== null && _a !== void 0 ? _a : '');\n    }\n    constructor(value) {\n        this.value = value;\n    }\n    print() {\n        console.warn('dockview: stacktrace', this.value);\n    }\n}\nclass Listener {\n    constructor(callback, stacktrace) {\n        this.callback = callback;\n        this.stacktrace = stacktrace;\n    }\n}\n// relatively simple event emitter taken from https://github.com/microsoft/vscode/blob/master/src/vs/base/common/event.ts\nexport class Emitter {\n    static setLeakageMonitorEnabled(isEnabled) {\n        if (isEnabled !== Emitter.ENABLE_TRACKING) {\n            Emitter.MEMORY_LEAK_WATCHER.clear();\n        }\n        Emitter.ENABLE_TRACKING = isEnabled;\n    }\n    get value() {\n        return this._last;\n    }\n    constructor(options) {\n        this.options = options;\n        this._listeners = [];\n        this._disposed = false;\n    }\n    get event() {\n        if (!this._event) {\n            this._event = (callback) => {\n                var _a;\n                if (((_a = this.options) === null || _a === void 0 ? void 0 : _a.replay) && this._last !== undefined) {\n                    callback(this._last);\n                }\n                const listener = new Listener(callback, Emitter.ENABLE_TRACKING ? Stacktrace.create() : undefined);\n                this._listeners.push(listener);\n                return {\n                    dispose: () => {\n                        const index = this._listeners.indexOf(listener);\n                        if (index > -1) {\n                            this._listeners.splice(index, 1);\n                        }\n                        else if (Emitter.ENABLE_TRACKING) {\n                            // console.warn(\n                            //     `dockview: listener already disposed`,\n                            //     Stacktrace.create().print()\n                            // );\n                        }\n                    },\n                };\n            };\n            if (Emitter.ENABLE_TRACKING) {\n                Emitter.MEMORY_LEAK_WATCHER.add(this._event, Stacktrace.create());\n            }\n        }\n        return this._event;\n    }\n    fire(e) {\n        this._last = e;\n        for (const listener of this._listeners) {\n            listener.callback(e);\n        }\n    }\n    dispose() {\n        if (!this._disposed) {\n            this._disposed = true;\n            if (this._listeners.length > 0) {\n                if (Emitter.ENABLE_TRACKING) {\n                    queueMicrotask(() => {\n                        var _a;\n                        // don't check until stack of execution is completed to allow for out-of-order disposals within the same execution block\n                        for (const listener of this._listeners) {\n                            console.warn('dockview: stacktrace', (_a = listener.stacktrace) === null || _a === void 0 ? void 0 : _a.print());\n                        }\n                    });\n                }\n                this._listeners = [];\n            }\n            if (Emitter.ENABLE_TRACKING && this._event) {\n                Emitter.MEMORY_LEAK_WATCHER.delete(this._event);\n            }\n        }\n    }\n}\nEmitter.ENABLE_TRACKING = false;\nEmitter.MEMORY_LEAK_WATCHER = new LeakageMonitor();\nexport function addDisposableWindowListener(element, type, listener, options) {\n    element.addEventListener(type, listener, options);\n    return {\n        dispose: () => {\n            element.removeEventListener(type, listener, options);\n        },\n    };\n}\nexport function addDisposableListener(element, type, listener, options) {\n    element.addEventListener(type, listener, options);\n    return {\n        dispose: () => {\n            element.removeEventListener(type, listener, options);\n        },\n    };\n}\n/**\n *\n * Event Emitter that fires events from a Microtask callback, only one event will fire per event-loop cycle.\n *\n * It's kind of like using an `asapScheduler` in RxJs with additional logic to only fire once per event-loop cycle.\n * This implementation exists to avoid external dependencies.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/queueMicrotask\n * @see https://rxjs.dev/api/index/const/asapScheduler\n */\nexport class AsapEvent {\n    constructor() {\n        this._onFired = new Emitter();\n        this._currentFireCount = 0;\n        this._queued = false;\n        this.onEvent = (e) => {\n            /**\n             * when the event is first subscribed to take note of the current fire count\n             */\n            const fireCountAtTimeOfEventSubscription = this._currentFireCount;\n            return this._onFired.event(() => {\n                /**\n                 * if the current fire count is greater than the fire count at event subscription\n                 * then the event has been fired since we subscribed and it's ok to \"on_next\" the event.\n                 *\n                 * if the count is not greater then what we are recieving is an event from the microtask\n                 * queue that was triggered before we actually subscribed and therfore we should ignore it.\n                 */\n                if (this._currentFireCount > fireCountAtTimeOfEventSubscription) {\n                    e();\n                }\n            });\n        };\n    }\n    fire() {\n        this._currentFireCount++;\n        if (this._queued) {\n            return;\n        }\n        this._queued = true;\n        queueMicrotask(() => {\n            this._queued = false;\n            this._onFired.fire();\n        });\n    }\n    dispose() {\n        this._onFired.dispose();\n    }\n}\n","export var Disposable;\n(function (Disposable) {\n    Disposable.NONE = {\n        dispose: () => {\n            // noop\n        },\n    };\n    function from(func) {\n        return {\n            dispose: () => {\n                func();\n            },\n        };\n    }\n    Disposable.from = from;\n})(Disposable || (Disposable = {}));\nexport class CompositeDisposable {\n    get isDisposed() {\n        return this._isDisposed;\n    }\n    constructor(...args) {\n        this._isDisposed = false;\n        this._disposables = args;\n    }\n    addDisposables(...args) {\n        args.forEach((arg) => this._disposables.push(arg));\n    }\n    dispose() {\n        if (this._isDisposed) {\n            return;\n        }\n        this._isDisposed = true;\n        this._disposables.forEach((arg) => arg.dispose());\n        this._disposables = [];\n    }\n}\nexport class MutableDisposable {\n    constructor() {\n        this._disposable = Disposable.NONE;\n    }\n    set value(disposable) {\n        if (this._disposable) {\n            this._disposable.dispose();\n        }\n        this._disposable = disposable;\n    }\n    dispose() {\n        if (this._disposable) {\n            this._disposable.dispose();\n            this._disposable = Disposable.NONE;\n        }\n    }\n}\n","import { Emitter, addDisposableListener, addDisposableWindowListener, } from './events';\nimport { CompositeDisposable } from './lifecycle';\nexport class OverflowObserver extends CompositeDisposable {\n    constructor(el) {\n        super();\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._value = null;\n        this.addDisposables(this._onDidChange, watchElementResize(el, (entry) => {\n            const hasScrollX = entry.target.scrollWidth > entry.target.clientWidth;\n            const hasScrollY = entry.target.scrollHeight > entry.target.clientHeight;\n            this._value = { hasScrollX, hasScrollY };\n            this._onDidChange.fire(this._value);\n        }));\n    }\n}\nexport function watchElementResize(element, cb) {\n    const observer = new ResizeObserver((entires) => {\n        /**\n         * Fast browser window resize produces Error: ResizeObserver loop limit exceeded.\n         * The error isn't visible in browser console, doesn't affect functionality, but degrades performance.\n         * See https://stackoverflow.com/questions/49384120/resizeobserver-loop-limit-exceeded/58701523#58701523\n         */\n        requestAnimationFrame(() => {\n            const firstEntry = entires[0];\n            cb(firstEntry);\n        });\n    });\n    observer.observe(element);\n    return {\n        dispose: () => {\n            observer.unobserve(element);\n            observer.disconnect();\n        },\n    };\n}\nexport const removeClasses = (element, ...classes) => {\n    for (const classname of classes) {\n        if (element.classList.contains(classname)) {\n            element.classList.remove(classname);\n        }\n    }\n};\nexport const addClasses = (element, ...classes) => {\n    for (const classname of classes) {\n        if (!element.classList.contains(classname)) {\n            element.classList.add(classname);\n        }\n    }\n};\nexport const toggleClass = (element, className, isToggled) => {\n    const hasClass = element.classList.contains(className);\n    if (isToggled && !hasClass) {\n        element.classList.add(className);\n    }\n    if (!isToggled && hasClass) {\n        element.classList.remove(className);\n    }\n};\nexport function isAncestor(testChild, testAncestor) {\n    while (testChild) {\n        if (testChild === testAncestor) {\n            return true;\n        }\n        testChild = testChild.parentNode;\n    }\n    return false;\n}\nexport function getElementsByTagName(tag) {\n    return Array.prototype.slice.call(document.getElementsByTagName(tag), 0);\n}\nexport function trackFocus(element) {\n    return new FocusTracker(element);\n}\n/**\n * Track focus on an element. Ensure tabIndex is set when an HTMLElement is not focusable by default\n */\nclass FocusTracker extends CompositeDisposable {\n    constructor(element) {\n        super();\n        this._onDidFocus = new Emitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new Emitter();\n        this.onDidBlur = this._onDidBlur.event;\n        this.addDisposables(this._onDidFocus, this._onDidBlur);\n        let hasFocus = isAncestor(document.activeElement, element);\n        let loosingFocus = false;\n        const onFocus = () => {\n            loosingFocus = false;\n            if (!hasFocus) {\n                hasFocus = true;\n                this._onDidFocus.fire();\n            }\n        };\n        const onBlur = () => {\n            if (hasFocus) {\n                loosingFocus = true;\n                window.setTimeout(() => {\n                    if (loosingFocus) {\n                        loosingFocus = false;\n                        hasFocus = false;\n                        this._onDidBlur.fire();\n                    }\n                }, 0);\n            }\n        };\n        this._refreshStateHandler = () => {\n            const currentNodeHasFocus = isAncestor(document.activeElement, element);\n            if (currentNodeHasFocus !== hasFocus) {\n                if (hasFocus) {\n                    onBlur();\n                }\n                else {\n                    onFocus();\n                }\n            }\n        };\n        if (element instanceof HTMLElement) {\n            this.addDisposables(addDisposableListener(element, 'focus', onFocus, true));\n            this.addDisposables(addDisposableListener(element, 'blur', onBlur, true));\n        }\n        else {\n            this.addDisposables(addDisposableWindowListener(element, 'focus', onFocus, true));\n            this.addDisposables(addDisposableWindowListener(element, 'blur', onBlur, true));\n        }\n    }\n    refreshState() {\n        this._refreshStateHandler();\n    }\n}\n// quasi: apparently, but not really; seemingly\nconst QUASI_PREVENT_DEFAULT_KEY = 'dv-quasiPreventDefault';\n// mark an event directly for other listeners to check\nexport function quasiPreventDefault(event) {\n    event[QUASI_PREVENT_DEFAULT_KEY] = true;\n}\n// check if this event has been marked\nexport function quasiDefaultPrevented(event) {\n    return event[QUASI_PREVENT_DEFAULT_KEY];\n}\nexport function addStyles(document, styleSheetList) {\n    const styleSheets = Array.from(styleSheetList);\n    for (const styleSheet of styleSheets) {\n        if (styleSheet.href) {\n            const link = document.createElement('link');\n            link.href = styleSheet.href;\n            link.type = styleSheet.type;\n            link.rel = 'stylesheet';\n            document.head.appendChild(link);\n        }\n        let cssTexts = [];\n        try {\n            if (styleSheet.cssRules) {\n                cssTexts = Array.from(styleSheet.cssRules).map((rule) => rule.cssText);\n            }\n        }\n        catch (err) {\n            // security errors (lack of permissions), ignore\n        }\n        for (const rule of cssTexts) {\n            const style = document.createElement('style');\n            style.appendChild(document.createTextNode(rule));\n            document.head.appendChild(style);\n        }\n    }\n}\nexport function getDomNodePagePosition(domNode) {\n    const { left, top, width, height } = domNode.getBoundingClientRect();\n    return {\n        left: left + window.scrollX,\n        top: top + window.scrollY,\n        width: width,\n        height: height,\n    };\n}\n/**\n * Check whether an element is in the DOM (including the Shadow DOM)\n * @see https://terodox.tech/how-to-tell-if-an-element-is-in-the-dom-including-the-shadow-dom/\n */\nexport function isInDocument(element) {\n    let currentElement = element;\n    while (currentElement === null || currentElement === void 0 ? void 0 : currentElement.parentNode) {\n        if (currentElement.parentNode === document) {\n            return true;\n        }\n        else if (currentElement.parentNode instanceof DocumentFragment) {\n            // handle shadow DOMs\n            currentElement = currentElement.parentNode.host;\n        }\n        else {\n            currentElement = currentElement.parentNode;\n        }\n    }\n    return false;\n}\nexport function addTestId(element, id) {\n    element.setAttribute('data-testid', id);\n}\nexport function disableIframePointEvents() {\n    const iframes = [\n        ...getElementsByTagName('iframe'),\n        ...getElementsByTagName('webview'),\n    ];\n    const original = new WeakMap(); // don't hold onto HTMLElement references longer than required\n    for (const iframe of iframes) {\n        original.set(iframe, iframe.style.pointerEvents);\n        iframe.style.pointerEvents = 'none';\n    }\n    return {\n        release: () => {\n            var _a;\n            for (const iframe of iframes) {\n                iframe.style.pointerEvents = (_a = original.get(iframe)) !== null && _a !== void 0 ? _a : 'auto';\n            }\n            iframes.splice(0, iframes.length); // don't hold onto HTMLElement references longer than required\n        },\n    };\n}\nexport function getDockviewTheme(element) {\n    function toClassList(element) {\n        const list = [];\n        for (let i = 0; i < element.classList.length; i++) {\n            list.push(element.classList.item(i));\n        }\n        return list;\n    }\n    let theme = undefined;\n    let parent = element;\n    while (parent !== null) {\n        theme = toClassList(parent).find((cls) => cls.startsWith('dockview-theme-'));\n        if (typeof theme === 'string') {\n            break;\n        }\n        parent = parent.parentElement;\n    }\n    return theme;\n}\nexport class Classnames {\n    constructor(element) {\n        this.element = element;\n        this._classNames = [];\n    }\n    setClassNames(classNames) {\n        for (const className of this._classNames) {\n            toggleClass(this.element, className, false);\n        }\n        this._classNames = classNames\n            .split(' ')\n            .filter((v) => v.trim().length > 0);\n        for (const className of this._classNames) {\n            toggleClass(this.element, className, true);\n        }\n    }\n}\n","export function tail(arr) {\n    if (arr.length === 0) {\n        throw new Error('Invalid tail call');\n    }\n    return [arr.slice(0, arr.length - 1), arr[arr.length - 1]];\n}\nexport function last(arr) {\n    return arr.length > 0 ? arr[arr.length - 1] : undefined;\n}\nexport function sequenceEquals(arr1, arr2) {\n    if (arr1.length !== arr2.length) {\n        return false;\n    }\n    for (let i = 0; i < arr1.length; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Pushes an element to the start of the array, if found.\n */\nexport function pushToStart(arr, value) {\n    const index = arr.indexOf(value);\n    if (index > -1) {\n        arr.splice(index, 1);\n        arr.unshift(value);\n    }\n}\n/**\n * Pushes an element to the end of the array, if found.\n */\nexport function pushToEnd(arr, value) {\n    const index = arr.indexOf(value);\n    if (index > -1) {\n        arr.splice(index, 1);\n        arr.push(value);\n    }\n}\nexport function firstIndex(array, fn) {\n    for (let i = 0; i < array.length; i++) {\n        const element = array[i];\n        if (fn(element)) {\n            return i;\n        }\n    }\n    return -1;\n}\nexport function remove(array, value) {\n    const index = array.findIndex((t) => t === value);\n    if (index > -1) {\n        array.splice(index, 1);\n        return true;\n    }\n    return false;\n}\n","export const clamp = (value, min, max) => {\n    if (min > max) {\n        /**\n         * caveat: an error should be thrown here if this was a proper `clamp` function but we need to handle\n         * cases where `min` > `max` and in those cases return `min`.\n         */\n        return min;\n    }\n    return Math.min(max, Math.max(value, min));\n};\nexport const sequentialNumberGenerator = () => {\n    let value = 1;\n    return { next: () => (value++).toString() };\n};\nexport const range = (from, to) => {\n    const result = [];\n    if (typeof to !== 'number') {\n        to = from;\n        from = 0;\n    }\n    if (from <= to) {\n        for (let i = from; i < to; i++) {\n            result.push(i);\n        }\n    }\n    else {\n        for (let i = from; i > to; i--) {\n            result.push(i);\n        }\n    }\n    return result;\n};\n","import { clamp } from '../math';\nexport class ViewItem {\n    set size(size) {\n        this._size = size;\n    }\n    get size() {\n        return this._size;\n    }\n    get cachedVisibleSize() {\n        return this._cachedVisibleSize;\n    }\n    get visible() {\n        return typeof this._cachedVisibleSize === 'undefined';\n    }\n    get minimumSize() {\n        return this.visible ? this.view.minimumSize : 0;\n    }\n    get viewMinimumSize() {\n        return this.view.minimumSize;\n    }\n    get maximumSize() {\n        return this.visible ? this.view.maximumSize : 0;\n    }\n    get viewMaximumSize() {\n        return this.view.maximumSize;\n    }\n    get priority() {\n        return this.view.priority;\n    }\n    get snap() {\n        return !!this.view.snap;\n    }\n    set enabled(enabled) {\n        this.container.style.pointerEvents = enabled ? '' : 'none';\n    }\n    constructor(container, view, size, disposable) {\n        this.container = container;\n        this.view = view;\n        this.disposable = disposable;\n        this._cachedVisibleSize = undefined;\n        if (typeof size === 'number') {\n            this._size = size;\n            this._cachedVisibleSize = undefined;\n            container.classList.add('visible');\n        }\n        else {\n            this._size = 0;\n            this._cachedVisibleSize = size.cachedVisibleSize;\n        }\n    }\n    setVisible(visible, size) {\n        var _a;\n        if (visible === this.visible) {\n            return;\n        }\n        if (visible) {\n            this.size = clamp((_a = this._cachedVisibleSize) !== null && _a !== void 0 ? _a : 0, this.viewMinimumSize, this.viewMaximumSize);\n            this._cachedVisibleSize = undefined;\n        }\n        else {\n            this._cachedVisibleSize =\n                typeof size === 'number' ? size : this.size;\n            this.size = 0;\n        }\n        this.container.classList.toggle('visible', visible);\n        if (this.view.setVisible) {\n            this.view.setVisible(visible);\n        }\n    }\n    dispose() {\n        this.disposable.dispose();\n        return this.view;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/splitview\n *--------------------------------------------------------------------------------------------*/\nimport { removeClasses, addClasses, toggleClass, disableIframePointEvents, } from '../dom';\nimport { Emitter } from '../events';\nimport { pushToStart, pushToEnd, firstIndex } from '../array';\nimport { range, clamp } from '../math';\nimport { ViewItem } from './viewItem';\nexport var Orientation;\n(function (Orientation) {\n    Orientation[\"HORIZONTAL\"] = \"HORIZONTAL\";\n    Orientation[\"VERTICAL\"] = \"VERTICAL\";\n})(Orientation || (Orientation = {}));\nexport var SashState;\n(function (SashState) {\n    SashState[SashState[\"MAXIMUM\"] = 0] = \"MAXIMUM\";\n    SashState[SashState[\"MINIMUM\"] = 1] = \"MINIMUM\";\n    SashState[SashState[\"DISABLED\"] = 2] = \"DISABLED\";\n    SashState[SashState[\"ENABLED\"] = 3] = \"ENABLED\";\n})(SashState || (SashState = {}));\nexport var LayoutPriority;\n(function (LayoutPriority) {\n    LayoutPriority[\"Low\"] = \"low\";\n    LayoutPriority[\"High\"] = \"high\";\n    LayoutPriority[\"Normal\"] = \"normal\";\n})(LayoutPriority || (LayoutPriority = {}));\nexport var Sizing;\n(function (Sizing) {\n    Sizing.Distribute = { type: 'distribute' };\n    function Split(index) {\n        return { type: 'split', index };\n    }\n    Sizing.Split = Split;\n    function Invisible(cachedVisibleSize) {\n        return { type: 'invisible', cachedVisibleSize };\n    }\n    Sizing.Invisible = Invisible;\n})(Sizing || (Sizing = {}));\nexport class Splitview {\n    get contentSize() {\n        return this._contentSize;\n    }\n    get size() {\n        return this._size;\n    }\n    set size(value) {\n        this._size = value;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    set orthogonalSize(value) {\n        this._orthogonalSize = value;\n    }\n    get length() {\n        return this.viewItems.length;\n    }\n    get proportions() {\n        return this._proportions ? [...this._proportions] : undefined;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    set orientation(value) {\n        this._orientation = value;\n        const tmp = this.size;\n        this.size = this.orthogonalSize;\n        this.orthogonalSize = tmp;\n        removeClasses(this.element, 'dv-horizontal', 'dv-vertical');\n        this.element.classList.add(this.orientation == Orientation.HORIZONTAL\n            ? 'dv-horizontal'\n            : 'dv-vertical');\n    }\n    get minimumSize() {\n        return this.viewItems.reduce((r, item) => r + item.minimumSize, 0);\n    }\n    get maximumSize() {\n        return this.length === 0\n            ? Number.POSITIVE_INFINITY\n            : this.viewItems.reduce((r, item) => r + item.maximumSize, 0);\n    }\n    get startSnappingEnabled() {\n        return this._startSnappingEnabled;\n    }\n    set startSnappingEnabled(startSnappingEnabled) {\n        if (this._startSnappingEnabled === startSnappingEnabled) {\n            return;\n        }\n        this._startSnappingEnabled = startSnappingEnabled;\n        this.updateSashEnablement();\n    }\n    get endSnappingEnabled() {\n        return this._endSnappingEnabled;\n    }\n    set endSnappingEnabled(endSnappingEnabled) {\n        if (this._endSnappingEnabled === endSnappingEnabled) {\n            return;\n        }\n        this._endSnappingEnabled = endSnappingEnabled;\n        this.updateSashEnablement();\n    }\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = value;\n        toggleClass(this.element, 'dv-splitview-disabled', value);\n    }\n    get margin() {\n        return this._margin;\n    }\n    set margin(value) {\n        this._margin = value;\n    }\n    constructor(container, options) {\n        var _a;\n        this.container = container;\n        this.viewItems = [];\n        this.sashes = [];\n        this._size = 0;\n        this._orthogonalSize = 0;\n        this._contentSize = 0;\n        this._proportions = undefined;\n        this._startSnappingEnabled = true;\n        this._endSnappingEnabled = true;\n        this._disabled = false;\n        this._margin = 0;\n        this._onDidSashEnd = new Emitter();\n        this.onDidSashEnd = this._onDidSashEnd.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        this.resize = (index, delta, sizes = this.viewItems.map((x) => x.size), lowPriorityIndexes, highPriorityIndexes, overloadMinDelta = Number.NEGATIVE_INFINITY, overloadMaxDelta = Number.POSITIVE_INFINITY, snapBefore, snapAfter) => {\n            if (index < 0 || index > this.viewItems.length) {\n                return 0;\n            }\n            const upIndexes = range(index, -1);\n            const downIndexes = range(index + 1, this.viewItems.length);\n            //\n            if (highPriorityIndexes) {\n                for (const i of highPriorityIndexes) {\n                    pushToStart(upIndexes, i);\n                    pushToStart(downIndexes, i);\n                }\n            }\n            if (lowPriorityIndexes) {\n                for (const i of lowPriorityIndexes) {\n                    pushToEnd(upIndexes, i);\n                    pushToEnd(downIndexes, i);\n                }\n            }\n            //\n            const upItems = upIndexes.map((i) => this.viewItems[i]);\n            const upSizes = upIndexes.map((i) => sizes[i]);\n            //\n            const downItems = downIndexes.map((i) => this.viewItems[i]);\n            const downSizes = downIndexes.map((i) => sizes[i]);\n            //\n            const minDeltaUp = upIndexes.reduce((_, i) => _ + this.viewItems[i].minimumSize - sizes[i], 0);\n            const maxDeltaUp = upIndexes.reduce((_, i) => _ + this.viewItems[i].maximumSize - sizes[i], 0);\n            //\n            const maxDeltaDown = downIndexes.length === 0\n                ? Number.POSITIVE_INFINITY\n                : downIndexes.reduce((_, i) => _ + sizes[i] - this.viewItems[i].minimumSize, 0);\n            const minDeltaDown = downIndexes.length === 0\n                ? Number.NEGATIVE_INFINITY\n                : downIndexes.reduce((_, i) => _ + sizes[i] - this.viewItems[i].maximumSize, 0);\n            //\n            const minDelta = Math.max(minDeltaUp, minDeltaDown);\n            const maxDelta = Math.min(maxDeltaDown, maxDeltaUp);\n            //\n            let snapped = false;\n            if (snapBefore) {\n                const snapView = this.viewItems[snapBefore.index];\n                const visible = delta >= snapBefore.limitDelta;\n                snapped = visible !== snapView.visible;\n                snapView.setVisible(visible, snapBefore.size);\n            }\n            if (!snapped && snapAfter) {\n                const snapView = this.viewItems[snapAfter.index];\n                const visible = delta < snapAfter.limitDelta;\n                snapped = visible !== snapView.visible;\n                snapView.setVisible(visible, snapAfter.size);\n            }\n            if (snapped) {\n                return this.resize(index, delta, sizes, lowPriorityIndexes, highPriorityIndexes, overloadMinDelta, overloadMaxDelta);\n            }\n            //\n            const tentativeDelta = clamp(delta, minDelta, maxDelta);\n            let actualDelta = 0;\n            //\n            let deltaUp = tentativeDelta;\n            for (let i = 0; i < upItems.length; i++) {\n                const item = upItems[i];\n                const size = clamp(upSizes[i] + deltaUp, item.minimumSize, item.maximumSize);\n                const viewDelta = size - upSizes[i];\n                actualDelta += viewDelta;\n                deltaUp -= viewDelta;\n                item.size = size;\n            }\n            //\n            let deltaDown = actualDelta;\n            for (let i = 0; i < downItems.length; i++) {\n                const item = downItems[i];\n                const size = clamp(downSizes[i] - deltaDown, item.minimumSize, item.maximumSize);\n                const viewDelta = size - downSizes[i];\n                deltaDown += viewDelta;\n                item.size = size;\n            }\n            //\n            return delta;\n        };\n        this._orientation = options.orientation;\n        this.element = this.createContainer();\n        this.margin = (_a = options.margin) !== null && _a !== void 0 ? _a : 0;\n        this.proportionalLayout =\n            options.proportionalLayout === undefined\n                ? true\n                : !!options.proportionalLayout;\n        this.viewContainer = this.createViewContainer();\n        this.sashContainer = this.createSashContainer();\n        this.element.appendChild(this.sashContainer);\n        this.element.appendChild(this.viewContainer);\n        this.container.appendChild(this.element);\n        this.style(options.styles);\n        // We have an existing set of view, add them now\n        if (options.descriptor) {\n            this._size = options.descriptor.size;\n            options.descriptor.views.forEach((viewDescriptor, index) => {\n                const sizing = viewDescriptor.visible === undefined ||\n                    viewDescriptor.visible\n                    ? viewDescriptor.size\n                    : {\n                        type: 'invisible',\n                        cachedVisibleSize: viewDescriptor.size,\n                    };\n                const view = viewDescriptor.view;\n                this.addView(view, sizing, index, true\n                // true skip layout\n                );\n            });\n            // Initialize content size and proportions for first layout\n            this._contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n            this.saveProportions();\n        }\n    }\n    style(styles) {\n        if ((styles === null || styles === void 0 ? void 0 : styles.separatorBorder) === 'transparent') {\n            removeClasses(this.element, 'dv-separator-border');\n            this.element.style.removeProperty('--dv-separator-border');\n        }\n        else {\n            addClasses(this.element, 'dv-separator-border');\n            if (styles === null || styles === void 0 ? void 0 : styles.separatorBorder) {\n                this.element.style.setProperty('--dv-separator-border', styles.separatorBorder);\n            }\n        }\n    }\n    isViewVisible(index) {\n        if (index < 0 || index >= this.viewItems.length) {\n            throw new Error('Index out of bounds');\n        }\n        const viewItem = this.viewItems[index];\n        return viewItem.visible;\n    }\n    setViewVisible(index, visible) {\n        if (index < 0 || index >= this.viewItems.length) {\n            throw new Error('Index out of bounds');\n        }\n        const viewItem = this.viewItems[index];\n        viewItem.setVisible(visible, viewItem.size);\n        this.distributeEmptySpace(index);\n        this.layoutViews();\n        this.saveProportions();\n    }\n    getViewSize(index) {\n        if (index < 0 || index >= this.viewItems.length) {\n            return -1;\n        }\n        return this.viewItems[index].size;\n    }\n    resizeView(index, size) {\n        if (index < 0 || index >= this.viewItems.length) {\n            return;\n        }\n        const indexes = range(this.viewItems.length).filter((i) => i !== index);\n        const lowPriorityIndexes = [\n            ...indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low),\n            index,\n        ];\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        const item = this.viewItems[index];\n        size = Math.round(size);\n        size = clamp(size, item.minimumSize, Math.min(item.maximumSize, this._size));\n        item.size = size;\n        this.relayout(lowPriorityIndexes, highPriorityIndexes);\n    }\n    getViews() {\n        return this.viewItems.map((x) => x.view);\n    }\n    onDidChange(item, size) {\n        const index = this.viewItems.indexOf(item);\n        if (index < 0 || index >= this.viewItems.length) {\n            return;\n        }\n        size = typeof size === 'number' ? size : item.size;\n        size = clamp(size, item.minimumSize, item.maximumSize);\n        item.size = size;\n        const indexes = range(this.viewItems.length).filter((i) => i !== index);\n        const lowPriorityIndexes = [\n            ...indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low),\n            index,\n        ];\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        /**\n         * add this view we are changing to the low-index list since we have determined the size\n         * here and don't want it changed\n         */\n        this.relayout([...lowPriorityIndexes, index], highPriorityIndexes);\n    }\n    addView(view, size = { type: 'distribute' }, index = this.viewItems.length, skipLayout) {\n        const container = document.createElement('div');\n        container.className = 'dv-view';\n        container.appendChild(view.element);\n        let viewSize;\n        if (typeof size === 'number') {\n            viewSize = size;\n        }\n        else if (size.type === 'split') {\n            viewSize = this.getViewSize(size.index) / 2;\n        }\n        else if (size.type === 'invisible') {\n            viewSize = { cachedVisibleSize: size.cachedVisibleSize };\n        }\n        else {\n            viewSize = view.minimumSize;\n        }\n        const disposable = view.onDidChange((newSize) => this.onDidChange(viewItem, newSize.size));\n        const viewItem = new ViewItem(container, view, viewSize, {\n            dispose: () => {\n                disposable.dispose();\n                this.viewContainer.removeChild(container);\n            },\n        });\n        if (index === this.viewItems.length) {\n            this.viewContainer.appendChild(container);\n        }\n        else {\n            this.viewContainer.insertBefore(container, this.viewContainer.children.item(index));\n        }\n        this.viewItems.splice(index, 0, viewItem);\n        if (this.viewItems.length > 1) {\n            //add sash\n            const sash = document.createElement('div');\n            sash.className = 'dv-sash';\n            const onPointerStart = (event) => {\n                for (const item of this.viewItems) {\n                    item.enabled = false;\n                }\n                const iframes = disableIframePointEvents();\n                const start = this._orientation === Orientation.HORIZONTAL\n                    ? event.clientX\n                    : event.clientY;\n                const sashIndex = firstIndex(this.sashes, (s) => s.container === sash);\n                //\n                const sizes = this.viewItems.map((x) => x.size);\n                //\n                let snapBefore;\n                let snapAfter;\n                const upIndexes = range(sashIndex, -1);\n                const downIndexes = range(sashIndex + 1, this.viewItems.length);\n                const minDeltaUp = upIndexes.reduce((r, i) => r + (this.viewItems[i].minimumSize - sizes[i]), 0);\n                const maxDeltaUp = upIndexes.reduce((r, i) => r + (this.viewItems[i].viewMaximumSize - sizes[i]), 0);\n                const maxDeltaDown = downIndexes.length === 0\n                    ? Number.POSITIVE_INFINITY\n                    : downIndexes.reduce((r, i) => r +\n                        (sizes[i] - this.viewItems[i].minimumSize), 0);\n                const minDeltaDown = downIndexes.length === 0\n                    ? Number.NEGATIVE_INFINITY\n                    : downIndexes.reduce((r, i) => r +\n                        (sizes[i] -\n                            this.viewItems[i].viewMaximumSize), 0);\n                const minDelta = Math.max(minDeltaUp, minDeltaDown);\n                const maxDelta = Math.min(maxDeltaDown, maxDeltaUp);\n                const snapBeforeIndex = this.findFirstSnapIndex(upIndexes);\n                const snapAfterIndex = this.findFirstSnapIndex(downIndexes);\n                if (typeof snapBeforeIndex === 'number') {\n                    const snappedViewItem = this.viewItems[snapBeforeIndex];\n                    const halfSize = Math.floor(snappedViewItem.viewMinimumSize / 2);\n                    snapBefore = {\n                        index: snapBeforeIndex,\n                        limitDelta: snappedViewItem.visible\n                            ? minDelta - halfSize\n                            : minDelta + halfSize,\n                        size: snappedViewItem.size,\n                    };\n                }\n                if (typeof snapAfterIndex === 'number') {\n                    const snappedViewItem = this.viewItems[snapAfterIndex];\n                    const halfSize = Math.floor(snappedViewItem.viewMinimumSize / 2);\n                    snapAfter = {\n                        index: snapAfterIndex,\n                        limitDelta: snappedViewItem.visible\n                            ? maxDelta + halfSize\n                            : maxDelta - halfSize,\n                        size: snappedViewItem.size,\n                    };\n                }\n                const onPointerMove = (event) => {\n                    const current = this._orientation === Orientation.HORIZONTAL\n                        ? event.clientX\n                        : event.clientY;\n                    const delta = current - start;\n                    this.resize(sashIndex, delta, sizes, undefined, undefined, minDelta, maxDelta, snapBefore, snapAfter);\n                    this.distributeEmptySpace();\n                    this.layoutViews();\n                };\n                const end = () => {\n                    for (const item of this.viewItems) {\n                        item.enabled = true;\n                    }\n                    iframes.release();\n                    this.saveProportions();\n                    document.removeEventListener('pointermove', onPointerMove);\n                    document.removeEventListener('pointerup', end);\n                    document.removeEventListener('pointercancel', end);\n                    this._onDidSashEnd.fire(undefined);\n                };\n                document.addEventListener('pointermove', onPointerMove);\n                document.addEventListener('pointerup', end);\n                document.addEventListener('pointercancel', end);\n            };\n            sash.addEventListener('pointerdown', onPointerStart);\n            const sashItem = {\n                container: sash,\n                disposable: () => {\n                    sash.removeEventListener('pointerdown', onPointerStart);\n                    this.sashContainer.removeChild(sash);\n                },\n            };\n            this.sashContainer.appendChild(sash);\n            this.sashes.push(sashItem);\n        }\n        if (!skipLayout) {\n            this.relayout([index]);\n        }\n        if (!skipLayout &&\n            typeof size !== 'number' &&\n            size.type === 'distribute') {\n            this.distributeViewSizes();\n        }\n        this._onDidAddView.fire(view);\n    }\n    distributeViewSizes() {\n        const flexibleViewItems = [];\n        let flexibleSize = 0;\n        for (const item of this.viewItems) {\n            if (item.maximumSize - item.minimumSize > 0) {\n                flexibleViewItems.push(item);\n                flexibleSize += item.size;\n            }\n        }\n        const size = Math.floor(flexibleSize / flexibleViewItems.length);\n        for (const item of flexibleViewItems) {\n            item.size = clamp(size, item.minimumSize, item.maximumSize);\n        }\n        const indexes = range(this.viewItems.length);\n        const lowPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low);\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        this.relayout(lowPriorityIndexes, highPriorityIndexes);\n    }\n    removeView(index, sizing, skipLayout = false) {\n        // Remove view\n        const viewItem = this.viewItems.splice(index, 1)[0];\n        viewItem.dispose();\n        // Remove sash\n        if (this.viewItems.length >= 1) {\n            const sashIndex = Math.max(index - 1, 0);\n            const sashItem = this.sashes.splice(sashIndex, 1)[0];\n            sashItem.disposable();\n        }\n        if (!skipLayout) {\n            this.relayout();\n        }\n        if (sizing && sizing.type === 'distribute') {\n            this.distributeViewSizes();\n        }\n        this._onDidRemoveView.fire(viewItem.view);\n        return viewItem.view;\n    }\n    getViewCachedVisibleSize(index) {\n        if (index < 0 || index >= this.viewItems.length) {\n            throw new Error('Index out of bounds');\n        }\n        const viewItem = this.viewItems[index];\n        return viewItem.cachedVisibleSize;\n    }\n    moveView(from, to) {\n        const cachedVisibleSize = this.getViewCachedVisibleSize(from);\n        const sizing = typeof cachedVisibleSize === 'undefined'\n            ? this.getViewSize(from)\n            : Sizing.Invisible(cachedVisibleSize);\n        const view = this.removeView(from, undefined, true);\n        this.addView(view, sizing, to);\n    }\n    layout(size, orthogonalSize) {\n        const previousSize = Math.max(this.size, this._contentSize);\n        this.size = size;\n        this.orthogonalSize = orthogonalSize;\n        if (!this.proportions) {\n            const indexes = range(this.viewItems.length);\n            const lowPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low);\n            const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n            this.resize(this.viewItems.length - 1, size - previousSize, undefined, lowPriorityIndexes, highPriorityIndexes);\n        }\n        else {\n            let total = 0;\n            for (let i = 0; i < this.viewItems.length; i++) {\n                const item = this.viewItems[i];\n                const proportion = this.proportions[i];\n                if (typeof proportion === 'number') {\n                    total += proportion;\n                }\n                else {\n                    size -= item.size;\n                }\n            }\n            for (let i = 0; i < this.viewItems.length; i++) {\n                const item = this.viewItems[i];\n                const proportion = this.proportions[i];\n                if (typeof proportion === 'number' && total > 0) {\n                    item.size = clamp(Math.round((proportion * size) / total), item.minimumSize, item.maximumSize);\n                }\n            }\n        }\n        this.distributeEmptySpace();\n        this.layoutViews();\n    }\n    relayout(lowPriorityIndexes, highPriorityIndexes) {\n        const contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n        this.resize(this.viewItems.length - 1, this._size - contentSize, undefined, lowPriorityIndexes, highPriorityIndexes);\n        this.distributeEmptySpace();\n        this.layoutViews();\n        this.saveProportions();\n    }\n    distributeEmptySpace(lowPriorityIndex) {\n        const contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n        let emptyDelta = this.size - contentSize;\n        const indexes = range(this.viewItems.length - 1, -1);\n        const lowPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low);\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        for (const index of highPriorityIndexes) {\n            pushToStart(indexes, index);\n        }\n        for (const index of lowPriorityIndexes) {\n            pushToEnd(indexes, index);\n        }\n        if (typeof lowPriorityIndex === 'number') {\n            pushToEnd(indexes, lowPriorityIndex);\n        }\n        for (let i = 0; emptyDelta !== 0 && i < indexes.length; i++) {\n            const item = this.viewItems[indexes[i]];\n            const size = clamp(item.size + emptyDelta, item.minimumSize, item.maximumSize);\n            const viewDelta = size - item.size;\n            emptyDelta -= viewDelta;\n            item.size = size;\n        }\n    }\n    saveProportions() {\n        if (this.proportionalLayout && this._contentSize > 0) {\n            this._proportions = this.viewItems.map((i) => i.visible ? i.size / this._contentSize : undefined);\n        }\n    }\n    /**\n     * Margin explain:\n     *\n     * For `n` views in a splitview there will be `n-1` margins `m`.\n     *\n     * To fit the margins each view must reduce in size by `(m * (n - 1)) / n`.\n     *\n     * For each view `i` the offet must be adjusted by `m * i/(n - 1)`.\n     */\n    layoutViews() {\n        this._contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n        this.updateSashEnablement();\n        if (this.viewItems.length === 0) {\n            return;\n        }\n        const visibleViewItems = this.viewItems.filter((i) => i.visible);\n        const sashCount = Math.max(0, visibleViewItems.length - 1);\n        const marginReducedSize = (this.margin * sashCount) / Math.max(1, visibleViewItems.length);\n        let totalLeftOffset = 0;\n        const viewLeftOffsets = [];\n        const sashWidth = 4; // hardcoded in css\n        const runningVisiblePanelCount = this.viewItems.reduce((arr, viewItem, i) => {\n            const flag = viewItem.visible ? 1 : 0;\n            if (i === 0) {\n                arr.push(flag);\n            }\n            else {\n                arr.push(arr[i - 1] + flag);\n            }\n            return arr;\n        }, []);\n        // calculate both view and cash positions\n        this.viewItems.forEach((view, i) => {\n            totalLeftOffset += this.viewItems[i].size;\n            viewLeftOffsets.push(totalLeftOffset);\n            const size = view.visible ? view.size - marginReducedSize : 0;\n            const visiblePanelsBeforeThisView = Math.max(0, runningVisiblePanelCount[i] - 1);\n            const offset = i === 0 || visiblePanelsBeforeThisView === 0\n                ? 0\n                : viewLeftOffsets[i - 1] +\n                    (visiblePanelsBeforeThisView / sashCount) *\n                        marginReducedSize;\n            if (i < this.viewItems.length - 1) {\n                // calculate sash position\n                const newSize = view.visible\n                    ? offset + size - sashWidth / 2 + this.margin / 2\n                    : offset;\n                if (this._orientation === Orientation.HORIZONTAL) {\n                    this.sashes[i].container.style.left = `${newSize}px`;\n                    this.sashes[i].container.style.top = `0px`;\n                }\n                if (this._orientation === Orientation.VERTICAL) {\n                    this.sashes[i].container.style.left = `0px`;\n                    this.sashes[i].container.style.top = `${newSize}px`;\n                }\n            }\n            // calculate view position\n            if (this._orientation === Orientation.HORIZONTAL) {\n                view.container.style.width = `${size}px`;\n                view.container.style.left = `${offset}px`;\n                view.container.style.top = '';\n                view.container.style.height = '';\n            }\n            if (this._orientation === Orientation.VERTICAL) {\n                view.container.style.height = `${size}px`;\n                view.container.style.top = `${offset}px`;\n                view.container.style.width = '';\n                view.container.style.left = '';\n            }\n            view.view.layout(view.size - marginReducedSize, this._orthogonalSize);\n        });\n    }\n    findFirstSnapIndex(indexes) {\n        // visible views first\n        for (const index of indexes) {\n            const viewItem = this.viewItems[index];\n            if (!viewItem.visible) {\n                continue;\n            }\n            if (viewItem.snap) {\n                return index;\n            }\n        }\n        // then, hidden views\n        for (const index of indexes) {\n            const viewItem = this.viewItems[index];\n            if (viewItem.visible &&\n                viewItem.maximumSize - viewItem.minimumSize > 0) {\n                return undefined;\n            }\n            if (!viewItem.visible && viewItem.snap) {\n                return index;\n            }\n        }\n        return undefined;\n    }\n    updateSashEnablement() {\n        let previous = false;\n        const collapsesDown = this.viewItems.map((i) => (previous = i.size - i.minimumSize > 0 || previous));\n        previous = false;\n        const expandsDown = this.viewItems.map((i) => (previous = i.maximumSize - i.size > 0 || previous));\n        const reverseViews = [...this.viewItems].reverse();\n        previous = false;\n        const collapsesUp = reverseViews\n            .map((i) => (previous = i.size - i.minimumSize > 0 || previous))\n            .reverse();\n        previous = false;\n        const expandsUp = reverseViews\n            .map((i) => (previous = i.maximumSize - i.size > 0 || previous))\n            .reverse();\n        let position = 0;\n        for (let index = 0; index < this.sashes.length; index++) {\n            const sash = this.sashes[index];\n            const viewItem = this.viewItems[index];\n            position += viewItem.size;\n            const min = !(collapsesDown[index] && expandsUp[index + 1]);\n            const max = !(expandsDown[index] && collapsesUp[index + 1]);\n            if (min && max) {\n                const upIndexes = range(index, -1);\n                const downIndexes = range(index + 1, this.viewItems.length);\n                const snapBeforeIndex = this.findFirstSnapIndex(upIndexes);\n                const snapAfterIndex = this.findFirstSnapIndex(downIndexes);\n                const snappedBefore = typeof snapBeforeIndex === 'number' &&\n                    !this.viewItems[snapBeforeIndex].visible;\n                const snappedAfter = typeof snapAfterIndex === 'number' &&\n                    !this.viewItems[snapAfterIndex].visible;\n                if (snappedBefore &&\n                    collapsesUp[index] &&\n                    (position > 0 || this.startSnappingEnabled)) {\n                    this.updateSash(sash, SashState.MINIMUM);\n                }\n                else if (snappedAfter &&\n                    collapsesDown[index] &&\n                    (position < this._contentSize || this.endSnappingEnabled)) {\n                    this.updateSash(sash, SashState.MAXIMUM);\n                }\n                else {\n                    this.updateSash(sash, SashState.DISABLED);\n                }\n            }\n            else if (min && !max) {\n                this.updateSash(sash, SashState.MINIMUM);\n            }\n            else if (!min && max) {\n                this.updateSash(sash, SashState.MAXIMUM);\n            }\n            else {\n                this.updateSash(sash, SashState.ENABLED);\n            }\n        }\n    }\n    updateSash(sash, state) {\n        toggleClass(sash.container, 'dv-disabled', state === SashState.DISABLED);\n        toggleClass(sash.container, 'dv-enabled', state === SashState.ENABLED);\n        toggleClass(sash.container, 'dv-maximum', state === SashState.MAXIMUM);\n        toggleClass(sash.container, 'dv-minimum', state === SashState.MINIMUM);\n    }\n    createViewContainer() {\n        const element = document.createElement('div');\n        element.className = 'dv-view-container';\n        return element;\n    }\n    createSashContainer() {\n        const element = document.createElement('div');\n        element.className = 'dv-sash-container';\n        return element;\n    }\n    createContainer() {\n        const element = document.createElement('div');\n        const orientationClassname = this._orientation === Orientation.HORIZONTAL\n            ? 'dv-horizontal'\n            : 'dv-vertical';\n        element.className = `dv-split-view-container ${orientationClassname}`;\n        return element;\n    }\n    dispose() {\n        this._onDidSashEnd.dispose();\n        this._onDidAddView.dispose();\n        this._onDidRemoveView.dispose();\n        for (let i = 0; i < this.element.children.length; i++) {\n            if (this.element.children.item(i) === this.element) {\n                this.element.removeChild(this.element);\n                break;\n            }\n        }\n        for (const viewItem of this.viewItems) {\n            viewItem.dispose();\n        }\n        this.element.remove();\n    }\n}\n","import { Splitview, Orientation, } from '../splitview/splitview';\nimport { CompositeDisposable } from '../lifecycle';\nimport { Emitter } from '../events';\nimport { addClasses, removeClasses } from '../dom';\nexport class Paneview extends CompositeDisposable {\n    get onDidAddView() {\n        return this.splitview.onDidAddView;\n    }\n    get onDidRemoveView() {\n        return this.splitview.onDidRemoveView;\n    }\n    get minimumSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumSize() {\n        return this.splitview.maximumSize;\n    }\n    get orientation() {\n        return this.splitview.orientation;\n    }\n    get size() {\n        return this.splitview.size;\n    }\n    get orthogonalSize() {\n        return this.splitview.orthogonalSize;\n    }\n    constructor(container, options) {\n        var _a;\n        super();\n        this.paneItems = [];\n        this.skipAnimation = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._orientation = (_a = options.orientation) !== null && _a !== void 0 ? _a : Orientation.VERTICAL;\n        this.element = document.createElement('div');\n        this.element.className = 'dv-pane-container';\n        container.appendChild(this.element);\n        this.splitview = new Splitview(this.element, {\n            orientation: this._orientation,\n            proportionalLayout: false,\n            descriptor: options.descriptor,\n        });\n        // if we've added views from the descriptor we need to\n        // add the panes to our Pane array and setup animation\n        this.getPanes().forEach((pane) => {\n            const disposable = new CompositeDisposable(pane.onDidChangeExpansionState(() => {\n                this.setupAnimation();\n                this._onDidChange.fire(undefined);\n            }));\n            const paneItem = {\n                pane,\n                disposable: {\n                    dispose: () => {\n                        disposable.dispose();\n                    },\n                },\n            };\n            this.paneItems.push(paneItem);\n            pane.orthogonalSize = this.splitview.orthogonalSize;\n        });\n        this.addDisposables(this._onDidChange, this.splitview.onDidSashEnd(() => {\n            this._onDidChange.fire(undefined);\n        }), this.splitview.onDidAddView(() => {\n            this._onDidChange.fire();\n        }), this.splitview.onDidRemoveView(() => {\n            this._onDidChange.fire();\n        }));\n    }\n    setViewVisible(index, visible) {\n        this.splitview.setViewVisible(index, visible);\n    }\n    addPane(pane, size, index = this.splitview.length, skipLayout = false) {\n        const disposable = pane.onDidChangeExpansionState(() => {\n            this.setupAnimation();\n            this._onDidChange.fire(undefined);\n        });\n        const paneItem = {\n            pane,\n            disposable: {\n                dispose: () => {\n                    disposable.dispose();\n                },\n            },\n        };\n        this.paneItems.splice(index, 0, paneItem);\n        pane.orthogonalSize = this.splitview.orthogonalSize;\n        this.splitview.addView(pane, size, index, skipLayout);\n    }\n    getViewSize(index) {\n        return this.splitview.getViewSize(index);\n    }\n    getPanes() {\n        return this.splitview.getViews();\n    }\n    removePane(index, options = { skipDispose: false }) {\n        const paneItem = this.paneItems.splice(index, 1)[0];\n        this.splitview.removeView(index);\n        if (!options.skipDispose) {\n            paneItem.disposable.dispose();\n            paneItem.pane.dispose();\n        }\n        return paneItem;\n    }\n    moveView(from, to) {\n        if (from === to) {\n            return;\n        }\n        const view = this.removePane(from, { skipDispose: true });\n        this.skipAnimation = true;\n        try {\n            this.addPane(view.pane, view.pane.size, to, false);\n        }\n        finally {\n            this.skipAnimation = false;\n        }\n    }\n    layout(size, orthogonalSize) {\n        this.splitview.layout(size, orthogonalSize);\n    }\n    setupAnimation() {\n        if (this.skipAnimation) {\n            return;\n        }\n        if (this.animationTimer) {\n            clearTimeout(this.animationTimer);\n            this.animationTimer = undefined;\n        }\n        addClasses(this.element, 'dv-animated');\n        this.animationTimer = setTimeout(() => {\n            this.animationTimer = undefined;\n            removeClasses(this.element, 'dv-animated');\n        }, 200);\n    }\n    dispose() {\n        super.dispose();\n        if (this.animationTimer) {\n            clearTimeout(this.animationTimer);\n            this.animationTimer = undefined;\n        }\n        this.paneItems.forEach((paneItem) => {\n            paneItem.disposable.dispose();\n            paneItem.pane.dispose();\n        });\n        this.paneItems = [];\n        this.splitview.dispose();\n        this.element.remove();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Orientation } from '../splitview/splitview';\nimport { Emitter } from '../events';\nexport class LeafNode {\n    get minimumWidth() {\n        return this.view.minimumWidth;\n    }\n    get maximumWidth() {\n        return this.view.maximumWidth;\n    }\n    get minimumHeight() {\n        return this.view.minimumHeight;\n    }\n    get maximumHeight() {\n        return this.view.maximumHeight;\n    }\n    get priority() {\n        return this.view.priority;\n    }\n    get snap() {\n        return this.view.snap;\n    }\n    get minimumSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumHeight\n            : this.minimumWidth;\n    }\n    get maximumSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumHeight\n            : this.maximumWidth;\n    }\n    get minimumOrthogonalSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumWidth\n            : this.minimumHeight;\n    }\n    get maximumOrthogonalSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumWidth\n            : this.maximumHeight;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    get size() {\n        return this._size;\n    }\n    get element() {\n        return this.view.element;\n    }\n    get width() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.orthogonalSize\n            : this.size;\n    }\n    get height() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.size\n            : this.orthogonalSize;\n    }\n    constructor(view, orientation, orthogonalSize, size = 0) {\n        this.view = view;\n        this.orientation = orientation;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._orthogonalSize = orthogonalSize;\n        this._size = size;\n        this._disposable = this.view.onDidChange((event) => {\n            if (event) {\n                this._onDidChange.fire({\n                    size: this.orientation === Orientation.VERTICAL\n                        ? event.width\n                        : event.height,\n                    orthogonalSize: this.orientation === Orientation.VERTICAL\n                        ? event.height\n                        : event.width,\n                });\n            }\n            else {\n                this._onDidChange.fire({});\n            }\n        });\n    }\n    setVisible(visible) {\n        if (this.view.setVisible) {\n            this.view.setVisible(visible);\n        }\n    }\n    layout(size, orthogonalSize) {\n        this._size = size;\n        this._orthogonalSize = orthogonalSize;\n        this.view.layout(this.width, this.height);\n    }\n    dispose() {\n        this._onDidChange.dispose();\n        this._disposable.dispose();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Splitview, Orientation, LayoutPriority, } from '../splitview/splitview';\nimport { Emitter, Event } from '../events';\nimport { LeafNode } from './leafNode';\nimport { CompositeDisposable, Disposable } from '../lifecycle';\nexport class BranchNode extends CompositeDisposable {\n    get width() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.size\n            : this.orthogonalSize;\n    }\n    get height() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.orthogonalSize\n            : this.size;\n    }\n    get minimumSize() {\n        return this.children.length === 0\n            ? 0\n            : Math.max(...this.children.map((c, index) => this.splitview.isViewVisible(index)\n                ? c.minimumOrthogonalSize\n                : 0));\n    }\n    get maximumSize() {\n        return Math.min(...this.children.map((c, index) => this.splitview.isViewVisible(index)\n            ? c.maximumOrthogonalSize\n            : Number.POSITIVE_INFINITY));\n    }\n    get minimumOrthogonalSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumOrthogonalSize() {\n        return this.splitview.maximumSize;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    get size() {\n        return this._size;\n    }\n    get minimumWidth() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumOrthogonalSize\n            : this.minimumSize;\n    }\n    get minimumHeight() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumSize\n            : this.minimumOrthogonalSize;\n    }\n    get maximumWidth() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumOrthogonalSize\n            : this.maximumSize;\n    }\n    get maximumHeight() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumSize\n            : this.maximumOrthogonalSize;\n    }\n    get priority() {\n        if (this.children.length === 0) {\n            return LayoutPriority.Normal;\n        }\n        const priorities = this.children.map((c) => typeof c.priority === 'undefined'\n            ? LayoutPriority.Normal\n            : c.priority);\n        if (priorities.some((p) => p === LayoutPriority.High)) {\n            return LayoutPriority.High;\n        }\n        else if (priorities.some((p) => p === LayoutPriority.Low)) {\n            return LayoutPriority.Low;\n        }\n        return LayoutPriority.Normal;\n    }\n    get disabled() {\n        return this.splitview.disabled;\n    }\n    set disabled(value) {\n        this.splitview.disabled = value;\n    }\n    get margin() {\n        return this.splitview.margin;\n    }\n    set margin(value) {\n        this.splitview.margin = value;\n        this.children.forEach((child) => {\n            if (child instanceof BranchNode) {\n                child.margin = value;\n            }\n        });\n    }\n    constructor(orientation, proportionalLayout, styles, size, orthogonalSize, disabled, margin, childDescriptors) {\n        super();\n        this.orientation = orientation;\n        this.proportionalLayout = proportionalLayout;\n        this.styles = styles;\n        this._childrenDisposable = Disposable.NONE;\n        this.children = [];\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._onDidVisibilityChange = new Emitter();\n        this.onDidVisibilityChange = this._onDidVisibilityChange.event;\n        this._orthogonalSize = orthogonalSize;\n        this._size = size;\n        this.element = document.createElement('div');\n        this.element.className = 'dv-branch-node';\n        if (!childDescriptors) {\n            this.splitview = new Splitview(this.element, {\n                orientation: this.orientation,\n                proportionalLayout,\n                styles,\n                margin,\n            });\n            this.splitview.layout(this.size, this.orthogonalSize);\n        }\n        else {\n            const descriptor = {\n                views: childDescriptors.map((childDescriptor) => {\n                    return {\n                        view: childDescriptor.node,\n                        size: childDescriptor.node.size,\n                        visible: childDescriptor.node instanceof LeafNode &&\n                            childDescriptor.visible !== undefined\n                            ? childDescriptor.visible\n                            : true,\n                    };\n                }),\n                size: this.orthogonalSize,\n            };\n            this.children = childDescriptors.map((c) => c.node);\n            this.splitview = new Splitview(this.element, {\n                orientation: this.orientation,\n                descriptor,\n                proportionalLayout,\n                styles,\n                margin,\n            });\n        }\n        this.disabled = disabled;\n        this.addDisposables(this._onDidChange, this._onDidVisibilityChange, this.splitview.onDidSashEnd(() => {\n            this._onDidChange.fire({});\n        }));\n        this.setupChildrenEvents();\n    }\n    setVisible(_visible) {\n        // noop\n    }\n    isChildVisible(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.isViewVisible(index);\n    }\n    setChildVisible(index, visible) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        if (this.splitview.isViewVisible(index) === visible) {\n            return;\n        }\n        const wereAllChildrenHidden = this.splitview.contentSize === 0;\n        this.splitview.setViewVisible(index, visible);\n        // }\n        const areAllChildrenHidden = this.splitview.contentSize === 0;\n        // If all children are hidden then the parent should hide the entire splitview\n        // If the entire splitview is hidden then the parent should show the splitview when a child is shown\n        if ((visible && wereAllChildrenHidden) ||\n            (!visible && areAllChildrenHidden)) {\n            this._onDidVisibilityChange.fire({ visible });\n        }\n    }\n    moveChild(from, to) {\n        if (from === to) {\n            return;\n        }\n        if (from < 0 || from >= this.children.length) {\n            throw new Error('Invalid from index');\n        }\n        if (from < to) {\n            to--;\n        }\n        this.splitview.moveView(from, to);\n        const child = this._removeChild(from);\n        this._addChild(child, to);\n    }\n    getChildSize(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.getViewSize(index);\n    }\n    resizeChild(index, size) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.resizeView(index, size);\n    }\n    layout(size, orthogonalSize) {\n        this._size = orthogonalSize;\n        this._orthogonalSize = size;\n        this.splitview.layout(orthogonalSize, size);\n    }\n    addChild(node, size, index, skipLayout) {\n        if (index < 0 || index > this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.addView(node, size, index, skipLayout);\n        this._addChild(node, index);\n    }\n    getChildCachedVisibleSize(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.getViewCachedVisibleSize(index);\n    }\n    removeChild(index, sizing) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.removeView(index, sizing);\n        return this._removeChild(index);\n    }\n    _addChild(node, index) {\n        this.children.splice(index, 0, node);\n        this.setupChildrenEvents();\n    }\n    _removeChild(index) {\n        const [child] = this.children.splice(index, 1);\n        this.setupChildrenEvents();\n        return child;\n    }\n    setupChildrenEvents() {\n        this._childrenDisposable.dispose();\n        this._childrenDisposable = new CompositeDisposable(Event.any(...this.children.map((c) => c.onDidChange))((e) => {\n            /**\n             * indicate a change has occured to allows any re-rendering but don't bubble\n             * event because that was specific to this branch\n             */\n            this._onDidChange.fire({ size: e.orthogonalSize });\n        }), ...this.children.map((c, i) => {\n            if (c instanceof BranchNode) {\n                return c.onDidVisibilityChange(({ visible }) => {\n                    this.setChildVisible(i, visible);\n                });\n            }\n            return Disposable.NONE;\n        }));\n    }\n    dispose() {\n        this._childrenDisposable.dispose();\n        this.splitview.dispose();\n        this.children.forEach((child) => child.dispose());\n        super.dispose();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Orientation, Sizing, } from '../splitview/splitview';\nimport { tail } from '../array';\nimport { LeafNode } from './leafNode';\nimport { BranchNode } from './branchNode';\nimport { Emitter } from '../events';\nimport { MutableDisposable } from '../lifecycle';\nfunction findLeaf(candiateNode, last) {\n    if (candiateNode instanceof LeafNode) {\n        return candiateNode;\n    }\n    if (candiateNode instanceof BranchNode) {\n        return findLeaf(candiateNode.children[last ? candiateNode.children.length - 1 : 0], last);\n    }\n    throw new Error('invalid node');\n}\nfunction flipNode(node, size, orthogonalSize) {\n    if (node instanceof BranchNode) {\n        const result = new BranchNode(orthogonal(node.orientation), node.proportionalLayout, node.styles, size, orthogonalSize, node.disabled, node.margin);\n        let totalSize = 0;\n        for (let i = node.children.length - 1; i >= 0; i--) {\n            const child = node.children[i];\n            const childSize = child instanceof BranchNode ? child.orthogonalSize : child.size;\n            let newSize = node.size === 0\n                ? 0\n                : Math.round((size * childSize) / node.size);\n            totalSize += newSize;\n            // The last view to add should adjust to rounding errors\n            if (i === 0) {\n                newSize += size - totalSize;\n            }\n            result.addChild(flipNode(child, orthogonalSize, newSize), newSize, 0, true);\n        }\n        return result;\n    }\n    else {\n        return new LeafNode(node.view, orthogonal(node.orientation), orthogonalSize);\n    }\n}\nexport function indexInParent(element) {\n    const parentElement = element.parentElement;\n    if (!parentElement) {\n        throw new Error('Invalid grid element');\n    }\n    let el = parentElement.firstElementChild;\n    let index = 0;\n    while (el !== element && el !== parentElement.lastElementChild && el) {\n        el = el.nextElementSibling;\n        index++;\n    }\n    return index;\n}\n/**\n * Find the grid location of a specific DOM element by traversing the parent\n * chain and finding each child index on the way.\n *\n * This will break as soon as DOM structures of the Splitview or Gridview change.\n */\nexport function getGridLocation(element) {\n    const parentElement = element.parentElement;\n    if (!parentElement) {\n        throw new Error('Invalid grid element');\n    }\n    if (/\\bdv-grid-view\\b/.test(parentElement.className)) {\n        return [];\n    }\n    const index = indexInParent(parentElement);\n    const ancestor = parentElement.parentElement.parentElement.parentElement;\n    return [...getGridLocation(ancestor), index];\n}\nexport function getRelativeLocation(rootOrientation, location, direction) {\n    const orientation = getLocationOrientation(rootOrientation, location);\n    const directionOrientation = getDirectionOrientation(direction);\n    if (orientation === directionOrientation) {\n        const [rest, _index] = tail(location);\n        let index = _index;\n        if (direction === 'right' || direction === 'bottom') {\n            index += 1;\n        }\n        return [...rest, index];\n    }\n    else {\n        const index = direction === 'right' || direction === 'bottom' ? 1 : 0;\n        return [...location, index];\n    }\n}\nexport function getDirectionOrientation(direction) {\n    return direction === 'top' || direction === 'bottom'\n        ? Orientation.VERTICAL\n        : Orientation.HORIZONTAL;\n}\nexport function getLocationOrientation(rootOrientation, location) {\n    return location.length % 2 === 0\n        ? orthogonal(rootOrientation)\n        : rootOrientation;\n}\nexport const orthogonal = (orientation) => orientation === Orientation.HORIZONTAL\n    ? Orientation.VERTICAL\n    : Orientation.HORIZONTAL;\nexport function isGridBranchNode(node) {\n    return !!node.children;\n}\nconst serializeBranchNode = (node, orientation) => {\n    const size = orientation === Orientation.VERTICAL ? node.box.width : node.box.height;\n    if (!isGridBranchNode(node)) {\n        if (typeof node.cachedVisibleSize === 'number') {\n            return {\n                type: 'leaf',\n                data: node.view.toJSON(),\n                size: node.cachedVisibleSize,\n                visible: false,\n            };\n        }\n        return { type: 'leaf', data: node.view.toJSON(), size };\n    }\n    return {\n        type: 'branch',\n        data: node.children.map((c) => serializeBranchNode(c, orthogonal(orientation))),\n        size,\n    };\n};\nexport class Gridview {\n    get length() {\n        return this._root ? this._root.children.length : 0;\n    }\n    get orientation() {\n        return this.root.orientation;\n    }\n    set orientation(orientation) {\n        if (this.root.orientation === orientation) {\n            return;\n        }\n        const { size, orthogonalSize } = this.root;\n        this.root = flipNode(this.root, orthogonalSize, size);\n        this.root.layout(size, orthogonalSize);\n    }\n    get width() {\n        return this.root.width;\n    }\n    get height() {\n        return this.root.height;\n    }\n    get minimumWidth() {\n        return this.root.minimumWidth;\n    }\n    get minimumHeight() {\n        return this.root.minimumHeight;\n    }\n    get maximumWidth() {\n        return this.root.maximumHeight;\n    }\n    get maximumHeight() {\n        return this.root.maximumHeight;\n    }\n    get locked() {\n        return this._locked;\n    }\n    set locked(value) {\n        this._locked = value;\n        const branch = [this.root];\n        /**\n         * simple depth-first-search to cover all nodes\n         *\n         * @see https://en.wikipedia.org/wiki/Depth-first_search\n         */\n        while (branch.length > 0) {\n            const node = branch.pop();\n            if (node instanceof BranchNode) {\n                node.disabled = value;\n                branch.push(...node.children);\n            }\n        }\n    }\n    get margin() {\n        return this._margin;\n    }\n    set margin(value) {\n        this._margin = value;\n        this.root.margin = value;\n    }\n    maximizedView() {\n        var _a;\n        return (_a = this._maximizedNode) === null || _a === void 0 ? void 0 : _a.leaf.view;\n    }\n    hasMaximizedView() {\n        return this._maximizedNode !== undefined;\n    }\n    maximizeView(view) {\n        var _a;\n        const location = getGridLocation(view.element);\n        const [_, node] = this.getNode(location);\n        if (!(node instanceof LeafNode)) {\n            return;\n        }\n        if (((_a = this._maximizedNode) === null || _a === void 0 ? void 0 : _a.leaf) === node) {\n            return;\n        }\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        serializeBranchNode(this.getView(), this.orientation);\n        const hiddenOnMaximize = [];\n        function hideAllViewsBut(parent, exclude) {\n            for (let i = 0; i < parent.children.length; i++) {\n                const child = parent.children[i];\n                if (child instanceof LeafNode) {\n                    if (child !== exclude) {\n                        if (parent.isChildVisible(i)) {\n                            parent.setChildVisible(i, false);\n                        }\n                        else {\n                            hiddenOnMaximize.push(child);\n                        }\n                    }\n                }\n                else {\n                    hideAllViewsBut(child, exclude);\n                }\n            }\n        }\n        hideAllViewsBut(this.root, node);\n        this._maximizedNode = { leaf: node, hiddenOnMaximize };\n        this._onDidMaximizedNodeChange.fire({\n            view: node.view,\n            isMaximized: true,\n        });\n    }\n    exitMaximizedView() {\n        if (!this._maximizedNode) {\n            return;\n        }\n        const hiddenOnMaximize = this._maximizedNode.hiddenOnMaximize;\n        function showViewsInReverseOrder(parent) {\n            for (let index = parent.children.length - 1; index >= 0; index--) {\n                const child = parent.children[index];\n                if (child instanceof LeafNode) {\n                    if (!hiddenOnMaximize.includes(child)) {\n                        parent.setChildVisible(index, true);\n                    }\n                }\n                else {\n                    showViewsInReverseOrder(child);\n                }\n            }\n        }\n        showViewsInReverseOrder(this.root);\n        const tmp = this._maximizedNode.leaf;\n        this._maximizedNode = undefined;\n        this._onDidMaximizedNodeChange.fire({\n            view: tmp.view,\n            isMaximized: false,\n        });\n    }\n    serialize() {\n        const maximizedView = this.maximizedView();\n        let maxmizedViewLocation;\n        if (maximizedView) {\n            /**\n             * The minimum information we can get away with in order to serialize a maxmized view is it's location within the grid\n             * which is represented as a branch of indices\n             */\n            maxmizedViewLocation = getGridLocation(maximizedView.element);\n        }\n        if (this.hasMaximizedView()) {\n            /**\n             * the saved layout cannot be in its maxmized state otherwise all of the underlying\n             * view dimensions will be wrong\n             *\n             * To counteract this we temporaily remove the maximized view to compute the serialized output\n             * of the grid before adding back the maxmized view as to not alter the layout from the users\n             * perspective when `.toJSON()` is called\n             */\n            this.exitMaximizedView();\n        }\n        const root = serializeBranchNode(this.getView(), this.orientation);\n        const resullt = {\n            root,\n            width: this.width,\n            height: this.height,\n            orientation: this.orientation,\n        };\n        if (maxmizedViewLocation) {\n            resullt.maximizedNode = {\n                location: maxmizedViewLocation,\n            };\n        }\n        if (maximizedView) {\n            // replace any maximzied view that was removed for serialization purposes\n            this.maximizeView(maximizedView);\n        }\n        return resullt;\n    }\n    dispose() {\n        this.disposable.dispose();\n        this._onDidChange.dispose();\n        this._onDidMaximizedNodeChange.dispose();\n        this._onDidViewVisibilityChange.dispose();\n        this.root.dispose();\n        this._maximizedNode = undefined;\n        this.element.remove();\n    }\n    clear() {\n        const orientation = this.root.orientation;\n        this.root = new BranchNode(orientation, this.proportionalLayout, this.styles, this.root.size, this.root.orthogonalSize, this.locked, this.margin);\n    }\n    deserialize(json, deserializer) {\n        const orientation = json.orientation;\n        const height = orientation === Orientation.VERTICAL ? json.height : json.width;\n        this._deserialize(json.root, orientation, deserializer, height);\n        /**\n         * The deserialied layout must be positioned through this.layout(...)\n         * before any maximizedNode can be positioned\n         */\n        this.layout(json.width, json.height);\n        if (json.maximizedNode) {\n            const location = json.maximizedNode.location;\n            const [_, node] = this.getNode(location);\n            if (!(node instanceof LeafNode)) {\n                return;\n            }\n            this.maximizeView(node.view);\n        }\n    }\n    _deserialize(root, orientation, deserializer, orthogonalSize) {\n        this.root = this._deserializeNode(root, orientation, deserializer, orthogonalSize);\n    }\n    _deserializeNode(node, orientation, deserializer, orthogonalSize) {\n        var _a;\n        let result;\n        if (node.type === 'branch') {\n            const serializedChildren = node.data;\n            const children = serializedChildren.map((serializedChild) => {\n                return {\n                    node: this._deserializeNode(serializedChild, orthogonal(orientation), deserializer, node.size),\n                    visible: serializedChild.visible,\n                };\n            });\n            result = new BranchNode(orientation, this.proportionalLayout, this.styles, node.size, // <- orthogonal size - flips at each depth\n            orthogonalSize, // <- size - flips at each depth,\n            this.locked, this.margin, children);\n        }\n        else {\n            const view = deserializer.fromJSON(node);\n            if (typeof node.visible === 'boolean') {\n                (_a = view.setVisible) === null || _a === void 0 ? void 0 : _a.call(view, node.visible);\n            }\n            result = new LeafNode(view, orientation, orthogonalSize, node.size);\n        }\n        return result;\n    }\n    get root() {\n        return this._root;\n    }\n    set root(root) {\n        const oldRoot = this._root;\n        if (oldRoot) {\n            oldRoot.dispose();\n            this._maximizedNode = undefined;\n            this.element.removeChild(oldRoot.element);\n        }\n        this._root = root;\n        this.element.appendChild(this._root.element);\n        this.disposable.value = this._root.onDidChange((e) => {\n            this._onDidChange.fire(e);\n        });\n    }\n    /**\n     * If the root is orientated as a VERTICAL node then nest the existing root within a new HORIZIONTAL root node\n     * If the root is orientated as a HORIZONTAL node then nest the existing root within a new VERITCAL root node\n     */\n    insertOrthogonalSplitviewAtRoot() {\n        if (!this._root) {\n            return;\n        }\n        const oldRoot = this.root;\n        oldRoot.element.remove();\n        this._root = new BranchNode(orthogonal(oldRoot.orientation), this.proportionalLayout, this.styles, this.root.orthogonalSize, this.root.size, this.locked, this.margin);\n        if (oldRoot.children.length === 0) {\n            // no data so no need to add anything back in\n        }\n        else if (oldRoot.children.length === 1) {\n            // can remove one level of redundant branching if there is only a single child\n            const childReference = oldRoot.children[0];\n            const child = oldRoot.removeChild(0); // remove to prevent disposal when disposing of unwanted root\n            child.dispose();\n            oldRoot.dispose();\n            this._root.addChild(\n            /**\n             * the child node will have the same orientation as the new root since\n             * we are removing the inbetween node.\n             * the entire 'tree' must be flipped recursively to ensure that the orientation\n             * flips at each level\n             */\n            flipNode(childReference, childReference.orthogonalSize, childReference.size), Sizing.Distribute, 0);\n        }\n        else {\n            this._root.addChild(oldRoot, Sizing.Distribute, 0);\n        }\n        this.element.appendChild(this._root.element);\n        this.disposable.value = this._root.onDidChange((e) => {\n            this._onDidChange.fire(e);\n        });\n    }\n    next(location) {\n        return this.progmaticSelect(location);\n    }\n    previous(location) {\n        return this.progmaticSelect(location, true);\n    }\n    getView(location) {\n        const node = location ? this.getNode(location)[1] : this.root;\n        return this._getViews(node, this.orientation);\n    }\n    _getViews(node, orientation, cachedVisibleSize) {\n        const box = { height: node.height, width: node.width };\n        if (node instanceof LeafNode) {\n            return { box, view: node.view, cachedVisibleSize };\n        }\n        const children = [];\n        for (let i = 0; i < node.children.length; i++) {\n            const child = node.children[i];\n            const nodeCachedVisibleSize = node.getChildCachedVisibleSize(i);\n            children.push(this._getViews(child, orthogonal(orientation), nodeCachedVisibleSize));\n        }\n        return { box, children };\n    }\n    progmaticSelect(location, reverse = false) {\n        const [path, node] = this.getNode(location);\n        if (!(node instanceof LeafNode)) {\n            throw new Error('invalid location');\n        }\n        for (let i = path.length - 1; i > -1; i--) {\n            const n = path[i];\n            const l = location[i] || 0;\n            const canProgressInCurrentLevel = reverse\n                ? l - 1 > -1\n                : l + 1 < n.children.length;\n            if (canProgressInCurrentLevel) {\n                return findLeaf(n.children[reverse ? l - 1 : l + 1], reverse);\n            }\n        }\n        return findLeaf(this.root, reverse);\n    }\n    constructor(proportionalLayout, styles, orientation, locked, margin) {\n        this.proportionalLayout = proportionalLayout;\n        this.styles = styles;\n        this._locked = false;\n        this._margin = 0;\n        this._maximizedNode = undefined;\n        this.disposable = new MutableDisposable();\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._onDidViewVisibilityChange = new Emitter();\n        this.onDidViewVisibilityChange = this._onDidViewVisibilityChange.event;\n        this._onDidMaximizedNodeChange = new Emitter();\n        this.onDidMaximizedNodeChange = this._onDidMaximizedNodeChange.event;\n        this.element = document.createElement('div');\n        this.element.className = 'dv-grid-view';\n        this._locked = locked !== null && locked !== void 0 ? locked : false;\n        this._margin = margin !== null && margin !== void 0 ? margin : 0;\n        this.root = new BranchNode(orientation, proportionalLayout, styles, 0, 0, this.locked, this.margin);\n    }\n    isViewVisible(location) {\n        const [rest, index] = tail(location);\n        const [, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid from location');\n        }\n        return parent.isChildVisible(index);\n    }\n    setViewVisible(location, visible) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [rest, index] = tail(location);\n        const [, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid from location');\n        }\n        this._onDidViewVisibilityChange.fire();\n        parent.setChildVisible(index, visible);\n    }\n    moveView(parentLocation, from, to) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [, parent] = this.getNode(parentLocation);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        parent.moveChild(from, to);\n    }\n    addView(view, size, location) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [rest, index] = tail(location);\n        const [pathToParent, parent] = this.getNode(rest);\n        if (parent instanceof BranchNode) {\n            const node = new LeafNode(view, orthogonal(parent.orientation), parent.orthogonalSize);\n            parent.addChild(node, size, index);\n        }\n        else {\n            const [grandParent, ..._] = [...pathToParent].reverse();\n            const [parentIndex, ...__] = [...rest].reverse();\n            let newSiblingSize = 0;\n            const newSiblingCachedVisibleSize = grandParent.getChildCachedVisibleSize(parentIndex);\n            if (typeof newSiblingCachedVisibleSize === 'number') {\n                newSiblingSize = Sizing.Invisible(newSiblingCachedVisibleSize);\n            }\n            const child = grandParent.removeChild(parentIndex);\n            child.dispose();\n            const newParent = new BranchNode(parent.orientation, this.proportionalLayout, this.styles, parent.size, parent.orthogonalSize, this.locked, this.margin);\n            grandParent.addChild(newParent, parent.size, parentIndex);\n            const newSibling = new LeafNode(parent.view, grandParent.orientation, parent.size);\n            newParent.addChild(newSibling, newSiblingSize, 0);\n            if (typeof size !== 'number' && size.type === 'split') {\n                size = { type: 'split', index: 0 };\n            }\n            const node = new LeafNode(view, grandParent.orientation, parent.size);\n            newParent.addChild(node, size, index);\n        }\n    }\n    remove(view, sizing) {\n        const location = getGridLocation(view.element);\n        return this.removeView(location, sizing);\n    }\n    removeView(location, sizing) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [rest, index] = tail(location);\n        const [pathToParent, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        const nodeToRemove = parent.children[index];\n        if (!(nodeToRemove instanceof LeafNode)) {\n            throw new Error('Invalid location');\n        }\n        parent.removeChild(index, sizing);\n        nodeToRemove.dispose();\n        if (parent.children.length !== 1) {\n            return nodeToRemove.view;\n        }\n        // if the parent has only one child and we know the parent is a BranchNode we can make the tree\n        // more efficiently spaced by replacing the parent BranchNode with the child.\n        // if that child is a LeafNode then we simply replace the BranchNode with the child otherwise if the child\n        // is a BranchNode too we should spread it's children into the grandparent.\n        // refer to the remaining child as the sibling\n        const sibling = parent.children[0];\n        if (pathToParent.length === 0) {\n            // if the parent is root\n            if (sibling instanceof LeafNode) {\n                // if the sibling is a leaf node no action is required\n                return nodeToRemove.view;\n            }\n            // otherwise the sibling is a branch node. since the parent is the root and the root has only one child\n            // which is a branch node we can just set this branch node to be the new root node\n            // for good housekeeping we'll removing the sibling from it's existing tree\n            parent.removeChild(0, sizing);\n            // and set that sibling node to be root\n            this.root = sibling;\n            return nodeToRemove.view;\n        }\n        // otherwise the parent is apart of a large sub-tree\n        const [grandParent, ..._] = [...pathToParent].reverse();\n        const [parentIndex, ...__] = [...rest].reverse();\n        const isSiblingVisible = parent.isChildVisible(0);\n        // either way we need to remove the sibling from it's existing tree\n        parent.removeChild(0, sizing);\n        // note the sizes of all of the grandparents children\n        const sizes = grandParent.children.map((_size, i) => grandParent.getChildSize(i));\n        // remove the parent from the grandparent since we are moving the sibling to take the parents place\n        // this parent is no longer used and can be disposed of\n        grandParent.removeChild(parentIndex, sizing).dispose();\n        if (sibling instanceof BranchNode) {\n            // replace the parent with the siblings children\n            sizes.splice(parentIndex, 1, ...sibling.children.map((c) => c.size));\n            // and add those siblings to the grandparent\n            for (let i = 0; i < sibling.children.length; i++) {\n                const child = sibling.children[i];\n                grandParent.addChild(child, child.size, parentIndex + i);\n            }\n            /**\n             * clean down the branch node since we need to dipose of it and\n             * when .dispose() it called on a branch it will dispose of any\n             * views it is holding onto.\n             */\n            while (sibling.children.length > 0) {\n                sibling.removeChild(0);\n            }\n        }\n        else {\n            // otherwise create a new leaf node and add that to the grandparent\n            const newSibling = new LeafNode(sibling.view, orthogonal(sibling.orientation), sibling.size);\n            const siblingSizing = isSiblingVisible\n                ? sibling.orthogonalSize\n                : Sizing.Invisible(sibling.orthogonalSize);\n            grandParent.addChild(newSibling, siblingSizing, parentIndex);\n        }\n        // the containing node of the sibling is no longer required and can be disposed of\n        sibling.dispose();\n        // resize everything\n        for (let i = 0; i < sizes.length; i++) {\n            grandParent.resizeChild(i, sizes[i]);\n        }\n        return nodeToRemove.view;\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.root.orientation === Orientation.HORIZONTAL\n            ? [height, width]\n            : [width, height];\n        this.root.layout(size, orthogonalSize);\n    }\n    getNode(location, node = this.root, path = []) {\n        if (location.length === 0) {\n            return [path, node];\n        }\n        if (!(node instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        const [index, ...rest] = location;\n        if (index < 0 || index >= node.children.length) {\n            throw new Error('Invalid location');\n        }\n        const child = node.children[index];\n        path.push(node);\n        return this.getNode(rest, child, path);\n    }\n}\n","import { isInDocument, watchElementResize } from './dom';\nimport { CompositeDisposable } from './lifecycle';\nexport class Resizable extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    get disableResizing() {\n        return this._disableResizing;\n    }\n    set disableResizing(value) {\n        this._disableResizing = value;\n    }\n    constructor(parentElement, disableResizing = false) {\n        super();\n        this._disableResizing = disableResizing;\n        this._element = parentElement;\n        this.addDisposables(watchElementResize(this._element, (entry) => {\n            if (this.isDisposed) {\n                /**\n                 * resize is delayed through requestAnimationFrame so there is a small chance\n                 * the component has already been disposed of\n                 */\n                return;\n            }\n            if (this.disableResizing) {\n                return;\n            }\n            if (!this._element.offsetParent) {\n                /**\n                 * offsetParent === null is equivalent to display: none being set on the element or one\n                 * of it's parents. In the display: none case the size will become (0, 0) which we do\n                 * not want to propagate.\n                 *\n                 * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/offsetParent\n                 *\n                 * You could use checkVisibility() but at the time of writing it's not supported across\n                 * all Browsers\n                 *\n                 * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/checkVisibility\n                 */\n                return;\n            }\n            if (!isInDocument(this._element)) {\n                /**\n                 * since the event is dispatched through requestAnimationFrame there is a small chance\n                 * the component is no longer attached to the DOM, if that is the case the dimensions\n                 * are mostly likely all zero and meaningless. we should skip this case.\n                 */\n                return;\n            }\n            const { width, height } = entry.contentRect;\n            this.layout(width, height);\n        }));\n    }\n}\n","import { Emitter, Event, AsapEvent } from '../events';\nimport { getGridLocation, Gridview } from './gridview';\nimport { Disposable } from '../lifecycle';\nimport { sequentialNumberGenerator } from '../math';\nimport { Sizing } from '../splitview/splitview';\nimport { Resizable } from '../resizable';\nimport { Classnames } from '../dom';\nconst nextLayoutId = sequentialNumberGenerator();\nexport function toTarget(direction) {\n    switch (direction) {\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'above':\n            return 'top';\n        case 'below':\n            return 'bottom';\n        case 'within':\n        default:\n            return 'center';\n    }\n}\nexport class BaseGrid extends Resizable {\n    get id() {\n        return this._id;\n    }\n    get size() {\n        return this._groups.size;\n    }\n    get groups() {\n        return Array.from(this._groups.values()).map((_) => _.value);\n    }\n    get width() {\n        return this.gridview.width;\n    }\n    get height() {\n        return this.gridview.height;\n    }\n    get minimumHeight() {\n        return this.gridview.minimumHeight;\n    }\n    get maximumHeight() {\n        return this.gridview.maximumHeight;\n    }\n    get minimumWidth() {\n        return this.gridview.minimumWidth;\n    }\n    get maximumWidth() {\n        return this.gridview.maximumWidth;\n    }\n    get activeGroup() {\n        return this._activeGroup;\n    }\n    get locked() {\n        return this.gridview.locked;\n    }\n    set locked(value) {\n        this.gridview.locked = value;\n    }\n    constructor(parentElement, options) {\n        var _a;\n        super(document.createElement('div'), options.disableAutoResizing);\n        this._id = nextLayoutId.next();\n        this._groups = new Map();\n        this._onDidRemove = new Emitter();\n        this.onDidRemove = this._onDidRemove.event;\n        this._onDidAdd = new Emitter();\n        this.onDidAdd = this._onDidAdd.event;\n        this._onDidMaximizedChange = new Emitter();\n        this.onDidMaximizedChange = this._onDidMaximizedChange.event;\n        this._onDidActiveChange = new Emitter();\n        this.onDidActiveChange = this._onDidActiveChange.event;\n        this._bufferOnDidLayoutChange = new AsapEvent();\n        this.onDidLayoutChange = this._bufferOnDidLayoutChange.onEvent;\n        this._onDidViewVisibilityChangeMicroTaskQueue = new AsapEvent();\n        this.onDidViewVisibilityChangeMicroTaskQueue = this._onDidViewVisibilityChangeMicroTaskQueue.onEvent;\n        this.element.style.height = '100%';\n        this.element.style.width = '100%';\n        this._classNames = new Classnames(this.element);\n        this._classNames.setClassNames((_a = options.className) !== null && _a !== void 0 ? _a : '');\n        parentElement.appendChild(this.element);\n        this.gridview = new Gridview(!!options.proportionalLayout, options.styles, options.orientation, options.locked, options.margin);\n        this.gridview.locked = !!options.locked;\n        this.element.appendChild(this.gridview.element);\n        this.layout(0, 0, true); // set some elements height/widths\n        this.addDisposables(this.gridview.onDidMaximizedNodeChange((event) => {\n            this._onDidMaximizedChange.fire({\n                panel: event.view,\n                isMaximized: event.isMaximized,\n            });\n        }), this.gridview.onDidViewVisibilityChange(() => this._onDidViewVisibilityChangeMicroTaskQueue.fire()), this.onDidViewVisibilityChangeMicroTaskQueue(() => {\n            this.layout(this.width, this.height, true);\n        }), Disposable.from(() => {\n            var _a;\n            (_a = this.element.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(this.element);\n        }), this.gridview.onDidChange(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), Event.any(this.onDidAdd, this.onDidRemove, this.onDidActiveChange)(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), this._bufferOnDidLayoutChange);\n    }\n    setVisible(panel, visible) {\n        this.gridview.setViewVisible(getGridLocation(panel.element), visible);\n        this._bufferOnDidLayoutChange.fire();\n    }\n    isVisible(panel) {\n        return this.gridview.isViewVisible(getGridLocation(panel.element));\n    }\n    updateOptions(options) {\n        var _a, _b, _c, _d;\n        if (typeof options.proportionalLayout === 'boolean') {\n            // this.gridview.proportionalLayout = options.proportionalLayout; // not supported\n        }\n        if (options.orientation) {\n            this.gridview.orientation = options.orientation;\n        }\n        if ('styles' in options) {\n            // this.gridview.styles = options.styles; // not supported\n        }\n        if ('disableResizing' in options) {\n            this.disableResizing = (_a = options.disableAutoResizing) !== null && _a !== void 0 ? _a : false;\n        }\n        if ('locked' in options) {\n            this.locked = (_b = options.locked) !== null && _b !== void 0 ? _b : false;\n        }\n        if ('margin' in options) {\n            this.gridview.margin = (_c = options.margin) !== null && _c !== void 0 ? _c : 0;\n        }\n        if ('className' in options) {\n            this._classNames.setClassNames((_d = options.className) !== null && _d !== void 0 ? _d : '');\n        }\n    }\n    maximizeGroup(panel) {\n        this.gridview.maximizeView(panel);\n        this.doSetGroupActive(panel);\n    }\n    isMaximizedGroup(panel) {\n        return this.gridview.maximizedView() === panel;\n    }\n    exitMaximizedGroup() {\n        this.gridview.exitMaximizedView();\n    }\n    hasMaximizedGroup() {\n        return this.gridview.hasMaximizedView();\n    }\n    doAddGroup(group, location = [0], size) {\n        this.gridview.addView(group, size !== null && size !== void 0 ? size : Sizing.Distribute, location);\n        this._onDidAdd.fire(group);\n    }\n    doRemoveGroup(group, options) {\n        if (!this._groups.has(group.id)) {\n            throw new Error('invalid operation');\n        }\n        const item = this._groups.get(group.id);\n        const view = this.gridview.remove(group, Sizing.Distribute);\n        if (item && !(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n            item.disposable.dispose();\n            item.value.dispose();\n            this._groups.delete(group.id);\n            this._onDidRemove.fire(group);\n        }\n        if (!(options === null || options === void 0 ? void 0 : options.skipActive) && this._activeGroup === group) {\n            const groups = Array.from(this._groups.values());\n            this.doSetGroupActive(groups.length > 0 ? groups[0].value : undefined);\n        }\n        return view;\n    }\n    getPanel(id) {\n        var _a;\n        return (_a = this._groups.get(id)) === null || _a === void 0 ? void 0 : _a.value;\n    }\n    doSetGroupActive(group) {\n        if (this._activeGroup === group) {\n            return;\n        }\n        if (this._activeGroup) {\n            this._activeGroup.setActive(false);\n        }\n        if (group) {\n            group.setActive(true);\n        }\n        this._activeGroup = group;\n        this._onDidActiveChange.fire(group);\n    }\n    removeGroup(group) {\n        this.doRemoveGroup(group);\n    }\n    moveToNext(options) {\n        var _a;\n        if (!options) {\n            options = {};\n        }\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.next(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupActive(next);\n    }\n    moveToPrevious(options) {\n        var _a;\n        if (!options) {\n            options = {};\n        }\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.previous(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupActive(next);\n    }\n    layout(width, height, forceResize) {\n        const different = forceResize || width !== this.width || height !== this.height;\n        if (!different) {\n            return;\n        }\n        this.gridview.element.style.height = `${height}px`;\n        this.gridview.element.style.width = `${width}px`;\n        this.gridview.layout(width, height);\n    }\n    dispose() {\n        this._onDidActiveChange.dispose();\n        this._onDidAdd.dispose();\n        this._onDidRemove.dispose();\n        for (const group of this.groups) {\n            group.dispose();\n        }\n        this.gridview.dispose();\n        super.dispose();\n    }\n}\n","import { Emitter } from '../events';\nexport class SplitviewApi {\n    /**\n     * The minimum size  the component can reach where size is measured in the direction of orientation provided.\n     */\n    get minimumSize() {\n        return this.component.minimumSize;\n    }\n    /**\n     * The maximum size the component can reach where size is measured in the direction of orientation provided.\n     */\n    get maximumSize() {\n        return this.component.maximumSize;\n    }\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * The current number of panels.\n     */\n    get length() {\n        return this.component.length;\n    }\n    /**\n     * The current orientation of the component.\n     */\n    get orientation() {\n        return this.component.orientation;\n    }\n    /**\n     * The list of current panels.\n     */\n    get panels() {\n        return this.component.panels;\n    }\n    /**\n     * Invoked after a layout is loaded through the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * Invoked whenever any aspect of the layout changes.\n     * If listening to this event it may be worth debouncing ouputs.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked when a view is added.\n     */\n    get onDidAddView() {\n        return this.component.onDidAddView;\n    }\n    /**\n     * Invoked when a view is removed.\n     */\n    get onDidRemoveView() {\n        return this.component.onDidRemoveView;\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     * Removes an existing panel and optionally provide a `Sizing` method\n     * for the subsequent resize.\n     */\n    removePanel(panel, sizing) {\n        this.component.removePanel(panel, sizing);\n    }\n    /**\n     * Focus the component.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Get the reference to a panel given it's `string` id.\n     */\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Layout the panel with a width and height.\n     */\n    layout(width, height) {\n        return this.component.layout(width, height);\n    }\n    /**\n     * Add a new panel and return the created instance.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Move a panel given it's current and desired index.\n     */\n    movePanel(from, to) {\n        this.component.movePanel(from, to);\n    }\n    /**\n     * Deserialize a layout to built a splitivew.\n     */\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    /** Serialize a layout */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Remove all panels and clear the component.\n     */\n    clear() {\n        this.component.clear();\n    }\n    /**\n     * Update configuratable options.\n     */\n    updateOptions(options) {\n        this.component.updateOptions(options);\n    }\n    /**\n     * Release resources and teardown component. Do not call when using framework versions of dockview.\n     */\n    dispose() {\n        this.component.dispose();\n    }\n}\nexport class PaneviewApi {\n    /**\n     * The minimum size  the component can reach where size is measured in the direction of orientation provided.\n     */\n    get minimumSize() {\n        return this.component.minimumSize;\n    }\n    /**\n     * The maximum size the component can reach where size is measured in the direction of orientation provided.\n     */\n    get maximumSize() {\n        return this.component.maximumSize;\n    }\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * All panel objects.\n     */\n    get panels() {\n        return this.component.panels;\n    }\n    /**\n     * Invoked when any layout change occures, an aggregation of many events.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked after a layout is deserialzied using the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * Invoked when a panel is added. May be called multiple times when moving panels.\n     */\n    get onDidAddView() {\n        return this.component.onDidAddView;\n    }\n    /**\n     * Invoked when a panel is removed. May be called multiple times when moving panels.\n     */\n    get onDidRemoveView() {\n        return this.component.onDidRemoveView;\n    }\n    /**\n     * Invoked when a Drag'n'Drop event occurs that the component was unable to handle. Exposed for custom Drag'n'Drop functionality.\n     */\n    get onDidDrop() {\n        const emitter = new Emitter();\n        const disposable = this.component.onDidDrop((e) => {\n            emitter.fire(Object.assign(Object.assign({}, e), { api: this }));\n        });\n        emitter.dispose = () => {\n            disposable.dispose();\n            emitter.dispose();\n        };\n        return emitter.event;\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     * Remove a panel given the panel object.\n     */\n    removePanel(panel) {\n        this.component.removePanel(panel);\n    }\n    /**\n     * Get a panel object given a `string` id. May return `undefined`.\n     */\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Move a panel given it's current and desired index.\n     */\n    movePanel(from, to) {\n        this.component.movePanel(from, to);\n    }\n    /**\n     *  Focus the component. Will try to focus an active panel if one exists.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Force resize the component to an exact width and height. Read about auto-resizing before using.\n     */\n    layout(width, height) {\n        this.component.layout(width, height);\n    }\n    /**\n     * Add a panel and return the created object.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Create a component from a serialized object.\n     */\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    /**\n     * Create a serialized object of the current component.\n     */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Reset the component back to an empty and default state.\n     */\n    clear() {\n        this.component.clear();\n    }\n    /**\n     * Update configuratable options.\n     */\n    updateOptions(options) {\n        this.component.updateOptions(options);\n    }\n    /**\n     * Release resources and teardown component. Do not call when using framework versions of dockview.\n     */\n    dispose() {\n        this.component.dispose();\n    }\n}\nexport class GridviewApi {\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * Minimum height of the component.\n     */\n    get minimumHeight() {\n        return this.component.minimumHeight;\n    }\n    /**\n     * Maximum height of the component.\n     */\n    get maximumHeight() {\n        return this.component.maximumHeight;\n    }\n    /**\n     * Minimum width of the component.\n     */\n    get minimumWidth() {\n        return this.component.minimumWidth;\n    }\n    /**\n     * Maximum width of the component.\n     */\n    get maximumWidth() {\n        return this.component.maximumWidth;\n    }\n    /**\n     * Invoked when any layout change occures, an aggregation of many events.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked when a panel is added. May be called multiple times when moving panels.\n     */\n    get onDidAddPanel() {\n        return this.component.onDidAddGroup;\n    }\n    /**\n     * Invoked when a panel is removed. May be called multiple times when moving panels.\n     */\n    get onDidRemovePanel() {\n        return this.component.onDidRemoveGroup;\n    }\n    /**\n     * Invoked when the active panel changes. May be undefined if no panel is active.\n     */\n    get onDidActivePanelChange() {\n        return this.component.onDidActiveGroupChange;\n    }\n    /**\n     * Invoked after a layout is deserialzied using the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * All panel objects.\n     */\n    get panels() {\n        return this.component.groups;\n    }\n    /**\n     * Current orientation. Can be changed after initialization.\n     */\n    get orientation() {\n        return this.component.orientation;\n    }\n    set orientation(value) {\n        this.component.updateOptions({ orientation: value });\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     *  Focus the component. Will try to focus an active panel if one exists.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Force resize the component to an exact width and height. Read about auto-resizing before using.\n     */\n    layout(width, height, force = false) {\n        this.component.layout(width, height, force);\n    }\n    /**\n     * Add a panel and return the created object.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Remove a panel given the panel object.\n     */\n    removePanel(panel, sizing) {\n        this.component.removePanel(panel, sizing);\n    }\n    /**\n     * Move a panel in a particular direction relative to another panel.\n     */\n    movePanel(panel, options) {\n        this.component.movePanel(panel, options);\n    }\n    /**\n     * Get a panel object given a `string` id. May return `undefined`.\n     */\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Create a component from a serialized object.\n     */\n    fromJSON(data) {\n        return this.component.fromJSON(data);\n    }\n    /**\n     * Create a serialized object of the current component.\n     */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Reset the component back to an empty and default state.\n     */\n    clear() {\n        this.component.clear();\n    }\n    updateOptions(options) {\n        this.component.updateOptions(options);\n    }\n    /**\n     * Release resources and teardown component. Do not call when using framework versions of dockview.\n     */\n    dispose() {\n        this.component.dispose();\n    }\n}\nexport class DockviewApi {\n    /**\n     * The unique identifier for this instance. Used to manage scope of Drag'n'Drop events.\n     */\n    get id() {\n        return this.component.id;\n    }\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * Minimum height of the component.\n     */\n    get minimumHeight() {\n        return this.component.minimumHeight;\n    }\n    /**\n     * Maximum height of the component.\n     */\n    get maximumHeight() {\n        return this.component.maximumHeight;\n    }\n    /**\n     * Minimum width of the component.\n     */\n    get minimumWidth() {\n        return this.component.minimumWidth;\n    }\n    /**\n     * Maximum width of the component.\n     */\n    get maximumWidth() {\n        return this.component.maximumWidth;\n    }\n    /**\n     * Total number of groups.\n     */\n    get size() {\n        return this.component.size;\n    }\n    /**\n     * Total number of panels.\n     */\n    get totalPanels() {\n        return this.component.totalPanels;\n    }\n    get gap() {\n        return this.component.gap;\n    }\n    /**\n     * Invoked when the active group changes. May be undefined if no group is active.\n     */\n    get onDidActiveGroupChange() {\n        return this.component.onDidActiveGroupChange;\n    }\n    /**\n     * Invoked when a group is added. May be called multiple times when moving groups.\n     */\n    get onDidAddGroup() {\n        return this.component.onDidAddGroup;\n    }\n    /**\n     * Invoked when a group is removed. May be called multiple times when moving groups.\n     */\n    get onDidRemoveGroup() {\n        return this.component.onDidRemoveGroup;\n    }\n    /**\n     * Invoked when the active panel changes. May be undefined if no panel is active.\n     */\n    get onDidActivePanelChange() {\n        return this.component.onDidActivePanelChange;\n    }\n    /**\n     * Invoked when a panel is added. May be called multiple times when moving panels.\n     */\n    get onDidAddPanel() {\n        return this.component.onDidAddPanel;\n    }\n    /**\n     * Invoked when a panel is removed. May be called multiple times when moving panels.\n     */\n    get onDidRemovePanel() {\n        return this.component.onDidRemovePanel;\n    }\n    get onDidMovePanel() {\n        return this.component.onDidMovePanel;\n    }\n    /**\n     * Invoked after a layout is deserialzied using the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * Invoked when any layout change occures, an aggregation of many events.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked when a Drag'n'Drop event occurs that the component was unable to handle. Exposed for custom Drag'n'Drop functionality.\n     */\n    get onDidDrop() {\n        return this.component.onDidDrop;\n    }\n    /**\n     * Invoked when a Drag'n'Drop event occurs but before dockview handles it giving the user an opportunity to intecept and\n     * prevent the event from occuring using the standard `preventDefault()` syntax.\n     *\n     * Preventing certain events may causes unexpected behaviours, use carefully.\n     */\n    get onWillDrop() {\n        return this.component.onWillDrop;\n    }\n    /**\n     * Invoked before an overlay is shown indicating a drop target.\n     *\n     * Calling `event.preventDefault()` will prevent the overlay being shown and prevent\n     * the any subsequent drop event.\n     */\n    get onWillShowOverlay() {\n        return this.component.onWillShowOverlay;\n    }\n    /**\n     * Invoked before a group is dragged.\n     *\n     * Calling `event.nativeEvent.preventDefault()` will prevent the group drag starting.\n     *\n     */\n    get onWillDragGroup() {\n        return this.component.onWillDragGroup;\n    }\n    /**\n     * Invoked before a panel is dragged.\n     *\n     * Calling `event.nativeEvent.preventDefault()` will prevent the panel drag starting.\n     */\n    get onWillDragPanel() {\n        return this.component.onWillDragPanel;\n    }\n    get onUnhandledDragOverEvent() {\n        return this.component.onUnhandledDragOverEvent;\n    }\n    /**\n     * All panel objects.\n     */\n    get panels() {\n        return this.component.panels;\n    }\n    /**\n     * All group objects.\n     */\n    get groups() {\n        return this.component.groups;\n    }\n    /**\n     *  Active panel object.\n     */\n    get activePanel() {\n        return this.component.activePanel;\n    }\n    /**\n     * Active group object.\n     */\n    get activeGroup() {\n        return this.component.activeGroup;\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     *  Focus the component. Will try to focus an active panel if one exists.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Get a panel object given a `string` id. May return `undefined`.\n     */\n    getPanel(id) {\n        return this.component.getGroupPanel(id);\n    }\n    /**\n     * Force resize the component to an exact width and height. Read about auto-resizing before using.\n     */\n    layout(width, height, force = false) {\n        this.component.layout(width, height, force);\n    }\n    /**\n     * Add a panel and return the created object.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Remove a panel given the panel object.\n     */\n    removePanel(panel) {\n        this.component.removePanel(panel);\n    }\n    /**\n     * Add a group and return the created object.\n     */\n    addGroup(options) {\n        return this.component.addGroup(options);\n    }\n    /**\n     * Close all groups and panels.\n     */\n    closeAllGroups() {\n        return this.component.closeAllGroups();\n    }\n    /**\n     * Remove a group and any panels within the group.\n     */\n    removeGroup(group) {\n        this.component.removeGroup(group);\n    }\n    /**\n     * Get a group object given a `string` id. May return undefined.\n     */\n    getGroup(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Add a floating group\n     */\n    addFloatingGroup(item, options) {\n        return this.component.addFloatingGroup(item, options);\n    }\n    /**\n     * Create a component from a serialized object.\n     */\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    /**\n     * Create a serialized object of the current component.\n     */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Reset the component back to an empty and default state.\n     */\n    clear() {\n        this.component.clear();\n    }\n    /**\n     * Move the focus progmatically to the next panel or group.\n     */\n    moveToNext(options) {\n        this.component.moveToNext(options);\n    }\n    /**\n     * Move the focus progmatically to the previous panel or group.\n     */\n    moveToPrevious(options) {\n        this.component.moveToPrevious(options);\n    }\n    maximizeGroup(panel) {\n        this.component.maximizeGroup(panel.group);\n    }\n    hasMaximizedGroup() {\n        return this.component.hasMaximizedGroup();\n    }\n    exitMaximizedGroup() {\n        this.component.exitMaximizedGroup();\n    }\n    get onDidMaximizedGroupChange() {\n        return this.component.onDidMaximizedGroupChange;\n    }\n    /**\n     * Add a popout group in a new Window\n     */\n    addPopoutGroup(item, options) {\n        return this.component.addPopoutGroup(item, options);\n    }\n    setGap(gap) {\n        this.component.updateOptions({ gap });\n    }\n    updateOptions(options) {\n        this.component.updateOptions(options);\n    }\n    /**\n     * Release resources and teardown component. Do not call when using framework versions of dockview.\n     */\n    dispose() {\n        this.component.dispose();\n    }\n}\n","import { disableIframePointEvents } from '../dom';\nimport { addDisposableListener, Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nexport class DragHandler extends CompositeDisposable {\n    constructor(el) {\n        super();\n        this.el = el;\n        this.dataDisposable = new MutableDisposable();\n        this.pointerEventsDisposable = new MutableDisposable();\n        this._onDragStart = new Emitter();\n        this.onDragStart = this._onDragStart.event;\n        this.addDisposables(this._onDragStart, this.dataDisposable, this.pointerEventsDisposable);\n        this.configure();\n    }\n    isCancelled(_event) {\n        return false;\n    }\n    configure() {\n        this.addDisposables(this._onDragStart, addDisposableListener(this.el, 'dragstart', (event) => {\n            if (event.defaultPrevented || this.isCancelled(event)) {\n                event.preventDefault();\n                return;\n            }\n            const iframes = disableIframePointEvents();\n            this.pointerEventsDisposable.value = {\n                dispose: () => {\n                    iframes.release();\n                },\n            };\n            this.el.classList.add('dv-dragged');\n            setTimeout(() => this.el.classList.remove('dv-dragged'), 0);\n            this.dataDisposable.value = this.getData(event);\n            this._onDragStart.fire(event);\n            if (event.dataTransfer) {\n                event.dataTransfer.effectAllowed = 'move';\n                const hasData = event.dataTransfer.items.length > 0;\n                if (!hasData) {\n                    /**\n                     * Although this is not used by dockview many third party dnd libraries will check\n                     * dataTransfer.types to determine valid drag events.\n                     *\n                     * For example: in react-dnd if dataTransfer.types is not set then the dragStart event will be cancelled\n                     * through .preventDefault(). Since this is applied globally to all drag events this would break dockviews\n                     * dnd logic. You can see the code at\n                     * https://github.com/react-dnd/react-dnd/blob/main/packages/backend-html5/src/HTML5BackendImpl.ts#L542\n                     */\n                    event.dataTransfer.setData('text/plain', '');\n                }\n            }\n        }), addDisposableListener(this.el, 'dragend', () => {\n            this.pointerEventsDisposable.dispose();\n            this.dataDisposable.dispose();\n        }));\n    }\n}\n","import { addDisposableListener } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nexport class DragAndDropObserver extends CompositeDisposable {\n    constructor(element, callbacks) {\n        super();\n        this.element = element;\n        this.callbacks = callbacks;\n        this.target = null;\n        this.registerListeners();\n    }\n    onDragEnter(e) {\n        this.target = e.target;\n        this.callbacks.onDragEnter(e);\n    }\n    onDragOver(e) {\n        e.preventDefault(); // needed so that the drop event fires (https://stackoverflow.com/questions/21339924/drop-event-not-firing-in-chrome)\n        if (this.callbacks.onDragOver) {\n            this.callbacks.onDragOver(e);\n        }\n    }\n    onDragLeave(e) {\n        if (this.target === e.target) {\n            this.target = null;\n            this.callbacks.onDragLeave(e);\n        }\n    }\n    onDragEnd(e) {\n        this.target = null;\n        this.callbacks.onDragEnd(e);\n    }\n    onDrop(e) {\n        this.callbacks.onDrop(e);\n    }\n    registerListeners() {\n        this.addDisposables(addDisposableListener(this.element, 'dragenter', (e) => {\n            this.onDragEnter(e);\n        }, true));\n        this.addDisposables(addDisposableListener(this.element, 'dragover', (e) => {\n            this.onDragOver(e);\n        }, true));\n        this.addDisposables(addDisposableListener(this.element, 'dragleave', (e) => {\n            this.onDragLeave(e);\n        }));\n        this.addDisposables(addDisposableListener(this.element, 'dragend', (e) => {\n            this.onDragEnd(e);\n        }));\n        this.addDisposables(addDisposableListener(this.element, 'drop', (e) => {\n            this.onDrop(e);\n        }));\n    }\n}\n","import { toggleClass } from '../dom';\nimport { DockviewEvent, Emitter } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nimport { DragAndDropObserver } from './dnd';\nimport { clamp } from '../math';\nexport class WillShowOverlayEvent extends DockviewEvent {\n    get nativeEvent() {\n        return this.options.nativeEvent;\n    }\n    get position() {\n        return this.options.position;\n    }\n    constructor(options) {\n        super();\n        this.options = options;\n    }\n}\nexport function directionToPosition(direction) {\n    switch (direction) {\n        case 'above':\n            return 'top';\n        case 'below':\n            return 'bottom';\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'within':\n            return 'center';\n        default:\n            throw new Error(`invalid direction '${direction}'`);\n    }\n}\nexport function positionToDirection(position) {\n    switch (position) {\n        case 'top':\n            return 'above';\n        case 'bottom':\n            return 'below';\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'center':\n            return 'within';\n        default:\n            throw new Error(`invalid position '${position}'`);\n    }\n}\nconst DEFAULT_ACTIVATION_SIZE = {\n    value: 20,\n    type: 'percentage',\n};\nconst DEFAULT_SIZE = {\n    value: 50,\n    type: 'percentage',\n};\nconst SMALL_WIDTH_BOUNDARY = 100;\nconst SMALL_HEIGHT_BOUNDARY = 100;\nexport class Droptarget extends CompositeDisposable {\n    get state() {\n        return this._state;\n    }\n    constructor(element, options) {\n        super();\n        this.element = element;\n        this.options = options;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        // use a set to take advantage of #<set>.has\n        this._acceptedTargetZonesSet = new Set(this.options.acceptedTargetZones);\n        this.dnd = new DragAndDropObserver(this.element, {\n            onDragEnter: () => undefined,\n            onDragOver: (e) => {\n                if (this._acceptedTargetZonesSet.size === 0) {\n                    this.removeDropTarget();\n                    return;\n                }\n                const width = this.element.clientWidth;\n                const height = this.element.clientHeight;\n                if (width === 0 || height === 0) {\n                    return; // avoid div!0\n                }\n                const rect = e.currentTarget.getBoundingClientRect();\n                const x = e.clientX - rect.left;\n                const y = e.clientY - rect.top;\n                const quadrant = this.calculateQuadrant(this._acceptedTargetZonesSet, x, y, width, height);\n                /**\n                 * If the event has already been used by another DropTarget instance\n                 * then don't show a second drop target, only one target should be\n                 * active at any one time\n                 */\n                if (this.isAlreadyUsed(e) || quadrant === null) {\n                    // no drop target should be displayed\n                    this.removeDropTarget();\n                    return;\n                }\n                if (!this.options.canDisplayOverlay(e, quadrant)) {\n                    this.removeDropTarget();\n                    return;\n                }\n                const willShowOverlayEvent = new WillShowOverlayEvent({\n                    nativeEvent: e,\n                    position: quadrant,\n                });\n                /**\n                 * Provide an opportunity to prevent the overlay appearing and in turn\n                 * any dnd behaviours\n                 */\n                this._onWillShowOverlay.fire(willShowOverlayEvent);\n                if (willShowOverlayEvent.defaultPrevented) {\n                    this.removeDropTarget();\n                    return;\n                }\n                this.markAsUsed(e);\n                if (!this.targetElement) {\n                    this.targetElement = document.createElement('div');\n                    this.targetElement.className = 'dv-drop-target-dropzone';\n                    this.overlayElement = document.createElement('div');\n                    this.overlayElement.className = 'dv-drop-target-selection';\n                    this._state = 'center';\n                    this.targetElement.appendChild(this.overlayElement);\n                    this.element.classList.add('dv-drop-target');\n                    this.element.append(this.targetElement);\n                }\n                this.toggleClasses(quadrant, width, height);\n                this._state = quadrant;\n            },\n            onDragLeave: () => {\n                this.removeDropTarget();\n            },\n            onDragEnd: () => {\n                this.removeDropTarget();\n            },\n            onDrop: (e) => {\n                e.preventDefault();\n                const state = this._state;\n                this.removeDropTarget();\n                if (state) {\n                    // only stop the propagation of the event if we are dealing with it\n                    // which is only when the target has state\n                    e.stopPropagation();\n                    this._onDrop.fire({ position: state, nativeEvent: e });\n                }\n            },\n        });\n        this.addDisposables(this._onDrop, this._onWillShowOverlay, this.dnd);\n    }\n    setTargetZones(acceptedTargetZones) {\n        this._acceptedTargetZonesSet = new Set(acceptedTargetZones);\n    }\n    setOverlayModel(model) {\n        this.options.overlayModel = model;\n    }\n    dispose() {\n        this.removeDropTarget();\n        super.dispose();\n    }\n    /**\n     * Add a property to the event object for other potential listeners to check\n     */\n    markAsUsed(event) {\n        event[Droptarget.USED_EVENT_ID] = true;\n    }\n    /**\n     * Check is the event has already been used by another instance of DropTarget\n     */\n    isAlreadyUsed(event) {\n        const value = event[Droptarget.USED_EVENT_ID];\n        return typeof value === 'boolean' && value;\n    }\n    toggleClasses(quadrant, width, height) {\n        var _a, _b;\n        if (!this.overlayElement) {\n            return;\n        }\n        const isSmallX = width < SMALL_WIDTH_BOUNDARY;\n        const isSmallY = height < SMALL_HEIGHT_BOUNDARY;\n        const isLeft = quadrant === 'left';\n        const isRight = quadrant === 'right';\n        const isTop = quadrant === 'top';\n        const isBottom = quadrant === 'bottom';\n        const rightClass = !isSmallX && isRight;\n        const leftClass = !isSmallX && isLeft;\n        const topClass = !isSmallY && isTop;\n        const bottomClass = !isSmallY && isBottom;\n        let size = 1;\n        const sizeOptions = (_b = (_a = this.options.overlayModel) === null || _a === void 0 ? void 0 : _a.size) !== null && _b !== void 0 ? _b : DEFAULT_SIZE;\n        if (sizeOptions.type === 'percentage') {\n            size = clamp(sizeOptions.value, 0, 100) / 100;\n        }\n        else {\n            if (rightClass || leftClass) {\n                size = clamp(0, sizeOptions.value, width) / width;\n            }\n            if (topClass || bottomClass) {\n                size = clamp(0, sizeOptions.value, height) / height;\n            }\n        }\n        const box = { top: '0px', left: '0px', width: '100%', height: '100%' };\n        /**\n         * You can also achieve the overlay placement using the transform CSS property\n         * to translate and scale the element however this has the undesired effect of\n         * 'skewing' the element. Comment left here for anybody that ever revisits this.\n         *\n         * @see https://developer.mozilla.org/en-US/docs/Web/CSS/transform\n         *\n         * right\n         * translateX(${100 * (1 - size) / 2}%) scaleX(${scale})\n         *\n         * left\n         * translateX(-${100 * (1 - size) / 2}%) scaleX(${scale})\n         *\n         * top\n         * translateY(-${100 * (1 - size) / 2}%) scaleY(${scale})\n         *\n         * bottom\n         * translateY(${100 * (1 - size) / 2}%) scaleY(${scale})\n         */\n        if (rightClass) {\n            box.left = `${100 * (1 - size)}%`;\n            box.width = `${100 * size}%`;\n        }\n        else if (leftClass) {\n            box.width = `${100 * size}%`;\n        }\n        else if (topClass) {\n            box.height = `${100 * size}%`;\n        }\n        else if (bottomClass) {\n            box.top = `${100 * (1 - size)}%`;\n            box.height = `${100 * size}%`;\n        }\n        this.overlayElement.style.top = box.top;\n        this.overlayElement.style.left = box.left;\n        this.overlayElement.style.width = box.width;\n        this.overlayElement.style.height = box.height;\n        toggleClass(this.overlayElement, 'dv-drop-target-small-vertical', isSmallY);\n        toggleClass(this.overlayElement, 'dv-drop-target-small-horizontal', isSmallX);\n        toggleClass(this.overlayElement, 'dv-drop-target-left', isLeft);\n        toggleClass(this.overlayElement, 'dv-drop-target-right', isRight);\n        toggleClass(this.overlayElement, 'dv-drop-target-top', isTop);\n        toggleClass(this.overlayElement, 'dv-drop-target-bottom', isBottom);\n        toggleClass(this.overlayElement, 'dv-drop-target-center', quadrant === 'center');\n    }\n    calculateQuadrant(overlayType, x, y, width, height) {\n        var _a, _b;\n        const activationSizeOptions = (_b = (_a = this.options.overlayModel) === null || _a === void 0 ? void 0 : _a.activationSize) !== null && _b !== void 0 ? _b : DEFAULT_ACTIVATION_SIZE;\n        const isPercentage = activationSizeOptions.type === 'percentage';\n        if (isPercentage) {\n            return calculateQuadrantAsPercentage(overlayType, x, y, width, height, activationSizeOptions.value);\n        }\n        return calculateQuadrantAsPixels(overlayType, x, y, width, height, activationSizeOptions.value);\n    }\n    removeDropTarget() {\n        if (this.targetElement) {\n            this._state = undefined;\n            this.element.removeChild(this.targetElement);\n            this.targetElement = undefined;\n            this.overlayElement = undefined;\n            this.element.classList.remove('dv-drop-target');\n        }\n    }\n}\nDroptarget.USED_EVENT_ID = '__dockview_droptarget_event_is_used__';\nexport function calculateQuadrantAsPercentage(overlayType, x, y, width, height, threshold) {\n    const xp = (100 * x) / width;\n    const yp = (100 * y) / height;\n    if (overlayType.has('left') && xp < threshold) {\n        return 'left';\n    }\n    if (overlayType.has('right') && xp > 100 - threshold) {\n        return 'right';\n    }\n    if (overlayType.has('top') && yp < threshold) {\n        return 'top';\n    }\n    if (overlayType.has('bottom') && yp > 100 - threshold) {\n        return 'bottom';\n    }\n    if (!overlayType.has('center')) {\n        return null;\n    }\n    return 'center';\n}\nexport function calculateQuadrantAsPixels(overlayType, x, y, width, height, threshold) {\n    if (overlayType.has('left') && x < threshold) {\n        return 'left';\n    }\n    if (overlayType.has('right') && x > width - threshold) {\n        return 'right';\n    }\n    if (overlayType.has('top') && y < threshold) {\n        return 'top';\n    }\n    if (overlayType.has('bottom') && y > height - threshold) {\n        return 'bottom';\n    }\n    if (!overlayType.has('center')) {\n        return null;\n    }\n    return 'center';\n}\n","import { DockviewEvent, Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nexport class WillFocusEvent extends DockviewEvent {\n    constructor() {\n        super();\n    }\n}\n/**\n * A core api implementation that should be used across all panel-like objects\n */\nexport class PanelApiImpl extends CompositeDisposable {\n    get isFocused() {\n        return this._isFocused;\n    }\n    get isActive() {\n        return this._isActive;\n    }\n    get isVisible() {\n        return this._isVisible;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    constructor(id, component) {\n        super();\n        this.id = id;\n        this.component = component;\n        this._isFocused = false;\n        this._isActive = false;\n        this._isVisible = true;\n        this._width = 0;\n        this._height = 0;\n        this._parameters = {};\n        this.panelUpdatesDisposable = new MutableDisposable();\n        this._onDidDimensionChange = new Emitter();\n        this.onDidDimensionsChange = this._onDidDimensionChange.event;\n        this._onDidChangeFocus = new Emitter();\n        this.onDidFocusChange = this._onDidChangeFocus.event;\n        //\n        this._onWillFocus = new Emitter();\n        this.onWillFocus = this._onWillFocus.event;\n        //\n        this._onDidVisibilityChange = new Emitter();\n        this.onDidVisibilityChange = this._onDidVisibilityChange.event;\n        this._onWillVisibilityChange = new Emitter();\n        this.onWillVisibilityChange = this._onWillVisibilityChange.event;\n        this._onDidActiveChange = new Emitter();\n        this.onDidActiveChange = this._onDidActiveChange.event;\n        this._onActiveChange = new Emitter();\n        this.onActiveChange = this._onActiveChange.event;\n        this._onDidParametersChange = new Emitter();\n        this.onDidParametersChange = this._onDidParametersChange.event;\n        this.addDisposables(this.onDidFocusChange((event) => {\n            this._isFocused = event.isFocused;\n        }), this.onDidActiveChange((event) => {\n            this._isActive = event.isActive;\n        }), this.onDidVisibilityChange((event) => {\n            this._isVisible = event.isVisible;\n        }), this.onDidDimensionsChange((event) => {\n            this._width = event.width;\n            this._height = event.height;\n        }), this.panelUpdatesDisposable, this._onDidDimensionChange, this._onDidChangeFocus, this._onDidVisibilityChange, this._onDidActiveChange, this._onWillFocus, this._onActiveChange, this._onWillFocus, this._onWillVisibilityChange, this._onDidParametersChange);\n    }\n    getParameters() {\n        return this._parameters;\n    }\n    initialize(panel) {\n        this.panelUpdatesDisposable.value = this._onDidParametersChange.event((parameters) => {\n            this._parameters = parameters;\n            panel.update({\n                params: parameters,\n            });\n        });\n    }\n    setVisible(isVisible) {\n        this._onWillVisibilityChange.fire({ isVisible });\n    }\n    setActive() {\n        this._onActiveChange.fire();\n    }\n    updateParameters(parameters) {\n        this._onDidParametersChange.fire(parameters);\n    }\n}\n","import { Emitter } from '../events';\nimport { PanelApiImpl } from './panelApi';\nexport class SplitviewPanelApiImpl extends PanelApiImpl {\n    //\n    constructor(id, component) {\n        super(id, component);\n        this._onDidConstraintsChangeInternal = new Emitter();\n        this.onDidConstraintsChangeInternal = this._onDidConstraintsChangeInternal.event;\n        //\n        this._onDidConstraintsChange = new Emitter({\n            replay: true,\n        });\n        this.onDidConstraintsChange = this._onDidConstraintsChange.event;\n        //\n        this._onDidSizeChange = new Emitter();\n        this.onDidSizeChange = this._onDidSizeChange.event;\n        this.addDisposables(this._onDidConstraintsChangeInternal, this._onDidConstraintsChange, this._onDidSizeChange);\n    }\n    setConstraints(value) {\n        this._onDidConstraintsChangeInternal.fire(value);\n    }\n    setSize(event) {\n        this._onDidSizeChange.fire(event);\n    }\n}\n","import { Emitter } from '../events';\nimport { SplitviewPanelApiImpl } from './splitviewPanelApi';\nexport class PaneviewPanelApiImpl extends SplitviewPanelApiImpl {\n    set pane(pane) {\n        this._pane = pane;\n    }\n    constructor(id, component) {\n        super(id, component);\n        this._onDidExpansionChange = new Emitter({\n            replay: true,\n        });\n        this.onDidExpansionChange = this._onDidExpansionChange.event;\n        this._onMouseEnter = new Emitter({});\n        this.onMouseEnter = this._onMouseEnter.event;\n        this._onMouseLeave = new Emitter({});\n        this.onMouseLeave = this._onMouseLeave.event;\n        this.addDisposables(this._onDidExpansionChange, this._onMouseEnter, this._onMouseLeave);\n    }\n    setExpanded(isExpanded) {\n        var _a;\n        (_a = this._pane) === null || _a === void 0 ? void 0 : _a.setExpanded(isExpanded);\n    }\n    get isExpanded() {\n        var _a;\n        return !!((_a = this._pane) === null || _a === void 0 ? void 0 : _a.isExpanded());\n    }\n}\n","import { trackFocus } from '../dom';\nimport { CompositeDisposable } from '../lifecycle';\nimport { WillFocusEvent } from '../api/panelApi';\nexport class BasePanelView extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    get params() {\n        var _a;\n        return (_a = this._params) === null || _a === void 0 ? void 0 : _a.params;\n    }\n    constructor(id, component, api) {\n        super();\n        this.id = id;\n        this.component = component;\n        this.api = api;\n        this._height = 0;\n        this._width = 0;\n        this._element = document.createElement('div');\n        this._element.tabIndex = -1;\n        this._element.style.outline = 'none';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n        this._element.style.overflow = 'hidden';\n        const focusTracker = trackFocus(this._element);\n        this.addDisposables(this.api, focusTracker.onDidFocus(() => {\n            this.api._onDidChangeFocus.fire({ isFocused: true });\n        }), focusTracker.onDidBlur(() => {\n            this.api._onDidChangeFocus.fire({ isFocused: false });\n        }), focusTracker);\n    }\n    focus() {\n        const event = new WillFocusEvent();\n        this.api._onWillFocus.fire(event);\n        if (event.defaultPrevented) {\n            return;\n        }\n        this._element.focus();\n    }\n    layout(width, height) {\n        this._width = width;\n        this._height = height;\n        this.api._onDidDimensionChange.fire({ width, height });\n        if (this.part) {\n            if (this._params) {\n                this.part.update(this._params.params);\n            }\n        }\n    }\n    init(parameters) {\n        this._params = parameters;\n        this.part = this.getComponent();\n    }\n    update(event) {\n        var _a, _b;\n        // merge the new parameters with the existing parameters\n        this._params = Object.assign(Object.assign({}, this._params), { params: Object.assign(Object.assign({}, (_a = this._params) === null || _a === void 0 ? void 0 : _a.params), event.params) });\n        /**\n         * delete new keys that have a value of undefined,\n         * allow values of null\n         */\n        for (const key of Object.keys(event.params)) {\n            if (event.params[key] === undefined) {\n                delete this._params.params[key];\n            }\n        }\n        // update the view with the updated props\n        (_b = this.part) === null || _b === void 0 ? void 0 : _b.update({ params: this._params.params });\n    }\n    toJSON() {\n        var _a, _b;\n        const params = (_b = (_a = this._params) === null || _a === void 0 ? void 0 : _a.params) !== null && _b !== void 0 ? _b : {};\n        return {\n            id: this.id,\n            component: this.component,\n            params: Object.keys(params).length > 0 ? params : undefined,\n        };\n    }\n    dispose() {\n        var _a;\n        this.api.dispose();\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n        super.dispose();\n    }\n}\n","import { PaneviewPanelApiImpl } from '../api/paneviewPanelApi';\nimport { addClasses, removeClasses } from '../dom';\nimport { addDisposableListener, Emitter } from '../events';\nimport { BasePanelView, } from '../gridview/basePanelView';\nimport { Orientation } from '../splitview/splitview';\nexport class PaneviewPanel extends BasePanelView {\n    set orientation(value) {\n        this._orientation = value;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    get minimumSize() {\n        const headerSize = this.headerSize;\n        const expanded = this.isExpanded();\n        const minimumBodySize = expanded ? this._minimumBodySize : 0;\n        return headerSize + minimumBodySize;\n    }\n    get maximumSize() {\n        const headerSize = this.headerSize;\n        const expanded = this.isExpanded();\n        const maximumBodySize = expanded ? this._maximumBodySize : 0;\n        return headerSize + maximumBodySize;\n    }\n    get size() {\n        return this._size;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    set orthogonalSize(size) {\n        this._orthogonalSize = size;\n    }\n    get minimumBodySize() {\n        return this._minimumBodySize;\n    }\n    set minimumBodySize(value) {\n        this._minimumBodySize = typeof value === 'number' ? value : 0;\n    }\n    get maximumBodySize() {\n        return this._maximumBodySize;\n    }\n    set maximumBodySize(value) {\n        this._maximumBodySize =\n            typeof value === 'number' ? value : Number.POSITIVE_INFINITY;\n    }\n    get headerVisible() {\n        return this._headerVisible;\n    }\n    set headerVisible(value) {\n        this._headerVisible = value;\n        this.header.style.display = value ? '' : 'none';\n    }\n    constructor(id, component, headerComponent, orientation, isExpanded, isHeaderVisible) {\n        super(id, component, new PaneviewPanelApiImpl(id, component));\n        this.headerComponent = headerComponent;\n        this._onDidChangeExpansionState = new Emitter({ replay: true });\n        this.onDidChangeExpansionState = this._onDidChangeExpansionState.event;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this.headerSize = 22;\n        this._orthogonalSize = 0;\n        this._size = 0;\n        this._minimumBodySize = 100;\n        this._maximumBodySize = Number.POSITIVE_INFINITY;\n        this._isExpanded = false;\n        this.expandedSize = 0;\n        this.api.pane = this; // TODO cannot use 'this' before 'super'\n        this.api.initialize(this);\n        this._isExpanded = isExpanded;\n        this._headerVisible = isHeaderVisible;\n        this._onDidChangeExpansionState.fire(this.isExpanded()); // initialize value\n        this._orientation = orientation;\n        this.element.classList.add('dv-pane');\n        this.addDisposables(this.api.onWillVisibilityChange((event) => {\n            const { isVisible } = event;\n            const { accessor } = this._params;\n            accessor.setVisible(this, isVisible);\n        }), this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire({ size: event.size });\n        }), addDisposableListener(this.element, 'mouseenter', (ev) => {\n            this.api._onMouseEnter.fire(ev);\n        }), addDisposableListener(this.element, 'mouseleave', (ev) => {\n            this.api._onMouseLeave.fire(ev);\n        }));\n        this.addDisposables(this._onDidChangeExpansionState, this.onDidChangeExpansionState((isPanelExpanded) => {\n            this.api._onDidExpansionChange.fire({\n                isExpanded: isPanelExpanded,\n            });\n        }), this.api.onDidFocusChange((e) => {\n            if (!this.header) {\n                return;\n            }\n            if (e.isFocused) {\n                addClasses(this.header, 'focused');\n            }\n            else {\n                removeClasses(this.header, 'focused');\n            }\n        }));\n        this.renderOnce();\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    isExpanded() {\n        return this._isExpanded;\n    }\n    setExpanded(expanded) {\n        if (this._isExpanded === expanded) {\n            return;\n        }\n        this._isExpanded = expanded;\n        if (expanded) {\n            if (this.animationTimer) {\n                clearTimeout(this.animationTimer);\n            }\n            if (this.body) {\n                this.element.appendChild(this.body);\n            }\n        }\n        else {\n            this.animationTimer = setTimeout(() => {\n                var _a;\n                (_a = this.body) === null || _a === void 0 ? void 0 : _a.remove();\n            }, 200);\n        }\n        this._onDidChange.fire(expanded ? { size: this.width } : {});\n        this._onDidChangeExpansionState.fire(expanded);\n    }\n    layout(size, orthogonalSize) {\n        this._size = size;\n        this._orthogonalSize = orthogonalSize;\n        const [width, height] = this.orientation === Orientation.HORIZONTAL\n            ? [size, orthogonalSize]\n            : [orthogonalSize, size];\n        if (this.isExpanded()) {\n            this.expandedSize = width;\n        }\n        super.layout(width, height);\n    }\n    init(parameters) {\n        var _a, _b;\n        super.init(parameters);\n        if (typeof parameters.minimumBodySize === 'number') {\n            this.minimumBodySize = parameters.minimumBodySize;\n        }\n        if (typeof parameters.maximumBodySize === 'number') {\n            this.maximumBodySize = parameters.maximumBodySize;\n        }\n        this.bodyPart = this.getBodyComponent();\n        this.headerPart = this.getHeaderComponent();\n        this.bodyPart.init(Object.assign(Object.assign({}, parameters), { api: this.api }));\n        this.headerPart.init(Object.assign(Object.assign({}, parameters), { api: this.api }));\n        (_a = this.body) === null || _a === void 0 ? void 0 : _a.append(this.bodyPart.element);\n        (_b = this.header) === null || _b === void 0 ? void 0 : _b.append(this.headerPart.element);\n        if (typeof parameters.isExpanded === 'boolean') {\n            this.setExpanded(parameters.isExpanded);\n        }\n    }\n    toJSON() {\n        const params = this._params;\n        return Object.assign(Object.assign({}, super.toJSON()), { headerComponent: this.headerComponent, title: params.title });\n    }\n    renderOnce() {\n        this.header = document.createElement('div');\n        this.header.tabIndex = 0;\n        this.header.className = 'dv-pane-header';\n        this.header.style.height = `${this.headerSize}px`;\n        this.header.style.lineHeight = `${this.headerSize}px`;\n        this.header.style.minHeight = `${this.headerSize}px`;\n        this.header.style.maxHeight = `${this.headerSize}px`;\n        this.element.appendChild(this.header);\n        this.body = document.createElement('div');\n        this.body.className = 'dv-pane-body';\n        this.element.appendChild(this.body);\n    }\n    // TODO slightly hacky by-pass of the component to create a body and header component\n    getComponent() {\n        return {\n            update: (params) => {\n                var _a, _b;\n                (_a = this.bodyPart) === null || _a === void 0 ? void 0 : _a.update({ params });\n                (_b = this.headerPart) === null || _b === void 0 ? void 0 : _b.update({ params });\n            },\n            dispose: () => {\n                var _a, _b;\n                (_a = this.bodyPart) === null || _a === void 0 ? void 0 : _a.dispose();\n                (_b = this.headerPart) === null || _b === void 0 ? void 0 : _b.dispose();\n            },\n        };\n    }\n}\n","import { PaneviewApi } from '../api/component.api';\nimport { DragHandler } from '../dnd/abstractDragHandler';\nimport { getPaneData, LocalSelectionTransfer, PaneTransfer, } from '../dnd/dataTransfer';\nimport { Droptarget } from '../dnd/droptarget';\nimport { Emitter } from '../events';\nimport { PaneviewPanel, } from './paneviewPanel';\nexport class DraggablePaneviewPanel extends PaneviewPanel {\n    constructor(accessor, id, component, headerComponent, orientation, isExpanded, disableDnd) {\n        super(id, component, headerComponent, orientation, isExpanded, true);\n        this.accessor = accessor;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        if (!disableDnd) {\n            this.initDragFeatures();\n        }\n    }\n    initDragFeatures() {\n        if (!this.header) {\n            return;\n        }\n        const id = this.id;\n        const accessorId = this.accessor.id;\n        this.header.draggable = true;\n        this.handler = new (class PaneDragHandler extends DragHandler {\n            getData() {\n                LocalSelectionTransfer.getInstance().setData([new PaneTransfer(accessorId, id)], PaneTransfer.prototype);\n                return {\n                    dispose: () => {\n                        LocalSelectionTransfer.getInstance().clearData(PaneTransfer.prototype);\n                    },\n                };\n            }\n        })(this.header);\n        this.target = new Droptarget(this.element, {\n            acceptedTargetZones: ['top', 'bottom'],\n            overlayModel: {\n                activationSize: { type: 'percentage', value: 50 },\n            },\n            canDisplayOverlay: (event) => {\n                const data = getPaneData();\n                if (data) {\n                    if (data.paneId !== this.id &&\n                        data.viewId === this.accessor.id) {\n                        return true;\n                    }\n                }\n                if (this.accessor.options.showDndOverlay) {\n                    return this.accessor.options.showDndOverlay({\n                        nativeEvent: event,\n                        getData: getPaneData,\n                        panel: this,\n                    });\n                }\n                return false;\n            },\n        });\n        this.addDisposables(this._onDidDrop, this.handler, this.target, this.target.onDrop((event) => {\n            this.onDrop(event);\n        }));\n    }\n    onDrop(event) {\n        const data = getPaneData();\n        if (!data || data.viewId !== this.accessor.id) {\n            // if there is no local drag event for this panel\n            // or if the drag event was creating by another Paneview instance\n            this._onDidDrop.fire(Object.assign(Object.assign({}, event), { panel: this, api: new PaneviewApi(this.accessor), getData: getPaneData }));\n            return;\n        }\n        const containerApi = this._params\n            .containerApi;\n        const panelId = data.paneId;\n        const existingPanel = containerApi.getPanel(panelId);\n        if (!existingPanel) {\n            // if the panel doesn't exist\n            this._onDidDrop.fire(Object.assign(Object.assign({}, event), { panel: this, getData: getPaneData, api: new PaneviewApi(this.accessor) }));\n            return;\n        }\n        const allPanels = containerApi.panels;\n        const fromIndex = allPanels.indexOf(existingPanel);\n        let toIndex = containerApi.panels.indexOf(this);\n        if (event.position === 'left' || event.position === 'top') {\n            toIndex = Math.max(0, toIndex - 1);\n        }\n        if (event.position === 'right' || event.position === 'bottom') {\n            if (fromIndex > toIndex) {\n                toIndex++;\n            }\n            toIndex = Math.min(allPanels.length - 1, toIndex);\n        }\n        containerApi.movePanel(fromIndex, toIndex);\n    }\n}\n","import { CompositeDisposable, MutableDisposable, } from '../../../lifecycle';\nimport { Emitter } from '../../../events';\nimport { trackFocus } from '../../../dom';\nimport { Droptarget } from '../../../dnd/droptarget';\nimport { getPanelData } from '../../../dnd/dataTransfer';\nexport class ContentContainer extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor(accessor, group) {\n        super();\n        this.accessor = accessor;\n        this.group = group;\n        this.disposable = new MutableDisposable();\n        this._onDidFocus = new Emitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new Emitter();\n        this.onDidBlur = this._onDidBlur.event;\n        this._element = document.createElement('div');\n        this._element.className = 'dv-content-container';\n        this._element.tabIndex = -1;\n        this.addDisposables(this._onDidFocus, this._onDidBlur);\n        this.dropTarget = new Droptarget(this.element, {\n            acceptedTargetZones: ['top', 'bottom', 'left', 'right', 'center'],\n            canDisplayOverlay: (event, position) => {\n                if (this.group.locked === 'no-drop-target' ||\n                    (this.group.locked && position === 'center')) {\n                    return false;\n                }\n                const data = getPanelData();\n                if (!data &&\n                    event.shiftKey &&\n                    this.group.location.type !== 'floating') {\n                    return false;\n                }\n                if (data && data.viewId === this.accessor.id) {\n                    if (data.groupId === this.group.id) {\n                        if (position === 'center') {\n                            // don't allow to drop on self for center position\n                            return false;\n                        }\n                        if (data.panelId === null) {\n                            // don't allow group move to drop anywhere on self\n                            return false;\n                        }\n                    }\n                    const groupHasOnePanelAndIsActiveDragElement = this.group.panels.length === 1 &&\n                        data.groupId === this.group.id;\n                    return !groupHasOnePanelAndIsActiveDragElement;\n                }\n                return this.group.canDisplayOverlay(event, position, 'content');\n            },\n        });\n        this.addDisposables(this.dropTarget);\n    }\n    show() {\n        this.element.style.display = '';\n    }\n    hide() {\n        this.element.style.display = 'none';\n    }\n    renderPanel(panel, options = { asActive: true }) {\n        const doRender = options.asActive ||\n            (this.panel && this.group.isPanelActive(this.panel));\n        if (this.panel &&\n            this.panel.view.content.element.parentElement === this._element) {\n            /**\n             * If the currently attached panel is mounted directly to the content then remove it\n             */\n            this._element.removeChild(this.panel.view.content.element);\n        }\n        this.panel = panel;\n        let container;\n        switch (panel.api.renderer) {\n            case 'onlyWhenVisible':\n                this.group.renderContainer.detatch(panel);\n                if (this.panel) {\n                    if (doRender) {\n                        this._element.appendChild(this.panel.view.content.element);\n                    }\n                }\n                container = this._element;\n                break;\n            case 'always':\n                if (panel.view.content.element.parentElement === this._element) {\n                    this._element.removeChild(panel.view.content.element);\n                }\n                container = this.group.renderContainer.attach({\n                    panel,\n                    referenceContainer: this,\n                });\n                break;\n            default:\n                throw new Error(`dockview: invalid renderer type '${panel.api.renderer}'`);\n        }\n        if (doRender) {\n            const focusTracker = trackFocus(container);\n            const disposable = new CompositeDisposable();\n            disposable.addDisposables(focusTracker, focusTracker.onDidFocus(() => this._onDidFocus.fire()), focusTracker.onDidBlur(() => this._onDidBlur.fire()));\n            this.disposable.value = disposable;\n        }\n    }\n    openPanel(panel) {\n        if (this.panel === panel) {\n            return;\n        }\n        this.renderPanel(panel);\n    }\n    layout(_width, _height) {\n        // noop\n    }\n    closePanel() {\n        var _a;\n        if (this.panel) {\n            if (this.panel.api.renderer === 'onlyWhenVisible') {\n                (_a = this.panel.view.content.element.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(this.panel.view.content.element);\n            }\n        }\n        this.panel = undefined;\n    }\n    dispose() {\n        this.disposable.dispose();\n        super.dispose();\n    }\n}\n","import { addDisposableListener, Emitter } from '../../../events';\nimport { CompositeDisposable } from '../../../lifecycle';\nimport { getPanelData, LocalSelectionTransfer, PanelTransfer, } from '../../../dnd/dataTransfer';\nimport { toggleClass } from '../../../dom';\nimport { Droptarget, } from '../../../dnd/droptarget';\nimport { DragHandler } from '../../../dnd/abstractDragHandler';\nclass TabDragHandler extends DragHandler {\n    constructor(element, accessor, group, panel) {\n        super(element);\n        this.accessor = accessor;\n        this.group = group;\n        this.panel = panel;\n        this.panelTransfer = LocalSelectionTransfer.getInstance();\n    }\n    getData(event) {\n        this.panelTransfer.setData([new PanelTransfer(this.accessor.id, this.group.id, this.panel.id)], PanelTransfer.prototype);\n        return {\n            dispose: () => {\n                this.panelTransfer.clearData(PanelTransfer.prototype);\n            },\n        };\n    }\n}\nexport class Tab extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor(panel, accessor, group) {\n        super();\n        this.panel = panel;\n        this.accessor = accessor;\n        this.group = group;\n        this.content = undefined;\n        this._onChanged = new Emitter();\n        this.onChanged = this._onChanged.event;\n        this._onDropped = new Emitter();\n        this.onDrop = this._onDropped.event;\n        this._onDragStart = new Emitter();\n        this.onDragStart = this._onDragStart.event;\n        this._element = document.createElement('div');\n        this._element.className = 'dv-tab';\n        this._element.tabIndex = 0;\n        this._element.draggable = true;\n        toggleClass(this.element, 'dv-inactive-tab', true);\n        const dragHandler = new TabDragHandler(this._element, this.accessor, this.group, this.panel);\n        this.dropTarget = new Droptarget(this._element, {\n            acceptedTargetZones: ['center'],\n            canDisplayOverlay: (event, position) => {\n                if (this.group.locked) {\n                    return false;\n                }\n                const data = getPanelData();\n                if (data && this.accessor.id === data.viewId) {\n                    if (data.panelId === null &&\n                        data.groupId === this.group.id) {\n                        // don't allow group move to drop on self\n                        return false;\n                    }\n                    return this.panel.id !== data.panelId;\n                }\n                return this.group.model.canDisplayOverlay(event, position, 'tab');\n            },\n        });\n        this.onWillShowOverlay = this.dropTarget.onWillShowOverlay;\n        this.addDisposables(this._onChanged, this._onDropped, this._onDragStart, dragHandler.onDragStart((event) => {\n            this._onDragStart.fire(event);\n        }), dragHandler, addDisposableListener(this._element, 'pointerdown', (event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            this._onChanged.fire(event);\n        }), this.dropTarget.onDrop((event) => {\n            this._onDropped.fire(event);\n        }), this.dropTarget);\n    }\n    setActive(isActive) {\n        toggleClass(this.element, 'dv-active-tab', isActive);\n        toggleClass(this.element, 'dv-inactive-tab', !isActive);\n    }\n    setContent(part) {\n        if (this.content) {\n            this._element.removeChild(this.content.element);\n        }\n        this.content = part;\n        this._element.appendChild(this.content.element);\n    }\n    dispose() {\n        super.dispose();\n    }\n}\n","import { quasiPreventDefault } from '../dom';\nimport { addDisposableListener } from '../events';\nimport { DragHandler } from './abstractDragHandler';\nimport { LocalSelectionTransfer, PanelTransfer } from './dataTransfer';\nimport { addGhostImage } from './ghost';\nexport class GroupDragHandler extends DragHandler {\n    constructor(element, accessor, group) {\n        super(element);\n        this.accessor = accessor;\n        this.group = group;\n        this.panelTransfer = LocalSelectionTransfer.getInstance();\n        this.addDisposables(addDisposableListener(element, 'pointerdown', (e) => {\n            if (e.shiftKey) {\n                /**\n                 * You cannot call e.preventDefault() because that will prevent drag events from firing\n                 * but we also need to stop any group overlay drag events from occuring\n                 * Use a custom event marker that can be checked by the overlay drag events\n                 */\n                quasiPreventDefault(e);\n            }\n        }, true));\n    }\n    isCancelled(_event) {\n        if (this.group.api.location.type === 'floating' && !_event.shiftKey) {\n            return true;\n        }\n        return false;\n    }\n    getData(dragEvent) {\n        const dataTransfer = dragEvent.dataTransfer;\n        this.panelTransfer.setData([new PanelTransfer(this.accessor.id, this.group.id, null)], PanelTransfer.prototype);\n        const style = window.getComputedStyle(this.el);\n        const bgColor = style.getPropertyValue('--dv-activegroup-visiblepanel-tab-background-color');\n        const color = style.getPropertyValue('--dv-activegroup-visiblepanel-tab-color');\n        if (dataTransfer) {\n            const ghostElement = document.createElement('div');\n            ghostElement.style.backgroundColor = bgColor;\n            ghostElement.style.color = color;\n            ghostElement.style.padding = '2px 8px';\n            ghostElement.style.height = '24px';\n            ghostElement.style.fontSize = '11px';\n            ghostElement.style.lineHeight = '20px';\n            ghostElement.style.borderRadius = '12px';\n            ghostElement.style.position = 'absolute';\n            ghostElement.textContent = `Multiple Panels (${this.group.size})`;\n            addGhostImage(dataTransfer, ghostElement);\n        }\n        return {\n            dispose: () => {\n                this.panelTransfer.clearData(PanelTransfer.prototype);\n            },\n        };\n    }\n}\n","import { addClasses, removeClasses } from '../dom';\nexport function addGhostImage(dataTransfer, ghostElement) {\n    // class dockview provides to force ghost image to be drawn on a different layer and prevent weird rendering issues\n    addClasses(ghostElement, 'dv-dragged');\n    document.body.appendChild(ghostElement);\n    dataTransfer.setDragImage(ghostElement, 0, 0);\n    setTimeout(() => {\n        removeClasses(ghostElement, 'dv-dragged');\n        ghostElement.remove();\n    }, 0);\n}\n","import { last } from '../../../array';\nimport { getPanelData } from '../../../dnd/dataTransfer';\nimport { Droptarget, } from '../../../dnd/droptarget';\nimport { GroupDragHandler } from '../../../dnd/groupDragHandler';\nimport { addDisposableListener, Emitter } from '../../../events';\nimport { CompositeDisposable } from '../../../lifecycle';\nexport class VoidContainer extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor(accessor, group) {\n        super();\n        this.accessor = accessor;\n        this.group = group;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this._onDragStart = new Emitter();\n        this.onDragStart = this._onDragStart.event;\n        this._element = document.createElement('div');\n        this._element.className = 'dv-void-container';\n        this._element.draggable = true;\n        this.addDisposables(this._onDrop, this._onDragStart, addDisposableListener(this._element, 'pointerdown', () => {\n            this.accessor.doSetGroupActive(this.group);\n        }));\n        const handler = new GroupDragHandler(this._element, accessor, group);\n        this.dropTraget = new Droptarget(this._element, {\n            acceptedTargetZones: ['center'],\n            canDisplayOverlay: (event, position) => {\n                var _a;\n                const data = getPanelData();\n                if (data && this.accessor.id === data.viewId) {\n                    if (data.panelId === null &&\n                        data.groupId === this.group.id) {\n                        // don't allow group move to drop on self\n                        return false;\n                    }\n                    // don't show the overlay if the tab being dragged is the last panel of this group\n                    return ((_a = last(this.group.panels)) === null || _a === void 0 ? void 0 : _a.id) !== data.panelId;\n                }\n                return group.model.canDisplayOverlay(event, position, 'header_space');\n            },\n        });\n        this.onWillShowOverlay = this.dropTraget.onWillShowOverlay;\n        this.addDisposables(handler, handler.onDragStart((event) => {\n            this._onDragStart.fire(event);\n        }), this.dropTraget.onDrop((event) => {\n            this._onDrop.fire(event);\n        }), this.dropTraget);\n    }\n}\n","import { CompositeDisposable, } from '../../../lifecycle';\nimport { addDisposableListener, Emitter } from '../../../events';\nimport { Tab } from '../tab/tab';\nimport { VoidContainer } from './voidContainer';\nimport { toggleClass } from '../../../dom';\nimport { WillShowOverlayLocationEvent } from '../../dockviewGroupPanelModel';\nimport { getPanelData } from '../../../dnd/dataTransfer';\nexport class TabsContainer extends CompositeDisposable {\n    get panels() {\n        return this.tabs.map((_) => _.value.panel.id);\n    }\n    get size() {\n        return this.tabs.length;\n    }\n    get hidden() {\n        return this._hidden;\n    }\n    set hidden(value) {\n        this._hidden = value;\n        this.element.style.display = value ? 'none' : '';\n    }\n    show() {\n        if (!this.hidden) {\n            this.element.style.display = '';\n        }\n    }\n    hide() {\n        this._element.style.display = 'none';\n    }\n    setRightActionsElement(element) {\n        if (this.rightActions === element) {\n            return;\n        }\n        if (this.rightActions) {\n            this.rightActions.remove();\n            this.rightActions = undefined;\n        }\n        if (element) {\n            this.rightActionsContainer.appendChild(element);\n            this.rightActions = element;\n        }\n    }\n    setLeftActionsElement(element) {\n        if (this.leftActions === element) {\n            return;\n        }\n        if (this.leftActions) {\n            this.leftActions.remove();\n            this.leftActions = undefined;\n        }\n        if (element) {\n            this.leftActionsContainer.appendChild(element);\n            this.leftActions = element;\n        }\n    }\n    setPrefixActionsElement(element) {\n        if (this.preActions === element) {\n            return;\n        }\n        if (this.preActions) {\n            this.preActions.remove();\n            this.preActions = undefined;\n        }\n        if (element) {\n            this.preActionsContainer.appendChild(element);\n            this.preActions = element;\n        }\n    }\n    get element() {\n        return this._element;\n    }\n    isActive(tab) {\n        return (this.selectedIndex > -1 &&\n            this.tabs[this.selectedIndex].value === tab);\n    }\n    indexOf(id) {\n        return this.tabs.findIndex((tab) => tab.value.panel.id === id);\n    }\n    constructor(accessor, group) {\n        super();\n        this.accessor = accessor;\n        this.group = group;\n        this.tabs = [];\n        this.selectedIndex = -1;\n        this._hidden = false;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this._onTabDragStart = new Emitter();\n        this.onTabDragStart = this._onTabDragStart.event;\n        this._onGroupDragStart = new Emitter();\n        this.onGroupDragStart = this._onGroupDragStart.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        this._element = document.createElement('div');\n        this._element.className = 'dv-tabs-and-actions-container';\n        toggleClass(this._element, 'dv-full-width-single-tab', this.accessor.options.singleTabMode === 'fullwidth');\n        this.rightActionsContainer = document.createElement('div');\n        this.rightActionsContainer.className = 'dv-right-actions-container';\n        this.leftActionsContainer = document.createElement('div');\n        this.leftActionsContainer.className = 'dv-left-actions-container';\n        this.preActionsContainer = document.createElement('div');\n        this.preActionsContainer.className = 'dv-pre-actions-container';\n        this.tabContainer = document.createElement('div');\n        this.tabContainer.className = 'dv-tabs-container';\n        this.voidContainer = new VoidContainer(this.accessor, this.group);\n        this._element.appendChild(this.preActionsContainer);\n        this._element.appendChild(this.tabContainer);\n        this._element.appendChild(this.leftActionsContainer);\n        this._element.appendChild(this.voidContainer.element);\n        this._element.appendChild(this.rightActionsContainer);\n        this.addDisposables(this.accessor.onDidAddPanel((e) => {\n            if (e.api.group === this.group) {\n                toggleClass(this._element, 'dv-single-tab', this.size === 1);\n            }\n        }), this.accessor.onDidRemovePanel((e) => {\n            if (e.api.group === this.group) {\n                toggleClass(this._element, 'dv-single-tab', this.size === 1);\n            }\n        }), this._onWillShowOverlay, this._onDrop, this._onTabDragStart, this._onGroupDragStart, this.voidContainer, this.voidContainer.onDragStart((event) => {\n            this._onGroupDragStart.fire({\n                nativeEvent: event,\n                group: this.group,\n            });\n        }), this.voidContainer.onDrop((event) => {\n            this._onDrop.fire({\n                event: event.nativeEvent,\n                index: this.tabs.length,\n            });\n        }), this.voidContainer.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'header_space',\n                panel: this.group.activePanel,\n                api: this.accessor.api,\n                group: this.group,\n                getData: getPanelData,\n            }));\n        }), addDisposableListener(this.voidContainer.element, 'pointerdown', (event) => {\n            const isFloatingGroupsEnabled = !this.accessor.options.disableFloatingGroups;\n            if (isFloatingGroupsEnabled &&\n                event.shiftKey &&\n                this.group.api.location.type !== 'floating') {\n                event.preventDefault();\n                const { top, left } = this.element.getBoundingClientRect();\n                const { top: rootTop, left: rootLeft } = this.accessor.element.getBoundingClientRect();\n                this.accessor.addFloatingGroup(this.group, {\n                    x: left - rootLeft + 20,\n                    y: top - rootTop + 20,\n                    inDragMode: true,\n                });\n            }\n        }), addDisposableListener(this.tabContainer, 'pointerdown', (event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            const isLeftClick = event.button === 0;\n            if (isLeftClick) {\n                this.accessor.doSetGroupActive(this.group);\n            }\n        }));\n    }\n    setActive(_isGroupActive) {\n        // noop\n    }\n    addTab(tab, index = this.tabs.length) {\n        if (index < 0 || index > this.tabs.length) {\n            throw new Error('invalid location');\n        }\n        this.tabContainer.insertBefore(tab.value.element, this.tabContainer.children[index]);\n        this.tabs = [\n            ...this.tabs.slice(0, index),\n            tab,\n            ...this.tabs.slice(index),\n        ];\n        if (this.selectedIndex < 0) {\n            this.selectedIndex = index;\n        }\n    }\n    delete(id) {\n        const index = this.tabs.findIndex((tab) => tab.value.panel.id === id);\n        const tabToRemove = this.tabs.splice(index, 1)[0];\n        const { value, disposable } = tabToRemove;\n        disposable.dispose();\n        value.dispose();\n        value.element.remove();\n    }\n    setActivePanel(panel) {\n        this.tabs.forEach((tab) => {\n            const isActivePanel = panel.id === tab.value.panel.id;\n            tab.value.setActive(isActivePanel);\n        });\n    }\n    openPanel(panel, index = this.tabs.length) {\n        if (this.tabs.find((tab) => tab.value.panel.id === panel.id)) {\n            return;\n        }\n        const tab = new Tab(panel, this.accessor, this.group);\n        tab.setContent(panel.view.tab);\n        const disposable = new CompositeDisposable(tab.onDragStart((event) => {\n            this._onTabDragStart.fire({ nativeEvent: event, panel });\n        }), tab.onChanged((event) => {\n            const isFloatingGroupsEnabled = !this.accessor.options.disableFloatingGroups;\n            const isFloatingWithOnePanel = this.group.api.location.type === 'floating' &&\n                this.size === 1;\n            if (isFloatingGroupsEnabled &&\n                !isFloatingWithOnePanel &&\n                event.shiftKey) {\n                event.preventDefault();\n                const panel = this.accessor.getGroupPanel(tab.panel.id);\n                const { top, left } = tab.element.getBoundingClientRect();\n                const { top: rootTop, left: rootLeft } = this.accessor.element.getBoundingClientRect();\n                this.accessor.addFloatingGroup(panel, {\n                    x: left - rootLeft,\n                    y: top - rootTop,\n                    inDragMode: true,\n                });\n                return;\n            }\n            const isLeftClick = event.button === 0;\n            if (!isLeftClick || event.defaultPrevented) {\n                return;\n            }\n            if (this.group.activePanel !== panel) {\n                this.group.model.openPanel(panel);\n            }\n        }), tab.onDrop((event) => {\n            this._onDrop.fire({\n                event: event.nativeEvent,\n                index: this.tabs.findIndex((x) => x.value === tab),\n            });\n        }), tab.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'tab',\n                panel: this.group.activePanel,\n                api: this.accessor.api,\n                group: this.group,\n                getData: getPanelData,\n            }));\n        }));\n        const value = { value: tab, disposable };\n        this.addTab(value, index);\n    }\n    closePanel(panel) {\n        this.delete(panel.id);\n    }\n    dispose() {\n        super.dispose();\n        for (const { value, disposable } of this.tabs) {\n            disposable.dispose();\n            value.dispose();\n        }\n        this.tabs = [];\n    }\n}\n","export class DockviewUnhandledDragOverEvent {\n    get isAccepted() {\n        return this._isAccepted;\n    }\n    constructor(nativeEvent, target, position, getData, group) {\n        this.nativeEvent = nativeEvent;\n        this.target = target;\n        this.position = position;\n        this.getData = getData;\n        this.group = group;\n        this._isAccepted = false;\n    }\n    accept() {\n        this._isAccepted = true;\n    }\n}\nexport const PROPERTY_KEYS = (() => {\n    /**\n     * by readong the keys from an empty value object TypeScript will error\n     * when we add or remove new properties to `DockviewOptions`\n     */\n    const properties = {\n        disableAutoResizing: undefined,\n        hideBorders: undefined,\n        singleTabMode: undefined,\n        disableFloatingGroups: undefined,\n        floatingGroupBounds: undefined,\n        popoutUrl: undefined,\n        defaultRenderer: undefined,\n        debug: undefined,\n        rootOverlayModel: undefined,\n        locked: undefined,\n        disableDnd: undefined,\n        gap: undefined,\n        className: undefined,\n        noPanelsOverlay: undefined,\n    };\n    return Object.keys(properties);\n})();\nexport function isPanelOptionsWithPanel(data) {\n    if (data.referencePanel) {\n        return true;\n    }\n    return false;\n}\nexport function isPanelOptionsWithGroup(data) {\n    if (data.referenceGroup) {\n        return true;\n    }\n    return false;\n}\nexport function isGroupOptionsWithPanel(data) {\n    if (data.referencePanel) {\n        return true;\n    }\n    return false;\n}\nexport function isGroupOptionsWithGroup(data) {\n    if (data.referenceGroup) {\n        return true;\n    }\n    return false;\n}\n","import { DockviewApi } from '../api/component.api';\nimport { getPanelData } from '../dnd/dataTransfer';\nimport { isAncestor, toggleClass } from '../dom';\nimport { addDisposableListener, DockviewEvent, Emitter, } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nimport { ContentContainer, } from './components/panel/content';\nimport { TabsContainer, } from './components/titlebar/tabsContainer';\nimport { DockviewUnhandledDragOverEvent, } from './options';\nexport class DockviewDidDropEvent extends DockviewEvent {\n    get nativeEvent() {\n        return this.options.nativeEvent;\n    }\n    get position() {\n        return this.options.position;\n    }\n    get panel() {\n        return this.options.panel;\n    }\n    get group() {\n        return this.options.group;\n    }\n    get api() {\n        return this.options.api;\n    }\n    constructor(options) {\n        super();\n        this.options = options;\n    }\n    getData() {\n        return this.options.getData();\n    }\n}\nexport class DockviewWillDropEvent extends DockviewDidDropEvent {\n    get kind() {\n        return this._kind;\n    }\n    constructor(options) {\n        super(options);\n        this._kind = options.kind;\n    }\n}\nexport class WillShowOverlayLocationEvent {\n    get kind() {\n        return this.options.kind;\n    }\n    get nativeEvent() {\n        return this.event.nativeEvent;\n    }\n    get position() {\n        return this.event.position;\n    }\n    get defaultPrevented() {\n        return this.event.defaultPrevented;\n    }\n    get panel() {\n        return this.options.panel;\n    }\n    get api() {\n        return this.options.api;\n    }\n    get group() {\n        return this.options.group;\n    }\n    preventDefault() {\n        this.event.preventDefault();\n    }\n    getData() {\n        return this.options.getData();\n    }\n    constructor(event, options) {\n        this.event = event;\n        this.options = options;\n    }\n}\nexport class DockviewGroupPanelModel extends CompositeDisposable {\n    get element() {\n        throw new Error('dockview: not supported');\n    }\n    get activePanel() {\n        return this._activePanel;\n    }\n    get locked() {\n        return this._locked;\n    }\n    set locked(value) {\n        this._locked = value;\n        toggleClass(this.container, 'dv-locked-groupview', value === 'no-drop-target' || value);\n    }\n    get isActive() {\n        return this._isGroupActive;\n    }\n    get panels() {\n        return this._panels;\n    }\n    get size() {\n        return this._panels.length;\n    }\n    get isEmpty() {\n        return this._panels.length === 0;\n    }\n    get hasWatermark() {\n        return !!(this.watermark && this.container.contains(this.watermark.element));\n    }\n    get header() {\n        return this.tabsContainer;\n    }\n    get isContentFocused() {\n        if (!document.activeElement) {\n            return false;\n        }\n        return isAncestor(document.activeElement, this.contentContainer.element);\n    }\n    get location() {\n        return this._location;\n    }\n    set location(value) {\n        this._location = value;\n        toggleClass(this.container, 'dv-groupview-floating', false);\n        toggleClass(this.container, 'dv-groupview-popout', false);\n        switch (value.type) {\n            case 'grid':\n                this.contentContainer.dropTarget.setTargetZones([\n                    'top',\n                    'bottom',\n                    'left',\n                    'right',\n                    'center',\n                ]);\n                break;\n            case 'floating':\n                this.contentContainer.dropTarget.setTargetZones(['center']);\n                this.contentContainer.dropTarget.setTargetZones(value\n                    ? ['center']\n                    : ['top', 'bottom', 'left', 'right', 'center']);\n                toggleClass(this.container, 'dv-groupview-floating', true);\n                break;\n            case 'popout':\n                this.contentContainer.dropTarget.setTargetZones(['center']);\n                toggleClass(this.container, 'dv-groupview-popout', true);\n                break;\n        }\n        this.groupPanel.api._onDidLocationChange.fire({\n            location: this.location,\n        });\n    }\n    constructor(container, accessor, id, options, groupPanel) {\n        var _a;\n        super();\n        this.container = container;\n        this.accessor = accessor;\n        this.id = id;\n        this.options = options;\n        this.groupPanel = groupPanel;\n        this._isGroupActive = false;\n        this._locked = false;\n        this._location = { type: 'grid' };\n        this.mostRecentlyUsed = [];\n        this._overwriteRenderContainer = null;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._width = 0;\n        this._height = 0;\n        this._panels = [];\n        this._panelDisposables = new Map();\n        this._onMove = new Emitter();\n        this.onMove = this._onMove.event;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onWillDrop = new Emitter();\n        this.onWillDrop = this._onWillDrop.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        this._onTabDragStart = new Emitter();\n        this.onTabDragStart = this._onTabDragStart.event;\n        this._onGroupDragStart = new Emitter();\n        this.onGroupDragStart = this._onGroupDragStart.event;\n        this._onDidAddPanel = new Emitter();\n        this.onDidAddPanel = this._onDidAddPanel.event;\n        this._onDidPanelTitleChange = new Emitter();\n        this.onDidPanelTitleChange = this._onDidPanelTitleChange.event;\n        this._onDidPanelParametersChange = new Emitter();\n        this.onDidPanelParametersChange = this._onDidPanelParametersChange.event;\n        this._onDidRemovePanel = new Emitter();\n        this.onDidRemovePanel = this._onDidRemovePanel.event;\n        this._onDidActivePanelChange = new Emitter();\n        this.onDidActivePanelChange = this._onDidActivePanelChange.event;\n        this._onUnhandledDragOverEvent = new Emitter();\n        this.onUnhandledDragOverEvent = this._onUnhandledDragOverEvent.event;\n        toggleClass(this.container, 'dv-groupview', true);\n        this._api = new DockviewApi(this.accessor);\n        this.tabsContainer = new TabsContainer(this.accessor, this.groupPanel);\n        this.contentContainer = new ContentContainer(this.accessor, this);\n        container.append(this.tabsContainer.element, this.contentContainer.element);\n        this.header.hidden = !!options.hideHeader;\n        this.locked = (_a = options.locked) !== null && _a !== void 0 ? _a : false;\n        this.addDisposables(this._onTabDragStart, this._onGroupDragStart, this._onWillShowOverlay, this.tabsContainer.onTabDragStart((event) => {\n            this._onTabDragStart.fire(event);\n        }), this.tabsContainer.onGroupDragStart((event) => {\n            this._onGroupDragStart.fire(event);\n        }), this.tabsContainer.onDrop((event) => {\n            this.handleDropEvent('header', event.event, 'center', event.index);\n        }), this.contentContainer.onDidFocus(() => {\n            this.accessor.doSetGroupActive(this.groupPanel);\n        }), this.contentContainer.onDidBlur(() => {\n            // noop\n        }), this.contentContainer.dropTarget.onDrop((event) => {\n            this.handleDropEvent('content', event.nativeEvent, event.position);\n        }), this.tabsContainer.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(event);\n        }), this.contentContainer.dropTarget.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'content',\n                panel: this.activePanel,\n                api: this._api,\n                group: this.groupPanel,\n                getData: getPanelData,\n            }));\n        }), this._onMove, this._onDidChange, this._onDidDrop, this._onWillDrop, this._onDidAddPanel, this._onDidRemovePanel, this._onDidActivePanelChange, this._onUnhandledDragOverEvent);\n    }\n    focusContent() {\n        this.contentContainer.element.focus();\n    }\n    set renderContainer(value) {\n        this.panels.forEach((panel) => {\n            this.renderContainer.detatch(panel);\n        });\n        this._overwriteRenderContainer = value;\n        this.panels.forEach((panel) => {\n            this.rerender(panel);\n        });\n    }\n    get renderContainer() {\n        var _a;\n        return ((_a = this._overwriteRenderContainer) !== null && _a !== void 0 ? _a : this.accessor.overlayRenderContainer);\n    }\n    initialize() {\n        if (this.options.panels) {\n            this.options.panels.forEach((panel) => {\n                this.doAddPanel(panel);\n            });\n        }\n        if (this.options.activePanel) {\n            this.openPanel(this.options.activePanel);\n        }\n        // must be run after the constructor otherwise this.parent may not be\n        // correctly initialized\n        this.setActive(this.isActive, true);\n        this.updateContainer();\n        if (this.accessor.options.createRightHeaderActionComponent) {\n            this._rightHeaderActions =\n                this.accessor.options.createRightHeaderActionComponent(this.groupPanel);\n            this.addDisposables(this._rightHeaderActions);\n            this._rightHeaderActions.init({\n                containerApi: this._api,\n                api: this.groupPanel.api,\n                group: this.groupPanel,\n            });\n            this.tabsContainer.setRightActionsElement(this._rightHeaderActions.element);\n        }\n        if (this.accessor.options.createLeftHeaderActionComponent) {\n            this._leftHeaderActions =\n                this.accessor.options.createLeftHeaderActionComponent(this.groupPanel);\n            this.addDisposables(this._leftHeaderActions);\n            this._leftHeaderActions.init({\n                containerApi: this._api,\n                api: this.groupPanel.api,\n                group: this.groupPanel,\n            });\n            this.tabsContainer.setLeftActionsElement(this._leftHeaderActions.element);\n        }\n        if (this.accessor.options.createPrefixHeaderActionComponent) {\n            this._prefixHeaderActions =\n                this.accessor.options.createPrefixHeaderActionComponent(this.groupPanel);\n            this.addDisposables(this._prefixHeaderActions);\n            this._prefixHeaderActions.init({\n                containerApi: this._api,\n                api: this.groupPanel.api,\n                group: this.groupPanel,\n            });\n            this.tabsContainer.setPrefixActionsElement(this._prefixHeaderActions.element);\n        }\n    }\n    rerender(panel) {\n        this.contentContainer.renderPanel(panel, { asActive: false });\n    }\n    indexOf(panel) {\n        return this.tabsContainer.indexOf(panel.id);\n    }\n    toJSON() {\n        var _a;\n        const result = {\n            views: this.tabsContainer.panels,\n            activeView: (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.id,\n            id: this.id,\n        };\n        if (this.locked !== false) {\n            result.locked = this.locked;\n        }\n        if (this.header.hidden) {\n            result.hideHeader = true;\n        }\n        return result;\n    }\n    moveToNext(options) {\n        if (!options) {\n            options = {};\n        }\n        if (!options.panel) {\n            options.panel = this.activePanel;\n        }\n        const index = options.panel ? this.panels.indexOf(options.panel) : -1;\n        let normalizedIndex;\n        if (index < this.panels.length - 1) {\n            normalizedIndex = index + 1;\n        }\n        else if (!options.suppressRoll) {\n            normalizedIndex = 0;\n        }\n        else {\n            return;\n        }\n        this.openPanel(this.panels[normalizedIndex]);\n    }\n    moveToPrevious(options) {\n        if (!options) {\n            options = {};\n        }\n        if (!options.panel) {\n            options.panel = this.activePanel;\n        }\n        if (!options.panel) {\n            return;\n        }\n        const index = this.panels.indexOf(options.panel);\n        let normalizedIndex;\n        if (index > 0) {\n            normalizedIndex = index - 1;\n        }\n        else if (!options.suppressRoll) {\n            normalizedIndex = this.panels.length - 1;\n        }\n        else {\n            return;\n        }\n        this.openPanel(this.panels[normalizedIndex]);\n    }\n    containsPanel(panel) {\n        return this.panels.includes(panel);\n    }\n    init(_params) {\n        //noop\n    }\n    update(_params) {\n        //noop\n    }\n    focus() {\n        var _a;\n        (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    openPanel(panel, options = {}) {\n        /**\n         * set the panel group\n         * add the panel\n         * check if group active\n         * check if panel active\n         */\n        if (typeof options.index !== 'number' ||\n            options.index > this.panels.length) {\n            options.index = this.panels.length;\n        }\n        const skipSetActive = !!options.skipSetActive;\n        // ensure the group is updated before we fire any events\n        panel.updateParentGroup(this.groupPanel, {\n            skipSetActive: options.skipSetActive,\n        });\n        this.doAddPanel(panel, options.index, {\n            skipSetActive: skipSetActive,\n        });\n        if (this._activePanel === panel) {\n            this.contentContainer.renderPanel(panel, { asActive: true });\n            return;\n        }\n        if (!skipSetActive) {\n            this.doSetActivePanel(panel);\n        }\n        if (!options.skipSetGroupActive) {\n            this.accessor.doSetGroupActive(this.groupPanel);\n        }\n        if (!options.skipSetActive) {\n            this.updateContainer();\n        }\n    }\n    removePanel(groupItemOrId, options = {\n        skipSetActive: false,\n    }) {\n        const id = typeof groupItemOrId === 'string'\n            ? groupItemOrId\n            : groupItemOrId.id;\n        const panelToRemove = this._panels.find((panel) => panel.id === id);\n        if (!panelToRemove) {\n            throw new Error('invalid operation');\n        }\n        return this._removePanel(panelToRemove, options);\n    }\n    closeAllPanels() {\n        if (this.panels.length > 0) {\n            // take a copy since we will be edting the array as we iterate through\n            const arrPanelCpy = [...this.panels];\n            for (const panel of arrPanelCpy) {\n                this.doClose(panel);\n            }\n        }\n        else {\n            this.accessor.removeGroup(this.groupPanel);\n        }\n    }\n    closePanel(panel) {\n        this.doClose(panel);\n    }\n    doClose(panel) {\n        const isLast = this.panels.length === 1 && this.accessor.groups.length === 1;\n        this.accessor.removePanel(panel, isLast && this.accessor.options.noPanelsOverlay === 'emptyGroup'\n            ? { removeEmptyGroup: false }\n            : undefined);\n    }\n    isPanelActive(panel) {\n        return this._activePanel === panel;\n    }\n    updateActions(element) {\n        this.tabsContainer.setRightActionsElement(element);\n    }\n    setActive(isGroupActive, force = false) {\n        if (!force && this.isActive === isGroupActive) {\n            return;\n        }\n        this._isGroupActive = isGroupActive;\n        toggleClass(this.container, 'dv-active-group', isGroupActive);\n        toggleClass(this.container, 'dv-inactive-group', !isGroupActive);\n        this.tabsContainer.setActive(this.isActive);\n        if (!this._activePanel && this.panels.length > 0) {\n            this.doSetActivePanel(this.panels[0]);\n        }\n        this.updateContainer();\n    }\n    layout(width, height) {\n        var _a;\n        this._width = width;\n        this._height = height;\n        this.contentContainer.layout(this._width, this._height);\n        if ((_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.layout) {\n            this._activePanel.layout(this._width, this._height);\n        }\n    }\n    _removePanel(panel, options) {\n        const isActivePanel = this._activePanel === panel;\n        this.doRemovePanel(panel);\n        if (isActivePanel && this.panels.length > 0) {\n            const nextPanel = this.mostRecentlyUsed[0];\n            this.openPanel(nextPanel, {\n                skipSetActive: options.skipSetActive,\n                skipSetGroupActive: options.skipSetActiveGroup,\n            });\n        }\n        if (this._activePanel && this.panels.length === 0) {\n            this.doSetActivePanel(undefined);\n        }\n        if (!options.skipSetActive) {\n            this.updateContainer();\n        }\n        return panel;\n    }\n    doRemovePanel(panel) {\n        const index = this.panels.indexOf(panel);\n        if (this._activePanel === panel) {\n            this.contentContainer.closePanel();\n        }\n        this.tabsContainer.delete(panel.id);\n        this._panels.splice(index, 1);\n        if (this.mostRecentlyUsed.includes(panel)) {\n            const index = this.mostRecentlyUsed.indexOf(panel);\n            this.mostRecentlyUsed.splice(index, 1);\n        }\n        const disposable = this._panelDisposables.get(panel.id);\n        if (disposable) {\n            disposable.dispose();\n            this._panelDisposables.delete(panel.id);\n        }\n        this._onDidRemovePanel.fire({ panel });\n    }\n    doAddPanel(panel, index = this.panels.length, options = { skipSetActive: false }) {\n        const existingPanel = this._panels.indexOf(panel);\n        const hasExistingPanel = existingPanel > -1;\n        this.tabsContainer.show();\n        this.contentContainer.show();\n        this.tabsContainer.openPanel(panel, index);\n        if (!options.skipSetActive) {\n            this.contentContainer.openPanel(panel);\n        }\n        if (hasExistingPanel) {\n            // TODO - need to ensure ordering hasn't changed and if it has need to re-order this.panels\n            return;\n        }\n        this.updateMru(panel);\n        this.panels.splice(index, 0, panel);\n        this._panelDisposables.set(panel.id, new CompositeDisposable(panel.api.onDidTitleChange((event) => this._onDidPanelTitleChange.fire(event)), panel.api.onDidParametersChange((event) => this._onDidPanelParametersChange.fire(event))));\n        this._onDidAddPanel.fire({ panel });\n    }\n    doSetActivePanel(panel) {\n        if (this._activePanel === panel) {\n            return;\n        }\n        this._activePanel = panel;\n        if (panel) {\n            this.tabsContainer.setActivePanel(panel);\n            panel.layout(this._width, this._height);\n            this.updateMru(panel);\n            this._onDidActivePanelChange.fire({\n                panel,\n            });\n        }\n    }\n    updateMru(panel) {\n        if (this.mostRecentlyUsed.includes(panel)) {\n            this.mostRecentlyUsed.splice(this.mostRecentlyUsed.indexOf(panel), 1);\n        }\n        this.mostRecentlyUsed = [panel, ...this.mostRecentlyUsed];\n    }\n    updateContainer() {\n        var _a, _b;\n        this.panels.forEach((panel) => panel.runEvents());\n        if (this.isEmpty && !this.watermark) {\n            const watermark = this.accessor.createWatermarkComponent();\n            watermark.init({\n                containerApi: this._api,\n                group: this.groupPanel,\n            });\n            this.watermark = watermark;\n            addDisposableListener(this.watermark.element, 'pointerdown', () => {\n                if (!this.isActive) {\n                    this.accessor.doSetGroupActive(this.groupPanel);\n                }\n            });\n            this.contentContainer.element.appendChild(this.watermark.element);\n        }\n        if (!this.isEmpty && this.watermark) {\n            this.watermark.element.remove();\n            (_b = (_a = this.watermark).dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n            this.watermark = undefined;\n        }\n    }\n    canDisplayOverlay(event, position, target) {\n        const firedEvent = new DockviewUnhandledDragOverEvent(event, target, position, getPanelData, this.accessor.getPanel(this.id));\n        this._onUnhandledDragOverEvent.fire(firedEvent);\n        return firedEvent.isAccepted;\n    }\n    handleDropEvent(type, event, position, index) {\n        if (this.locked === 'no-drop-target') {\n            return;\n        }\n        function getKind() {\n            switch (type) {\n                case 'header':\n                    return typeof index === 'number' ? 'tab' : 'header_space';\n                case 'content':\n                    return 'content';\n            }\n        }\n        const panel = typeof index === 'number' ? this.panels[index] : undefined;\n        const willDropEvent = new DockviewWillDropEvent({\n            nativeEvent: event,\n            position,\n            panel,\n            getData: () => getPanelData(),\n            kind: getKind(),\n            group: this.groupPanel,\n            api: this._api,\n        });\n        this._onWillDrop.fire(willDropEvent);\n        if (willDropEvent.defaultPrevented) {\n            return;\n        }\n        const data = getPanelData();\n        if (data && data.viewId === this.accessor.id) {\n            if (data.panelId === null) {\n                // this is a group move dnd event\n                const { groupId } = data;\n                this._onMove.fire({\n                    target: position,\n                    groupId: groupId,\n                    index,\n                });\n                return;\n            }\n            const fromSameGroup = this.tabsContainer.indexOf(data.panelId) !== -1;\n            if (fromSameGroup && this.tabsContainer.size === 1) {\n                return;\n            }\n            const { groupId, panelId } = data;\n            const isSameGroup = this.id === groupId;\n            if (isSameGroup && !position) {\n                const oldIndex = this.tabsContainer.indexOf(panelId);\n                if (oldIndex === index) {\n                    return;\n                }\n            }\n            this._onMove.fire({\n                target: position,\n                groupId: data.groupId,\n                itemId: data.panelId,\n                index,\n            });\n        }\n        else {\n            this._onDidDrop.fire(new DockviewDidDropEvent({\n                nativeEvent: event,\n                position,\n                panel,\n                getData: () => getPanelData(),\n                group: this.groupPanel,\n                api: this._api,\n            }));\n        }\n    }\n    dispose() {\n        var _a, _b, _c;\n        super.dispose();\n        (_a = this.watermark) === null || _a === void 0 ? void 0 : _a.element.remove();\n        (_c = (_b = this.watermark) === null || _b === void 0 ? void 0 : _b.dispose) === null || _c === void 0 ? void 0 : _c.call(_b);\n        this.watermark = undefined;\n        for (const panel of this.panels) {\n            panel.dispose();\n        }\n        this.tabsContainer.dispose();\n        this.contentContainer.dispose();\n    }\n}\n","import { Emitter } from '../events';\nimport { PanelApiImpl } from './panelApi';\nexport class GridviewPanelApiImpl extends PanelApiImpl {\n    constructor(id, component, panel) {\n        super(id, component);\n        this._onDidConstraintsChangeInternal = new Emitter();\n        this.onDidConstraintsChangeInternal = this._onDidConstraintsChangeInternal.event;\n        this._onDidConstraintsChange = new Emitter();\n        this.onDidConstraintsChange = this._onDidConstraintsChange.event;\n        this._onDidSizeChange = new Emitter();\n        this.onDidSizeChange = this._onDidSizeChange.event;\n        this.addDisposables(this._onDidConstraintsChangeInternal, this._onDidConstraintsChange, this._onDidSizeChange);\n        if (panel) {\n            this.initialize(panel);\n        }\n    }\n    setConstraints(value) {\n        this._onDidConstraintsChangeInternal.fire(value);\n    }\n    setSize(event) {\n        this._onDidSizeChange.fire(event);\n    }\n}\n","import { BasePanelView, } from './basePanelView';\nimport { GridviewPanelApiImpl, } from '../api/gridviewPanelApi';\nimport { Emitter } from '../events';\nexport class GridviewPanel extends BasePanelView {\n    get priority() {\n        return this._priority;\n    }\n    get snap() {\n        return this._snap;\n    }\n    get minimumWidth() {\n        /**\n         * defer to protected function to allow subclasses to override easily.\n         * see https://github.com/microsoft/TypeScript/issues/338\n         */\n        return this.__minimumWidth();\n    }\n    get minimumHeight() {\n        /**\n         * defer to protected function to allow subclasses to override easily.\n         * see https://github.com/microsoft/TypeScript/issues/338\n         */\n        return this.__minimumHeight();\n    }\n    get maximumHeight() {\n        /**\n         * defer to protected function to allow subclasses to override easily.\n         * see https://github.com/microsoft/TypeScript/issues/338\n         */\n        return this.__maximumHeight();\n    }\n    get maximumWidth() {\n        /**\n         * defer to protected function to allow subclasses to override easily.\n         * see https://github.com/microsoft/TypeScript/issues/338\n         */\n        return this.__maximumWidth();\n    }\n    __minimumWidth() {\n        const width = typeof this._minimumWidth === 'function'\n            ? this._minimumWidth()\n            : this._minimumWidth;\n        if (width !== this._evaluatedMinimumWidth) {\n            this._evaluatedMinimumWidth = width;\n            this.updateConstraints();\n        }\n        return width;\n    }\n    __maximumWidth() {\n        const width = typeof this._maximumWidth === 'function'\n            ? this._maximumWidth()\n            : this._maximumWidth;\n        if (width !== this._evaluatedMaximumWidth) {\n            this._evaluatedMaximumWidth = width;\n            this.updateConstraints();\n        }\n        return width;\n    }\n    __minimumHeight() {\n        const height = typeof this._minimumHeight === 'function'\n            ? this._minimumHeight()\n            : this._minimumHeight;\n        if (height !== this._evaluatedMinimumHeight) {\n            this._evaluatedMinimumHeight = height;\n            this.updateConstraints();\n        }\n        return height;\n    }\n    __maximumHeight() {\n        const height = typeof this._maximumHeight === 'function'\n            ? this._maximumHeight()\n            : this._maximumHeight;\n        if (height !== this._evaluatedMaximumHeight) {\n            this._evaluatedMaximumHeight = height;\n            this.updateConstraints();\n        }\n        return height;\n    }\n    get isActive() {\n        return this.api.isActive;\n    }\n    get isVisible() {\n        return this.api.isVisible;\n    }\n    constructor(id, component, options, api) {\n        super(id, component, api !== null && api !== void 0 ? api : new GridviewPanelApiImpl(id, component));\n        this._evaluatedMinimumWidth = 0;\n        this._evaluatedMaximumWidth = Number.MAX_SAFE_INTEGER;\n        this._evaluatedMinimumHeight = 0;\n        this._evaluatedMaximumHeight = Number.MAX_SAFE_INTEGER;\n        this._minimumWidth = 0;\n        this._minimumHeight = 0;\n        this._maximumWidth = Number.MAX_SAFE_INTEGER;\n        this._maximumHeight = Number.MAX_SAFE_INTEGER;\n        this._snap = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        if (typeof (options === null || options === void 0 ? void 0 : options.minimumWidth) === 'number') {\n            this._minimumWidth = options.minimumWidth;\n        }\n        if (typeof (options === null || options === void 0 ? void 0 : options.maximumWidth) === 'number') {\n            this._maximumWidth = options.maximumWidth;\n        }\n        if (typeof (options === null || options === void 0 ? void 0 : options.minimumHeight) === 'number') {\n            this._minimumHeight = options.minimumHeight;\n        }\n        if (typeof (options === null || options === void 0 ? void 0 : options.maximumHeight) === 'number') {\n            this._maximumHeight = options.maximumHeight;\n        }\n        this.api.initialize(this); // TODO: required to by-pass 'super before this' requirement\n        this.addDisposables(this.api.onWillVisibilityChange((event) => {\n            const { isVisible } = event;\n            const { accessor } = this._params;\n            accessor.setVisible(this, isVisible);\n        }), this.api.onActiveChange(() => {\n            const { accessor } = this._params;\n            accessor.doSetGroupActive(this);\n        }), this.api.onDidConstraintsChangeInternal((event) => {\n            if (typeof event.minimumWidth === 'number' ||\n                typeof event.minimumWidth === 'function') {\n                this._minimumWidth = event.minimumWidth;\n            }\n            if (typeof event.minimumHeight === 'number' ||\n                typeof event.minimumHeight === 'function') {\n                this._minimumHeight = event.minimumHeight;\n            }\n            if (typeof event.maximumWidth === 'number' ||\n                typeof event.maximumWidth === 'function') {\n                this._maximumWidth = event.maximumWidth;\n            }\n            if (typeof event.maximumHeight === 'number' ||\n                typeof event.maximumHeight === 'function') {\n                this._maximumHeight = event.maximumHeight;\n            }\n        }), this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire({\n                height: event.height,\n                width: event.width,\n            });\n        }), this._onDidChange);\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    init(parameters) {\n        if (parameters.maximumHeight) {\n            this._maximumHeight = parameters.maximumHeight;\n        }\n        if (parameters.minimumHeight) {\n            this._minimumHeight = parameters.minimumHeight;\n        }\n        if (parameters.maximumWidth) {\n            this._maximumWidth = parameters.maximumWidth;\n        }\n        if (parameters.minimumWidth) {\n            this._minimumWidth = parameters.minimumWidth;\n        }\n        this._priority = parameters.priority;\n        this._snap = !!parameters.snap;\n        super.init(parameters);\n        if (typeof parameters.isVisible === 'boolean') {\n            this.setVisible(parameters.isVisible);\n        }\n    }\n    updateConstraints() {\n        this.api._onDidConstraintsChange.fire({\n            minimumWidth: this._evaluatedMinimumWidth,\n            maximumWidth: this._evaluatedMaximumWidth,\n            minimumHeight: this._evaluatedMinimumHeight,\n            maximumHeight: this._evaluatedMaximumHeight,\n        });\n    }\n    toJSON() {\n        const state = super.toJSON();\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ? undefined : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        return Object.assign(Object.assign({}, state), { minimumHeight: minimum(this.minimumHeight), maximumHeight: maximum(this.maximumHeight), minimumWidth: minimum(this.minimumWidth), maximumWidth: maximum(this.maximumWidth), snap: this.snap, priority: this.priority });\n    }\n}\n","import { positionToDirection } from '../dnd/droptarget';\nimport { Emitter } from '../events';\nimport { MutableDisposable } from '../lifecycle';\nimport { GridviewPanelApiImpl } from './gridviewPanelApi';\nconst NOT_INITIALIZED_MESSAGE = 'dockview: DockviewGroupPanelApiImpl not initialized';\nexport class DockviewGroupPanelApiImpl extends GridviewPanelApiImpl {\n    get location() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        return this._group.model.location;\n    }\n    constructor(id, accessor) {\n        super(id, '__dockviewgroup__');\n        this.accessor = accessor;\n        this._mutableDisposable = new MutableDisposable();\n        this._onDidLocationChange = new Emitter();\n        this.onDidLocationChange = this._onDidLocationChange.event;\n        this._onDidActivePanelChange = new Emitter();\n        this.onDidActivePanelChange = this._onDidActivePanelChange.event;\n        this.addDisposables(this._onDidLocationChange, this._onDidActivePanelChange, this._mutableDisposable);\n    }\n    close() {\n        if (!this._group) {\n            return;\n        }\n        return this.accessor.removeGroup(this._group);\n    }\n    getWindow() {\n        return this.location.type === 'popout'\n            ? this.location.getWindow()\n            : window;\n    }\n    moveTo(options) {\n        var _a, _b, _c;\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        const group = (_a = options.group) !== null && _a !== void 0 ? _a : this.accessor.addGroup({\n            direction: positionToDirection((_b = options.position) !== null && _b !== void 0 ? _b : 'right'),\n            skipSetActive: true,\n        });\n        this.accessor.moveGroupOrPanel({\n            from: { groupId: this._group.id },\n            to: {\n                group,\n                position: options.group\n                    ? (_c = options.position) !== null && _c !== void 0 ? _c : 'center'\n                    : 'center',\n                index: options.index,\n            },\n        });\n    }\n    maximize() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        if (this.location.type !== 'grid') {\n            // only grid groups can be maximized\n            return;\n        }\n        this.accessor.maximizeGroup(this._group);\n    }\n    isMaximized() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        return this.accessor.isMaximizedGroup(this._group);\n    }\n    exitMaximized() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        if (this.isMaximized()) {\n            this.accessor.exitMaximizedGroup();\n        }\n    }\n    initialize(group) {\n        /**\n         * TODO: Annoying initialization order caveat, find a better way to initialize and avoid needing null checks\n         *\n         * Due to the order on initialization we know that the model isn't defined until later in the same stack-frame of setup.\n         * By queuing a microtask we can ensure the setup is completed within the same stack-frame, but after everything else has\n         * finished ensuring the `model` is defined.\n         */\n        this._group = group;\n        queueMicrotask(() => {\n            this._mutableDisposable.value =\n                this._group.model.onDidActivePanelChange((event) => {\n                    this._onDidActivePanelChange.fire(event);\n                });\n        });\n    }\n}\n","import { DockviewGroupPanelModel, } from './dockviewGroupPanelModel';\nimport { GridviewPanel } from '../gridview/gridviewPanel';\nimport { DockviewGroupPanelApiImpl, } from '../api/dockviewGroupPanelApi';\nconst MINIMUM_DOCKVIEW_GROUP_PANEL_WIDTH = 100;\nconst MINIMUM_DOCKVIEW_GROUP_PANEL_HEIGHT = 100;\nexport class DockviewGroupPanel extends GridviewPanel {\n    get minimumWidth() {\n        var _a;\n        const activePanelMinimumWidth = (_a = this.activePanel) === null || _a === void 0 ? void 0 : _a.minimumWidth;\n        if (typeof activePanelMinimumWidth === 'number') {\n            return activePanelMinimumWidth;\n        }\n        return super.__minimumWidth();\n    }\n    get minimumHeight() {\n        var _a;\n        const activePanelMinimumHeight = (_a = this.activePanel) === null || _a === void 0 ? void 0 : _a.minimumHeight;\n        if (typeof activePanelMinimumHeight === 'number') {\n            return activePanelMinimumHeight;\n        }\n        return super.__minimumHeight();\n    }\n    get maximumWidth() {\n        var _a;\n        const activePanelMaximumWidth = (_a = this.activePanel) === null || _a === void 0 ? void 0 : _a.maximumWidth;\n        if (typeof activePanelMaximumWidth === 'number') {\n            return activePanelMaximumWidth;\n        }\n        return super.__maximumWidth();\n    }\n    get maximumHeight() {\n        var _a;\n        const activePanelMaximumHeight = (_a = this.activePanel) === null || _a === void 0 ? void 0 : _a.maximumHeight;\n        if (typeof activePanelMaximumHeight === 'number') {\n            return activePanelMaximumHeight;\n        }\n        return super.__maximumHeight();\n    }\n    get panels() {\n        return this._model.panels;\n    }\n    get activePanel() {\n        return this._model.activePanel;\n    }\n    get size() {\n        return this._model.size;\n    }\n    get model() {\n        return this._model;\n    }\n    get locked() {\n        return this._model.locked;\n    }\n    set locked(value) {\n        this._model.locked = value;\n    }\n    get header() {\n        return this._model.header;\n    }\n    constructor(accessor, id, options) {\n        var _a, _b, _c, _d, _e, _f;\n        super(id, 'groupview_default', {\n            minimumHeight: (_b = (_a = options.constraints) === null || _a === void 0 ? void 0 : _a.minimumHeight) !== null && _b !== void 0 ? _b : MINIMUM_DOCKVIEW_GROUP_PANEL_HEIGHT,\n            minimumWidth: (_d = (_c = options.constraints) === null || _c === void 0 ? void 0 : _c.maximumHeight) !== null && _d !== void 0 ? _d : MINIMUM_DOCKVIEW_GROUP_PANEL_WIDTH,\n            maximumHeight: (_e = options.constraints) === null || _e === void 0 ? void 0 : _e.maximumHeight,\n            maximumWidth: (_f = options.constraints) === null || _f === void 0 ? void 0 : _f.maximumWidth,\n        }, new DockviewGroupPanelApiImpl(id, accessor));\n        this.api.initialize(this); // cannot use 'this' after after 'super' call\n        this._model = new DockviewGroupPanelModel(this.element, accessor, id, options, this);\n    }\n    focus() {\n        if (!this.api.isActive) {\n            this.api.setActive();\n        }\n        super.focus();\n    }\n    initialize() {\n        this._model.initialize();\n    }\n    setActive(isActive) {\n        super.setActive(isActive);\n        this.model.setActive(isActive);\n    }\n    layout(width, height) {\n        super.layout(width, height);\n        this.model.layout(width, height);\n    }\n    getComponent() {\n        return this._model;\n    }\n    toJSON() {\n        return this.model.toJSON();\n    }\n}\n","import { Emitter } from '../events';\nimport { GridviewPanelApiImpl } from './gridviewPanelApi';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nexport class DockviewPanelApiImpl extends GridviewPanelApiImpl {\n    get location() {\n        return this.group.api.location;\n    }\n    get title() {\n        return this.panel.title;\n    }\n    get isGroupActive() {\n        return this.group.isActive;\n    }\n    get renderer() {\n        return this.panel.renderer;\n    }\n    set group(value) {\n        const oldGroup = this._group;\n        if (this._group !== value) {\n            this._group = value;\n            this._onDidGroupChange.fire({});\n            this.setupGroupEventListeners(oldGroup);\n            this._onDidLocationChange.fire({\n                location: this.group.api.location,\n            });\n        }\n    }\n    get group() {\n        return this._group;\n    }\n    get tabComponent() {\n        return this._tabComponent;\n    }\n    constructor(panel, group, accessor, component, tabComponent) {\n        super(panel.id, component);\n        this.panel = panel;\n        this.accessor = accessor;\n        this._onDidTitleChange = new Emitter();\n        this.onDidTitleChange = this._onDidTitleChange.event;\n        this._onDidActiveGroupChange = new Emitter();\n        this.onDidActiveGroupChange = this._onDidActiveGroupChange.event;\n        this._onDidGroupChange = new Emitter();\n        this.onDidGroupChange = this._onDidGroupChange.event;\n        this._onDidRendererChange = new Emitter();\n        this.onDidRendererChange = this._onDidRendererChange.event;\n        this._onDidLocationChange = new Emitter();\n        this.onDidLocationChange = this._onDidLocationChange.event;\n        this.groupEventsDisposable = new MutableDisposable();\n        this._tabComponent = tabComponent;\n        this.initialize(panel);\n        this._group = group;\n        this.setupGroupEventListeners();\n        this.addDisposables(this.groupEventsDisposable, this._onDidRendererChange, this._onDidTitleChange, this._onDidGroupChange, this._onDidActiveGroupChange, this._onDidLocationChange);\n    }\n    getWindow() {\n        return this.group.api.getWindow();\n    }\n    moveTo(options) {\n        var _a, _b;\n        this.accessor.moveGroupOrPanel({\n            from: { groupId: this._group.id, panelId: this.panel.id },\n            to: {\n                group: (_a = options.group) !== null && _a !== void 0 ? _a : this._group,\n                position: options.group\n                    ? (_b = options.position) !== null && _b !== void 0 ? _b : 'center'\n                    : 'center',\n                index: options.index,\n            },\n        });\n    }\n    setTitle(title) {\n        this.panel.setTitle(title);\n    }\n    setRenderer(renderer) {\n        this.panel.setRenderer(renderer);\n    }\n    close() {\n        this.group.model.closePanel(this.panel);\n    }\n    maximize() {\n        this.group.api.maximize();\n    }\n    isMaximized() {\n        return this.group.api.isMaximized();\n    }\n    exitMaximized() {\n        this.group.api.exitMaximized();\n    }\n    setupGroupEventListeners(previousGroup) {\n        var _a;\n        let _trackGroupActive = (_a = previousGroup === null || previousGroup === void 0 ? void 0 : previousGroup.isActive) !== null && _a !== void 0 ? _a : false; // prevent duplicate events with same state\n        this.groupEventsDisposable.value = new CompositeDisposable(this.group.api.onDidVisibilityChange((event) => {\n            const hasBecomeHidden = !event.isVisible && this.isVisible;\n            const hasBecomeVisible = event.isVisible && !this.isVisible;\n            const isActivePanel = this.group.model.isPanelActive(this.panel);\n            if (hasBecomeHidden || (hasBecomeVisible && isActivePanel)) {\n                this._onDidVisibilityChange.fire(event);\n            }\n        }), this.group.api.onDidLocationChange((event) => {\n            if (this.group !== this.panel.group) {\n                return;\n            }\n            this._onDidLocationChange.fire(event);\n        }), this.group.api.onDidActiveChange(() => {\n            if (this.group !== this.panel.group) {\n                return;\n            }\n            if (_trackGroupActive !== this.isGroupActive) {\n                _trackGroupActive = this.isGroupActive;\n                this._onDidActiveGroupChange.fire({\n                    isActive: this.isGroupActive,\n                });\n            }\n        }));\n    }\n}\n","import { DockviewPanelApiImpl, } from '../api/dockviewPanelApi';\nimport { CompositeDisposable } from '../lifecycle';\nimport { WillFocusEvent } from '../api/panelApi';\nexport class DockviewPanel extends CompositeDisposable {\n    get params() {\n        return this._params;\n    }\n    get title() {\n        return this._title;\n    }\n    get group() {\n        return this._group;\n    }\n    get renderer() {\n        var _a;\n        return (_a = this._renderer) !== null && _a !== void 0 ? _a : this.accessor.renderer;\n    }\n    get minimumWidth() {\n        return this._minimumWidth;\n    }\n    get minimumHeight() {\n        return this._minimumHeight;\n    }\n    get maximumWidth() {\n        return this._maximumWidth;\n    }\n    get maximumHeight() {\n        return this._maximumHeight;\n    }\n    constructor(id, component, tabComponent, accessor, containerApi, group, view, options) {\n        super();\n        this.id = id;\n        this.accessor = accessor;\n        this.containerApi = containerApi;\n        this.view = view;\n        this._renderer = options.renderer;\n        this._group = group;\n        this._minimumWidth = options.minimumWidth;\n        this._minimumHeight = options.minimumHeight;\n        this._maximumWidth = options.maximumWidth;\n        this._maximumHeight = options.maximumHeight;\n        this.api = new DockviewPanelApiImpl(this, this._group, accessor, component, tabComponent);\n        this.addDisposables(this.api.onActiveChange(() => {\n            accessor.setActivePanel(this);\n        }), this.api.onDidSizeChange((event) => {\n            // forward the resize event to the group since if you want to resize a panel\n            // you are actually just resizing the panels parent which is the group\n            this.group.api.setSize(event);\n        }), this.api.onDidRendererChange(() => {\n            this.group.model.rerender(this);\n        }));\n    }\n    init(params) {\n        this._params = params.params;\n        this.view.init(Object.assign(Object.assign({}, params), { api: this.api, containerApi: this.containerApi }));\n        this.setTitle(params.title);\n    }\n    focus() {\n        const event = new WillFocusEvent();\n        this.api._onWillFocus.fire(event);\n        if (event.defaultPrevented) {\n            return;\n        }\n        if (!this.api.isActive) {\n            this.api.setActive();\n        }\n    }\n    toJSON() {\n        return {\n            id: this.id,\n            contentComponent: this.view.contentComponent,\n            tabComponent: this.view.tabComponent,\n            params: Object.keys(this._params || {}).length > 0\n                ? this._params\n                : undefined,\n            title: this.title,\n            renderer: this._renderer,\n            minimumHeight: this._minimumHeight,\n            maximumHeight: this._maximumHeight,\n            minimumWidth: this._minimumWidth,\n            maximumWidth: this._maximumWidth,\n        };\n    }\n    setTitle(title) {\n        const didTitleChange = title !== this.title;\n        if (didTitleChange) {\n            this._title = title;\n            this.api._onDidTitleChange.fire({ title });\n        }\n    }\n    setRenderer(renderer) {\n        const didChange = renderer !== this.renderer;\n        if (didChange) {\n            this._renderer = renderer;\n            this.api._onDidRendererChange.fire({\n                renderer: renderer,\n            });\n        }\n    }\n    update(event) {\n        var _a;\n        // merge the new parameters with the existing parameters\n        this._params = Object.assign(Object.assign({}, ((_a = this._params) !== null && _a !== void 0 ? _a : {})), event.params);\n        /**\n         * delete new keys that have a value of undefined,\n         * allow values of null\n         */\n        for (const key of Object.keys(event.params)) {\n            if (event.params[key] === undefined) {\n                delete this._params[key];\n            }\n        }\n        // update the view with the updated props\n        this.view.update({\n            params: this._params,\n        });\n    }\n    updateParentGroup(group, options) {\n        this._group = group;\n        this.api.group = this._group;\n        const isPanelVisible = this._group.model.isPanelActive(this);\n        const isActive = this.group.api.isActive && isPanelVisible;\n        if (!(options === null || options === void 0 ? void 0 : options.skipSetActive)) {\n            if (this.api.isActive !== isActive) {\n                this.api._onDidActiveChange.fire({\n                    isActive: this.group.api.isActive && isPanelVisible,\n                });\n            }\n        }\n        if (this.api.isVisible !== isPanelVisible) {\n            this.api._onDidVisibilityChange.fire({\n                isVisible: isPanelVisible,\n            });\n        }\n    }\n    runEvents() {\n        const isPanelVisible = this._group.model.isPanelActive(this);\n        const isActive = this.group.api.isActive && isPanelVisible;\n        if (this.api.isActive !== isActive) {\n            this.api._onDidActiveChange.fire({\n                isActive: this.group.api.isActive && isPanelVisible,\n            });\n        }\n        if (this.api.isVisible !== isPanelVisible) {\n            this.api._onDidVisibilityChange.fire({\n                isVisible: isPanelVisible,\n            });\n        }\n    }\n    layout(width, height) {\n        // TODO: Can we somehow do height without header height or indicate what the header height is?\n        this.api._onDidDimensionChange.fire({\n            width,\n            height: height,\n        });\n        this.view.layout(width, height);\n    }\n    dispose() {\n        this.api.dispose();\n        this.view.dispose();\n    }\n}\n","const createSvgElementFromPath = (params) => {\n    const svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n    svg.setAttributeNS(null, 'height', params.height);\n    svg.setAttributeNS(null, 'width', params.width);\n    svg.setAttributeNS(null, 'viewBox', params.viewbox);\n    svg.setAttributeNS(null, 'aria-hidden', 'false');\n    svg.setAttributeNS(null, 'focusable', 'false');\n    svg.classList.add('dv-svg');\n    const path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n    path.setAttributeNS(null, 'd', params.path);\n    svg.appendChild(path);\n    return svg;\n};\nexport const createCloseButton = () => createSvgElementFromPath({\n    width: '11',\n    height: '11',\n    viewbox: '0 0 28 28',\n    path: 'M2.1 27.3L0 25.2L11.55 13.65L0 2.1L2.1 0L13.65 11.55L25.2 0L27.3 2.1L15.75 13.65L27.3 25.2L25.2 27.3L13.65 15.75L2.1 27.3Z',\n});\nexport const createExpandMoreButton = () => createSvgElementFromPath({\n    width: '11',\n    height: '11',\n    viewbox: '0 0 24 15',\n    path: 'M12 14.15L0 2.15L2.15 0L12 9.9L21.85 0.0499992L24 2.2L12 14.15Z',\n});\nexport const createChevronRightButton = () => createSvgElementFromPath({\n    width: '11',\n    height: '11',\n    viewbox: '0 0 15 25',\n    path: 'M2.15 24.1L0 21.95L9.9 12.05L0 2.15L2.15 0L14.2 12.05L2.15 24.1Z',\n});\n","import { CompositeDisposable } from '../../../lifecycle';\nimport { addDisposableListener } from '../../../events';\nimport { createCloseButton } from '../../../svg';\nexport class DefaultTab extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor() {\n        super();\n        this._element = document.createElement('div');\n        this._element.className = 'dv-default-tab';\n        this._content = document.createElement('div');\n        this._content.className = 'dv-default-tab-content';\n        this.action = document.createElement('div');\n        this.action.className = 'dv-default-tab-action';\n        this.action.appendChild(createCloseButton());\n        this._element.appendChild(this._content);\n        this._element.appendChild(this.action);\n        this.addDisposables(addDisposableListener(this.action, 'pointerdown', (ev) => {\n            ev.preventDefault();\n        }));\n        this.render();\n    }\n    init(params) {\n        this._title = params.title;\n        this.addDisposables(params.api.onDidTitleChange((event) => {\n            this._title = event.title;\n            this.render();\n        }), addDisposableListener(this.action, 'pointerdown', (ev) => {\n            ev.preventDefault();\n        }), addDisposableListener(this.action, 'click', (ev) => {\n            if (ev.defaultPrevented) {\n                return;\n            }\n            ev.preventDefault();\n            params.api.close();\n        }));\n        this.render();\n    }\n    render() {\n        var _a;\n        if (this._content.textContent !== this._title) {\n            this._content.textContent = (_a = this._title) !== null && _a !== void 0 ? _a : '';\n        }\n    }\n}\n","import { DefaultTab } from './components/tab/defaultTab';\nexport class DockviewPanelModel {\n    get content() {\n        return this._content;\n    }\n    get tab() {\n        return this._tab;\n    }\n    constructor(accessor, id, contentComponent, tabComponent) {\n        this.accessor = accessor;\n        this.id = id;\n        this.contentComponent = contentComponent;\n        this.tabComponent = tabComponent;\n        this._content = this.createContentComponent(this.id, contentComponent);\n        this._tab = this.createTabComponent(this.id, tabComponent);\n    }\n    init(params) {\n        this.content.init(params);\n        this.tab.init(params);\n    }\n    updateParentGroup(_group, _isPanelVisible) {\n        // noop\n    }\n    layout(width, height) {\n        var _a, _b;\n        (_b = (_a = this.content).layout) === null || _b === void 0 ? void 0 : _b.call(_a, width, height);\n    }\n    update(event) {\n        var _a, _b, _c, _d;\n        (_b = (_a = this.content).update) === null || _b === void 0 ? void 0 : _b.call(_a, event);\n        (_d = (_c = this.tab).update) === null || _d === void 0 ? void 0 : _d.call(_c, event);\n    }\n    dispose() {\n        var _a, _b, _c, _d;\n        (_b = (_a = this.content).dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n        (_d = (_c = this.tab).dispose) === null || _d === void 0 ? void 0 : _d.call(_c);\n    }\n    createContentComponent(id, componentName) {\n        return this.accessor.options.createComponent({\n            id,\n            name: componentName,\n        });\n    }\n    createTabComponent(id, componentName) {\n        const name = componentName !== null && componentName !== void 0 ? componentName : this.accessor.options.defaultTabComponent;\n        if (name) {\n            if (this.accessor.options.createTabComponent) {\n                const component = this.accessor.options.createTabComponent({\n                    id,\n                    name,\n                });\n                if (component) {\n                    return component;\n                }\n                else {\n                    return new DefaultTab();\n                }\n            }\n            console.warn(`dockview: tabComponent '${componentName}' was not found. falling back to the default tab.`);\n        }\n        return new DefaultTab();\n    }\n}\n","import { DockviewPanel } from './dockviewPanel';\nimport { DockviewPanelModel } from './dockviewPanelModel';\nimport { DockviewApi } from '../api/component.api';\nexport class DefaultDockviewDeserialzier {\n    constructor(accessor) {\n        this.accessor = accessor;\n    }\n    fromJSON(panelData, group) {\n        var _a, _b;\n        const panelId = panelData.id;\n        const params = panelData.params;\n        const title = panelData.title;\n        const viewData = panelData.view;\n        const contentComponent = viewData\n            ? viewData.content.id\n            : (_a = panelData.contentComponent) !== null && _a !== void 0 ? _a : 'unknown';\n        const tabComponent = viewData\n            ? (_b = viewData.tab) === null || _b === void 0 ? void 0 : _b.id\n            : panelData.tabComponent;\n        const view = new DockviewPanelModel(this.accessor, panelId, contentComponent, tabComponent);\n        const panel = new DockviewPanel(panelId, contentComponent, tabComponent, this.accessor, new DockviewApi(this.accessor), group, view, {\n            renderer: panelData.renderer,\n            minimumWidth: panelData.minimumWidth,\n            minimumHeight: panelData.minimumHeight,\n            maximumWidth: panelData.maximumWidth,\n            maximumHeight: panelData.maximumHeight,\n        });\n        panel.init({\n            title: title !== null && title !== void 0 ? title : panelId,\n            params: params !== null && params !== void 0 ? params : {},\n        });\n        return panel;\n    }\n}\n","import { CompositeDisposable } from '../../../lifecycle';\nexport class Watermark extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor() {\n        super();\n        this._element = document.createElement('div');\n        this._element.className = 'dv-watermark';\n    }\n    init(_params) {\n        // noop\n    }\n}\n","import { disableIframePointEvents, quasiDefaultPrevented, toggleClass, } from '../dom';\nimport { Emitter, addDisposableListener, addDisposableWindowListener, } from '../events';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nimport { clamp } from '../math';\nclass AriaLevelTracker {\n    constructor() {\n        this._orderedList = [];\n    }\n    push(element) {\n        this._orderedList = [\n            ...this._orderedList.filter((item) => item !== element),\n            element,\n        ];\n        this.update();\n    }\n    destroy(element) {\n        this._orderedList = this._orderedList.filter((item) => item !== element);\n        this.update();\n    }\n    update() {\n        for (let i = 0; i < this._orderedList.length; i++) {\n            this._orderedList[i].setAttribute('aria-level', `${i}`);\n            this._orderedList[i].style.zIndex = `calc(var(--dv-overlay-z-index, 999) + ${i * 2})`;\n        }\n    }\n}\nconst arialLevelTracker = new AriaLevelTracker();\nexport class Overlay extends CompositeDisposable {\n    set minimumInViewportWidth(value) {\n        this.options.minimumInViewportWidth = value;\n    }\n    set minimumInViewportHeight(value) {\n        this.options.minimumInViewportHeight = value;\n    }\n    get element() {\n        return this._element;\n    }\n    get isVisible() {\n        return this._isVisible;\n    }\n    constructor(options) {\n        super();\n        this.options = options;\n        this._element = document.createElement('div');\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._onDidChangeEnd = new Emitter();\n        this.onDidChangeEnd = this._onDidChangeEnd.event;\n        this.addDisposables(this._onDidChange, this._onDidChangeEnd);\n        this._element.className = 'dv-resize-container';\n        this._isVisible = true;\n        this.setupResize('top');\n        this.setupResize('bottom');\n        this.setupResize('left');\n        this.setupResize('right');\n        this.setupResize('topleft');\n        this.setupResize('topright');\n        this.setupResize('bottomleft');\n        this.setupResize('bottomright');\n        this._element.appendChild(this.options.content);\n        this.options.container.appendChild(this._element);\n        // if input bad resize within acceptable boundaries\n        this.setBounds(Object.assign(Object.assign(Object.assign(Object.assign({ height: this.options.height, width: this.options.width }, ('top' in this.options && { top: this.options.top })), ('bottom' in this.options && { bottom: this.options.bottom })), ('left' in this.options && { left: this.options.left })), ('right' in this.options && { right: this.options.right })));\n        arialLevelTracker.push(this._element);\n    }\n    setVisible(isVisible) {\n        if (isVisible === this.isVisible) {\n            return;\n        }\n        this._isVisible = isVisible;\n        toggleClass(this.element, 'dv-hidden', !this.isVisible);\n    }\n    bringToFront() {\n        arialLevelTracker.push(this._element);\n    }\n    setBounds(bounds = {}) {\n        if (typeof bounds.height === 'number') {\n            this._element.style.height = `${bounds.height}px`;\n        }\n        if (typeof bounds.width === 'number') {\n            this._element.style.width = `${bounds.width}px`;\n        }\n        if ('top' in bounds && typeof bounds.top === 'number') {\n            this._element.style.top = `${bounds.top}px`;\n            this._element.style.bottom = 'auto';\n            this.verticalAlignment = 'top';\n        }\n        if ('bottom' in bounds && typeof bounds.bottom === 'number') {\n            this._element.style.bottom = `${bounds.bottom}px`;\n            this._element.style.top = 'auto';\n            this.verticalAlignment = 'bottom';\n        }\n        if ('left' in bounds && typeof bounds.left === 'number') {\n            this._element.style.left = `${bounds.left}px`;\n            this._element.style.right = 'auto';\n            this.horiziontalAlignment = 'left';\n        }\n        if ('right' in bounds && typeof bounds.right === 'number') {\n            this._element.style.right = `${bounds.right}px`;\n            this._element.style.left = 'auto';\n            this.horiziontalAlignment = 'right';\n        }\n        const containerRect = this.options.container.getBoundingClientRect();\n        const overlayRect = this._element.getBoundingClientRect();\n        // region: ensure bounds within allowable limits\n        // a minimum width of minimumViewportWidth must be inside the viewport\n        const xOffset = Math.max(0, this.getMinimumWidth(overlayRect.width));\n        // a minimum height of minimumViewportHeight must be inside the viewport\n        const yOffset = Math.max(0, this.getMinimumHeight(overlayRect.height));\n        if (this.verticalAlignment === 'top') {\n            const top = clamp(overlayRect.top - containerRect.top, -yOffset, Math.max(0, containerRect.height - overlayRect.height + yOffset));\n            this._element.style.top = `${top}px`;\n            this._element.style.bottom = 'auto';\n        }\n        if (this.verticalAlignment === 'bottom') {\n            const bottom = clamp(containerRect.bottom - overlayRect.bottom, -yOffset, Math.max(0, containerRect.height - overlayRect.height + yOffset));\n            this._element.style.bottom = `${bottom}px`;\n            this._element.style.top = 'auto';\n        }\n        if (this.horiziontalAlignment === 'left') {\n            const left = clamp(overlayRect.left - containerRect.left, -xOffset, Math.max(0, containerRect.width - overlayRect.width + xOffset));\n            this._element.style.left = `${left}px`;\n            this._element.style.right = 'auto';\n        }\n        if (this.horiziontalAlignment === 'right') {\n            const right = clamp(containerRect.right - overlayRect.right, -xOffset, Math.max(0, containerRect.width - overlayRect.width + xOffset));\n            this._element.style.right = `${right}px`;\n            this._element.style.left = 'auto';\n        }\n        this._onDidChange.fire();\n    }\n    toJSON() {\n        const container = this.options.container.getBoundingClientRect();\n        const element = this._element.getBoundingClientRect();\n        const result = {};\n        if (this.verticalAlignment === 'top') {\n            result.top = parseFloat(this._element.style.top);\n        }\n        else if (this.verticalAlignment === 'bottom') {\n            result.bottom = parseFloat(this._element.style.bottom);\n        }\n        else {\n            result.top = element.top - container.top;\n        }\n        if (this.horiziontalAlignment === 'left') {\n            result.left = parseFloat(this._element.style.left);\n        }\n        else if (this.horiziontalAlignment === 'right') {\n            result.right = parseFloat(this._element.style.right);\n        }\n        else {\n            result.left = element.left - container.left;\n        }\n        result.width = element.width;\n        result.height = element.height;\n        return result;\n    }\n    setupDrag(dragTarget, options = { inDragMode: false }) {\n        const move = new MutableDisposable();\n        const track = () => {\n            let offset = null;\n            const iframes = disableIframePointEvents();\n            move.value = new CompositeDisposable({\n                dispose: () => {\n                    iframes.release();\n                },\n            }, addDisposableWindowListener(window, 'pointermove', (e) => {\n                const containerRect = this.options.container.getBoundingClientRect();\n                const x = e.clientX - containerRect.left;\n                const y = e.clientY - containerRect.top;\n                toggleClass(this._element, 'dv-resize-container-dragging', true);\n                const overlayRect = this._element.getBoundingClientRect();\n                if (offset === null) {\n                    offset = {\n                        x: e.clientX - overlayRect.left,\n                        y: e.clientY - overlayRect.top,\n                    };\n                }\n                const xOffset = Math.max(0, this.getMinimumWidth(overlayRect.width));\n                const yOffset = Math.max(0, this.getMinimumHeight(overlayRect.height));\n                const top = clamp(y - offset.y, -yOffset, Math.max(0, containerRect.height - overlayRect.height + yOffset));\n                const bottom = clamp(offset.y -\n                    y +\n                    containerRect.height -\n                    overlayRect.height, -yOffset, Math.max(0, containerRect.height - overlayRect.height + yOffset));\n                const left = clamp(x - offset.x, -xOffset, Math.max(0, containerRect.width - overlayRect.width + xOffset));\n                const right = clamp(offset.x - x + containerRect.width - overlayRect.width, -xOffset, Math.max(0, containerRect.width - overlayRect.width + xOffset));\n                const bounds = {};\n                // Anchor to top or to bottom depending on which one is closer\n                if (top <= bottom) {\n                    bounds.top = top;\n                }\n                else {\n                    bounds.bottom = bottom;\n                }\n                // Anchor to left or to right depending on which one is closer\n                if (left <= right) {\n                    bounds.left = left;\n                }\n                else {\n                    bounds.right = right;\n                }\n                this.setBounds(bounds);\n            }), addDisposableWindowListener(window, 'pointerup', () => {\n                toggleClass(this._element, 'dv-resize-container-dragging', false);\n                move.dispose();\n                this._onDidChangeEnd.fire();\n            }));\n        };\n        this.addDisposables(move, addDisposableListener(dragTarget, 'pointerdown', (event) => {\n            if (event.defaultPrevented) {\n                event.preventDefault();\n                return;\n            }\n            // if somebody has marked this event then treat as a defaultPrevented\n            // without actually calling event.preventDefault()\n            if (quasiDefaultPrevented(event)) {\n                return;\n            }\n            track();\n        }), addDisposableListener(this.options.content, 'pointerdown', (event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            // if somebody has marked this event then treat as a defaultPrevented\n            // without actually calling event.preventDefault()\n            if (quasiDefaultPrevented(event)) {\n                return;\n            }\n            if (event.shiftKey) {\n                track();\n            }\n        }), addDisposableListener(this.options.content, 'pointerdown', () => {\n            arialLevelTracker.push(this._element);\n        }, true));\n        if (options.inDragMode) {\n            track();\n        }\n    }\n    setupResize(direction) {\n        const resizeHandleElement = document.createElement('div');\n        resizeHandleElement.className = `dv-resize-handle-${direction}`;\n        this._element.appendChild(resizeHandleElement);\n        const move = new MutableDisposable();\n        this.addDisposables(move, addDisposableListener(resizeHandleElement, 'pointerdown', (e) => {\n            e.preventDefault();\n            let startPosition = null;\n            const iframes = disableIframePointEvents();\n            move.value = new CompositeDisposable(addDisposableWindowListener(window, 'pointermove', (e) => {\n                const containerRect = this.options.container.getBoundingClientRect();\n                const overlayRect = this._element.getBoundingClientRect();\n                const y = e.clientY - containerRect.top;\n                const x = e.clientX - containerRect.left;\n                if (startPosition === null) {\n                    // record the initial dimensions since as all subsequence moves are relative to this\n                    startPosition = {\n                        originalY: y,\n                        originalHeight: overlayRect.height,\n                        originalX: x,\n                        originalWidth: overlayRect.width,\n                    };\n                }\n                let top = undefined;\n                let bottom = undefined;\n                let height = undefined;\n                let left = undefined;\n                let right = undefined;\n                let width = undefined;\n                const moveTop = () => {\n                    top = clamp(y, -Number.MAX_VALUE, startPosition.originalY +\n                        startPosition.originalHeight >\n                        containerRect.height\n                        ? this.getMinimumHeight(containerRect.height)\n                        : Math.max(0, startPosition.originalY +\n                            startPosition.originalHeight -\n                            Overlay.MINIMUM_HEIGHT));\n                    height =\n                        startPosition.originalY +\n                            startPosition.originalHeight -\n                            top;\n                    bottom = containerRect.height - top - height;\n                };\n                const moveBottom = () => {\n                    top =\n                        startPosition.originalY -\n                            startPosition.originalHeight;\n                    height = clamp(y - top, top < 0 &&\n                        typeof this.options\n                            .minimumInViewportHeight === 'number'\n                        ? -top +\n                            this.options.minimumInViewportHeight\n                        : Overlay.MINIMUM_HEIGHT, Number.MAX_VALUE);\n                    bottom = containerRect.height - top - height;\n                };\n                const moveLeft = () => {\n                    left = clamp(x, -Number.MAX_VALUE, startPosition.originalX +\n                        startPosition.originalWidth >\n                        containerRect.width\n                        ? this.getMinimumWidth(containerRect.width)\n                        : Math.max(0, startPosition.originalX +\n                            startPosition.originalWidth -\n                            Overlay.MINIMUM_WIDTH));\n                    width =\n                        startPosition.originalX +\n                            startPosition.originalWidth -\n                            left;\n                    right = containerRect.width - left - width;\n                };\n                const moveRight = () => {\n                    left =\n                        startPosition.originalX -\n                            startPosition.originalWidth;\n                    width = clamp(x - left, left < 0 &&\n                        typeof this.options\n                            .minimumInViewportWidth === 'number'\n                        ? -left +\n                            this.options.minimumInViewportWidth\n                        : Overlay.MINIMUM_WIDTH, Number.MAX_VALUE);\n                    right = containerRect.width - left - width;\n                };\n                switch (direction) {\n                    case 'top':\n                        moveTop();\n                        break;\n                    case 'bottom':\n                        moveBottom();\n                        break;\n                    case 'left':\n                        moveLeft();\n                        break;\n                    case 'right':\n                        moveRight();\n                        break;\n                    case 'topleft':\n                        moveTop();\n                        moveLeft();\n                        break;\n                    case 'topright':\n                        moveTop();\n                        moveRight();\n                        break;\n                    case 'bottomleft':\n                        moveBottom();\n                        moveLeft();\n                        break;\n                    case 'bottomright':\n                        moveBottom();\n                        moveRight();\n                        break;\n                }\n                const bounds = {};\n                // Anchor to top or to bottom depending on which one is closer\n                if (top <= bottom) {\n                    bounds.top = top;\n                }\n                else {\n                    bounds.bottom = bottom;\n                }\n                // Anchor to left or to right depending on which one is closer\n                if (left <= right) {\n                    bounds.left = left;\n                }\n                else {\n                    bounds.right = right;\n                }\n                bounds.height = height;\n                bounds.width = width;\n                this.setBounds(bounds);\n            }), {\n                dispose: () => {\n                    iframes.release();\n                },\n            }, addDisposableWindowListener(window, 'pointerup', () => {\n                move.dispose();\n                this._onDidChangeEnd.fire();\n            }));\n        }));\n    }\n    getMinimumWidth(width) {\n        if (typeof this.options.minimumInViewportWidth === 'number') {\n            return width - this.options.minimumInViewportWidth;\n        }\n        return 0;\n    }\n    getMinimumHeight(height) {\n        if (typeof this.options.minimumInViewportHeight === 'number') {\n            return height - this.options.minimumInViewportHeight;\n        }\n        return 0;\n    }\n    dispose() {\n        arialLevelTracker.destroy(this._element);\n        this._element.remove();\n        super.dispose();\n    }\n}\nOverlay.MINIMUM_HEIGHT = 20;\nOverlay.MINIMUM_WIDTH = 20;\n","import { CompositeDisposable } from '../lifecycle';\nexport class DockviewFloatingGroupPanel extends CompositeDisposable {\n    constructor(group, overlay) {\n        super();\n        this.group = group;\n        this.overlay = overlay;\n        this.addDisposables(overlay);\n    }\n    position(bounds) {\n        this.overlay.setBounds(bounds);\n    }\n}\n","export const DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE = 100;\nexport const DEFAULT_FLOATING_GROUP_POSITION = { left: 100, top: 100, width: 300, height: 300 };\n","import { DragAndDropObserver } from '../dnd/dnd';\nimport { getDomNodePagePosition, toggleClass } from '../dom';\nimport { CompositeDisposable, Disposable, MutableDisposable, } from '../lifecycle';\nfunction createFocusableElement() {\n    const element = document.createElement('div');\n    element.tabIndex = -1;\n    return element;\n}\nexport class OverlayRenderContainer extends CompositeDisposable {\n    constructor(element, accessor) {\n        super();\n        this.element = element;\n        this.accessor = accessor;\n        this.map = {};\n        this._disposed = false;\n        this.addDisposables(Disposable.from(() => {\n            for (const value of Object.values(this.map)) {\n                value.disposable.dispose();\n                value.destroy.dispose();\n            }\n            this._disposed = true;\n        }));\n    }\n    detatch(panel) {\n        if (this.map[panel.api.id]) {\n            const { disposable, destroy } = this.map[panel.api.id];\n            disposable.dispose();\n            destroy.dispose();\n            delete this.map[panel.api.id];\n            return true;\n        }\n        return false;\n    }\n    attach(options) {\n        const { panel, referenceContainer } = options;\n        if (!this.map[panel.api.id]) {\n            const element = createFocusableElement();\n            element.className = 'dv-render-overlay';\n            this.map[panel.api.id] = {\n                panel,\n                disposable: Disposable.NONE,\n                destroy: Disposable.NONE,\n                element,\n            };\n        }\n        const focusContainer = this.map[panel.api.id].element;\n        if (panel.view.content.element.parentElement !== focusContainer) {\n            focusContainer.appendChild(panel.view.content.element);\n        }\n        if (focusContainer.parentElement !== this.element) {\n            this.element.appendChild(focusContainer);\n        }\n        const resize = () => {\n            // TODO propagate position to avoid getDomNodePagePosition calls, possible performance bottleneck?\n            const box = getDomNodePagePosition(referenceContainer.element);\n            const box2 = getDomNodePagePosition(this.element);\n            focusContainer.style.left = `${box.left - box2.left}px`;\n            focusContainer.style.top = `${box.top - box2.top}px`;\n            focusContainer.style.width = `${box.width}px`;\n            focusContainer.style.height = `${box.height}px`;\n            toggleClass(focusContainer, 'dv-render-overlay-float', panel.group.api.location.type === 'floating');\n        };\n        const visibilityChanged = () => {\n            if (panel.api.isVisible) {\n                resize();\n            }\n            focusContainer.style.display = panel.api.isVisible ? '' : 'none';\n        };\n        const observerDisposable = new MutableDisposable();\n        const correctLayerPosition = () => {\n            if (panel.api.location.type === 'floating') {\n                queueMicrotask(() => {\n                    const floatingGroup = this.accessor.floatingGroups.find((group) => group.group === panel.api.group);\n                    if (!floatingGroup) {\n                        return;\n                    }\n                    const element = floatingGroup.overlay.element;\n                    const update = () => {\n                        const level = Number(element.getAttribute('aria-level'));\n                        focusContainer.style.zIndex = `calc(var(--dv-overlay-z-index, 999) + ${level * 2 + 1})`;\n                    };\n                    const observer = new MutationObserver(() => {\n                        update();\n                    });\n                    observerDisposable.value = Disposable.from(() => observer.disconnect());\n                    observer.observe(element, {\n                        attributeFilter: ['aria-level'],\n                        attributes: true,\n                    });\n                    update();\n                });\n            }\n            else {\n                focusContainer.style.zIndex = ''; // reset the z-index, perhaps CSS will take over here\n            }\n        };\n        const disposable = new CompositeDisposable(observerDisposable, \n        /**\n         * since container is positioned absoutely we must explicitly forward\n         * the dnd events for the expect behaviours to continue to occur in terms of dnd\n         *\n         * the dnd observer does not need to be conditional on whether the panel is visible since\n         * non-visible panels are 'display: none' and in such case the dnd observer will not fire.\n         */\n        new DragAndDropObserver(focusContainer, {\n            onDragEnd: (e) => {\n                referenceContainer.dropTarget.dnd.onDragEnd(e);\n            },\n            onDragEnter: (e) => {\n                referenceContainer.dropTarget.dnd.onDragEnter(e);\n            },\n            onDragLeave: (e) => {\n                referenceContainer.dropTarget.dnd.onDragLeave(e);\n            },\n            onDrop: (e) => {\n                referenceContainer.dropTarget.dnd.onDrop(e);\n            },\n            onDragOver: (e) => {\n                referenceContainer.dropTarget.dnd.onDragOver(e);\n            },\n        }), panel.api.onDidVisibilityChange(() => {\n            /**\n             * Control the visibility of the content, however even when not visible (display: none)\n             * the content is still maintained within the DOM hence DOM specific attributes\n             * such as scroll position are maintained when next made visible.\n             */\n            visibilityChanged();\n        }), panel.api.onDidDimensionsChange(() => {\n            if (!panel.api.isVisible) {\n                return;\n            }\n            resize();\n        }), panel.api.onDidLocationChange(() => {\n            correctLayerPosition();\n        }));\n        this.map[panel.api.id].destroy = Disposable.from(() => {\n            var _a;\n            if (panel.view.content.element.parentElement === focusContainer) {\n                focusContainer.removeChild(panel.view.content.element);\n            }\n            (_a = focusContainer.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(focusContainer);\n        });\n        correctLayerPosition();\n        queueMicrotask(() => {\n            if (this.isDisposed) {\n                return;\n            }\n            /**\n             * wait until everything has finished in the current stack-frame call before\n             * calling the first resize as other size-altering events may still occur before\n             * the end of the stack-frame.\n             */\n            visibilityChanged();\n        });\n        // dispose of logic asoccciated with previous reference-container\n        this.map[panel.api.id].disposable.dispose();\n        // and reset the disposable to the active reference-container\n        this.map[panel.api.id].disposable = disposable;\n        return focusContainer;\n    }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { addStyles } from './dom';\nimport { Emitter, addDisposableWindowListener } from './events';\nimport { CompositeDisposable, Disposable } from './lifecycle';\nexport class PopoutWindow extends CompositeDisposable {\n    get window() {\n        var _a, _b;\n        return (_b = (_a = this._window) === null || _a === void 0 ? void 0 : _a.value) !== null && _b !== void 0 ? _b : null;\n    }\n    constructor(target, className, options) {\n        super();\n        this.target = target;\n        this.className = className;\n        this.options = options;\n        this._onWillClose = new Emitter();\n        this.onWillClose = this._onWillClose.event;\n        this._onDidClose = new Emitter();\n        this.onDidClose = this._onDidClose.event;\n        this._window = null;\n        this.addDisposables(this._onWillClose, this._onDidClose, {\n            dispose: () => {\n                this.close();\n            },\n        });\n    }\n    dimensions() {\n        if (!this._window) {\n            return null;\n        }\n        const left = this._window.value.screenX;\n        const top = this._window.value.screenY;\n        const width = this._window.value.innerWidth;\n        const height = this._window.value.innerHeight;\n        return { top, left, width, height };\n    }\n    close() {\n        var _a, _b;\n        if (this._window) {\n            this._onWillClose.fire();\n            (_b = (_a = this.options).onWillClose) === null || _b === void 0 ? void 0 : _b.call(_a, {\n                id: this.target,\n                window: this._window.value,\n            });\n            this._window.disposable.dispose();\n            this._window = null;\n            this._onDidClose.fire();\n        }\n    }\n    open() {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this._window) {\n                throw new Error('instance of popout window is already open');\n            }\n            const url = `${this.options.url}`;\n            const features = Object.entries({\n                top: this.options.top,\n                left: this.options.left,\n                width: this.options.width,\n                height: this.options.height,\n            })\n                .map(([key, value]) => `${key}=${value}`)\n                .join(',');\n            /**\n             * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/open\n             */\n            const externalWindow = window.open(url, this.target, features);\n            if (!externalWindow) {\n                /**\n                 * Popup blocked\n                 */\n                return null;\n            }\n            const disposable = new CompositeDisposable();\n            this._window = { value: externalWindow, disposable };\n            disposable.addDisposables(Disposable.from(() => {\n                externalWindow.close();\n            }), addDisposableWindowListener(window, 'beforeunload', () => {\n                /**\n                 * before the main window closes we should close this popup too\n                 * to be good citizens\n                 *\n                 * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/beforeunload_event\n                 */\n                this.close();\n            }));\n            const container = this.createPopoutWindowContainer();\n            if (this.className) {\n                container.classList.add(this.className);\n            }\n            (_b = (_a = this.options).onDidOpen) === null || _b === void 0 ? void 0 : _b.call(_a, {\n                id: this.target,\n                window: externalWindow,\n            });\n            return new Promise((resolve, reject) => {\n                externalWindow.addEventListener('unload', (e) => {\n                    // if page fails to load before unloading\n                    // this.close();\n                });\n                externalWindow.addEventListener('load', () => {\n                    /**\n                     * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/load_event\n                     */\n                    try {\n                        const externalDocument = externalWindow.document;\n                        externalDocument.title = document.title;\n                        externalDocument.body.appendChild(container);\n                        addStyles(externalDocument, window.document.styleSheets);\n                        /**\n                         * beforeunload must be registered after load for reasons I could not determine\n                         * otherwise the beforeunload event will not fire when the window is closed\n                         */\n                        addDisposableWindowListener(externalWindow, 'beforeunload', () => {\n                            /**\n                             * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/beforeunload_event\n                             */\n                            this.close();\n                        });\n                        resolve(container);\n                    }\n                    catch (err) {\n                        // only except this is the DOM isn't setup. e.g. in a in correctly configured test\n                        reject(err);\n                    }\n                });\n            });\n        });\n    }\n    createPopoutWindowContainer() {\n        const el = document.createElement('div');\n        el.classList.add('dv-popout-window');\n        el.id = 'dv-popout-window';\n        el.style.position = 'absolute';\n        el.style.width = '100%';\n        el.style.height = '100%';\n        el.style.top = '0px';\n        el.style.left = '0px';\n        return el;\n    }\n}\n","import { getRelativeLocation, getGridLocation, orthogonal, } from '../gridview/gridview';\nimport { directionToPosition, Droptarget, } from '../dnd/droptarget';\nimport { tail, sequenceEquals, remove } from '../array';\nimport { DockviewPanel } from './dockviewPanel';\nimport { CompositeDisposable, Disposable } from '../lifecycle';\nimport { Event, Emitter, addDisposableWindowListener } from '../events';\nimport { Watermark } from './components/watermark/watermark';\nimport { sequentialNumberGenerator } from '../math';\nimport { DefaultDockviewDeserialzier } from './deserializer';\nimport { DockviewUnhandledDragOverEvent, isGroupOptionsWithGroup, isGroupOptionsWithPanel, isPanelOptionsWithGroup, isPanelOptionsWithPanel, } from './options';\nimport { BaseGrid, toTarget, } from '../gridview/baseComponentGridview';\nimport { DockviewApi } from '../api/component.api';\nimport { Orientation } from '../splitview/splitview';\nimport { DockviewDidDropEvent, DockviewWillDropEvent, WillShowOverlayLocationEvent, } from './dockviewGroupPanelModel';\nimport { DockviewGroupPanel } from './dockviewGroupPanel';\nimport { DockviewPanelModel } from './dockviewPanelModel';\nimport { getPanelData } from '../dnd/dataTransfer';\nimport { Overlay } from '../overlay/overlay';\nimport { addTestId, getDockviewTheme, toggleClass, watchElementResize, } from '../dom';\nimport { DockviewFloatingGroupPanel } from './dockviewFloatingGroupPanel';\nimport { DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE, DEFAULT_FLOATING_GROUP_POSITION, } from '../constants';\nimport { OverlayRenderContainer, } from '../overlay/overlayRenderContainer';\nimport { PopoutWindow } from '../popoutWindow';\nconst DEFAULT_ROOT_OVERLAY_MODEL = {\n    activationSize: { type: 'pixels', value: 10 },\n    size: { type: 'pixels', value: 20 },\n};\nfunction moveGroupWithoutDestroying(options) {\n    const activePanel = options.from.activePanel;\n    const panels = [...options.from.panels].map((panel) => {\n        const removedPanel = options.from.model.removePanel(panel);\n        options.from.model.renderContainer.detatch(panel);\n        return removedPanel;\n    });\n    panels.forEach((panel) => {\n        options.to.model.openPanel(panel, {\n            skipSetActive: activePanel !== panel,\n            skipSetGroupActive: true,\n        });\n    });\n}\nexport class DockviewComponent extends BaseGrid {\n    get orientation() {\n        return this.gridview.orientation;\n    }\n    get totalPanels() {\n        return this.panels.length;\n    }\n    get panels() {\n        return this.groups.flatMap((group) => group.panels);\n    }\n    get options() {\n        return this._options;\n    }\n    get activePanel() {\n        const activeGroup = this.activeGroup;\n        if (!activeGroup) {\n            return undefined;\n        }\n        return activeGroup.activePanel;\n    }\n    get renderer() {\n        var _a;\n        return (_a = this.options.defaultRenderer) !== null && _a !== void 0 ? _a : 'onlyWhenVisible';\n    }\n    get api() {\n        return this._api;\n    }\n    get gap() {\n        return this.gridview.margin;\n    }\n    get floatingGroups() {\n        return this._floatingGroups;\n    }\n    constructor(parentElement, options) {\n        var _a;\n        super(parentElement, {\n            proportionalLayout: true,\n            orientation: Orientation.HORIZONTAL,\n            styles: options.hideBorders\n                ? { separatorBorder: 'transparent' }\n                : undefined,\n            disableAutoResizing: options.disableAutoResizing,\n            locked: options.locked,\n            margin: options.gap,\n            className: options.className,\n        });\n        this.nextGroupId = sequentialNumberGenerator();\n        this._deserializer = new DefaultDockviewDeserialzier(this);\n        this.watermark = null;\n        this._onWillDragPanel = new Emitter();\n        this.onWillDragPanel = this._onWillDragPanel.event;\n        this._onWillDragGroup = new Emitter();\n        this.onWillDragGroup = this._onWillDragGroup.event;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onWillDrop = new Emitter();\n        this.onWillDrop = this._onWillDrop.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        this._onUnhandledDragOverEvent = new Emitter();\n        this.onUnhandledDragOverEvent = this._onUnhandledDragOverEvent.event;\n        this._onDidRemovePanel = new Emitter();\n        this.onDidRemovePanel = this._onDidRemovePanel.event;\n        this._onDidAddPanel = new Emitter();\n        this.onDidAddPanel = this._onDidAddPanel.event;\n        this._onDidLayoutFromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutFromJSON.event;\n        this._onDidActivePanelChange = new Emitter();\n        this.onDidActivePanelChange = this._onDidActivePanelChange.event;\n        this._onDidMovePanel = new Emitter();\n        this.onDidMovePanel = this._onDidMovePanel.event;\n        this._onDidMaximizedGroupChange = new Emitter();\n        this.onDidMaximizedGroupChange = this._onDidMaximizedGroupChange.event;\n        this._floatingGroups = [];\n        this._popoutGroups = [];\n        this._onDidRemoveGroup = new Emitter();\n        this.onDidRemoveGroup = this._onDidRemoveGroup.event;\n        this._onDidAddGroup = new Emitter();\n        this.onDidAddGroup = this._onDidAddGroup.event;\n        this._onDidActiveGroupChange = new Emitter();\n        this.onDidActiveGroupChange = this._onDidActiveGroupChange.event;\n        this._moving = false;\n        this.overlayRenderContainer = new OverlayRenderContainer(this.gridview.element, this);\n        toggleClass(this.gridview.element, 'dv-dockview', true);\n        toggleClass(this.element, 'dv-debug', !!options.debug);\n        this.addDisposables(this.overlayRenderContainer, this._onWillDragPanel, this._onWillDragGroup, this._onWillShowOverlay, this._onDidActivePanelChange, this._onDidAddPanel, this._onDidRemovePanel, this._onDidLayoutFromJSON, this._onDidDrop, this._onWillDrop, this._onDidMovePanel, this._onDidAddGroup, this._onDidRemoveGroup, this._onDidActiveGroupChange, this._onUnhandledDragOverEvent, this.onDidViewVisibilityChangeMicroTaskQueue(() => {\n            this.updateWatermark();\n        }), this.onDidAdd((event) => {\n            if (!this._moving) {\n                this._onDidAddGroup.fire(event);\n            }\n        }), this.onDidRemove((event) => {\n            if (!this._moving) {\n                this._onDidRemoveGroup.fire(event);\n            }\n        }), this.onDidActiveChange((event) => {\n            if (!this._moving) {\n                this._onDidActiveGroupChange.fire(event);\n            }\n        }), this.onDidMaximizedChange((event) => {\n            this._onDidMaximizedGroupChange.fire({\n                group: event.panel,\n                isMaximized: event.isMaximized,\n            });\n        }), Event.any(this.onDidAdd, this.onDidRemove)(() => {\n            this.updateWatermark();\n        }), Event.any(this.onDidAddPanel, this.onDidRemovePanel, this.onDidAddGroup, this.onDidRemove, this.onDidMovePanel, this.onDidActivePanelChange)(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), Disposable.from(() => {\n            // iterate over a copy of the array since .dispose() mutates the original array\n            for (const group of [...this._floatingGroups]) {\n                group.dispose();\n            }\n            // iterate over a copy of the array since .dispose() mutates the original array\n            for (const group of [...this._popoutGroups]) {\n                group.disposable.dispose();\n            }\n        }));\n        this._options = options;\n        this._rootDropTarget = new Droptarget(this.element, {\n            canDisplayOverlay: (event, position) => {\n                const data = getPanelData();\n                if (data) {\n                    if (data.viewId !== this.id) {\n                        return false;\n                    }\n                    if (position === 'center') {\n                        // center drop target is only allowed if there are no panels in the grid\n                        // floating panels are allowed\n                        return this.gridview.length === 0;\n                    }\n                    return true;\n                }\n                if (position === 'center' && this.gridview.length !== 0) {\n                    /**\n                     * for external events only show the four-corner drag overlays, disable\n                     * the center position so that external drag events can fall through to the group\n                     * and panel drop target handlers\n                     */\n                    return false;\n                }\n                const firedEvent = new DockviewUnhandledDragOverEvent(event, 'edge', position, getPanelData);\n                this._onUnhandledDragOverEvent.fire(firedEvent);\n                return firedEvent.isAccepted;\n            },\n            acceptedTargetZones: ['top', 'bottom', 'left', 'right', 'center'],\n            overlayModel: (_a = this.options.rootOverlayModel) !== null && _a !== void 0 ? _a : DEFAULT_ROOT_OVERLAY_MODEL,\n        });\n        this.addDisposables(this._rootDropTarget, this._rootDropTarget.onWillShowOverlay((event) => {\n            if (this.gridview.length > 0 && event.position === 'center') {\n                // option only available when no panels in primary grid\n                return;\n            }\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'edge',\n                panel: undefined,\n                api: this._api,\n                group: undefined,\n                getData: getPanelData,\n            }));\n        }), this._rootDropTarget.onDrop((event) => {\n            var _a;\n            const willDropEvent = new DockviewWillDropEvent({\n                nativeEvent: event.nativeEvent,\n                position: event.position,\n                panel: undefined,\n                api: this._api,\n                group: undefined,\n                getData: getPanelData,\n                kind: 'edge',\n            });\n            this._onWillDrop.fire(willDropEvent);\n            if (willDropEvent.defaultPrevented) {\n                return;\n            }\n            const data = getPanelData();\n            if (data) {\n                this.moveGroupOrPanel({\n                    from: {\n                        groupId: data.groupId,\n                        panelId: (_a = data.panelId) !== null && _a !== void 0 ? _a : undefined,\n                    },\n                    to: {\n                        group: this.orthogonalize(event.position),\n                        position: 'center',\n                    },\n                });\n            }\n            else {\n                this._onDidDrop.fire(new DockviewDidDropEvent({\n                    nativeEvent: event.nativeEvent,\n                    position: event.position,\n                    panel: undefined,\n                    api: this._api,\n                    group: undefined,\n                    getData: getPanelData,\n                }));\n            }\n        }), this._rootDropTarget);\n        this._api = new DockviewApi(this);\n        this.updateWatermark();\n    }\n    setVisible(panel, visible) {\n        switch (panel.api.location.type) {\n            case 'grid':\n                super.setVisible(panel, visible);\n                break;\n            case 'floating': {\n                const item = this.floatingGroups.find((floatingGroup) => floatingGroup.group === panel);\n                if (item) {\n                    item.overlay.setVisible(visible);\n                    panel.api._onDidVisibilityChange.fire({\n                        isVisible: visible,\n                    });\n                }\n                break;\n            }\n            case 'popout':\n                console.warn('dockview: You cannot hide a group that is in a popout window');\n                break;\n        }\n    }\n    addPopoutGroup(itemToPopout, options) {\n        var _a, _b, _c, _d, _e;\n        if (itemToPopout instanceof DockviewPanel &&\n            itemToPopout.group.size === 1) {\n            return this.addPopoutGroup(itemToPopout.group, options);\n        }\n        const theme = getDockviewTheme(this.gridview.element);\n        const element = this.element;\n        function getBox() {\n            if (options === null || options === void 0 ? void 0 : options.position) {\n                return options.position;\n            }\n            if (itemToPopout instanceof DockviewGroupPanel) {\n                return itemToPopout.element.getBoundingClientRect();\n            }\n            if (itemToPopout.group) {\n                return itemToPopout.group.element.getBoundingClientRect();\n            }\n            return element.getBoundingClientRect();\n        }\n        const box = getBox();\n        const groupId = (_b = (_a = options === null || options === void 0 ? void 0 : options.overridePopoutGroup) === null || _a === void 0 ? void 0 : _a.id) !== null && _b !== void 0 ? _b : this.getNextGroupId();\n        const _window = new PopoutWindow(`${this.id}-${groupId}`, // unique id\n        theme !== null && theme !== void 0 ? theme : '', {\n            url: (_e = (_c = options === null || options === void 0 ? void 0 : options.popoutUrl) !== null && _c !== void 0 ? _c : (_d = this.options) === null || _d === void 0 ? void 0 : _d.popoutUrl) !== null && _e !== void 0 ? _e : '/popout.html',\n            left: window.screenX + box.left,\n            top: window.screenY + box.top,\n            width: box.width,\n            height: box.height,\n            onDidOpen: options === null || options === void 0 ? void 0 : options.onDidOpen,\n            onWillClose: options === null || options === void 0 ? void 0 : options.onWillClose,\n        });\n        const popoutWindowDisposable = new CompositeDisposable(_window, _window.onDidClose(() => {\n            popoutWindowDisposable.dispose();\n        }));\n        return _window\n            .open()\n            .then((popoutContainer) => {\n            if (_window.isDisposed) {\n                return false;\n            }\n            if (popoutContainer === null) {\n                popoutWindowDisposable.dispose();\n                return false;\n            }\n            const gready = document.createElement('div');\n            gready.className = 'dv-overlay-render-container';\n            const overlayRenderContainer = new OverlayRenderContainer(gready, this);\n            const referenceGroup = itemToPopout instanceof DockviewPanel\n                ? itemToPopout.group\n                : itemToPopout;\n            const referenceLocation = itemToPopout.api.location.type;\n            /**\n             * The group that is being added doesn't already exist within the DOM, the most likely occurance\n             * of this case is when being called from the `fromJSON(...)` method\n             */\n            const isGroupAddedToDom = referenceGroup.element.parentElement !== null;\n            let group;\n            if (!isGroupAddedToDom) {\n                group = referenceGroup;\n            }\n            else if (options === null || options === void 0 ? void 0 : options.overridePopoutGroup) {\n                group = options.overridePopoutGroup;\n            }\n            else {\n                group = this.createGroup({ id: groupId });\n                this._onDidAddGroup.fire(group);\n            }\n            group.model.renderContainer = overlayRenderContainer;\n            group.layout(_window.window.innerWidth, _window.window.innerHeight);\n            if (!(options === null || options === void 0 ? void 0 : options.overridePopoutGroup) && isGroupAddedToDom) {\n                if (itemToPopout instanceof DockviewPanel) {\n                    this.movingLock(() => {\n                        const panel = referenceGroup.model.removePanel(itemToPopout);\n                        group.model.openPanel(panel);\n                    });\n                }\n                else {\n                    this.movingLock(() => moveGroupWithoutDestroying({\n                        from: referenceGroup,\n                        to: group,\n                    }));\n                    switch (referenceLocation) {\n                        case 'grid':\n                            referenceGroup.api.setVisible(false);\n                            break;\n                        case 'floating':\n                        case 'popout':\n                            this.removeGroup(referenceGroup);\n                            break;\n                    }\n                }\n            }\n            popoutContainer.classList.add('dv-dockview');\n            popoutContainer.style.overflow = 'hidden';\n            popoutContainer.appendChild(gready);\n            popoutContainer.appendChild(group.element);\n            group.model.location = {\n                type: 'popout',\n                getWindow: () => _window.window,\n                popoutUrl: options === null || options === void 0 ? void 0 : options.popoutUrl,\n            };\n            if (isGroupAddedToDom &&\n                itemToPopout.api.location.type === 'grid') {\n                itemToPopout.api.setVisible(false);\n            }\n            this.doSetGroupAndPanelActive(group);\n            popoutWindowDisposable.addDisposables(group.api.onDidActiveChange((event) => {\n                var _a;\n                if (event.isActive) {\n                    (_a = _window.window) === null || _a === void 0 ? void 0 : _a.focus();\n                }\n            }), group.api.onWillFocus(() => {\n                var _a;\n                (_a = _window.window) === null || _a === void 0 ? void 0 : _a.focus();\n            }));\n            let returnedGroup;\n            const isValidReferenceGroup = isGroupAddedToDom &&\n                referenceGroup &&\n                this.getPanel(referenceGroup.id);\n            const value = {\n                window: _window,\n                popoutGroup: group,\n                referenceGroup: isValidReferenceGroup\n                    ? referenceGroup.id\n                    : undefined,\n                disposable: {\n                    dispose: () => {\n                        popoutWindowDisposable.dispose();\n                        return returnedGroup;\n                    },\n                },\n            };\n            popoutWindowDisposable.addDisposables(\n            /**\n             * ResizeObserver seems slow here, I do not know why but we don't need it\n             * since we can reply on the window resize event as we will occupy the full\n             * window dimensions\n             */\n            addDisposableWindowListener(_window.window, 'resize', () => {\n                group.layout(_window.window.innerWidth, _window.window.innerHeight);\n            }), overlayRenderContainer, Disposable.from(() => {\n                if (isGroupAddedToDom &&\n                    this.getPanel(referenceGroup.id)) {\n                    this.movingLock(() => moveGroupWithoutDestroying({\n                        from: group,\n                        to: referenceGroup,\n                    }));\n                    if (!referenceGroup.api.isVisible) {\n                        referenceGroup.api.setVisible(true);\n                    }\n                    if (this.getPanel(group.id)) {\n                        this.doRemoveGroup(group, {\n                            skipPopoutAssociated: true,\n                        });\n                    }\n                }\n                else if (this.getPanel(group.id)) {\n                    this.doRemoveGroup(group, {\n                        skipDispose: true,\n                        skipActive: true,\n                        skipPopoutReturn: true,\n                    });\n                    const removedGroup = group;\n                    removedGroup.model.renderContainer =\n                        this.overlayRenderContainer;\n                    removedGroup.model.location = { type: 'grid' };\n                    returnedGroup = removedGroup;\n                    this.doAddGroup(removedGroup, [0]);\n                    this.doSetGroupAndPanelActive(removedGroup);\n                }\n            }));\n            this._popoutGroups.push(value);\n            this.updateWatermark();\n            return true;\n        })\n            .catch((err) => {\n            console.error('dockview: failed to create popout window', err);\n            return false;\n        });\n    }\n    addFloatingGroup(item, options) {\n        var _a, _b, _c, _d, _e;\n        let group;\n        if (item instanceof DockviewPanel) {\n            group = this.createGroup();\n            this._onDidAddGroup.fire(group);\n            this.movingLock(() => this.removePanel(item, {\n                removeEmptyGroup: true,\n                skipDispose: true,\n                skipSetActiveGroup: true,\n            }));\n            this.movingLock(() => group.model.openPanel(item, { skipSetGroupActive: true }));\n        }\n        else {\n            group = item;\n            const popoutReferenceGroupId = (_a = this._popoutGroups.find((_) => _.popoutGroup === group)) === null || _a === void 0 ? void 0 : _a.referenceGroup;\n            const popoutReferenceGroup = popoutReferenceGroupId\n                ? this.getPanel(popoutReferenceGroupId)\n                : undefined;\n            const skip = typeof (options === null || options === void 0 ? void 0 : options.skipRemoveGroup) === 'boolean' &&\n                options.skipRemoveGroup;\n            if (!skip) {\n                if (popoutReferenceGroup) {\n                    this.movingLock(() => moveGroupWithoutDestroying({\n                        from: item,\n                        to: popoutReferenceGroup,\n                    }));\n                    this.doRemoveGroup(item, {\n                        skipPopoutReturn: true,\n                        skipPopoutAssociated: true,\n                    });\n                    this.doRemoveGroup(popoutReferenceGroup, {\n                        skipDispose: true,\n                    });\n                    group = popoutReferenceGroup;\n                }\n                else {\n                    this.doRemoveGroup(item, {\n                        skipDispose: true,\n                        skipPopoutReturn: true,\n                        skipPopoutAssociated: false,\n                    });\n                }\n            }\n        }\n        function getAnchoredBox() {\n            if (options === null || options === void 0 ? void 0 : options.position) {\n                const result = {};\n                if ('left' in options.position) {\n                    result.left = Math.max(options.position.left, 0);\n                }\n                else if ('right' in options.position) {\n                    result.right = Math.max(options.position.right, 0);\n                }\n                else {\n                    result.left = DEFAULT_FLOATING_GROUP_POSITION.left;\n                }\n                if ('top' in options.position) {\n                    result.top = Math.max(options.position.top, 0);\n                }\n                else if ('bottom' in options.position) {\n                    result.bottom = Math.max(options.position.bottom, 0);\n                }\n                else {\n                    result.top = DEFAULT_FLOATING_GROUP_POSITION.top;\n                }\n                if (typeof options.width === 'number') {\n                    result.width = Math.max(options.width, 0);\n                }\n                else {\n                    result.width = DEFAULT_FLOATING_GROUP_POSITION.width;\n                }\n                if (typeof options.height === 'number') {\n                    result.height = Math.max(options.height, 0);\n                }\n                else {\n                    result.height = DEFAULT_FLOATING_GROUP_POSITION.height;\n                }\n                return result;\n            }\n            return {\n                left: typeof (options === null || options === void 0 ? void 0 : options.x) === 'number'\n                    ? Math.max(options.x, 0)\n                    : DEFAULT_FLOATING_GROUP_POSITION.left,\n                top: typeof (options === null || options === void 0 ? void 0 : options.y) === 'number'\n                    ? Math.max(options.y, 0)\n                    : DEFAULT_FLOATING_GROUP_POSITION.top,\n                width: typeof (options === null || options === void 0 ? void 0 : options.width) === 'number'\n                    ? Math.max(options.width, 0)\n                    : DEFAULT_FLOATING_GROUP_POSITION.width,\n                height: typeof (options === null || options === void 0 ? void 0 : options.height) === 'number'\n                    ? Math.max(options.height, 0)\n                    : DEFAULT_FLOATING_GROUP_POSITION.height,\n            };\n        }\n        const anchoredBox = getAnchoredBox();\n        const overlay = new Overlay(Object.assign(Object.assign({ container: this.gridview.element, content: group.element }, anchoredBox), { minimumInViewportWidth: this.options.floatingGroupBounds === 'boundedWithinViewport'\n                ? undefined\n                : (_c = (_b = this.options.floatingGroupBounds) === null || _b === void 0 ? void 0 : _b.minimumWidthWithinViewport) !== null && _c !== void 0 ? _c : DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE, minimumInViewportHeight: this.options.floatingGroupBounds === 'boundedWithinViewport'\n                ? undefined\n                : (_e = (_d = this.options.floatingGroupBounds) === null || _d === void 0 ? void 0 : _d.minimumHeightWithinViewport) !== null && _e !== void 0 ? _e : DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE }));\n        const el = group.element.querySelector('.dv-void-container');\n        if (!el) {\n            throw new Error('failed to find drag handle');\n        }\n        overlay.setupDrag(el, {\n            inDragMode: typeof (options === null || options === void 0 ? void 0 : options.inDragMode) === 'boolean'\n                ? options.inDragMode\n                : false,\n        });\n        const floatingGroupPanel = new DockviewFloatingGroupPanel(group, overlay);\n        const disposable = new CompositeDisposable(group.api.onDidActiveChange((event) => {\n            if (event.isActive) {\n                overlay.bringToFront();\n            }\n        }), watchElementResize(group.element, (entry) => {\n            const { width, height } = entry.contentRect;\n            group.layout(width, height); // let the group know it's size is changing so it can fire events to the panel\n        }));\n        floatingGroupPanel.addDisposables(overlay.onDidChange(() => {\n            // this is either a resize or a move\n            // to inform the panels .layout(...) the group with it's current size\n            // don't care about resize since the above watcher handles that\n            group.layout(group.width, group.height);\n        }), overlay.onDidChangeEnd(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), group.onDidChange((event) => {\n            overlay.setBounds({\n                height: event === null || event === void 0 ? void 0 : event.height,\n                width: event === null || event === void 0 ? void 0 : event.width,\n            });\n        }), {\n            dispose: () => {\n                disposable.dispose();\n                remove(this._floatingGroups, floatingGroupPanel);\n                group.model.location = { type: 'grid' };\n                this.updateWatermark();\n            },\n        });\n        this._floatingGroups.push(floatingGroupPanel);\n        group.model.location = { type: 'floating' };\n        if (!(options === null || options === void 0 ? void 0 : options.skipActiveGroup)) {\n            this.doSetGroupAndPanelActive(group);\n        }\n        this.updateWatermark();\n    }\n    orthogonalize(position) {\n        switch (position) {\n            case 'top':\n            case 'bottom':\n                if (this.gridview.orientation === Orientation.HORIZONTAL) {\n                    // we need to add to a vertical splitview but the current root is a horizontal splitview.\n                    // insert a vertical splitview at the root level and add the existing view as a child\n                    this.gridview.insertOrthogonalSplitviewAtRoot();\n                }\n                break;\n            case 'left':\n            case 'right':\n                if (this.gridview.orientation === Orientation.VERTICAL) {\n                    // we need to add to a horizontal splitview but the current root is a vertical splitview.\n                    // insert a horiziontal splitview at the root level and add the existing view as a child\n                    this.gridview.insertOrthogonalSplitviewAtRoot();\n                }\n                break;\n            default:\n                break;\n        }\n        switch (position) {\n            case 'top':\n            case 'left':\n            case 'center':\n                return this.createGroupAtLocation([0]); // insert into first position\n            case 'bottom':\n            case 'right':\n                return this.createGroupAtLocation([this.gridview.length]); // insert into last position\n            default:\n                throw new Error(`unsupported position ${position}`);\n        }\n    }\n    updateOptions(options) {\n        var _a, _b, _c, _d;\n        super.updateOptions(options);\n        if ('floatingGroupBounds' in options) {\n            for (const group of this._floatingGroups) {\n                switch (options.floatingGroupBounds) {\n                    case 'boundedWithinViewport':\n                        group.overlay.minimumInViewportHeight = undefined;\n                        group.overlay.minimumInViewportWidth = undefined;\n                        break;\n                    case undefined:\n                        group.overlay.minimumInViewportHeight =\n                            DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE;\n                        group.overlay.minimumInViewportWidth =\n                            DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE;\n                        break;\n                    default:\n                        group.overlay.minimumInViewportHeight =\n                            (_a = options.floatingGroupBounds) === null || _a === void 0 ? void 0 : _a.minimumHeightWithinViewport;\n                        group.overlay.minimumInViewportWidth =\n                            (_b = options.floatingGroupBounds) === null || _b === void 0 ? void 0 : _b.minimumWidthWithinViewport;\n                }\n                group.overlay.setBounds();\n            }\n        }\n        if ('rootOverlayModel' in options) {\n            this._rootDropTarget.setOverlayModel((_c = options.rootOverlayModel) !== null && _c !== void 0 ? _c : DEFAULT_ROOT_OVERLAY_MODEL);\n        }\n        if ('gap' in options) {\n            this.gridview.margin = (_d = options.gap) !== null && _d !== void 0 ? _d : 0;\n        }\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        this.layout(this.gridview.width, this.gridview.height, true);\n    }\n    layout(width, height, forceResize) {\n        super.layout(width, height, forceResize);\n        if (this._floatingGroups) {\n            for (const floating of this._floatingGroups) {\n                // ensure floting groups stay within visible boundaries\n                floating.overlay.setBounds();\n            }\n        }\n    }\n    focus() {\n        var _a;\n        (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    getGroupPanel(id) {\n        return this.panels.find((panel) => panel.id === id);\n    }\n    setActivePanel(panel) {\n        panel.group.model.openPanel(panel);\n        this.doSetGroupAndPanelActive(panel.group);\n    }\n    moveToNext(options = {}) {\n        var _a;\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        if (options.includePanel && options.group) {\n            if (options.group.activePanel !==\n                options.group.panels[options.group.panels.length - 1]) {\n                options.group.model.moveToNext({ suppressRoll: true });\n                return;\n            }\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.next(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupAndPanelActive(next);\n    }\n    moveToPrevious(options = {}) {\n        var _a;\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        if (options.includePanel && options.group) {\n            if (options.group.activePanel !== options.group.panels[0]) {\n                options.group.model.moveToPrevious({ suppressRoll: true });\n                return;\n            }\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.previous(location)) === null || _a === void 0 ? void 0 : _a.view;\n        if (next) {\n            this.doSetGroupAndPanelActive(next);\n        }\n    }\n    /**\n     * Serialize the current state of the layout\n     *\n     * @returns A JSON respresentation of the layout\n     */\n    toJSON() {\n        var _a;\n        const data = this.gridview.serialize();\n        const panels = this.panels.reduce((collection, panel) => {\n            collection[panel.id] = panel.toJSON();\n            return collection;\n        }, {});\n        const floats = this._floatingGroups.map((group) => {\n            return {\n                data: group.group.toJSON(),\n                position: group.overlay.toJSON(),\n            };\n        });\n        const popoutGroups = this._popoutGroups.map((group) => {\n            return {\n                data: group.popoutGroup.toJSON(),\n                gridReferenceGroup: group.referenceGroup,\n                position: group.window.dimensions(),\n                url: group.popoutGroup.api.location.type === 'popout'\n                    ? group.popoutGroup.api.location.popoutUrl\n                    : undefined,\n            };\n        });\n        const result = {\n            grid: data,\n            panels,\n            activeGroup: (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.id,\n        };\n        if (floats.length > 0) {\n            result.floatingGroups = floats;\n        }\n        if (popoutGroups.length > 0) {\n            result.popoutGroups = popoutGroups;\n        }\n        return result;\n    }\n    fromJSON(data) {\n        var _a, _b, _c;\n        this.clear();\n        if (typeof data !== 'object' || data === null) {\n            throw new Error('serialized layout must be a non-null object');\n        }\n        const { grid, panels, activeGroup } = data;\n        if (grid.root.type !== 'branch' || !Array.isArray(grid.root.data)) {\n            throw new Error('root must be of type branch');\n        }\n        try {\n            // take note of the existing dimensions\n            const width = this.width;\n            const height = this.height;\n            const createGroupFromSerializedState = (data) => {\n                const { id, locked, hideHeader, views, activeView } = data;\n                if (typeof id !== 'string') {\n                    throw new Error('group id must be of type string');\n                }\n                const group = this.createGroup({\n                    id,\n                    locked: !!locked,\n                    hideHeader: !!hideHeader,\n                });\n                const createdPanels = [];\n                for (const child of views) {\n                    /**\n                     * Run the deserializer step seperately since this may fail to due corrupted external state.\n                     * In running this section first we avoid firing lots of 'add' events in the event of a failure\n                     * due to a corruption of input data.\n                     */\n                    const panel = this._deserializer.fromJSON(panels[child], group);\n                    createdPanels.push(panel);\n                }\n                this._onDidAddGroup.fire(group);\n                for (let i = 0; i < views.length; i++) {\n                    const panel = createdPanels[i];\n                    const isActive = typeof activeView === 'string' &&\n                        activeView === panel.id;\n                    group.model.openPanel(panel, {\n                        skipSetActive: !isActive,\n                        skipSetGroupActive: true,\n                    });\n                }\n                if (!group.activePanel && group.panels.length > 0) {\n                    group.model.openPanel(group.panels[group.panels.length - 1], {\n                        skipSetGroupActive: true,\n                    });\n                }\n                return group;\n            };\n            this.gridview.deserialize(grid, {\n                fromJSON: (node) => {\n                    return createGroupFromSerializedState(node.data);\n                },\n            });\n            this.layout(width, height, true);\n            const serializedFloatingGroups = (_a = data.floatingGroups) !== null && _a !== void 0 ? _a : [];\n            for (const serializedFloatingGroup of serializedFloatingGroups) {\n                const { data, position } = serializedFloatingGroup;\n                const group = createGroupFromSerializedState(data);\n                this.addFloatingGroup(group, {\n                    position: position,\n                    width: position.width,\n                    height: position.height,\n                    skipRemoveGroup: true,\n                    inDragMode: false,\n                });\n            }\n            const serializedPopoutGroups = (_b = data.popoutGroups) !== null && _b !== void 0 ? _b : [];\n            for (const serializedPopoutGroup of serializedPopoutGroups) {\n                const { data, position, gridReferenceGroup, url } = serializedPopoutGroup;\n                const group = createGroupFromSerializedState(data);\n                this.addPopoutGroup((_c = (gridReferenceGroup\n                    ? this.getPanel(gridReferenceGroup)\n                    : undefined)) !== null && _c !== void 0 ? _c : group, {\n                    position: position !== null && position !== void 0 ? position : undefined,\n                    overridePopoutGroup: gridReferenceGroup\n                        ? group\n                        : undefined,\n                    popoutUrl: url,\n                });\n            }\n            for (const floatingGroup of this._floatingGroups) {\n                floatingGroup.overlay.setBounds();\n            }\n            if (typeof activeGroup === 'string') {\n                const panel = this.getPanel(activeGroup);\n                if (panel) {\n                    this.doSetGroupAndPanelActive(panel);\n                }\n            }\n        }\n        catch (err) {\n            console.error('dockview: failed to deserialize layout. Reverting changes', err);\n            /**\n             * Takes all the successfully created groups and remove all of their panels.\n             */\n            for (const group of this.groups) {\n                for (const panel of group.panels) {\n                    this.removePanel(panel, {\n                        removeEmptyGroup: false,\n                        skipDispose: false,\n                    });\n                }\n            }\n            /**\n             * To remove a group we cannot call this.removeGroup(...) since this makes assumptions about\n             * the underlying HTMLElement existing in the Gridview.\n             */\n            for (const group of this.groups) {\n                group.dispose();\n                this._groups.delete(group.id);\n                this._onDidRemoveGroup.fire(group);\n            }\n            // iterate over a reassigned array since original array will be modified\n            for (const floatingGroup of [...this._floatingGroups]) {\n                floatingGroup.dispose();\n            }\n            // fires clean-up events and clears the underlying HTML gridview.\n            this.clear();\n            /**\n             * even though we have cleaned-up we still want to inform the caller of their error\n             * and we'll do this through re-throwing the original error since afterall you would\n             * expect trying to load a corrupted layout to result in an error and not silently fail...\n             */\n            throw err;\n        }\n        this.updateWatermark();\n        this._onDidLayoutFromJSON.fire();\n    }\n    clear() {\n        const groups = Array.from(this._groups.values()).map((_) => _.value);\n        const hasActiveGroup = !!this.activeGroup;\n        for (const group of groups) {\n            // remove the group will automatically remove the panels\n            this.removeGroup(group, { skipActive: true });\n        }\n        if (hasActiveGroup) {\n            this.doSetGroupAndPanelActive(undefined);\n        }\n        this.gridview.clear();\n    }\n    closeAllGroups() {\n        for (const entry of this._groups.entries()) {\n            const [_, group] = entry;\n            group.value.model.closeAllPanels();\n        }\n    }\n    addPanel(options) {\n        var _a, _b;\n        if (this.panels.find((_) => _.id === options.id)) {\n            throw new Error(`panel with id ${options.id} already exists`);\n        }\n        let referenceGroup;\n        if (options.position && options.floating) {\n            throw new Error('you can only provide one of: position, floating as arguments to .addPanel(...)');\n        }\n        const initial = {\n            width: options.initialWidth,\n            height: options.initialHeight,\n        };\n        let index;\n        if (options.position) {\n            if (isPanelOptionsWithPanel(options.position)) {\n                const referencePanel = typeof options.position.referencePanel === 'string'\n                    ? this.getGroupPanel(options.position.referencePanel)\n                    : options.position.referencePanel;\n                index = options.position.index;\n                if (!referencePanel) {\n                    throw new Error(`referencePanel '${options.position.referencePanel}' does not exist`);\n                }\n                referenceGroup = this.findGroup(referencePanel);\n            }\n            else if (isPanelOptionsWithGroup(options.position)) {\n                referenceGroup =\n                    typeof options.position.referenceGroup === 'string'\n                        ? (_a = this._groups.get(options.position.referenceGroup)) === null || _a === void 0 ? void 0 : _a.value\n                        : options.position.referenceGroup;\n                index = options.position.index;\n                if (!referenceGroup) {\n                    throw new Error(`referenceGroup '${options.position.referenceGroup}' does not exist`);\n                }\n            }\n            else {\n                const group = this.orthogonalize(directionToPosition(options.position.direction));\n                const panel = this.createPanel(options, group);\n                group.model.openPanel(panel, {\n                    skipSetActive: options.inactive,\n                    skipSetGroupActive: options.inactive,\n                    index,\n                });\n                if (!options.inactive) {\n                    this.doSetGroupAndPanelActive(group);\n                }\n                group.api.setSize({\n                    height: initial === null || initial === void 0 ? void 0 : initial.height,\n                    width: initial === null || initial === void 0 ? void 0 : initial.width,\n                });\n                return panel;\n            }\n        }\n        else {\n            referenceGroup = this.activeGroup;\n        }\n        let panel;\n        if (referenceGroup) {\n            const target = toTarget(((_b = options.position) === null || _b === void 0 ? void 0 : _b.direction) || 'within');\n            if (options.floating) {\n                const group = this.createGroup();\n                this._onDidAddGroup.fire(group);\n                const floatingGroupOptions = typeof options.floating === 'object' &&\n                    options.floating !== null\n                    ? options.floating\n                    : {};\n                this.addFloatingGroup(group, Object.assign(Object.assign({}, floatingGroupOptions), { inDragMode: false, skipRemoveGroup: true, skipActiveGroup: true }));\n                panel = this.createPanel(options, group);\n                group.model.openPanel(panel, {\n                    skipSetActive: options.inactive,\n                    skipSetGroupActive: options.inactive,\n                    index,\n                });\n            }\n            else if (referenceGroup.api.location.type === 'floating' ||\n                target === 'center') {\n                panel = this.createPanel(options, referenceGroup);\n                referenceGroup.model.openPanel(panel, {\n                    skipSetActive: options.inactive,\n                    skipSetGroupActive: options.inactive,\n                    index,\n                });\n                referenceGroup.api.setSize({\n                    width: initial === null || initial === void 0 ? void 0 : initial.width,\n                    height: initial === null || initial === void 0 ? void 0 : initial.height,\n                });\n                if (!options.inactive) {\n                    this.doSetGroupAndPanelActive(referenceGroup);\n                }\n            }\n            else {\n                const location = getGridLocation(referenceGroup.element);\n                const relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n                const group = this.createGroupAtLocation(relativeLocation, this.orientationAtLocation(relativeLocation) ===\n                    Orientation.VERTICAL\n                    ? initial === null || initial === void 0 ? void 0 : initial.height\n                    : initial === null || initial === void 0 ? void 0 : initial.width);\n                panel = this.createPanel(options, group);\n                group.model.openPanel(panel, {\n                    skipSetActive: options.inactive,\n                    skipSetGroupActive: options.inactive,\n                    index,\n                });\n                if (!options.inactive) {\n                    this.doSetGroupAndPanelActive(group);\n                }\n            }\n        }\n        else if (options.floating) {\n            const group = this.createGroup();\n            this._onDidAddGroup.fire(group);\n            const coordinates = typeof options.floating === 'object' &&\n                options.floating !== null\n                ? options.floating\n                : {};\n            this.addFloatingGroup(group, Object.assign(Object.assign({}, coordinates), { inDragMode: false, skipRemoveGroup: true, skipActiveGroup: true }));\n            panel = this.createPanel(options, group);\n            group.model.openPanel(panel, {\n                skipSetActive: options.inactive,\n                skipSetGroupActive: options.inactive,\n                index,\n            });\n        }\n        else {\n            const group = this.createGroupAtLocation([0], this.gridview.orientation === Orientation.VERTICAL\n                ? initial === null || initial === void 0 ? void 0 : initial.height\n                : initial === null || initial === void 0 ? void 0 : initial.width);\n            panel = this.createPanel(options, group);\n            group.model.openPanel(panel, {\n                skipSetActive: options.inactive,\n                skipSetGroupActive: options.inactive,\n                index,\n            });\n            if (!options.inactive) {\n                this.doSetGroupAndPanelActive(group);\n            }\n        }\n        return panel;\n    }\n    removePanel(panel, options = {\n        removeEmptyGroup: true,\n    }) {\n        const group = panel.group;\n        if (!group) {\n            throw new Error(`cannot remove panel ${panel.id}. it's missing a group.`);\n        }\n        group.model.removePanel(panel, {\n            skipSetActiveGroup: options.skipSetActiveGroup,\n        });\n        if (!options.skipDispose) {\n            panel.group.model.renderContainer.detatch(panel);\n            panel.dispose();\n        }\n        if (group.size === 0 && options.removeEmptyGroup) {\n            this.removeGroup(group, { skipActive: options.skipSetActiveGroup });\n        }\n    }\n    createWatermarkComponent() {\n        if (this.options.createWatermarkComponent) {\n            return this.options.createWatermarkComponent();\n        }\n        return new Watermark();\n    }\n    updateWatermark() {\n        var _a, _b;\n        if (this.groups.filter((x) => x.api.location.type === 'grid' && x.api.isVisible).length === 0) {\n            if (!this.watermark) {\n                this.watermark = this.createWatermarkComponent();\n                this.watermark.init({\n                    containerApi: new DockviewApi(this),\n                });\n                const watermarkContainer = document.createElement('div');\n                watermarkContainer.className = 'dv-watermark-container';\n                addTestId(watermarkContainer, 'watermark-component');\n                watermarkContainer.appendChild(this.watermark.element);\n                this.gridview.element.appendChild(watermarkContainer);\n            }\n        }\n        else if (this.watermark) {\n            this.watermark.element.parentElement.remove();\n            (_b = (_a = this.watermark).dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n            this.watermark = null;\n        }\n    }\n    addGroup(options) {\n        var _a;\n        if (options) {\n            let referenceGroup;\n            if (isGroupOptionsWithPanel(options)) {\n                const referencePanel = typeof options.referencePanel === 'string'\n                    ? this.panels.find((panel) => panel.id === options.referencePanel)\n                    : options.referencePanel;\n                if (!referencePanel) {\n                    throw new Error(`reference panel ${options.referencePanel} does not exist`);\n                }\n                referenceGroup = this.findGroup(referencePanel);\n                if (!referenceGroup) {\n                    throw new Error(`reference group for reference panel ${options.referencePanel} does not exist`);\n                }\n            }\n            else if (isGroupOptionsWithGroup(options)) {\n                referenceGroup =\n                    typeof options.referenceGroup === 'string'\n                        ? (_a = this._groups.get(options.referenceGroup)) === null || _a === void 0 ? void 0 : _a.value\n                        : options.referenceGroup;\n                if (!referenceGroup) {\n                    throw new Error(`reference group ${options.referenceGroup} does not exist`);\n                }\n            }\n            else {\n                const group = this.orthogonalize(directionToPosition(options.direction));\n                if (!options.skipSetActive) {\n                    this.doSetGroupAndPanelActive(group);\n                }\n                return group;\n            }\n            const target = toTarget(options.direction || 'within');\n            const location = getGridLocation(referenceGroup.element);\n            const relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n            const group = this.createGroup(options);\n            const size = this.getLocationOrientation(relativeLocation) ===\n                Orientation.VERTICAL\n                ? options.initialHeight\n                : options.initialWidth;\n            this.doAddGroup(group, relativeLocation, size);\n            if (!options.skipSetActive) {\n                this.doSetGroupAndPanelActive(group);\n            }\n            return group;\n        }\n        else {\n            const group = this.createGroup(options);\n            this.doAddGroup(group);\n            this.doSetGroupAndPanelActive(group);\n            return group;\n        }\n    }\n    getLocationOrientation(location) {\n        return location.length % 2 == 0 &&\n            this.gridview.orientation === Orientation.HORIZONTAL\n            ? Orientation.HORIZONTAL\n            : Orientation.VERTICAL;\n    }\n    removeGroup(group, options) {\n        this.doRemoveGroup(group, options);\n    }\n    doRemoveGroup(group, options) {\n        var _a;\n        const panels = [...group.panels]; // reassign since group panels will mutate\n        if (!(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n            for (const panel of panels) {\n                this.removePanel(panel, {\n                    removeEmptyGroup: false,\n                    skipDispose: (_a = options === null || options === void 0 ? void 0 : options.skipDispose) !== null && _a !== void 0 ? _a : false,\n                });\n            }\n        }\n        const activePanel = this.activePanel;\n        if (group.api.location.type === 'floating') {\n            const floatingGroup = this._floatingGroups.find((_) => _.group === group);\n            if (floatingGroup) {\n                if (!(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n                    floatingGroup.group.dispose();\n                    this._groups.delete(group.id);\n                    this._onDidRemoveGroup.fire(group);\n                }\n                remove(this._floatingGroups, floatingGroup);\n                floatingGroup.dispose();\n                if (!(options === null || options === void 0 ? void 0 : options.skipActive) && this._activeGroup === group) {\n                    const groups = Array.from(this._groups.values());\n                    this.doSetGroupAndPanelActive(groups.length > 0 ? groups[0].value : undefined);\n                }\n                return floatingGroup.group;\n            }\n            throw new Error('failed to find floating group');\n        }\n        if (group.api.location.type === 'popout') {\n            const selectedGroup = this._popoutGroups.find((_) => _.popoutGroup === group);\n            if (selectedGroup) {\n                if (!(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n                    if (!(options === null || options === void 0 ? void 0 : options.skipPopoutAssociated)) {\n                        const refGroup = selectedGroup.referenceGroup\n                            ? this.getPanel(selectedGroup.referenceGroup)\n                            : undefined;\n                        if (refGroup) {\n                            this.removeGroup(refGroup);\n                        }\n                    }\n                    selectedGroup.popoutGroup.dispose();\n                    this._groups.delete(group.id);\n                    this._onDidRemoveGroup.fire(group);\n                }\n                remove(this._popoutGroups, selectedGroup);\n                const removedGroup = selectedGroup.disposable.dispose();\n                if (!(options === null || options === void 0 ? void 0 : options.skipPopoutReturn) && removedGroup) {\n                    this.doAddGroup(removedGroup, [0]);\n                    this.doSetGroupAndPanelActive(removedGroup);\n                }\n                if (!(options === null || options === void 0 ? void 0 : options.skipActive) && this._activeGroup === group) {\n                    const groups = Array.from(this._groups.values());\n                    this.doSetGroupAndPanelActive(groups.length > 0 ? groups[0].value : undefined);\n                }\n                this.updateWatermark();\n                return selectedGroup.popoutGroup;\n            }\n            throw new Error('failed to find popout group');\n        }\n        const re = super.doRemoveGroup(group, options);\n        if (!(options === null || options === void 0 ? void 0 : options.skipActive)) {\n            if (this.activePanel !== activePanel) {\n                this._onDidActivePanelChange.fire(this.activePanel);\n            }\n        }\n        return re;\n    }\n    movingLock(func) {\n        const isMoving = this._moving;\n        try {\n            this._moving = true;\n            return func();\n        }\n        finally {\n            this._moving = isMoving;\n        }\n    }\n    moveGroupOrPanel(options) {\n        var _a;\n        const destinationGroup = options.to.group;\n        const sourceGroupId = options.from.groupId;\n        const sourceItemId = options.from.panelId;\n        const destinationTarget = options.to.position;\n        const destinationIndex = options.to.index;\n        const sourceGroup = sourceGroupId\n            ? (_a = this._groups.get(sourceGroupId)) === null || _a === void 0 ? void 0 : _a.value\n            : undefined;\n        if (!sourceGroup) {\n            throw new Error(`Failed to find group id ${sourceGroupId}`);\n        }\n        if (sourceItemId === undefined) {\n            /**\n             * Moving an entire group into another group\n             */\n            this.moveGroup({\n                from: { group: sourceGroup },\n                to: {\n                    group: destinationGroup,\n                    position: destinationTarget,\n                },\n            });\n            return;\n        }\n        if (!destinationTarget || destinationTarget === 'center') {\n            /**\n             * Dropping a panel within another group\n             */\n            const removedPanel = this.movingLock(() => sourceGroup.model.removePanel(sourceItemId, {\n                skipSetActive: false,\n                skipSetActiveGroup: true,\n            }));\n            if (!removedPanel) {\n                throw new Error(`No panel with id ${sourceItemId}`);\n            }\n            if (sourceGroup.model.size === 0) {\n                // remove the group and do not set a new group as active\n                this.doRemoveGroup(sourceGroup, { skipActive: true });\n            }\n            this.movingLock(() => destinationGroup.model.openPanel(removedPanel, {\n                index: destinationIndex,\n                skipSetGroupActive: true,\n            }));\n            this.doSetGroupAndPanelActive(destinationGroup);\n            this._onDidMovePanel.fire({\n                panel: removedPanel,\n                from: sourceGroup,\n            });\n        }\n        else {\n            /**\n             * Dropping a panel to the extremities of a group which will place that panel\n             * into an adjacent group\n             */\n            const referenceLocation = getGridLocation(destinationGroup.element);\n            const targetLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, destinationTarget);\n            if (sourceGroup.size < 2) {\n                /**\n                 * If we are moving from a group which only has one panel left we will consider\n                 * moving the group itself rather than moving the panel into a newly created group\n                 */\n                const [targetParentLocation, to] = tail(targetLocation);\n                if (sourceGroup.api.location.type === 'grid') {\n                    const sourceLocation = getGridLocation(sourceGroup.element);\n                    const [sourceParentLocation, from] = tail(sourceLocation);\n                    if (sequenceEquals(sourceParentLocation, targetParentLocation)) {\n                        // special case when 'swapping' two views within same grid location\n                        // if a group has one tab - we are essentially moving the 'group'\n                        // which is equivalent to swapping two views in this case\n                        this.gridview.moveView(sourceParentLocation, from, to);\n                        this._onDidMovePanel.fire({\n                            panel: this.getGroupPanel(sourceItemId),\n                            from: sourceGroup,\n                        });\n                        return;\n                    }\n                }\n                if (sourceGroup.api.location.type === 'popout') {\n                    /**\n                     * the source group is a popout group with a single panel\n                     *\n                     * 1. remove the panel from the group without triggering any events\n                     * 2. remove the popout group\n                     * 3. create a new group at the requested location and add that panel\n                     */\n                    const popoutGroup = this._popoutGroups.find((group) => group.popoutGroup === sourceGroup);\n                    const removedPanel = this.movingLock(() => popoutGroup.popoutGroup.model.removePanel(popoutGroup.popoutGroup.panels[0], {\n                        skipSetActive: true,\n                        skipSetActiveGroup: true,\n                    }));\n                    this.doRemoveGroup(sourceGroup, { skipActive: true });\n                    const newGroup = this.createGroupAtLocation(targetLocation);\n                    this.movingLock(() => newGroup.model.openPanel(removedPanel, {\n                        skipSetActive: true,\n                    }));\n                    this.doSetGroupAndPanelActive(newGroup);\n                    this._onDidMovePanel.fire({\n                        panel: this.getGroupPanel(sourceItemId),\n                        from: sourceGroup,\n                    });\n                    return;\n                }\n                // source group will become empty so delete the group\n                const targetGroup = this.movingLock(() => this.doRemoveGroup(sourceGroup, {\n                    skipActive: true,\n                    skipDispose: true,\n                }));\n                // after deleting the group we need to re-evaulate the ref location\n                const updatedReferenceLocation = getGridLocation(destinationGroup.element);\n                const location = getRelativeLocation(this.gridview.orientation, updatedReferenceLocation, destinationTarget);\n                this.movingLock(() => this.doAddGroup(targetGroup, location));\n                this.doSetGroupAndPanelActive(targetGroup);\n                this._onDidMovePanel.fire({\n                    panel: this.getGroupPanel(sourceItemId),\n                    from: sourceGroup,\n                });\n            }\n            else {\n                /**\n                 * The group we are removing from has many panels, we need to remove the panels we are moving,\n                 * create a new group, add the panels to that new group and add the new group in an appropiate position\n                 */\n                const removedPanel = this.movingLock(() => sourceGroup.model.removePanel(sourceItemId, {\n                    skipSetActive: false,\n                    skipSetActiveGroup: true,\n                }));\n                if (!removedPanel) {\n                    throw new Error(`No panel with id ${sourceItemId}`);\n                }\n                const dropLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, destinationTarget);\n                const group = this.createGroupAtLocation(dropLocation);\n                this.movingLock(() => group.model.openPanel(removedPanel, {\n                    skipSetGroupActive: true,\n                }));\n                this.doSetGroupAndPanelActive(group);\n                this._onDidMovePanel.fire({\n                    panel: removedPanel,\n                    from: sourceGroup,\n                });\n            }\n        }\n    }\n    moveGroup(options) {\n        const from = options.from.group;\n        const to = options.to.group;\n        const target = options.to.position;\n        if (target === 'center') {\n            const activePanel = from.activePanel;\n            const panels = this.movingLock(() => [...from.panels].map((p) => from.model.removePanel(p.id, {\n                skipSetActive: true,\n            })));\n            if ((from === null || from === void 0 ? void 0 : from.model.size) === 0) {\n                this.doRemoveGroup(from, { skipActive: true });\n            }\n            this.movingLock(() => {\n                for (const panel of panels) {\n                    to.model.openPanel(panel, {\n                        skipSetActive: panel !== activePanel,\n                        skipSetGroupActive: true,\n                    });\n                }\n            });\n            this.doSetGroupAndPanelActive(to);\n        }\n        else {\n            switch (from.api.location.type) {\n                case 'grid':\n                    this.gridview.removeView(getGridLocation(from.element));\n                    break;\n                case 'floating': {\n                    const selectedFloatingGroup = this._floatingGroups.find((x) => x.group === from);\n                    if (!selectedFloatingGroup) {\n                        throw new Error('failed to find floating group');\n                    }\n                    selectedFloatingGroup.dispose();\n                    break;\n                }\n                case 'popout': {\n                    const selectedPopoutGroup = this._popoutGroups.find((x) => x.popoutGroup === from);\n                    if (!selectedPopoutGroup) {\n                        throw new Error('failed to find popout group');\n                    }\n                    selectedPopoutGroup.disposable.dispose();\n                }\n            }\n            const referenceLocation = getGridLocation(to.element);\n            const dropLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, target);\n            let size;\n            switch (this.gridview.orientation) {\n                case Orientation.VERTICAL:\n                    size =\n                        referenceLocation.length % 2 == 0\n                            ? from.api.width\n                            : from.api.height;\n                    break;\n                case Orientation.HORIZONTAL:\n                    size =\n                        referenceLocation.length % 2 == 0\n                            ? from.api.height\n                            : from.api.width;\n                    break;\n            }\n            this.gridview.addView(from, size, dropLocation);\n        }\n        from.panels.forEach((panel) => {\n            this._onDidMovePanel.fire({ panel, from });\n        });\n    }\n    doSetGroupActive(group) {\n        super.doSetGroupActive(group);\n        const activePanel = this.activePanel;\n        if (!this._moving &&\n            activePanel !== this._onDidActivePanelChange.value) {\n            this._onDidActivePanelChange.fire(activePanel);\n        }\n    }\n    doSetGroupAndPanelActive(group) {\n        super.doSetGroupActive(group);\n        const activePanel = this.activePanel;\n        if (group &&\n            this.hasMaximizedGroup() &&\n            !this.isMaximizedGroup(group)) {\n            this.exitMaximizedGroup();\n        }\n        if (!this._moving &&\n            activePanel !== this._onDidActivePanelChange.value) {\n            this._onDidActivePanelChange.fire(activePanel);\n        }\n    }\n    getNextGroupId() {\n        let id = this.nextGroupId.next();\n        while (this._groups.has(id)) {\n            id = this.nextGroupId.next();\n        }\n        return id;\n    }\n    createGroup(options) {\n        if (!options) {\n            options = {};\n        }\n        let id = options === null || options === void 0 ? void 0 : options.id;\n        if (id && this._groups.has(options.id)) {\n            console.warn(`dockview: Duplicate group id ${options === null || options === void 0 ? void 0 : options.id}. reassigning group id to avoid errors`);\n            id = undefined;\n        }\n        if (!id) {\n            id = this.nextGroupId.next();\n            while (this._groups.has(id)) {\n                id = this.nextGroupId.next();\n            }\n        }\n        const view = new DockviewGroupPanel(this, id, options);\n        view.init({ params: {}, accessor: this });\n        if (!this._groups.has(view.id)) {\n            const disposable = new CompositeDisposable(view.model.onTabDragStart((event) => {\n                this._onWillDragPanel.fire(event);\n            }), view.model.onGroupDragStart((event) => {\n                this._onWillDragGroup.fire(event);\n            }), view.model.onMove((event) => {\n                const { groupId, itemId, target, index } = event;\n                this.moveGroupOrPanel({\n                    from: { groupId: groupId, panelId: itemId },\n                    to: {\n                        group: view,\n                        position: target,\n                        index,\n                    },\n                });\n            }), view.model.onDidDrop((event) => {\n                this._onDidDrop.fire(event);\n            }), view.model.onWillDrop((event) => {\n                this._onWillDrop.fire(event);\n            }), view.model.onWillShowOverlay((event) => {\n                if (this.options.disableDnd) {\n                    event.preventDefault();\n                    return;\n                }\n                this._onWillShowOverlay.fire(event);\n            }), view.model.onUnhandledDragOverEvent((event) => {\n                this._onUnhandledDragOverEvent.fire(event);\n            }), view.model.onDidAddPanel((event) => {\n                if (this._moving) {\n                    return;\n                }\n                this._onDidAddPanel.fire(event.panel);\n            }), view.model.onDidRemovePanel((event) => {\n                if (this._moving) {\n                    return;\n                }\n                this._onDidRemovePanel.fire(event.panel);\n            }), view.model.onDidActivePanelChange((event) => {\n                if (this._moving) {\n                    return;\n                }\n                if (event.panel !== this.activePanel) {\n                    return;\n                }\n                if (this._onDidActivePanelChange.value !== event.panel) {\n                    this._onDidActivePanelChange.fire(event.panel);\n                }\n            }), Event.any(view.model.onDidPanelTitleChange, view.model.onDidPanelParametersChange)(() => {\n                this._bufferOnDidLayoutChange.fire();\n            }));\n            this._groups.set(view.id, { value: view, disposable });\n        }\n        // TODO: must be called after the above listeners have been setup, not an ideal pattern\n        view.initialize();\n        return view;\n    }\n    createPanel(options, group) {\n        var _a, _b, _c;\n        const contentComponent = options.component;\n        const tabComponent = (_a = options.tabComponent) !== null && _a !== void 0 ? _a : this.options.defaultTabComponent;\n        const view = new DockviewPanelModel(this, options.id, contentComponent, tabComponent);\n        const panel = new DockviewPanel(options.id, contentComponent, tabComponent, this, this._api, group, view, {\n            renderer: options.renderer,\n            minimumWidth: options.minimumWidth,\n            minimumHeight: options.minimumHeight,\n            maximumWidth: options.maximumWidth,\n            maximumHeight: options.maximumHeight,\n        });\n        panel.init({\n            title: (_b = options.title) !== null && _b !== void 0 ? _b : options.id,\n            params: (_c = options === null || options === void 0 ? void 0 : options.params) !== null && _c !== void 0 ? _c : {},\n        });\n        return panel;\n    }\n    createGroupAtLocation(location, size) {\n        const group = this.createGroup();\n        this.doAddGroup(group, location, size);\n        return group;\n    }\n    findGroup(panel) {\n        var _a;\n        return (_a = Array.from(this._groups.values()).find((group) => group.value.model.containsPanel(panel))) === null || _a === void 0 ? void 0 : _a.value;\n    }\n    orientationAtLocation(location) {\n        const rootOrientation = this.gridview.orientation;\n        return location.length % 2 == 1\n            ? rootOrientation\n            : orthogonal(rootOrientation);\n    }\n}\n","export function createComponent(id, componentName, components = {}, frameworkComponents = {}, createFrameworkComponent, fallback) {\n    const Component = typeof componentName === 'string'\n        ? components[componentName]\n        : undefined;\n    const FrameworkComponent = typeof componentName === 'string'\n        ? frameworkComponents[componentName]\n        : undefined;\n    if (Component && FrameworkComponent) {\n        throw new Error(`Cannot create '${id}'. component '${componentName}' registered as both a component and frameworkComponent`);\n    }\n    if (FrameworkComponent) {\n        if (!createFrameworkComponent) {\n            throw new Error(`Cannot create '${id}' for framework component '${componentName}'. you must register a frameworkPanelWrapper to use framework components`);\n        }\n        return createFrameworkComponent.createComponent(id, componentName, FrameworkComponent);\n    }\n    if (!Component) {\n        if (fallback) {\n            return fallback();\n        }\n        throw new Error(`Cannot create '${id}', no component '${componentName}' provided`);\n    }\n    return new Component(id, componentName);\n}\n","import { getRelativeLocation, getGridLocation, } from './gridview';\nimport { tail, sequenceEquals } from '../array';\nimport { CompositeDisposable } from '../lifecycle';\nimport { BaseGrid, toTarget, } from './baseComponentGridview';\nimport { createComponent } from '../panel/componentFactory';\nimport { Emitter } from '../events';\nexport class GridviewComponent extends BaseGrid {\n    get orientation() {\n        return this.gridview.orientation;\n    }\n    set orientation(value) {\n        this.gridview.orientation = value;\n    }\n    get options() {\n        return this._options;\n    }\n    get deserializer() {\n        return this._deserializer;\n    }\n    set deserializer(value) {\n        this._deserializer = value;\n    }\n    constructor(parentElement, options) {\n        super(parentElement, {\n            proportionalLayout: options.proportionalLayout,\n            orientation: options.orientation,\n            styles: options.styles,\n            disableAutoResizing: options.disableAutoResizing,\n            className: options.className,\n        });\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._onDidRemoveGroup = new Emitter();\n        this.onDidRemoveGroup = this._onDidRemoveGroup.event;\n        this._onDidAddGroup = new Emitter();\n        this.onDidAddGroup = this._onDidAddGroup.event;\n        this._onDidActiveGroupChange = new Emitter();\n        this.onDidActiveGroupChange = this._onDidActiveGroupChange.event;\n        this._options = options;\n        this.addDisposables(this._onDidAddGroup, this._onDidRemoveGroup, this._onDidActiveGroupChange, this.onDidAdd((event) => {\n            this._onDidAddGroup.fire(event);\n        }), this.onDidRemove((event) => {\n            this._onDidRemoveGroup.fire(event);\n        }), this.onDidActiveChange((event) => {\n            this._onDidActiveGroupChange.fire(event);\n        }));\n        if (!this.options.components) {\n            this.options.components = {};\n        }\n        if (!this.options.frameworkComponents) {\n            this.options.frameworkComponents = {};\n        }\n    }\n    updateOptions(options) {\n        super.updateOptions(options);\n        const hasOrientationChanged = typeof options.orientation === 'string' &&\n            this.gridview.orientation !== options.orientation;\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        if (hasOrientationChanged) {\n            this.gridview.orientation = options.orientation;\n        }\n        this.layout(this.gridview.width, this.gridview.height, true);\n    }\n    removePanel(panel) {\n        this.removeGroup(panel);\n    }\n    /**\n     * Serialize the current state of the layout\n     *\n     * @returns A JSON respresentation of the layout\n     */\n    toJSON() {\n        var _a;\n        const data = this.gridview.serialize();\n        return {\n            grid: data,\n            activePanel: (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.id,\n        };\n    }\n    setVisible(panel, visible) {\n        this.gridview.setViewVisible(getGridLocation(panel.element), visible);\n    }\n    setActive(panel) {\n        this._groups.forEach((value, _key) => {\n            value.value.setActive(panel === value.value);\n        });\n    }\n    focus() {\n        var _a;\n        (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    fromJSON(serializedGridview) {\n        this.clear();\n        const { grid, activePanel } = serializedGridview;\n        try {\n            const queue = [];\n            // take note of the existing dimensions\n            const width = this.width;\n            const height = this.height;\n            this.gridview.deserialize(grid, {\n                fromJSON: (node) => {\n                    var _a, _b;\n                    const { data } = node;\n                    const view = createComponent(data.id, data.component, (_a = this.options.components) !== null && _a !== void 0 ? _a : {}, (_b = this.options.frameworkComponents) !== null && _b !== void 0 ? _b : {}, this.options.frameworkComponentFactory\n                        ? {\n                            createComponent: this.options.frameworkComponentFactory\n                                .createComponent,\n                        }\n                        : undefined);\n                    queue.push(() => view.init({\n                        params: data.params,\n                        minimumWidth: data.minimumWidth,\n                        maximumWidth: data.maximumWidth,\n                        minimumHeight: data.minimumHeight,\n                        maximumHeight: data.maximumHeight,\n                        priority: data.priority,\n                        snap: !!data.snap,\n                        accessor: this,\n                        isVisible: node.visible,\n                    }));\n                    this._onDidAddGroup.fire(view);\n                    this.registerPanel(view);\n                    return view;\n                },\n            });\n            this.layout(width, height, true);\n            queue.forEach((f) => f());\n            if (typeof activePanel === 'string') {\n                const panel = this.getPanel(activePanel);\n                if (panel) {\n                    this.doSetGroupActive(panel);\n                }\n            }\n        }\n        catch (err) {\n            /**\n             * To remove a group we cannot call this.removeGroup(...) since this makes assumptions about\n             * the underlying HTMLElement existing in the Gridview.\n             */\n            for (const group of this.groups) {\n                group.dispose();\n                this._groups.delete(group.id);\n                this._onDidRemoveGroup.fire(group);\n            }\n            // fires clean-up events and clears the underlying HTML gridview.\n            this.clear();\n            /**\n             * even though we have cleaned-up we still want to inform the caller of their error\n             * and we'll do this through re-throwing the original error since afterall you would\n             * expect trying to load a corrupted layout to result in an error and not silently fail...\n             */\n            throw err;\n        }\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        const hasActiveGroup = this.activeGroup;\n        const groups = Array.from(this._groups.values()); // reassign since group panels will mutate\n        for (const group of groups) {\n            group.disposable.dispose();\n            this.doRemoveGroup(group.value, { skipActive: true });\n        }\n        if (hasActiveGroup) {\n            this.doSetGroupActive(undefined);\n        }\n        this.gridview.clear();\n    }\n    movePanel(panel, options) {\n        var _a;\n        let relativeLocation;\n        const removedPanel = this.gridview.remove(panel);\n        const referenceGroup = (_a = this._groups.get(options.reference)) === null || _a === void 0 ? void 0 : _a.value;\n        if (!referenceGroup) {\n            throw new Error(`reference group ${options.reference} does not exist`);\n        }\n        const target = toTarget(options.direction);\n        if (target === 'center') {\n            throw new Error(`${target} not supported as an option`);\n        }\n        else {\n            const location = getGridLocation(referenceGroup.element);\n            relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n        }\n        this.doAddGroup(removedPanel, relativeLocation, options.size);\n    }\n    addPanel(options) {\n        var _a, _b, _c, _d, _e, _f;\n        let relativeLocation = (_a = options.location) !== null && _a !== void 0 ? _a : [0];\n        if ((_b = options.position) === null || _b === void 0 ? void 0 : _b.referencePanel) {\n            const referenceGroup = (_c = this._groups.get(options.position.referencePanel)) === null || _c === void 0 ? void 0 : _c.value;\n            if (!referenceGroup) {\n                throw new Error(`reference group ${options.position.referencePanel} does not exist`);\n            }\n            const target = toTarget(options.position.direction);\n            if (target === 'center') {\n                throw new Error(`${target} not supported as an option`);\n            }\n            else {\n                const location = getGridLocation(referenceGroup.element);\n                relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n            }\n        }\n        const view = createComponent(options.id, options.component, (_d = this.options.components) !== null && _d !== void 0 ? _d : {}, (_e = this.options.frameworkComponents) !== null && _e !== void 0 ? _e : {}, this.options.frameworkComponentFactory\n            ? {\n                createComponent: this.options.frameworkComponentFactory\n                    .createComponent,\n            }\n            : undefined);\n        view.init({\n            params: (_f = options.params) !== null && _f !== void 0 ? _f : {},\n            minimumWidth: options.minimumWidth,\n            maximumWidth: options.maximumWidth,\n            minimumHeight: options.minimumHeight,\n            maximumHeight: options.maximumHeight,\n            priority: options.priority,\n            snap: !!options.snap,\n            accessor: this,\n            isVisible: true,\n        });\n        this.registerPanel(view);\n        this.doAddGroup(view, relativeLocation, options.size);\n        this.doSetGroupActive(view);\n        return view;\n    }\n    registerPanel(panel) {\n        const disposable = new CompositeDisposable(panel.api.onDidFocusChange((event) => {\n            if (!event.isFocused) {\n                return;\n            }\n            this._groups.forEach((groupItem) => {\n                const group = groupItem.value;\n                if (group !== panel) {\n                    group.setActive(false);\n                }\n                else {\n                    group.setActive(true);\n                }\n            });\n        }));\n        this._groups.set(panel.id, {\n            value: panel,\n            disposable,\n        });\n    }\n    moveGroup(referenceGroup, groupId, target) {\n        const sourceGroup = this.getPanel(groupId);\n        if (!sourceGroup) {\n            throw new Error('invalid operation');\n        }\n        const referenceLocation = getGridLocation(referenceGroup.element);\n        const targetLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, target);\n        const [targetParentLocation, to] = tail(targetLocation);\n        const sourceLocation = getGridLocation(sourceGroup.element);\n        const [sourceParentLocation, from] = tail(sourceLocation);\n        if (sequenceEquals(sourceParentLocation, targetParentLocation)) {\n            // special case when 'swapping' two views within same grid location\n            // if a group has one tab - we are essentially moving the 'group'\n            // which is equivalent to swapping two views in this case\n            this.gridview.moveView(sourceParentLocation, from, to);\n            return;\n        }\n        // source group will become empty so delete the group\n        const targetGroup = this.doRemoveGroup(sourceGroup, {\n            skipActive: true,\n            skipDispose: true,\n        });\n        // after deleting the group we need to re-evaulate the ref location\n        const updatedReferenceLocation = getGridLocation(referenceGroup.element);\n        const location = getRelativeLocation(this.gridview.orientation, updatedReferenceLocation, target);\n        this.doAddGroup(targetGroup, location);\n    }\n    removeGroup(group) {\n        super.removeGroup(group);\n    }\n    dispose() {\n        super.dispose();\n        this._onDidLayoutfromJSON.dispose();\n    }\n}\n","import { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nimport { Orientation, Sizing, Splitview, } from './splitview';\nimport { Emitter } from '../events';\nimport { createComponent } from '../panel/componentFactory';\nimport { Resizable } from '../resizable';\nimport { Classnames } from '../dom';\n/**\n * A high-level implementation of splitview that works using 'panels'\n */\nexport class SplitviewComponent extends Resizable {\n    get panels() {\n        return this.splitview.getViews();\n    }\n    get options() {\n        return this._options;\n    }\n    get length() {\n        return this._panels.size;\n    }\n    get orientation() {\n        return this.splitview.orientation;\n    }\n    get splitview() {\n        return this._splitview;\n    }\n    set splitview(value) {\n        this._splitview = value;\n        this._splitviewChangeDisposable.value = new CompositeDisposable(this._splitview.onDidSashEnd(() => {\n            this._onDidLayoutChange.fire(undefined);\n        }), this._splitview.onDidAddView((e) => this._onDidAddView.fire(e)), this._splitview.onDidRemoveView((e) => this._onDidRemoveView.fire(e)));\n    }\n    get minimumSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumSize() {\n        return this.splitview.maximumSize;\n    }\n    get height() {\n        return this.splitview.orientation === Orientation.HORIZONTAL\n            ? this.splitview.orthogonalSize\n            : this.splitview.size;\n    }\n    get width() {\n        return this.splitview.orientation === Orientation.HORIZONTAL\n            ? this.splitview.size\n            : this.splitview.orthogonalSize;\n    }\n    constructor(parentElement, options) {\n        var _a;\n        super(parentElement, options.disableAutoResizing);\n        this._splitviewChangeDisposable = new MutableDisposable();\n        this._panels = new Map();\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        this._onDidLayoutChange = new Emitter();\n        this.onDidLayoutChange = this._onDidLayoutChange.event;\n        this._classNames = new Classnames(this.element);\n        this._classNames.setClassNames((_a = options.className) !== null && _a !== void 0 ? _a : '');\n        this._options = options;\n        if (!options.components) {\n            options.components = {};\n        }\n        if (!options.frameworkComponents) {\n            options.frameworkComponents = {};\n        }\n        this.splitview = new Splitview(this.element, options);\n        this.addDisposables(this._onDidAddView, this._onDidLayoutfromJSON, this._onDidRemoveView, this._onDidLayoutChange);\n    }\n    updateOptions(options) {\n        var _a, _b;\n        if ('className' in options) {\n            this._classNames.setClassNames((_a = options.className) !== null && _a !== void 0 ? _a : '');\n        }\n        if ('disableResizing' in options) {\n            this.disableResizing = (_b = options.disableAutoResizing) !== null && _b !== void 0 ? _b : false;\n        }\n        if (typeof options.orientation === 'string') {\n            this.splitview.orientation = options.orientation;\n        }\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        this.splitview.layout(this.splitview.size, this.splitview.orthogonalSize);\n    }\n    focus() {\n        var _a;\n        (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    movePanel(from, to) {\n        this.splitview.moveView(from, to);\n    }\n    setVisible(panel, visible) {\n        const index = this.panels.indexOf(panel);\n        this.splitview.setViewVisible(index, visible);\n    }\n    setActive(panel, skipFocus) {\n        this._activePanel = panel;\n        this.panels\n            .filter((v) => v !== panel)\n            .forEach((v) => {\n            v.api._onDidActiveChange.fire({ isActive: false });\n            if (!skipFocus) {\n                v.focus();\n            }\n        });\n        panel.api._onDidActiveChange.fire({ isActive: true });\n        if (!skipFocus) {\n            panel.focus();\n        }\n    }\n    removePanel(panel, sizing) {\n        const item = this._panels.get(panel.id);\n        if (!item) {\n            throw new Error(`unknown splitview panel ${panel.id}`);\n        }\n        item.dispose();\n        this._panels.delete(panel.id);\n        const index = this.panels.findIndex((_) => _ === panel);\n        const removedView = this.splitview.removeView(index, sizing);\n        removedView.dispose();\n        const panels = this.panels;\n        if (panels.length > 0) {\n            this.setActive(panels[panels.length - 1]);\n        }\n    }\n    getPanel(id) {\n        return this.panels.find((view) => view.id === id);\n    }\n    addPanel(options) {\n        var _a, _b, _c;\n        if (this._panels.has(options.id)) {\n            throw new Error(`panel ${options.id} already exists`);\n        }\n        const view = createComponent(options.id, options.component, (_a = this.options.components) !== null && _a !== void 0 ? _a : {}, (_b = this.options.frameworkComponents) !== null && _b !== void 0 ? _b : {}, this.options.frameworkWrapper\n            ? {\n                createComponent: this.options.frameworkWrapper.createComponent,\n            }\n            : undefined);\n        view.orientation = this.splitview.orientation;\n        view.init({\n            params: (_c = options.params) !== null && _c !== void 0 ? _c : {},\n            minimumSize: options.minimumSize,\n            maximumSize: options.maximumSize,\n            snap: options.snap,\n            priority: options.priority,\n            accessor: this,\n        });\n        const size = typeof options.size === 'number' ? options.size : Sizing.Distribute;\n        const index = typeof options.index === 'number' ? options.index : undefined;\n        this.splitview.addView(view, size, index);\n        this.doAddView(view);\n        this.setActive(view);\n        return view;\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.splitview.orientation === Orientation.HORIZONTAL\n            ? [width, height]\n            : [height, width];\n        this.splitview.layout(size, orthogonalSize);\n    }\n    doAddView(view) {\n        const disposable = view.api.onDidFocusChange((event) => {\n            if (!event.isFocused) {\n                return;\n            }\n            this.setActive(view, true);\n        });\n        this._panels.set(view.id, disposable);\n    }\n    toJSON() {\n        var _a;\n        const views = this.splitview\n            .getViews()\n            .map((view, i) => {\n            const size = this.splitview.getViewSize(i);\n            return {\n                size,\n                data: view.toJSON(),\n                snap: !!view.snap,\n                priority: view.priority,\n            };\n        });\n        return {\n            views,\n            activeView: (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.id,\n            size: this.splitview.size,\n            orientation: this.splitview.orientation,\n        };\n    }\n    fromJSON(serializedSplitview) {\n        this.clear();\n        const { views, orientation, size, activeView } = serializedSplitview;\n        const queue = [];\n        // take note of the existing dimensions\n        const width = this.width;\n        const height = this.height;\n        this.splitview = new Splitview(this.element, {\n            orientation,\n            proportionalLayout: this.options.proportionalLayout,\n            descriptor: {\n                size,\n                views: views.map((view) => {\n                    var _a, _b;\n                    const data = view.data;\n                    if (this._panels.has(data.id)) {\n                        throw new Error(`panel ${data.id} already exists`);\n                    }\n                    const panel = createComponent(data.id, data.component, (_a = this.options.components) !== null && _a !== void 0 ? _a : {}, (_b = this.options.frameworkComponents) !== null && _b !== void 0 ? _b : {}, this.options.frameworkWrapper\n                        ? {\n                            createComponent: this.options.frameworkWrapper\n                                .createComponent,\n                        }\n                        : undefined);\n                    queue.push(() => {\n                        var _a;\n                        panel.init({\n                            params: (_a = data.params) !== null && _a !== void 0 ? _a : {},\n                            minimumSize: data.minimumSize,\n                            maximumSize: data.maximumSize,\n                            snap: view.snap,\n                            priority: view.priority,\n                            accessor: this,\n                        });\n                    });\n                    panel.orientation = orientation;\n                    this.doAddView(panel);\n                    setTimeout(() => {\n                        // the original onDidAddView events are missed since they are fired before we can subcribe to them\n                        this._onDidAddView.fire(panel);\n                    }, 0);\n                    return { size: view.size, view: panel };\n                }),\n            },\n        });\n        this.layout(width, height);\n        queue.forEach((f) => f());\n        if (typeof activeView === 'string') {\n            const panel = this.getPanel(activeView);\n            if (panel) {\n                this.setActive(panel);\n            }\n        }\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        for (const disposable of this._panels.values()) {\n            disposable.dispose();\n        }\n        this._panels.clear();\n        while (this.splitview.length > 0) {\n            const view = this.splitview.removeView(0, Sizing.Distribute, true);\n            view.dispose();\n        }\n    }\n    dispose() {\n        for (const disposable of this._panels.values()) {\n            disposable.dispose();\n        }\n        this._panels.clear();\n        const views = this.splitview.getViews();\n        this._splitviewChangeDisposable.dispose();\n        this.splitview.dispose();\n        for (const view of views) {\n            view.dispose();\n        }\n        super.dispose();\n    }\n}\n","import { addDisposableListener } from '../events';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nimport { toggleClass } from '../dom';\nimport { createChevronRightButton, createExpandMoreButton } from '../svg';\nexport class DefaultHeader extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor() {\n        super();\n        this._expandedIcon = createExpandMoreButton();\n        this._collapsedIcon = createChevronRightButton();\n        this.disposable = new MutableDisposable();\n        this.apiRef = {\n            api: null,\n        };\n        this._element = document.createElement('div');\n        this.element.className = 'dv-default-header';\n        this._content = document.createElement('span');\n        this._expander = document.createElement('div');\n        this._expander.className = 'dv-pane-header-icon';\n        this.element.appendChild(this._expander);\n        this.element.appendChild(this._content);\n        this.addDisposables(addDisposableListener(this._element, 'click', () => {\n            var _a;\n            (_a = this.apiRef.api) === null || _a === void 0 ? void 0 : _a.setExpanded(!this.apiRef.api.isExpanded);\n        }));\n    }\n    init(params) {\n        this.apiRef.api = params.api;\n        this._content.textContent = params.title;\n        this.updateIcon();\n        this.disposable.value = params.api.onDidExpansionChange(() => {\n            this.updateIcon();\n        });\n    }\n    updateIcon() {\n        var _a;\n        const isExpanded = !!((_a = this.apiRef.api) === null || _a === void 0 ? void 0 : _a.isExpanded);\n        toggleClass(this._expander, 'collapsed', !isExpanded);\n        if (isExpanded) {\n            if (this._expander.contains(this._collapsedIcon)) {\n                this._collapsedIcon.remove();\n            }\n            if (!this._expander.contains(this._expandedIcon)) {\n                this._expander.appendChild(this._expandedIcon);\n            }\n        }\n        else {\n            if (this._expander.contains(this._expandedIcon)) {\n                this._expandedIcon.remove();\n            }\n            if (!this._expander.contains(this._collapsedIcon)) {\n                this._expander.appendChild(this._collapsedIcon);\n            }\n        }\n    }\n    update(_params) {\n        //\n    }\n    dispose() {\n        this.disposable.dispose();\n        super.dispose();\n    }\n}\n","import { PaneviewApi } from '../api/component.api';\nimport { createComponent } from '../panel/componentFactory';\nimport { Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nimport { Orientation, Sizing } from '../splitview/splitview';\nimport { Paneview } from './paneview';\nimport { DraggablePaneviewPanel, } from './draggablePaneviewPanel';\nimport { DefaultHeader } from './defaultPaneviewHeader';\nimport { sequentialNumberGenerator } from '../math';\nimport { Resizable } from '../resizable';\nimport { Classnames } from '../dom';\nconst nextLayoutId = sequentialNumberGenerator();\nexport class PaneFramework extends DraggablePaneviewPanel {\n    constructor(options) {\n        super(options.accessor, options.id, options.component, options.headerComponent, options.orientation, options.isExpanded, options.disableDnd);\n        this.options = options;\n    }\n    getBodyComponent() {\n        return this.options.body;\n    }\n    getHeaderComponent() {\n        return this.options.header;\n    }\n}\nexport class PaneviewComponent extends Resizable {\n    get id() {\n        return this._id;\n    }\n    get panels() {\n        return this.paneview.getPanes();\n    }\n    set paneview(value) {\n        this._paneview = value;\n        this._disposable.value = new CompositeDisposable(this._paneview.onDidChange(() => {\n            this._onDidLayoutChange.fire(undefined);\n        }), this._paneview.onDidAddView((e) => this._onDidAddView.fire(e)), this._paneview.onDidRemoveView((e) => this._onDidRemoveView.fire(e)));\n    }\n    get paneview() {\n        return this._paneview;\n    }\n    get minimumSize() {\n        return this.paneview.minimumSize;\n    }\n    get maximumSize() {\n        return this.paneview.maximumSize;\n    }\n    get height() {\n        return this.paneview.orientation === Orientation.HORIZONTAL\n            ? this.paneview.orthogonalSize\n            : this.paneview.size;\n    }\n    get width() {\n        return this.paneview.orientation === Orientation.HORIZONTAL\n            ? this.paneview.size\n            : this.paneview.orthogonalSize;\n    }\n    get options() {\n        return this._options;\n    }\n    constructor(parentElement, options) {\n        var _a;\n        super(parentElement, options.disableAutoResizing);\n        this._id = nextLayoutId.next();\n        this._disposable = new MutableDisposable();\n        this._viewDisposables = new Map();\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._onDidLayoutChange = new Emitter();\n        this.onDidLayoutChange = this._onDidLayoutChange.event;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        this.addDisposables(this._onDidLayoutChange, this._onDidLayoutfromJSON, this._onDidDrop, this._onDidAddView, this._onDidRemoveView);\n        this._classNames = new Classnames(this.element);\n        this._classNames.setClassNames((_a = options.className) !== null && _a !== void 0 ? _a : '');\n        this._options = options;\n        if (!options.components) {\n            options.components = {};\n        }\n        if (!options.frameworkComponents) {\n            options.frameworkComponents = {};\n        }\n        this.paneview = new Paneview(this.element, {\n            // only allow paneview in the vertical orientation for now\n            orientation: Orientation.VERTICAL,\n        });\n        this.addDisposables(this._disposable);\n    }\n    setVisible(panel, visible) {\n        const index = this.panels.indexOf(panel);\n        this.paneview.setViewVisible(index, visible);\n    }\n    focus() {\n        //noop\n    }\n    updateOptions(options) {\n        var _a, _b;\n        if ('className' in options) {\n            this._classNames.setClassNames((_a = options.className) !== null && _a !== void 0 ? _a : '');\n        }\n        if ('disableResizing' in options) {\n            this.disableResizing = (_b = options.disableAutoResizing) !== null && _b !== void 0 ? _b : false;\n        }\n        this._options = Object.assign(Object.assign({}, this.options), options);\n    }\n    addPanel(options) {\n        var _a, _b, _c, _d;\n        const body = createComponent(options.id, options.component, (_a = this.options.components) !== null && _a !== void 0 ? _a : {}, (_b = this.options.frameworkComponents) !== null && _b !== void 0 ? _b : {}, this.options.frameworkWrapper\n            ? {\n                createComponent: this.options.frameworkWrapper.body.createComponent,\n            }\n            : undefined);\n        let header;\n        if (options.headerComponent) {\n            header = createComponent(options.id, options.headerComponent, (_c = this.options.headerComponents) !== null && _c !== void 0 ? _c : {}, this.options.headerframeworkComponents, this.options.frameworkWrapper\n                ? {\n                    createComponent: this.options.frameworkWrapper.header\n                        .createComponent,\n                }\n                : undefined);\n        }\n        else {\n            header = new DefaultHeader();\n        }\n        const view = new PaneFramework({\n            id: options.id,\n            component: options.component,\n            headerComponent: options.headerComponent,\n            header,\n            body,\n            orientation: Orientation.VERTICAL,\n            isExpanded: !!options.isExpanded,\n            disableDnd: !!this.options.disableDnd,\n            accessor: this,\n        });\n        this.doAddPanel(view);\n        const size = typeof options.size === 'number' ? options.size : Sizing.Distribute;\n        const index = typeof options.index === 'number' ? options.index : undefined;\n        view.init({\n            params: (_d = options.params) !== null && _d !== void 0 ? _d : {},\n            minimumBodySize: options.minimumBodySize,\n            maximumBodySize: options.maximumBodySize,\n            isExpanded: options.isExpanded,\n            title: options.title,\n            containerApi: new PaneviewApi(this),\n            accessor: this,\n        });\n        this.paneview.addPane(view, size, index);\n        view.orientation = this.paneview.orientation;\n        return view;\n    }\n    removePanel(panel) {\n        const views = this.panels;\n        const index = views.findIndex((_) => _ === panel);\n        this.paneview.removePane(index);\n        this.doRemovePanel(panel);\n    }\n    movePanel(from, to) {\n        this.paneview.moveView(from, to);\n    }\n    getPanel(id) {\n        return this.panels.find((view) => view.id === id);\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.paneview.orientation === Orientation.HORIZONTAL\n            ? [width, height]\n            : [height, width];\n        this.paneview.layout(size, orthogonalSize);\n    }\n    toJSON() {\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ||\n            value === Number.POSITIVE_INFINITY\n            ? undefined\n            : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        const views = this.paneview\n            .getPanes()\n            .map((view, i) => {\n            const size = this.paneview.getViewSize(i);\n            return {\n                size,\n                data: view.toJSON(),\n                minimumSize: minimum(view.minimumBodySize),\n                maximumSize: maximum(view.maximumBodySize),\n                expanded: view.isExpanded(),\n            };\n        });\n        return {\n            views,\n            size: this.paneview.size,\n        };\n    }\n    fromJSON(serializedPaneview) {\n        this.clear();\n        const { views, size } = serializedPaneview;\n        const queue = [];\n        // take note of the existing dimensions\n        const width = this.width;\n        const height = this.height;\n        this.paneview = new Paneview(this.element, {\n            orientation: Orientation.VERTICAL,\n            descriptor: {\n                size,\n                views: views.map((view) => {\n                    var _a, _b, _c, _d;\n                    const data = view.data;\n                    const body = createComponent(data.id, data.component, (_a = this.options.components) !== null && _a !== void 0 ? _a : {}, (_b = this.options.frameworkComponents) !== null && _b !== void 0 ? _b : {}, this.options.frameworkWrapper\n                        ? {\n                            createComponent: this.options.frameworkWrapper.body\n                                .createComponent,\n                        }\n                        : undefined);\n                    let header;\n                    if (data.headerComponent) {\n                        header = createComponent(data.id, data.headerComponent, (_c = this.options.headerComponents) !== null && _c !== void 0 ? _c : {}, (_d = this.options.headerframeworkComponents) !== null && _d !== void 0 ? _d : {}, this.options.frameworkWrapper\n                            ? {\n                                createComponent: this.options.frameworkWrapper.header\n                                    .createComponent,\n                            }\n                            : undefined);\n                    }\n                    else {\n                        header = new DefaultHeader();\n                    }\n                    const panel = new PaneFramework({\n                        id: data.id,\n                        component: data.component,\n                        headerComponent: data.headerComponent,\n                        header,\n                        body,\n                        orientation: Orientation.VERTICAL,\n                        isExpanded: !!view.expanded,\n                        disableDnd: !!this.options.disableDnd,\n                        accessor: this,\n                    });\n                    this.doAddPanel(panel);\n                    queue.push(() => {\n                        var _a;\n                        panel.init({\n                            params: (_a = data.params) !== null && _a !== void 0 ? _a : {},\n                            minimumBodySize: view.minimumSize,\n                            maximumBodySize: view.maximumSize,\n                            title: data.title,\n                            isExpanded: !!view.expanded,\n                            containerApi: new PaneviewApi(this),\n                            accessor: this,\n                        });\n                        panel.orientation = this.paneview.orientation;\n                    });\n                    setTimeout(() => {\n                        // the original onDidAddView events are missed since they are fired before we can subcribe to them\n                        this._onDidAddView.fire(panel);\n                    }, 0);\n                    return { size: view.size, view: panel };\n                }),\n            },\n        });\n        this.layout(width, height);\n        queue.forEach((f) => f());\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        for (const [_, value] of this._viewDisposables.entries()) {\n            value.dispose();\n        }\n        this._viewDisposables.clear();\n        this.paneview.dispose();\n    }\n    doAddPanel(panel) {\n        const disposable = panel.onDidDrop((event) => {\n            this._onDidDrop.fire(event);\n        });\n        this._viewDisposables.set(panel.id, disposable);\n    }\n    doRemovePanel(panel) {\n        const disposable = this._viewDisposables.get(panel.id);\n        if (disposable) {\n            disposable.dispose();\n            this._viewDisposables.delete(panel.id);\n        }\n    }\n    dispose() {\n        super.dispose();\n        for (const [_, value] of this._viewDisposables.entries()) {\n            value.dispose();\n        }\n        this._viewDisposables.clear();\n        this.paneview.dispose();\n    }\n}\n","import { BasePanelView, } from '../gridview/basePanelView';\nimport { SplitviewPanelApiImpl } from '../api/splitviewPanelApi';\nimport { Orientation } from './splitview';\nimport { Emitter } from '../events';\nexport class SplitviewPanel extends BasePanelView {\n    get priority() {\n        return this._priority;\n    }\n    set orientation(value) {\n        this._orientation = value;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    get minimumSize() {\n        const size = typeof this._minimumSize === 'function'\n            ? this._minimumSize()\n            : this._minimumSize;\n        if (size !== this._evaluatedMinimumSize) {\n            this._evaluatedMinimumSize = size;\n            this.updateConstraints();\n        }\n        return size;\n    }\n    get maximumSize() {\n        const size = typeof this._maximumSize === 'function'\n            ? this._maximumSize()\n            : this._maximumSize;\n        if (size !== this._evaluatedMaximumSize) {\n            this._evaluatedMaximumSize = size;\n            this.updateConstraints();\n        }\n        return size;\n    }\n    get snap() {\n        return this._snap;\n    }\n    constructor(id, componentName) {\n        super(id, componentName, new SplitviewPanelApiImpl(id, componentName));\n        this._evaluatedMinimumSize = 0;\n        this._evaluatedMaximumSize = Number.POSITIVE_INFINITY;\n        this._minimumSize = 0;\n        this._maximumSize = Number.POSITIVE_INFINITY;\n        this._snap = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this.api.initialize(this);\n        this.addDisposables(this._onDidChange, this.api.onWillVisibilityChange((event) => {\n            const { isVisible } = event;\n            const { accessor } = this._params;\n            accessor.setVisible(this, isVisible);\n        }), this.api.onActiveChange(() => {\n            const { accessor } = this._params;\n            accessor.setActive(this);\n        }), this.api.onDidConstraintsChangeInternal((event) => {\n            if (typeof event.minimumSize === 'number' ||\n                typeof event.minimumSize === 'function') {\n                this._minimumSize = event.minimumSize;\n            }\n            if (typeof event.maximumSize === 'number' ||\n                typeof event.maximumSize === 'function') {\n                this._maximumSize = event.maximumSize;\n            }\n            this.updateConstraints();\n        }), this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire({ size: event.size });\n        }));\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    layout(size, orthogonalSize) {\n        const [width, height] = this.orientation === Orientation.HORIZONTAL\n            ? [size, orthogonalSize]\n            : [orthogonalSize, size];\n        super.layout(width, height);\n    }\n    init(parameters) {\n        super.init(parameters);\n        this._priority = parameters.priority;\n        if (parameters.minimumSize) {\n            this._minimumSize = parameters.minimumSize;\n        }\n        if (parameters.maximumSize) {\n            this._maximumSize = parameters.maximumSize;\n        }\n        if (parameters.snap) {\n            this._snap = parameters.snap;\n        }\n    }\n    toJSON() {\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ||\n            value === Number.POSITIVE_INFINITY\n            ? undefined\n            : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        return Object.assign(Object.assign({}, super.toJSON()), { minimumSize: minimum(this.minimumSize), maximumSize: maximum(this.maximumSize) });\n    }\n    updateConstraints() {\n        this.api._onDidConstraintsChange.fire({\n            maximumSize: this._evaluatedMaximumSize,\n            minimumSize: this._evaluatedMinimumSize,\n        });\n    }\n}\n","import { GridviewApi, PaneviewApi, SplitviewApi, } from '../api/component.api';\nimport { DockviewComponent } from '../dockview/dockviewComponent';\nimport { GridviewComponent } from '../gridview/gridviewComponent';\nimport { PaneviewComponent } from '../paneview/paneviewComponent';\nimport { SplitviewComponent } from '../splitview/splitviewComponent';\nexport function createDockview(element, options) {\n    const component = new DockviewComponent(element, options);\n    return component.api;\n}\nexport function createSplitview(element, options) {\n    const component = new SplitviewComponent(element, options);\n    return new SplitviewApi(component);\n}\nexport function createGridview(element, options) {\n    const component = new GridviewComponent(element, options);\n    return new GridviewApi(component);\n}\nexport function createPaneview(element, options) {\n    const component = new PaneviewComponent(element, options);\n    return new PaneviewApi(component);\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { DockviewDisposable, } from 'dockview-core';\n/**\n * This component is intended to interface between vanilla-js and React hence we need to be\n * creative in how we update props.\n * A ref of the component is exposed with an update method; which when called stores the props\n * as a ref within this component and forcefully triggers a re-render of the component using\n * the ref of props we just set on the renderered component as the props passed to the inner\n * component\n */\nconst ReactComponentBridge = (props, ref) => {\n    const [_, triggerRender] = React.useState();\n    const _props = React.useRef(props.componentProps);\n    React.useImperativeHandle(ref, () => ({\n        update: (componentProps) => {\n            _props.current = Object.assign(Object.assign({}, _props.current), componentProps);\n            /**\n             * setting a arbitrary piece of state within this component will\n             * trigger a re-render.\n             * we use this rather than updating through a prop since we can\n             * pass a ref into the vanilla-js world.\n             */\n            triggerRender(Date.now());\n        },\n    }), []);\n    return React.createElement(props.component, _props.current);\n};\nReactComponentBridge.displayName = 'DockviewReactJsBridge';\n/**\n * Since we are storing the React.Portal references in a rendered array they\n * require a key property like any other React element rendered in an array\n * to prevent excessive re-rendering\n */\nconst uniquePortalKeyGenerator = (() => {\n    let value = 1;\n    return { next: () => `dockview_react_portal_key_${(value++).toString()}` };\n})();\nexport const ReactPartContext = React.createContext({});\nexport class ReactPart {\n    constructor(parent, portalStore, component, parameters, context) {\n        this.parent = parent;\n        this.portalStore = portalStore;\n        this.component = component;\n        this.parameters = parameters;\n        this.context = context;\n        this._initialProps = {};\n        this.disposed = false;\n        this.createPortal();\n    }\n    update(props) {\n        if (this.disposed) {\n            throw new Error('invalid operation: resource is already disposed');\n        }\n        if (!this.componentInstance) {\n            // if the component is yet to be mounted store the props\n            this._initialProps = Object.assign(Object.assign({}, this._initialProps), props);\n        }\n        else {\n            this.componentInstance.update(props);\n        }\n    }\n    createPortal() {\n        if (this.disposed) {\n            throw new Error('invalid operation: resource is already disposed');\n        }\n        if (!isReactComponent(this.component)) {\n            /**\n             * we know this isn't a React.FunctionComponent so throw an error here.\n             * if we do not intercept then React library will throw a very obsure error\n             * for the same reason... at least at this point we will emit a sensible stacktrace.\n             */\n            throw new Error('Dockview: Only React.memo(...), React.ForwardRef(...) and functional components are accepted as components');\n        }\n        const bridgeComponent = React.createElement(React.forwardRef(ReactComponentBridge), {\n            component: this\n                .component,\n            componentProps: this.parameters,\n            ref: (element) => {\n                this.componentInstance = element;\n                if (Object.keys(this._initialProps).length > 0) {\n                    this.componentInstance.update(this._initialProps);\n                    this._initialProps = {}; // don't keep a reference to the users object once no longer required\n                }\n            },\n        });\n        const node = this.context\n            ? React.createElement(ReactPartContext.Provider, { value: this.context }, bridgeComponent)\n            : bridgeComponent;\n        const portal = ReactDOM.createPortal(node, this.parent, uniquePortalKeyGenerator.next());\n        this.ref = {\n            portal,\n            disposable: this.portalStore.addPortal(portal),\n        };\n    }\n    dispose() {\n        var _a;\n        (_a = this.ref) === null || _a === void 0 ? void 0 : _a.disposable.dispose();\n        this.disposed = true;\n    }\n}\n/**\n * A React Hook that returns an array of portals to be rendered by the user of this hook\n * and a disposable function to add a portal. Calling dispose removes this portal from the\n * portal array\n */\nexport const usePortalsLifecycle = () => {\n    const [portals, setPortals] = React.useState([]);\n    React.useDebugValue(`Portal count: ${portals.length}`);\n    const addPortal = React.useCallback((portal) => {\n        setPortals((existingPortals) => [...existingPortals, portal]);\n        let disposed = false;\n        return DockviewDisposable.from(() => {\n            if (disposed) {\n                throw new Error('invalid operation: resource already disposed');\n            }\n            disposed = true;\n            setPortals((existingPortals) => existingPortals.filter((p) => p !== portal));\n        });\n    }, []);\n    return [portals, addPortal];\n};\nexport function isReactComponent(component) {\n    /**\n     * Yes, we could use \"react-is\" but that would introduce an unwanted peer dependency\n     * so for now we will check in a rather crude fashion...\n     */\n    return (typeof component === 'function' /** Functional Componnts */ ||\n        !!(component === null || component === void 0 ? void 0 : component.$$typeof) /** React.memo(...) Components */);\n}\n","import { ReactPart } from '../react';\nimport { DockviewEmitter, } from 'dockview-core';\nexport class ReactPanelContentPart {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._onDidFocus = new DockviewEmitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new DockviewEmitter();\n        this.onDidBlur = this._onDidBlur.event;\n        this._element = document.createElement('div');\n        this._element.className = 'dockview-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    focus() {\n        // TODO\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n        });\n    }\n    update(event) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update({ params: event.params });\n    }\n    layout(_width, _height) {\n        // noop\n    }\n    dispose() {\n        var _a;\n        this._onDidFocus.dispose();\n        this._onDidBlur.dispose();\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { ReactPart } from '../react';\nexport class ReactPanelHeaderPart {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._element = document.createElement('div');\n        this._element.className = 'dockview-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    focus() {\n        //noop\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n        });\n    }\n    update(event) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update({ params: event.params });\n    }\n    layout(_width, _height) {\n        // noop - retrieval from api\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { ReactPart } from '../react';\nexport class ReactWatermarkPart {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._element = document.createElement('div');\n        this._element.className = 'dockview-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            group: parameters.group,\n            containerApi: parameters.containerApi,\n        });\n    }\n    focus() {\n        // noop\n    }\n    update(params) {\n        var _a, _b, _c;\n        if (this.parameters) {\n            this.parameters.params = params.params;\n        }\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update({ params: (_c = (_b = this.parameters) === null || _b === void 0 ? void 0 : _b.params) !== null && _c !== void 0 ? _c : {} });\n    }\n    layout(_width, _height) {\n        // noop - retrieval from api\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { ReactPart } from '../react';\nimport { DockviewCompositeDisposable, DockviewMutableDisposable, } from 'dockview-core';\nexport class ReactHeaderActionsRendererPart {\n    get element() {\n        return this._element;\n    }\n    get part() {\n        return this._part;\n    }\n    constructor(component, reactPortalStore, _group) {\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._group = _group;\n        this.mutableDisposable = new DockviewMutableDisposable();\n        this._element = document.createElement('div');\n        this._element.className = 'dockview-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    init(parameters) {\n        this.mutableDisposable.value = new DockviewCompositeDisposable(this._group.model.onDidAddPanel(() => {\n            this.updatePanels();\n        }), this._group.model.onDidRemovePanel(() => {\n            this.updatePanels();\n        }), this._group.model.onDidActivePanelChange(() => {\n            this.updateActivePanel();\n        }), parameters.api.onDidActiveChange(() => {\n            this.updateGroupActive();\n        }));\n        this._part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n            panels: this._group.model.panels,\n            activePanel: this._group.model.activePanel,\n            isGroupActive: this._group.api.isActive,\n            group: this._group,\n        });\n    }\n    dispose() {\n        var _a;\n        this.mutableDisposable.dispose();\n        (_a = this._part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n    update(event) {\n        var _a;\n        (_a = this._part) === null || _a === void 0 ? void 0 : _a.update(event.params);\n    }\n    updatePanels() {\n        this.update({ params: { panels: this._group.model.panels } });\n    }\n    updateActivePanel() {\n        this.update({\n            params: {\n                activePanel: this._group.model.activePanel,\n            },\n        });\n    }\n    updateGroupActive() {\n        this.update({\n            params: {\n                isGroupActive: this._group.api.isActive,\n            },\n        });\n    }\n}\n","import React from 'react';\nimport { PROPERTY_KEYS, createDockview, } from 'dockview-core';\nimport { ReactPanelContentPart } from './reactContentPart';\nimport { ReactPanelHeaderPart } from './reactHeaderPart';\nimport { usePortalsLifecycle } from '../react';\nimport { ReactWatermarkPart } from './reactWatermarkPart';\nimport { ReactHeaderActionsRendererPart } from './headerActionsRenderer';\nfunction createGroupControlElement(component, store) {\n    return component\n        ? (groupPanel) => {\n            return new ReactHeaderActionsRendererPart(component, store, groupPanel);\n        }\n        : undefined;\n}\nconst DEFAULT_REACT_TAB = 'props.defaultTabComponent';\nfunction extractCoreOptions(props) {\n    const coreOptions = PROPERTY_KEYS.reduce((obj, key) => {\n        if (key in props) {\n            obj[key] = props[key];\n        }\n        return obj;\n    }, {});\n    return coreOptions;\n}\nexport const DockviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const dockviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    const prevProps = React.useRef({});\n    React.useEffect(() => {\n        const changes = {};\n        PROPERTY_KEYS.forEach((propKey) => {\n            const key = propKey;\n            const propValue = props[key];\n            if (key in props && propValue !== prevProps.current[key]) {\n                changes[key] = propValue;\n            }\n        });\n        if (dockviewRef.current) {\n            dockviewRef.current.updateOptions(changes);\n        }\n        else {\n            // not yet fully initialized\n        }\n        prevProps.current = props;\n    }, PROPERTY_KEYS.map((key) => props[key]));\n    React.useEffect(() => {\n        var _a;\n        if (!domRef.current) {\n            return;\n        }\n        const frameworkTabComponents = (_a = props.tabComponents) !== null && _a !== void 0 ? _a : {};\n        if (props.defaultTabComponent) {\n            frameworkTabComponents[DEFAULT_REACT_TAB] =\n                props.defaultTabComponent;\n        }\n        const frameworkOptions = {\n            createLeftHeaderActionComponent: createGroupControlElement(props.leftHeaderActionsComponent, { addPortal }),\n            createRightHeaderActionComponent: createGroupControlElement(props.rightHeaderActionsComponent, { addPortal }),\n            createPrefixHeaderActionComponent: createGroupControlElement(props.prefixHeaderActionsComponent, { addPortal }),\n            createComponent: (options) => {\n                return new ReactPanelContentPart(options.id, props.components[options.name], {\n                    addPortal,\n                });\n            },\n            createTabComponent(options) {\n                return new ReactPanelHeaderPart(options.id, frameworkTabComponents[options.name], {\n                    addPortal,\n                });\n            },\n            createWatermarkComponent: props.watermarkComponent\n                ? () => {\n                    return new ReactWatermarkPart('watermark', props.watermarkComponent, {\n                        addPortal,\n                    });\n                }\n                : undefined,\n            defaultTabComponent: props.defaultTabComponent\n                ? DEFAULT_REACT_TAB\n                : undefined,\n        };\n        const api = createDockview(domRef.current, Object.assign(Object.assign({}, extractCoreOptions(props)), frameworkOptions));\n        const { clientWidth, clientHeight } = domRef.current;\n        api.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api });\n        }\n        dockviewRef.current = api;\n        return () => {\n            api.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const disposable = dockviewRef.current.onDidDrop((event) => {\n            if (props.onDidDrop) {\n                props.onDidDrop(event);\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.onDidDrop]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const disposable = dockviewRef.current.onWillDrop((event) => {\n            if (props.onWillDrop) {\n                props.onWillDrop(event);\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.onWillDrop]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createComponent: (options) => {\n                return new ReactPanelContentPart(options.id, props.components[options.name], {\n                    addPortal,\n                });\n            },\n        });\n    }, [props.components]);\n    React.useEffect(() => {\n        var _a;\n        if (!dockviewRef.current) {\n            return;\n        }\n        const frameworkTabComponents = (_a = props.tabComponents) !== null && _a !== void 0 ? _a : {};\n        if (props.defaultTabComponent) {\n            frameworkTabComponents[DEFAULT_REACT_TAB] =\n                props.defaultTabComponent;\n        }\n        dockviewRef.current.updateOptions({\n            defaultTabComponent: props.defaultTabComponent\n                ? DEFAULT_REACT_TAB\n                : undefined,\n            createTabComponent(options) {\n                return new ReactPanelHeaderPart(options.id, frameworkTabComponents[options.name], {\n                    addPortal,\n                });\n            },\n        });\n    }, [props.tabComponents, props.defaultTabComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createWatermarkComponent: props.watermarkComponent\n                ? () => {\n                    return new ReactWatermarkPart('watermark', props.watermarkComponent, {\n                        addPortal,\n                    });\n                }\n                : undefined,\n        });\n    }, [props.watermarkComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createRightHeaderActionComponent: createGroupControlElement(props.rightHeaderActionsComponent, { addPortal }),\n        });\n    }, [props.rightHeaderActionsComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createLeftHeaderActionComponent: createGroupControlElement(props.leftHeaderActionsComponent, { addPortal }),\n        });\n    }, [props.leftHeaderActionsComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createPrefixHeaderActionComponent: createGroupControlElement(props.prefixHeaderActionsComponent, { addPortal }),\n        });\n    }, [props.prefixHeaderActionsComponent]);\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nDockviewReact.displayName = 'DockviewComponent';\n","import React from 'react';\nexport const CloseButton = () => (React.createElement(\"svg\", { height: \"11\", width: \"11\", viewBox: \"0 0 28 28\", \"aria-hidden\": 'false', focusable: false, className: \"dockview-svg\" },\n    React.createElement(\"path\", { d: \"M2.1 27.3L0 25.2L11.55 13.65L0 2.1L2.1 0L13.65 11.55L25.2 0L27.3 2.1L15.75 13.65L27.3 25.2L25.2 27.3L13.65 15.75L2.1 27.3Z\" })));\nexport const ExpandMore = () => {\n    return (React.createElement(\"svg\", { width: \"11\", height: \"11\", viewBox: \"0 0 24 15\", \"aria-hidden\": 'false', focusable: false, className: \"dockview-svg\" },\n        React.createElement(\"path\", { d: \"M12 14.15L0 2.15L2.15 0L12 9.9L21.85 0.0499992L24 2.2L12 14.15Z\" })));\n};\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React from 'react';\nimport { CloseButton } from '../svg';\nfunction useTitle(api) {\n    const [title, setTitle] = React.useState(api.title);\n    React.useEffect(() => {\n        const disposable = api.onDidTitleChange((event) => {\n            setTitle(event.title);\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [api]);\n    return title;\n}\nexport const DockviewDefaultTab = (_a) => {\n    var { api, containerApi: _containerApi, params: _params, hideClose, closeActionOverride } = _a, rest = __rest(_a, [\"api\", \"containerApi\", \"params\", \"hideClose\", \"closeActionOverride\"]);\n    const title = useTitle(api);\n    const onClose = React.useCallback((event) => {\n        event.preventDefault();\n        if (closeActionOverride) {\n            closeActionOverride();\n        }\n        else {\n            api.close();\n        }\n    }, [api, closeActionOverride]);\n    const onPointerDown = React.useCallback((e) => {\n        e.preventDefault();\n    }, []);\n    const onClick = React.useCallback((event) => {\n        if (event.defaultPrevented) {\n            return;\n        }\n        api.setActive();\n        if (rest.onClick) {\n            rest.onClick(event);\n        }\n    }, [api, rest.onClick]);\n    return (React.createElement(\"div\", Object.assign({ \"data-testid\": \"dockview-dv-default-tab\" }, rest, { onClick: onClick, className: \"dv-default-tab\" }),\n        React.createElement(\"span\", { className: \"dv-default-tab-content\" }, title),\n        !hideClose && (React.createElement(\"div\", { className: \"dv-default-tab-action\", onPointerDown: onPointerDown, onClick: onClose },\n            React.createElement(CloseButton, null)))));\n};\n","import { SplitviewApi, SplitviewPanel, } from 'dockview-core';\nimport { ReactPart } from '../react';\nexport class ReactPanelView extends SplitviewPanel {\n    constructor(id, component, reactComponent, reactPortalStore) {\n        super(id, component);\n        this.reactComponent = reactComponent;\n        this.reactPortalStore = reactPortalStore;\n    }\n    getComponent() {\n        var _a, _b;\n        return new ReactPart(this.element, this.reactPortalStore, this.reactComponent, {\n            params: (_b = (_a = this._params) === null || _a === void 0 ? void 0 : _a.params) !== null && _b !== void 0 ? _b : {},\n            api: this.api,\n            containerApi: new SplitviewApi(this._params.accessor),\n        });\n    }\n}\n","import React from 'react';\nimport { Orientation, createSplitview, } from 'dockview-core';\nimport { usePortalsLifecycle } from '../react';\nimport { ReactPanelView } from './view';\nexport const SplitviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const splitviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    React.useEffect(() => {\n        var _a;\n        const api = createSplitview(domRef.current, {\n            disableAutoResizing: props.disableAutoResizing,\n            orientation: (_a = props.orientation) !== null && _a !== void 0 ? _a : Orientation.HORIZONTAL,\n            frameworkComponents: props.components,\n            frameworkWrapper: {\n                createComponent: (id, componentId, component) => {\n                    return new ReactPanelView(id, componentId, component, {\n                        addPortal,\n                    });\n                },\n            },\n            proportionalLayout: typeof props.proportionalLayout === 'boolean'\n                ? props.proportionalLayout\n                : true,\n            styles: props.hideBorders\n                ? { separatorBorder: 'transparent' }\n                : undefined,\n        });\n        const { clientWidth, clientHeight } = domRef.current;\n        api.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api });\n        }\n        splitviewRef.current = api;\n        return () => {\n            api.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!splitviewRef.current) {\n            return;\n        }\n        splitviewRef.current.updateOptions({\n            frameworkComponents: props.components,\n        });\n    }, [props.components]);\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nSplitviewReact.displayName = 'SplitviewComponent';\n","import { GridviewApi, GridviewPanel, } from 'dockview-core';\nimport { ReactPart } from '../react';\nexport class ReactGridPanelView extends GridviewPanel {\n    constructor(id, component, reactComponent, reactPortalStore) {\n        super(id, component);\n        this.reactComponent = reactComponent;\n        this.reactPortalStore = reactPortalStore;\n    }\n    getComponent() {\n        var _a, _b;\n        return new ReactPart(this.element, this.reactPortalStore, this.reactComponent, {\n            params: (_b = (_a = this._params) === null || _a === void 0 ? void 0 : _a.params) !== null && _b !== void 0 ? _b : {},\n            api: this.api,\n            // TODO: fix casting hack\n            containerApi: new GridviewApi(this._params\n                .accessor),\n        });\n    }\n}\n","import React from 'react';\nimport { Orientation, createGridview, } from 'dockview-core';\nimport { ReactGridPanelView } from './view';\nimport { usePortalsLifecycle } from '../react';\nexport const GridviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const gridviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    React.useEffect(() => {\n        var _a;\n        if (!domRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const api = createGridview(domRef.current, {\n            disableAutoResizing: props.disableAutoResizing,\n            proportionalLayout: typeof props.proportionalLayout === 'boolean'\n                ? props.proportionalLayout\n                : true,\n            orientation: (_a = props.orientation) !== null && _a !== void 0 ? _a : Orientation.HORIZONTAL,\n            frameworkComponents: props.components,\n            frameworkComponentFactory: {\n                createComponent: (id, componentId, component) => {\n                    return new ReactGridPanelView(id, componentId, component, {\n                        addPortal,\n                    });\n                },\n            },\n            styles: props.hideBorders\n                ? { separatorBorder: 'transparent' }\n                : undefined,\n        });\n        const { clientWidth, clientHeight } = domRef.current;\n        api.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api });\n        }\n        gridviewRef.current = api;\n        return () => {\n            api.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!gridviewRef.current) {\n            return;\n        }\n        gridviewRef.current.updateOptions({\n            frameworkComponents: props.components,\n        });\n    }, [props.components]);\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nGridviewReact.displayName = 'GridviewComponent';\n","import { ReactPart } from '../react';\nexport class PanePanelSection {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._element = document.createElement('div');\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            title: parameters.title,\n            containerApi: parameters.containerApi,\n        });\n    }\n    toJSON() {\n        return {\n            id: this.id,\n        };\n    }\n    update(params) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update(params.params);\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import React from 'react';\nimport { createPaneview, } from 'dockview-core';\nimport { usePortalsLifecycle } from '../react';\nimport { PanePanelSection } from './view';\nexport const PaneviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const paneviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    React.useEffect(() => {\n        const createComponent = (id, _componentId, component) => new PanePanelSection(id, component, {\n            addPortal,\n        });\n        const api = createPaneview(domRef.current, {\n            disableAutoResizing: props.disableAutoResizing,\n            frameworkComponents: props.components,\n            components: {},\n            headerComponents: {},\n            disableDnd: props.disableDnd,\n            headerframeworkComponents: props.headerComponents,\n            frameworkWrapper: {\n                header: {\n                    createComponent,\n                },\n                body: {\n                    createComponent,\n                },\n            },\n            showDndOverlay: props.showDndOverlay,\n        });\n        const { clientWidth, clientHeight } = domRef.current;\n        api.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api });\n        }\n        paneviewRef.current = api;\n        return () => {\n            api.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return;\n        }\n        paneviewRef.current.updateOptions({\n            frameworkComponents: props.components,\n        });\n    }, [props.components]);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return;\n        }\n        paneviewRef.current.updateOptions({\n            headerframeworkComponents: props.headerComponents,\n        });\n    }, [props.headerComponents]);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return () => {\n                //\n            };\n        }\n        const api = paneviewRef.current;\n        const disposable = api.onDidDrop((event) => {\n            if (props.onDidDrop) {\n                props.onDidDrop(Object.assign(Object.assign({}, event), { api }));\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.onDidDrop]);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return;\n        }\n        paneviewRef.current.updateOptions({\n            showDndOverlay: props.showDndOverlay,\n        });\n    }, [props.showDndOverlay]);\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nPaneviewReact.displayName = 'PaneviewComponent';\n","import {\n    SplitviewReact,\n    SplitviewReadyEvent,\n    ISplitviewPanelProps,\n} from 'dockview';\nimport * as React from 'react';\n\nconst components = {\n    default: (props: ISplitviewPanelProps<{ title: string }>) => {\n        return (\n            <div\n                style={{\n                    padding: '10px',\n                    height: '100%',\n                }}\n            >\n                {props.params.title}\n            </div>\n        );\n    },\n};\n\nexport const App: React.FC = (props: { theme?: string }) => {\n    const onReady = (event: SplitviewReadyEvent) => {\n        event.api.addPanel({\n            id: 'panel_1',\n            component: 'default',\n            params: {\n                title: 'Panel 1',\n            },\n        });\n\n        event.api.addPanel({\n            id: 'panel_2',\n            component: 'default',\n            params: {\n                title: 'Panel 2',\n            },\n        });\n\n        event.api.addPanel({\n            id: 'panel_3',\n            component: 'default',\n            params: {\n                title: 'Panel 3',\n            },\n        });\n    };\n\n    return (\n        <SplitviewReact\n            components={components}\n            onReady={onReady}\n            className={props.theme || 'dockview-theme-abyss'}\n        />\n    );\n};\n\nexport default App;\n"],"names":["TransferObject","PanelTransfer","constructor","viewId","groupId","panelId","super","this","PaneTransfer","paneId","LocalSelectionTransfer","getInstance","INSTANCE","hasData","proto","clearData","undefined","data","getData","setData","getPanelData","panelTransfer","prototype","getPaneData","paneTransfer","Event","Disposable","any","_len","arguments","length","children","Array","_key","listener","disposables","map","child","dispose","forEach","d","DockviewEvent","_defaultPrevented","defaultPrevented","preventDefault","Stacktrace","create","_a","Error","stack","value","print","console","warn","Listener","callback","stacktrace","Emitter","setLeakageMonitorEnabled","isEnabled","ENABLE_TRACKING","MEMORY_LEAK_WATCHER","clear","_last","options","_listeners","_disposed","event","_event","replay","push","index","indexOf","splice","add","fire","e","queueMicrotask","delete","addDisposableWindowListener","element","type","addEventListener","removeEventListener","addDisposableListener","events","Map","size","set","AsapEvent","_onFired","_currentFireCount","_queued","onEvent","fireCountAtTimeOfEventSubscription","NONE","from","func","CompositeDisposable","isDisposed","_isDisposed","args","_disposables","addDisposables","_len2","_key2","arg","MutableDisposable","_disposable","disposable","watchElementResize","cb","observer","ResizeObserver","entires","requestAnimationFrame","firstEntry","observe","unobserve","disconnect","removeClasses","classes","classname","classList","contains","remove","addClasses","toggleClass","className","isToggled","hasClass","isAncestor","testChild","testAncestor","parentNode","getElementsByTagName","tag","slice","call","document","trackFocus","FocusTracker","_onDidFocus","onDidFocus","_onDidBlur","onDidBlur","hasFocus","activeElement","loosingFocus","onFocus","onBlur","window","setTimeout","_refreshStateHandler","HTMLElement","refreshState","QUASI_PREVENT_DEFAULT_KEY","quasiDefaultPrevented","getDomNodePagePosition","domNode","left","top","width","height","getBoundingClientRect","scrollX","scrollY","disableIframePointEvents","iframes","original","WeakMap","iframe","style","pointerEvents","release","get","Classnames","_classNames","setClassNames","classNames","split","filter","v","trim","tail","arr","sequenceEquals","arr1","arr2","i","pushToStart","unshift","pushToEnd","array","findIndex","t","clamp","min","max","Math","sequentialNumberGenerator","next","toString","range","to","result","ViewItem","_size","cachedVisibleSize","_cachedVisibleSize","visible","minimumSize","view","viewMinimumSize","maximumSize","viewMaximumSize","priority","snap","enabled","container","setVisible","toggle","Orientation","SashState","LayoutPriority","Sizing","Distribute","Split","Invisible","Splitview","contentSize","_contentSize","orthogonalSize","_orthogonalSize","viewItems","proportions","_proportions","orientation","_orientation","tmp","HORIZONTAL","reduce","r","item","Number","POSITIVE_INFINITY","startSnappingEnabled","_startSnappingEnabled","updateSashEnablement","endSnappingEnabled","_endSnappingEnabled","disabled","_disabled","margin","_margin","_this","sashes","_onDidSashEnd","onDidSashEnd","_onDidAddView","onDidAddView","_onDidRemoveView","onDidRemoveView","resize","delta","sizes","lowPriorityIndexes","highPriorityIndexes","overloadMinDelta","overloadMaxDelta","snapBefore","snapAfter","x","NEGATIVE_INFINITY","upIndexes","downIndexes","upItems","upSizes","downItems","downSizes","minDeltaUp","_","maxDeltaUp","maxDeltaDown","minDeltaDown","minDelta","maxDelta","snapped","snapView","limitDelta","actualDelta","deltaUp","viewDelta","deltaDown","createContainer","proportionalLayout","viewContainer","createViewContainer","sashContainer","createSashContainer","appendChild","styles","descriptor","views","viewDescriptor","sizing","addView","saveProportions","separatorBorder","removeProperty","setProperty","isViewVisible","setViewVisible","viewItem","distributeEmptySpace","layoutViews","getViewSize","resizeView","indexes","Low","High","round","relayout","getViews","onDidChange","skipLayout","createElement","viewSize","newSize","removeChild","insertBefore","sash","onPointerStart","start","clientX","clientY","sashIndex","fn","firstIndex","s","snapBeforeIndex","findFirstSnapIndex","snapAfterIndex","snappedViewItem","halfSize","floor","onPointerMove","end","sashItem","distributeViewSizes","flexibleViewItems","flexibleSize","removeView","getViewCachedVisibleSize","moveView","layout","previousSize","total","proportion","lowPriorityIndex","emptyDelta","visibleViewItems","sashCount","marginReducedSize","totalLeftOffset","viewLeftOffsets","runningVisiblePanelCount","flag","visiblePanelsBeforeThisView","offset","sashWidth","VERTICAL","previous","collapsesDown","expandsDown","reverseViews","reverse","collapsesUp","expandsUp","position","snappedBefore","snappedAfter","updateSash","MINIMUM","MAXIMUM","DISABLED","ENABLED","state","orientationClassname","Paneview","splitview","paneItems","skipAnimation","_onDidChange","getPanes","pane","onDidChangeExpansionState","setupAnimation","paneItem","addPane","removePane","skipDispose","animationTimer","clearTimeout","LeafNode","minimumWidth","maximumWidth","minimumHeight","maximumHeight","minimumOrthogonalSize","maximumOrthogonalSize","BranchNode","c","Normal","priorities","some","p","childDescriptors","_childrenDisposable","_onDidVisibilityChange","onDidVisibilityChange","childDescriptor","node","setupChildrenEvents","_visible","isChildVisible","setChildVisible","wereAllChildrenHidden","areAllChildrenHidden","moveChild","_removeChild","_addChild","getChildSize","resizeChild","addChild","getChildCachedVisibleSize","_ref","findLeaf","candiateNode","last","flipNode","orthogonal","totalSize","childSize","getGridLocation","parentElement","test","el","firstElementChild","lastElementChild","nextElementSibling","indexInParent","getRelativeLocation","rootOrientation","location","direction","getLocationOrientation","directionOrientation","getDirectionOrientation","rest","_index","serializeBranchNode","box","isGridBranchNode","toJSON","Gridview","_root","root","locked","_locked","branch","pop","maximizedView","_maximizedNode","leaf","hasMaximizedView","maximizeView","getNode","exitMaximizedView","getView","hiddenOnMaximize","hideAllViewsBut","parent","exclude","_onDidMaximizedNodeChange","isMaximized","showViewsInReverseOrder","includes","serialize","maxmizedViewLocation","resullt","maximizedNode","_onDidViewVisibilityChange","deserialize","json","deserializer","_deserialize","_deserializeNode","serializedChild","fromJSON","oldRoot","insertOrthogonalSplitviewAtRoot","childReference","progmaticSelect","_getViews","nodeCachedVisibleSize","path","n","l","onDidViewVisibilityChange","onDidMaximizedNodeChange","parentLocation","pathToParent","grandParent","parentIndex","__","newSiblingSize","newSiblingCachedVisibleSize","newParent","newSibling","nodeToRemove","sibling","isSiblingVisible","siblingSizing","Resizable","_element","disableResizing","_disableResizing","entry","offsetParent","currentElement","DocumentFragment","host","isInDocument","contentRect","nextLayoutId","toTarget","BaseGrid","id","_id","_groups","groups","values","gridview","activeGroup","_activeGroup","disableAutoResizing","_onDidRemove","onDidRemove","_onDidAdd","onDidAdd","_onDidMaximizedChange","onDidMaximizedChange","_onDidActiveChange","onDidActiveChange","_bufferOnDidLayoutChange","onDidLayoutChange","_onDidViewVisibilityChangeMicroTaskQueue","onDidViewVisibilityChangeMicroTaskQueue","panel","isVisible","updateOptions","_b","_c","_d","maximizeGroup","doSetGroupActive","isMaximizedGroup","exitMaximizedGroup","hasMaximizedGroup","doAddGroup","group","doRemoveGroup","has","skipActive","getPanel","setActive","removeGroup","moveToNext","moveToPrevious","forceResize","SplitviewApi","component","panels","onDidLayoutFromJSON","removePanel","focus","addPanel","movePanel","PaneviewApi","onDidDrop","emitter","Object","assign","api","GridviewApi","onDidAddPanel","onDidAddGroup","onDidRemovePanel","onDidRemoveGroup","onDidActivePanelChange","onDidActiveGroupChange","force","DockviewApi","totalPanels","gap","onDidMovePanel","onWillDrop","onWillShowOverlay","onWillDragGroup","onWillDragPanel","onUnhandledDragOverEvent","activePanel","getGroupPanel","addGroup","closeAllGroups","getGroup","addFloatingGroup","onDidMaximizedGroupChange","addPopoutGroup","setGap","DragHandler","dataDisposable","pointerEventsDisposable","_onDragStart","onDragStart","configure","isCancelled","dataTransfer","effectAllowed","items","DragAndDropObserver","callbacks","target","registerListeners","onDragEnter","onDragOver","onDragLeave","onDragEnd","onDrop","WillShowOverlayEvent","nativeEvent","directionToPosition","positionToDirection","DEFAULT_ACTIVATION_SIZE","DEFAULT_SIZE","Droptarget","_state","_onDrop","_onWillShowOverlay","_acceptedTargetZonesSet","Set","acceptedTargetZones","dnd","removeDropTarget","clientWidth","clientHeight","rect","currentTarget","y","quadrant","calculateQuadrant","isAlreadyUsed","canDisplayOverlay","willShowOverlayEvent","markAsUsed","targetElement","overlayElement","append","toggleClasses","stopPropagation","setTargetZones","setOverlayModel","model","overlayModel","USED_EVENT_ID","isSmallX","isSmallY","isLeft","isRight","isTop","isBottom","rightClass","leftClass","topClass","bottomClass","sizeOptions","overlayType","activationSizeOptions","activationSize","threshold","xp","yp","calculateQuadrantAsPercentage","calculateQuadrantAsPixels","WillFocusEvent","PanelApiImpl","isFocused","_isFocused","isActive","_isActive","_isVisible","_width","_height","_parameters","panelUpdatesDisposable","_onDidDimensionChange","onDidDimensionsChange","_onDidChangeFocus","onDidFocusChange","_onWillFocus","onWillFocus","_onWillVisibilityChange","onWillVisibilityChange","_onActiveChange","onActiveChange","_onDidParametersChange","onDidParametersChange","getParameters","initialize","parameters","update","params","updateParameters","SplitviewPanelApiImpl","_onDidConstraintsChangeInternal","onDidConstraintsChangeInternal","_onDidConstraintsChange","onDidConstraintsChange","_onDidSizeChange","onDidSizeChange","setConstraints","setSize","PaneviewPanelApiImpl","_pane","_onDidExpansionChange","onDidExpansionChange","_onMouseEnter","onMouseEnter","_onMouseLeave","onMouseLeave","setExpanded","isExpanded","BasePanelView","_params","tabIndex","outline","overflow","focusTracker","part","init","getComponent","key","keys","PaneviewPanel","headerSize","_minimumBodySize","_maximumBodySize","minimumBodySize","maximumBodySize","headerVisible","_headerVisible","header","display","headerComponent","isHeaderVisible","_onDidChangeExpansionState","_isExpanded","expandedSize","accessor","ev","isPanelExpanded","renderOnce","expanded","body","bodyPart","getBodyComponent","headerPart","getHeaderComponent","title","lineHeight","minHeight","maxHeight","DraggablePaneviewPanel","disableDnd","_onDidDrop","initDragFeatures","accessorId","draggable","handler","showDndOverlay","containerApi","existingPanel","allPanels","fromIndex","toIndex","ContentContainer","dropTarget","shiftKey","show","hide","renderPanel","asActive","doRender","isPanelActive","content","renderer","renderContainer","detatch","attach","referenceContainer","openPanel","closePanel","TabDragHandler","Tab","_onChanged","onChanged","_onDropped","dragHandler","setContent","GroupDragHandler","dragEvent","getComputedStyle","bgColor","getPropertyValue","color","ghostElement","backgroundColor","padding","fontSize","borderRadius","textContent","setDragImage","addGhostImage","VoidContainer","dropTraget","TabsContainer","tabs","hidden","_hidden","setRightActionsElement","rightActions","rightActionsContainer","setLeftActionsElement","leftActions","leftActionsContainer","setPrefixActionsElement","preActions","preActionsContainer","tab","selectedIndex","_onTabDragStart","onTabDragStart","_onGroupDragStart","onGroupDragStart","singleTabMode","tabContainer","voidContainer","WillShowOverlayLocationEvent","kind","disableFloatingGroups","rootTop","rootLeft","inDragMode","button","_isGroupActive","addTab","tabToRemove","setActivePanel","isActivePanel","find","isFloatingGroupsEnabled","isFloatingWithOnePanel","DockviewUnhandledDragOverEvent","isAccepted","_isAccepted","accept","PROPERTY_KEYS","properties","hideBorders","floatingGroupBounds","popoutUrl","defaultRenderer","debug","rootOverlayModel","noPanelsOverlay","DockviewDidDropEvent","DockviewWillDropEvent","_kind","DockviewGroupPanelModel","_activePanel","_panels","isEmpty","hasWatermark","watermark","tabsContainer","isContentFocused","contentContainer","_location","groupPanel","_onDidLocationChange","mostRecentlyUsed","_overwriteRenderContainer","_panelDisposables","_onMove","onMove","_onWillDrop","_onDidAddPanel","_onDidPanelTitleChange","onDidPanelTitleChange","_onDidPanelParametersChange","onDidPanelParametersChange","_onDidRemovePanel","_onDidActivePanelChange","_onUnhandledDragOverEvent","_api","hideHeader","handleDropEvent","focusContent","rerender","overlayRenderContainer","doAddPanel","updateContainer","createRightHeaderActionComponent","_rightHeaderActions","createLeftHeaderActionComponent","_leftHeaderActions","createPrefixHeaderActionComponent","_prefixHeaderActions","activeView","normalizedIndex","suppressRoll","containsPanel","skipSetActive","updateParentGroup","doSetActivePanel","skipSetGroupActive","groupItemOrId","panelToRemove","_removePanel","closeAllPanels","arrPanelCpy","doClose","isLast","removeEmptyGroup","updateActions","isGroupActive","doRemovePanel","nextPanel","skipSetActiveGroup","hasExistingPanel","updateMru","onDidTitleChange","runEvents","createWatermarkComponent","firedEvent","willDropEvent","getKind","itemId","GridviewPanelApiImpl","GridviewPanel","_priority","_snap","__minimumWidth","__minimumHeight","__maximumHeight","__maximumWidth","_minimumWidth","_evaluatedMinimumWidth","updateConstraints","_maximumWidth","_evaluatedMaximumWidth","_minimumHeight","_evaluatedMinimumHeight","_maximumHeight","_evaluatedMaximumHeight","MAX_SAFE_INTEGER","maximum","minimum","NOT_INITIALIZED_MESSAGE","DockviewGroupPanelApiImpl","_group","_mutableDisposable","onDidLocationChange","close","getWindow","moveTo","moveGroupOrPanel","maximize","exitMaximized","DockviewGroupPanel","activePanelMinimumWidth","activePanelMinimumHeight","activePanelMaximumWidth","activePanelMaximumHeight","_model","_e","_f","constraints","DockviewPanelApiImpl","oldGroup","_onDidGroupChange","setupGroupEventListeners","tabComponent","_tabComponent","_onDidTitleChange","_onDidActiveGroupChange","onDidGroupChange","_onDidRendererChange","onDidRendererChange","groupEventsDisposable","setTitle","setRenderer","previousGroup","_trackGroupActive","hasBecomeHidden","hasBecomeVisible","DockviewPanel","_title","_renderer","contentComponent","isPanelVisible","createSvgElementFromPath","svg","createElementNS","setAttributeNS","viewbox","DefaultTab","_content","action","render","DockviewPanelModel","_tab","createContentComponent","createTabComponent","_isPanelVisible","componentName","createComponent","name","defaultTabComponent","DefaultDockviewDeserialzier","panelData","viewData","Watermark","arialLevelTracker","_orderedList","destroy","setAttribute","zIndex","Overlay","minimumInViewportWidth","minimumInViewportHeight","_onDidChangeEnd","onDidChangeEnd","setupResize","setBounds","bottom","right","bringToFront","bounds","verticalAlignment","horiziontalAlignment","containerRect","overlayRect","xOffset","getMinimumWidth","yOffset","getMinimumHeight","parseFloat","setupDrag","dragTarget","move","track","resizeHandleElement","startPosition","originalY","originalHeight","originalX","originalWidth","moveTop","MAX_VALUE","MINIMUM_HEIGHT","moveBottom","moveLeft","MINIMUM_WIDTH","moveRight","DockviewFloatingGroupPanel","overlay","DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE","DEFAULT_FLOATING_GROUP_POSITION","OverlayRenderContainer","createFocusableElement","focusContainer","box2","visibilityChanged","observerDisposable","correctLayerPosition","floatingGroup","floatingGroups","level","getAttribute","MutationObserver","attributeFilter","attributes","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","rejected","done","then","apply","PopoutWindow","_window","_onWillClose","onWillClose","_onDidClose","onDidClose","dimensions","screenX","screenY","innerWidth","innerHeight","open","url","features","entries","join","externalWindow","createPopoutWindowContainer","onDidOpen","externalDocument","styleSheetList","styleSheets","styleSheet","href","link","rel","head","cssTexts","cssRules","rule","cssText","err","createTextNode","addStyles","DEFAULT_ROOT_OVERLAY_MODEL","moveGroupWithoutDestroying","removedPanel","DockviewComponent","flatMap","_options","_floatingGroups","nextGroupId","_deserializer","_onWillDragPanel","_onWillDragGroup","_onDidLayoutFromJSON","_onDidMovePanel","_onDidMaximizedGroupChange","_popoutGroups","_onDidRemoveGroup","_onDidAddGroup","_moving","updateWatermark","_rootDropTarget","orthogonalize","itemToPopout","theme","toClassList","list","cls","startsWith","getDockviewTheme","overridePopoutGroup","getNextGroupId","popoutWindowDisposable","popoutContainer","gready","referenceGroup","referenceLocation","isGroupAddedToDom","returnedGroup","createGroup","movingLock","doSetGroupAndPanelActive","isValidReferenceGroup","popoutGroup","skipPopoutAssociated","skipPopoutReturn","removedGroup","catch","error","popoutReferenceGroupId","popoutReferenceGroup","skipRemoveGroup","anchoredBox","getAnchoredBox","minimumWidthWithinViewport","minimumHeightWithinViewport","querySelector","floatingGroupPanel","skipActiveGroup","createGroupAtLocation","floating","includePanel","collection","floats","popoutGroups","gridReferenceGroup","grid","isArray","createGroupFromSerializedState","createdPanels","serializedFloatingGroups","serializedFloatingGroup","serializedPopoutGroups","serializedPopoutGroup","hasActiveGroup","initial","initialWidth","initialHeight","referencePanel","findGroup","isPanelOptionsWithGroup","createPanel","inactive","floatingGroupOptions","relativeLocation","orientationAtLocation","coordinates","watermarkContainer","isGroupOptionsWithGroup","selectedGroup","refGroup","re","isMoving","destinationGroup","sourceGroupId","sourceItemId","destinationTarget","destinationIndex","sourceGroup","targetLocation","targetParentLocation","sourceLocation","sourceParentLocation","newGroup","targetGroup","updatedReferenceLocation","dropLocation","moveGroup","selectedFloatingGroup","selectedPopoutGroup","components","frameworkComponents","createFrameworkComponent","fallback","Component","FrameworkComponent","GridviewComponent","_onDidLayoutfromJSON","hasOrientationChanged","serializedGridview","queue","frameworkComponentFactory","registerPanel","f","reference","groupItem","SplitviewComponent","_splitview","_splitviewChangeDisposable","_onDidLayoutChange","skipFocus","frameworkWrapper","doAddView","serializedSplitview","DefaultHeader","_expandedIcon","_collapsedIcon","apiRef","_expander","updateIcon","PaneFramework","PaneviewComponent","paneview","_paneview","_viewDisposables","headerComponents","headerframeworkComponents","serializedPaneview","SplitviewPanel","_minimumSize","_evaluatedMinimumSize","_maximumSize","_evaluatedMaximumSize","createDockview","createSplitview","createGridview","createPaneview","ReactComponentBridge","props","ref","triggerRender","React","_props","componentProps","current","Date","now","displayName","uniquePortalKeyGenerator","ReactPartContext","ReactPart","portalStore","context","_initialProps","disposed","createPortal","componentInstance","$$typeof","bridgeComponent","Provider","portal","ReactDOM","addPortal","usePortalsLifecycle","portals","setPortals","existingPortals","DockviewDisposable","ReactPanelContentPart","reactPortalStore","DockviewEmitter","ReactPanelHeaderPart","ReactWatermarkPart","ReactHeaderActionsRendererPart","_part","mutableDisposable","DockviewMutableDisposable","DockviewCompositeDisposable","updatePanels","updateActivePanel","updateGroupActive","createGroupControlElement","store","DEFAULT_REACT_TAB","DockviewReact","domRef","dockviewRef","prevProps","changes","propKey","propValue","frameworkTabComponents","tabComponents","frameworkOptions","leftHeaderActionsComponent","rightHeaderActionsComponent","prefixHeaderActionsComponent","watermarkComponent","obj","extractCoreOptions","onReady","CloseButton","viewBox","focusable","__rest","hasOwnProperty","getOwnPropertySymbols","propertyIsEnumerable","DockviewDefaultTab","_containerApi","hideClose","closeActionOverride","useTitle","onClose","onPointerDown","onClick","ReactPanelView","reactComponent","SplitviewReact","splitviewRef","componentId","ReactGridPanelView","GridviewReact","gridviewRef","PanePanelSection","PaneviewReact","paneviewRef","_componentId","default","_jsx","App"],"sourceRoot":""}