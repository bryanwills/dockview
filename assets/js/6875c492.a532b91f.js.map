{"version":3,"file":"assets/js/6875c492.a532b91f.js","mappings":"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","sources":["webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/BlogListPaginator/index.js","webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/BlogPostItems/index.js","webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/BlogTagsPostsPage/index.js","webpack://dockview-docs/../../node_modules/@docusaurus/theme-common/src/utils/unlistedUtils.tsx","webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/Unlisted/index.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/dataTransfer.js","webpack://dockview-docs/../dockview-core/dist/esm/events.js","webpack://dockview-docs/../dockview-core/dist/esm/lifecycle.js","webpack://dockview-docs/../dockview-core/dist/esm/dom.js","webpack://dockview-docs/../dockview-core/dist/esm/array.js","webpack://dockview-docs/../dockview-core/dist/esm/math.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/viewItem.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/splitview.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/paneview.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/leafNode.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/branchNode.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/gridview.js","webpack://dockview-docs/../dockview-core/dist/esm/resizable.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/baseComponentGridview.js","webpack://dockview-docs/../dockview-core/dist/esm/api/component.api.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/abstractDragHandler.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/dnd.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/droptarget.js","webpack://dockview-docs/../dockview-core/dist/esm/api/panelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/api/splitviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/api/paneviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/basePanelView.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/paneviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/draggablePaneviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/panel/content.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/tab/tab.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/groupDragHandler.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/ghost.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/titlebar/voidContainer.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/titlebar/tabsContainer.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/options.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewGroupPanelModel.js","webpack://dockview-docs/../dockview-core/dist/esm/api/gridviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/gridviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/api/dockviewGroupPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewGroupPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/api/dockviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/svg.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/tab/defaultTab.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewPanelModel.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/deserializer.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/watermark/watermark.js","webpack://dockview-docs/../dockview-core/dist/esm/overlay/overlay.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewFloatingGroupPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/constants.js","webpack://dockview-docs/../dockview-core/dist/esm/overlay/overlayRenderContainer.js","webpack://dockview-docs/../dockview-core/dist/esm/popoutWindow.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/panel/componentFactory.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/gridviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/splitviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/defaultPaneviewHeader.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/paneviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/splitviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/api/entryPoints.js","webpack://dockview-docs/../dockview/dist/esm/react.js","webpack://dockview-docs/../dockview/dist/esm/dockview/reactContentPart.js","webpack://dockview-docs/../dockview/dist/esm/dockview/reactHeaderPart.js","webpack://dockview-docs/../dockview/dist/esm/dockview/reactWatermarkPart.js","webpack://dockview-docs/../dockview/dist/esm/dockview/headerActionsRenderer.js","webpack://dockview-docs/../dockview/dist/esm/dockview/dockview.js","webpack://dockview-docs/../dockview/dist/esm/svg.js","webpack://dockview-docs/../dockview/dist/esm/dockview/defaultTab.js","webpack://dockview-docs/../dockview/dist/esm/splitview/view.js","webpack://dockview-docs/../dockview/dist/esm/splitview/splitview.js","webpack://dockview-docs/../dockview/dist/esm/gridview/view.js","webpack://dockview-docs/../dockview/dist/esm/gridview/gridview.js","webpack://dockview-docs/../dockview/dist/esm/paneview/view.js","webpack://dockview-docs/../dockview/dist/esm/paneview/paneview.js","webpack://dockview-docs/./src/theme/Admonition/Layout/styles.module.css","webpack://dockview-docs/./src/theme/Admonition/Layout/index.js","webpack://dockview-docs/./src/theme/Admonition/Icon/Note.js","webpack://dockview-docs/./src/theme/Admonition/Type/Note.js","webpack://dockview-docs/./src/theme/Admonition/Icon/Tip.js","webpack://dockview-docs/./src/theme/Admonition/Type/Tip.js","webpack://dockview-docs/./src/theme/Admonition/Icon/Info.js","webpack://dockview-docs/./src/theme/Admonition/Type/Info.js","webpack://dockview-docs/./src/theme/Admonition/Icon/Warning.js","webpack://dockview-docs/./src/theme/Admonition/Type/Warning.js","webpack://dockview-docs/./src/theme/Admonition/Icon/Danger.js","webpack://dockview-docs/./src/theme/Admonition/Type/Danger.js","webpack://dockview-docs/./src/theme/Admonition/Type/Caution.js","webpack://dockview-docs/./src/theme/Admonition/Types.js","webpack://dockview-docs/./src/theme/Admonition/index.js","webpack://dockview-docs/./src/theme/MDXComponents.js","webpack://dockview-docs/./src/components/frameworkSpecific.tsx","webpack://dockview-docs/./src/components/ui/codeRunner.tsx"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport Translate, {translate} from '@docusaurus/Translate';\nimport PaginatorNavLink from '@theme/PaginatorNavLink';\nexport default function BlogListPaginator(props) {\n  const {metadata} = props;\n  const {previousPage, nextPage} = metadata;\n  return (\n    <nav\n      className=\"pagination-nav\"\n      aria-label={translate({\n        id: 'theme.blog.paginator.navAriaLabel',\n        message: 'Blog list page navigation',\n        description: 'The ARIA label for the blog pagination',\n      })}>\n      {previousPage && (\n        <PaginatorNavLink\n          permalink={previousPage}\n          title={\n            <Translate\n              id=\"theme.blog.paginator.newerEntries\"\n              description=\"The label used to navigate to the newer blog posts page (previous page)\">\n              Newer Entries\n            </Translate>\n          }\n        />\n      )}\n      {nextPage && (\n        <PaginatorNavLink\n          permalink={nextPage}\n          title={\n            <Translate\n              id=\"theme.blog.paginator.olderEntries\"\n              description=\"The label used to navigate to the older blog posts page (next page)\">\n              Older Entries\n            </Translate>\n          }\n          isNext\n        />\n      )}\n    </nav>\n  );\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport {BlogPostProvider} from '@docusaurus/theme-common/internal';\nimport BlogPostItem from '@theme/BlogPostItem';\nexport default function BlogPostItems({\n  items,\n  component: BlogPostItemComponent = BlogPostItem,\n}) {\n  return (\n    <>\n      {items.map(({content: BlogPostContent}) => (\n        <BlogPostProvider\n          key={BlogPostContent.metadata.permalink}\n          content={BlogPostContent}>\n          <BlogPostItemComponent>\n            <BlogPostContent />\n          </BlogPostItemComponent>\n        </BlogPostProvider>\n      ))}\n    </>\n  );\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport clsx from 'clsx';\nimport Translate, {translate} from '@docusaurus/Translate';\nimport {\n  PageMetadata,\n  HtmlClassNameProvider,\n  ThemeClassNames,\n  usePluralForm,\n} from '@docusaurus/theme-common';\nimport Link from '@docusaurus/Link';\nimport BlogLayout from '@theme/BlogLayout';\nimport BlogListPaginator from '@theme/BlogListPaginator';\nimport SearchMetadata from '@theme/SearchMetadata';\nimport BlogPostItems from '@theme/BlogPostItems';\nimport Unlisted from '@theme/Unlisted';\nimport Heading from '@theme/Heading';\n// Very simple pluralization: probably good enough for now\nfunction useBlogPostsPlural() {\n  const {selectMessage} = usePluralForm();\n  return (count) =>\n    selectMessage(\n      count,\n      translate(\n        {\n          id: 'theme.blog.post.plurals',\n          description:\n            'Pluralized label for \"{count} posts\". Use as much plural forms (separated by \"|\") as your language support (see https://www.unicode.org/cldr/cldr-aux/charts/34/supplemental/language_plural_rules.html)',\n          message: 'One post|{count} posts',\n        },\n        {count},\n      ),\n    );\n}\nfunction useBlogTagsPostsPageTitle(tag) {\n  const blogPostsPlural = useBlogPostsPlural();\n  return translate(\n    {\n      id: 'theme.blog.tagTitle',\n      description: 'The title of the page for a blog tag',\n      message: '{nPosts} tagged with \"{tagName}\"',\n    },\n    {nPosts: blogPostsPlural(tag.count), tagName: tag.label},\n  );\n}\nfunction BlogTagsPostsPageMetadata({tag}) {\n  const title = useBlogTagsPostsPageTitle(tag);\n  return (\n    <>\n      <PageMetadata title={title} />\n      <SearchMetadata tag=\"blog_tags_posts\" />\n    </>\n  );\n}\nfunction BlogTagsPostsPageContent({tag, items, sidebar, listMetadata}) {\n  const title = useBlogTagsPostsPageTitle(tag);\n  return (\n    <BlogLayout sidebar={sidebar}>\n      {tag.unlisted && <Unlisted />}\n      <header className=\"margin-bottom--xl\">\n        <Heading as=\"h1\">{title}</Heading>\n        <Link href={tag.allTagsPath}>\n          <Translate\n            id=\"theme.tags.tagsPageLink\"\n            description=\"The label of the link targeting the tag list page\">\n            View All Tags\n          </Translate>\n        </Link>\n      </header>\n      <BlogPostItems items={items} />\n      <BlogListPaginator metadata={listMetadata} />\n    </BlogLayout>\n  );\n}\nexport default function BlogTagsPostsPage(props) {\n  return (\n    <HtmlClassNameProvider\n      className={clsx(\n        ThemeClassNames.wrapper.blogPages,\n        ThemeClassNames.page.blogTagPostListPage,\n      )}>\n      <BlogTagsPostsPageMetadata {...props} />\n      <BlogTagsPostsPageContent {...props} />\n    </HtmlClassNameProvider>\n  );\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Translate from '@docusaurus/Translate';\nimport Head from '@docusaurus/Head';\n\nexport function UnlistedBannerTitle(): JSX.Element {\n  return (\n    <Translate\n      id=\"theme.unlistedContent.title\"\n      description=\"The unlisted content banner title\">\n      Unlisted page\n    </Translate>\n  );\n}\n\nexport function UnlistedBannerMessage(): JSX.Element {\n  return (\n    <Translate\n      id=\"theme.unlistedContent.message\"\n      description=\"The unlisted content banner message\">\n      This page is unlisted. Search engines will not index it, and only users\n      having a direct link can access it.\n    </Translate>\n  );\n}\n\nexport function UnlistedMetadata(): JSX.Element {\n  return (\n    <Head>\n      <meta name=\"robots\" content=\"noindex, nofollow\" />\n    </Head>\n  );\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport clsx from 'clsx';\nimport {\n  ThemeClassNames,\n  UnlistedBannerTitle,\n  UnlistedBannerMessage,\n  UnlistedMetadata,\n} from '@docusaurus/theme-common';\nimport Admonition from '@theme/Admonition';\nfunction UnlistedBanner({className}) {\n  return (\n    <Admonition\n      type=\"caution\"\n      title={<UnlistedBannerTitle />}\n      className={clsx(className, ThemeClassNames.common.unlistedBanner)}>\n      <UnlistedBannerMessage />\n    </Admonition>\n  );\n}\nexport default function Unlisted(props) {\n  return (\n    <>\n      {/*\n        Unlisted metadata declared here for simplicity.\n        Ensures we never forget to add the correct noindex metadata.\n        Also gives a central place for user to swizzle override default metadata.\n        */}\n      <UnlistedMetadata />\n      <UnlistedBanner {...props} />\n    </>\n  );\n}\n","class TransferObject {\n}\nexport class PanelTransfer extends TransferObject {\n    constructor(viewId, groupId, panelId) {\n        super();\n        this.viewId = viewId;\n        this.groupId = groupId;\n        this.panelId = panelId;\n    }\n}\nexport class PaneTransfer extends TransferObject {\n    constructor(viewId, paneId) {\n        super();\n        this.viewId = viewId;\n        this.paneId = paneId;\n    }\n}\n/**\n * A singleton to store transfer data during drag & drop operations that are only valid within the application.\n */\nexport class LocalSelectionTransfer {\n    constructor() {\n        // protect against external instantiation\n    }\n    static getInstance() {\n        return LocalSelectionTransfer.INSTANCE;\n    }\n    hasData(proto) {\n        return proto && proto === this.proto;\n    }\n    clearData(proto) {\n        if (this.hasData(proto)) {\n            this.proto = undefined;\n            this.data = undefined;\n        }\n    }\n    getData(proto) {\n        if (this.hasData(proto)) {\n            return this.data;\n        }\n        return undefined;\n    }\n    setData(data, proto) {\n        if (proto) {\n            this.data = data;\n            this.proto = proto;\n        }\n    }\n}\nLocalSelectionTransfer.INSTANCE = new LocalSelectionTransfer();\nexport function getPanelData() {\n    const panelTransfer = LocalSelectionTransfer.getInstance();\n    const isPanelEvent = panelTransfer.hasData(PanelTransfer.prototype);\n    if (!isPanelEvent) {\n        return undefined;\n    }\n    return panelTransfer.getData(PanelTransfer.prototype)[0];\n}\nexport function getPaneData() {\n    const paneTransfer = LocalSelectionTransfer.getInstance();\n    const isPanelEvent = paneTransfer.hasData(PaneTransfer.prototype);\n    if (!isPanelEvent) {\n        return undefined;\n    }\n    return paneTransfer.getData(PaneTransfer.prototype)[0];\n}\n","export var Event;\n(function (Event) {\n    Event.any = (...children) => {\n        return (listener) => {\n            const disposables = children.map((child) => child(listener));\n            return {\n                dispose: () => {\n                    disposables.forEach((d) => {\n                        d.dispose();\n                    });\n                },\n            };\n        };\n    };\n})(Event || (Event = {}));\nexport class DockviewEvent {\n    constructor() {\n        this._defaultPrevented = false;\n    }\n    get defaultPrevented() {\n        return this._defaultPrevented;\n    }\n    preventDefault() {\n        this._defaultPrevented = true;\n    }\n}\nclass LeakageMonitor {\n    constructor() {\n        this.events = new Map();\n    }\n    get size() {\n        return this.events.size;\n    }\n    add(event, stacktrace) {\n        this.events.set(event, stacktrace);\n    }\n    delete(event) {\n        this.events.delete(event);\n    }\n    clear() {\n        this.events.clear();\n    }\n}\nclass Stacktrace {\n    static create() {\n        var _a;\n        return new Stacktrace((_a = new Error().stack) !== null && _a !== void 0 ? _a : '');\n    }\n    constructor(value) {\n        this.value = value;\n    }\n    print() {\n        console.warn('dockview: stacktrace', this.value);\n    }\n}\nclass Listener {\n    constructor(callback, stacktrace) {\n        this.callback = callback;\n        this.stacktrace = stacktrace;\n    }\n}\n// relatively simple event emitter taken from https://github.com/microsoft/vscode/blob/master/src/vs/base/common/event.ts\nexport class Emitter {\n    static setLeakageMonitorEnabled(isEnabled) {\n        if (isEnabled !== Emitter.ENABLE_TRACKING) {\n            Emitter.MEMORY_LEAK_WATCHER.clear();\n        }\n        Emitter.ENABLE_TRACKING = isEnabled;\n    }\n    get value() {\n        return this._last;\n    }\n    constructor(options) {\n        this.options = options;\n        this._listeners = [];\n        this._disposed = false;\n    }\n    get event() {\n        if (!this._event) {\n            this._event = (callback) => {\n                var _a;\n                if (((_a = this.options) === null || _a === void 0 ? void 0 : _a.replay) && this._last !== undefined) {\n                    callback(this._last);\n                }\n                const listener = new Listener(callback, Emitter.ENABLE_TRACKING ? Stacktrace.create() : undefined);\n                this._listeners.push(listener);\n                return {\n                    dispose: () => {\n                        const index = this._listeners.indexOf(listener);\n                        if (index > -1) {\n                            this._listeners.splice(index, 1);\n                        }\n                        else if (Emitter.ENABLE_TRACKING) {\n                            // console.warn(\n                            //     `dockview: listener already disposed`,\n                            //     Stacktrace.create().print()\n                            // );\n                        }\n                    },\n                };\n            };\n            if (Emitter.ENABLE_TRACKING) {\n                Emitter.MEMORY_LEAK_WATCHER.add(this._event, Stacktrace.create());\n            }\n        }\n        return this._event;\n    }\n    fire(e) {\n        this._last = e;\n        for (const listener of this._listeners) {\n            listener.callback(e);\n        }\n    }\n    dispose() {\n        if (!this._disposed) {\n            this._disposed = true;\n            if (this._listeners.length > 0) {\n                if (Emitter.ENABLE_TRACKING) {\n                    queueMicrotask(() => {\n                        var _a;\n                        // don't check until stack of execution is completed to allow for out-of-order disposals within the same execution block\n                        for (const listener of this._listeners) {\n                            console.warn('dockview: stacktrace', (_a = listener.stacktrace) === null || _a === void 0 ? void 0 : _a.print());\n                        }\n                    });\n                }\n                this._listeners = [];\n            }\n            if (Emitter.ENABLE_TRACKING && this._event) {\n                Emitter.MEMORY_LEAK_WATCHER.delete(this._event);\n            }\n        }\n    }\n}\nEmitter.ENABLE_TRACKING = false;\nEmitter.MEMORY_LEAK_WATCHER = new LeakageMonitor();\nexport function addDisposableWindowListener(element, type, listener, options) {\n    element.addEventListener(type, listener, options);\n    return {\n        dispose: () => {\n            element.removeEventListener(type, listener, options);\n        },\n    };\n}\nexport function addDisposableListener(element, type, listener, options) {\n    element.addEventListener(type, listener, options);\n    return {\n        dispose: () => {\n            element.removeEventListener(type, listener, options);\n        },\n    };\n}\n/**\n *\n * Event Emitter that fires events from a Microtask callback, only one event will fire per event-loop cycle.\n *\n * It's kind of like using an `asapScheduler` in RxJs with additional logic to only fire once per event-loop cycle.\n * This implementation exists to avoid external dependencies.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/queueMicrotask\n * @see https://rxjs.dev/api/index/const/asapScheduler\n */\nexport class AsapEvent {\n    constructor() {\n        this._onFired = new Emitter();\n        this._currentFireCount = 0;\n        this._queued = false;\n        this.onEvent = (e) => {\n            /**\n             * when the event is first subscribed to take note of the current fire count\n             */\n            const fireCountAtTimeOfEventSubscription = this._currentFireCount;\n            return this._onFired.event(() => {\n                /**\n                 * if the current fire count is greater than the fire count at event subscription\n                 * then the event has been fired since we subscribed and it's ok to \"on_next\" the event.\n                 *\n                 * if the count is not greater then what we are recieving is an event from the microtask\n                 * queue that was triggered before we actually subscribed and therfore we should ignore it.\n                 */\n                if (this._currentFireCount > fireCountAtTimeOfEventSubscription) {\n                    e();\n                }\n            });\n        };\n    }\n    fire() {\n        this._currentFireCount++;\n        if (this._queued) {\n            return;\n        }\n        this._queued = true;\n        queueMicrotask(() => {\n            this._queued = false;\n            this._onFired.fire();\n        });\n    }\n    dispose() {\n        this._onFired.dispose();\n    }\n}\n","export var Disposable;\n(function (Disposable) {\n    Disposable.NONE = {\n        dispose: () => {\n            // noop\n        },\n    };\n    function from(func) {\n        return {\n            dispose: () => {\n                func();\n            },\n        };\n    }\n    Disposable.from = from;\n})(Disposable || (Disposable = {}));\nexport class CompositeDisposable {\n    get isDisposed() {\n        return this._isDisposed;\n    }\n    constructor(...args) {\n        this._isDisposed = false;\n        this._disposables = args;\n    }\n    addDisposables(...args) {\n        args.forEach((arg) => this._disposables.push(arg));\n    }\n    dispose() {\n        if (this._isDisposed) {\n            return;\n        }\n        this._isDisposed = true;\n        this._disposables.forEach((arg) => arg.dispose());\n        this._disposables = [];\n    }\n}\nexport class MutableDisposable {\n    constructor() {\n        this._disposable = Disposable.NONE;\n    }\n    set value(disposable) {\n        if (this._disposable) {\n            this._disposable.dispose();\n        }\n        this._disposable = disposable;\n    }\n    dispose() {\n        if (this._disposable) {\n            this._disposable.dispose();\n            this._disposable = Disposable.NONE;\n        }\n    }\n}\n","import { Emitter, addDisposableListener, addDisposableWindowListener, } from './events';\nimport { CompositeDisposable } from './lifecycle';\nexport class OverflowObserver extends CompositeDisposable {\n    constructor(el) {\n        super();\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._value = null;\n        this.addDisposables(this._onDidChange, watchElementResize(el, (entry) => {\n            const hasScrollX = entry.target.scrollWidth > entry.target.clientWidth;\n            const hasScrollY = entry.target.scrollHeight > entry.target.clientHeight;\n            this._value = { hasScrollX, hasScrollY };\n            this._onDidChange.fire(this._value);\n        }));\n    }\n}\nexport function watchElementResize(element, cb) {\n    const observer = new ResizeObserver((entires) => {\n        /**\n         * Fast browser window resize produces Error: ResizeObserver loop limit exceeded.\n         * The error isn't visible in browser console, doesn't affect functionality, but degrades performance.\n         * See https://stackoverflow.com/questions/49384120/resizeobserver-loop-limit-exceeded/58701523#58701523\n         */\n        requestAnimationFrame(() => {\n            const firstEntry = entires[0];\n            cb(firstEntry);\n        });\n    });\n    observer.observe(element);\n    return {\n        dispose: () => {\n            observer.unobserve(element);\n            observer.disconnect();\n        },\n    };\n}\nexport const removeClasses = (element, ...classes) => {\n    for (const classname of classes) {\n        if (element.classList.contains(classname)) {\n            element.classList.remove(classname);\n        }\n    }\n};\nexport const addClasses = (element, ...classes) => {\n    for (const classname of classes) {\n        if (!element.classList.contains(classname)) {\n            element.classList.add(classname);\n        }\n    }\n};\nexport const toggleClass = (element, className, isToggled) => {\n    const hasClass = element.classList.contains(className);\n    if (isToggled && !hasClass) {\n        element.classList.add(className);\n    }\n    if (!isToggled && hasClass) {\n        element.classList.remove(className);\n    }\n};\nexport function isAncestor(testChild, testAncestor) {\n    while (testChild) {\n        if (testChild === testAncestor) {\n            return true;\n        }\n        testChild = testChild.parentNode;\n    }\n    return false;\n}\nexport function getElementsByTagName(tag) {\n    return Array.prototype.slice.call(document.getElementsByTagName(tag), 0);\n}\nexport function trackFocus(element) {\n    return new FocusTracker(element);\n}\n/**\n * Track focus on an element. Ensure tabIndex is set when an HTMLElement is not focusable by default\n */\nclass FocusTracker extends CompositeDisposable {\n    constructor(element) {\n        super();\n        this._onDidFocus = new Emitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new Emitter();\n        this.onDidBlur = this._onDidBlur.event;\n        this.addDisposables(this._onDidFocus, this._onDidBlur);\n        let hasFocus = isAncestor(document.activeElement, element);\n        let loosingFocus = false;\n        const onFocus = () => {\n            loosingFocus = false;\n            if (!hasFocus) {\n                hasFocus = true;\n                this._onDidFocus.fire();\n            }\n        };\n        const onBlur = () => {\n            if (hasFocus) {\n                loosingFocus = true;\n                window.setTimeout(() => {\n                    if (loosingFocus) {\n                        loosingFocus = false;\n                        hasFocus = false;\n                        this._onDidBlur.fire();\n                    }\n                }, 0);\n            }\n        };\n        this._refreshStateHandler = () => {\n            const currentNodeHasFocus = isAncestor(document.activeElement, element);\n            if (currentNodeHasFocus !== hasFocus) {\n                if (hasFocus) {\n                    onBlur();\n                }\n                else {\n                    onFocus();\n                }\n            }\n        };\n        if (element instanceof HTMLElement) {\n            this.addDisposables(addDisposableListener(element, 'focus', onFocus, true));\n            this.addDisposables(addDisposableListener(element, 'blur', onBlur, true));\n        }\n        else {\n            this.addDisposables(addDisposableWindowListener(element, 'focus', onFocus, true));\n            this.addDisposables(addDisposableWindowListener(element, 'blur', onBlur, true));\n        }\n    }\n    refreshState() {\n        this._refreshStateHandler();\n    }\n}\n// quasi: apparently, but not really; seemingly\nconst QUASI_PREVENT_DEFAULT_KEY = 'dv-quasiPreventDefault';\n// mark an event directly for other listeners to check\nexport function quasiPreventDefault(event) {\n    event[QUASI_PREVENT_DEFAULT_KEY] = true;\n}\n// check if this event has been marked\nexport function quasiDefaultPrevented(event) {\n    return event[QUASI_PREVENT_DEFAULT_KEY];\n}\nexport function addStyles(document, styleSheetList) {\n    const styleSheets = Array.from(styleSheetList);\n    for (const styleSheet of styleSheets) {\n        if (styleSheet.href) {\n            const link = document.createElement('link');\n            link.href = styleSheet.href;\n            link.type = styleSheet.type;\n            link.rel = 'stylesheet';\n            document.head.appendChild(link);\n        }\n        let cssTexts = [];\n        try {\n            if (styleSheet.cssRules) {\n                cssTexts = Array.from(styleSheet.cssRules).map((rule) => rule.cssText);\n            }\n        }\n        catch (err) {\n            // security errors (lack of permissions), ignore\n        }\n        for (const rule of cssTexts) {\n            const style = document.createElement('style');\n            style.appendChild(document.createTextNode(rule));\n            document.head.appendChild(style);\n        }\n    }\n}\nexport function getDomNodePagePosition(domNode) {\n    const { left, top, width, height } = domNode.getBoundingClientRect();\n    return {\n        left: left + window.scrollX,\n        top: top + window.scrollY,\n        width: width,\n        height: height,\n    };\n}\n/**\n * Check whether an element is in the DOM (including the Shadow DOM)\n * @see https://terodox.tech/how-to-tell-if-an-element-is-in-the-dom-including-the-shadow-dom/\n */\nexport function isInDocument(element) {\n    let currentElement = element;\n    while (currentElement === null || currentElement === void 0 ? void 0 : currentElement.parentNode) {\n        if (currentElement.parentNode === document) {\n            return true;\n        }\n        else if (currentElement.parentNode instanceof DocumentFragment) {\n            // handle shadow DOMs\n            currentElement = currentElement.parentNode.host;\n        }\n        else {\n            currentElement = currentElement.parentNode;\n        }\n    }\n    return false;\n}\nexport function addTestId(element, id) {\n    element.setAttribute('data-testid', id);\n}\nexport function disableIframePointEvents() {\n    const iframes = [\n        ...getElementsByTagName('iframe'),\n        ...getElementsByTagName('webview'),\n    ];\n    const original = new WeakMap(); // don't hold onto HTMLElement references longer than required\n    for (const iframe of iframes) {\n        original.set(iframe, iframe.style.pointerEvents);\n        iframe.style.pointerEvents = 'none';\n    }\n    return {\n        release: () => {\n            var _a;\n            for (const iframe of iframes) {\n                iframe.style.pointerEvents = (_a = original.get(iframe)) !== null && _a !== void 0 ? _a : 'auto';\n            }\n            iframes.splice(0, iframes.length); // don't hold onto HTMLElement references longer than required\n        },\n    };\n}\nexport function getDockviewTheme(element) {\n    function toClassList(element) {\n        const list = [];\n        for (let i = 0; i < element.classList.length; i++) {\n            list.push(element.classList.item(i));\n        }\n        return list;\n    }\n    let theme = undefined;\n    let parent = element;\n    while (parent !== null) {\n        theme = toClassList(parent).find((cls) => cls.startsWith('dockview-theme-'));\n        if (typeof theme === 'string') {\n            break;\n        }\n        parent = parent.parentElement;\n    }\n    return theme;\n}\nexport class Classnames {\n    constructor(element) {\n        this.element = element;\n        this._classNames = [];\n    }\n    setClassNames(classNames) {\n        for (const className of this._classNames) {\n            toggleClass(this.element, className, false);\n        }\n        this._classNames = classNames\n            .split(' ')\n            .filter((v) => v.trim().length > 0);\n        for (const className of this._classNames) {\n            toggleClass(this.element, className, true);\n        }\n    }\n}\n","export function tail(arr) {\n    if (arr.length === 0) {\n        throw new Error('Invalid tail call');\n    }\n    return [arr.slice(0, arr.length - 1), arr[arr.length - 1]];\n}\nexport function last(arr) {\n    return arr.length > 0 ? arr[arr.length - 1] : undefined;\n}\nexport function sequenceEquals(arr1, arr2) {\n    if (arr1.length !== arr2.length) {\n        return false;\n    }\n    for (let i = 0; i < arr1.length; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Pushes an element to the start of the array, if found.\n */\nexport function pushToStart(arr, value) {\n    const index = arr.indexOf(value);\n    if (index > -1) {\n        arr.splice(index, 1);\n        arr.unshift(value);\n    }\n}\n/**\n * Pushes an element to the end of the array, if found.\n */\nexport function pushToEnd(arr, value) {\n    const index = arr.indexOf(value);\n    if (index > -1) {\n        arr.splice(index, 1);\n        arr.push(value);\n    }\n}\nexport function firstIndex(array, fn) {\n    for (let i = 0; i < array.length; i++) {\n        const element = array[i];\n        if (fn(element)) {\n            return i;\n        }\n    }\n    return -1;\n}\nexport function remove(array, value) {\n    const index = array.findIndex((t) => t === value);\n    if (index > -1) {\n        array.splice(index, 1);\n        return true;\n    }\n    return false;\n}\n","export const clamp = (value, min, max) => {\n    if (min > max) {\n        /**\n         * caveat: an error should be thrown here if this was a proper `clamp` function but we need to handle\n         * cases where `min` > `max` and in those cases return `min`.\n         */\n        return min;\n    }\n    return Math.min(max, Math.max(value, min));\n};\nexport const sequentialNumberGenerator = () => {\n    let value = 1;\n    return { next: () => (value++).toString() };\n};\nexport const range = (from, to) => {\n    const result = [];\n    if (typeof to !== 'number') {\n        to = from;\n        from = 0;\n    }\n    if (from <= to) {\n        for (let i = from; i < to; i++) {\n            result.push(i);\n        }\n    }\n    else {\n        for (let i = from; i > to; i--) {\n            result.push(i);\n        }\n    }\n    return result;\n};\n","import { clamp } from '../math';\nexport class ViewItem {\n    set size(size) {\n        this._size = size;\n    }\n    get size() {\n        return this._size;\n    }\n    get cachedVisibleSize() {\n        return this._cachedVisibleSize;\n    }\n    get visible() {\n        return typeof this._cachedVisibleSize === 'undefined';\n    }\n    get minimumSize() {\n        return this.visible ? this.view.minimumSize : 0;\n    }\n    get viewMinimumSize() {\n        return this.view.minimumSize;\n    }\n    get maximumSize() {\n        return this.visible ? this.view.maximumSize : 0;\n    }\n    get viewMaximumSize() {\n        return this.view.maximumSize;\n    }\n    get priority() {\n        return this.view.priority;\n    }\n    get snap() {\n        return !!this.view.snap;\n    }\n    set enabled(enabled) {\n        this.container.style.pointerEvents = enabled ? '' : 'none';\n    }\n    constructor(container, view, size, disposable) {\n        this.container = container;\n        this.view = view;\n        this.disposable = disposable;\n        this._cachedVisibleSize = undefined;\n        if (typeof size === 'number') {\n            this._size = size;\n            this._cachedVisibleSize = undefined;\n            container.classList.add('visible');\n        }\n        else {\n            this._size = 0;\n            this._cachedVisibleSize = size.cachedVisibleSize;\n        }\n    }\n    setVisible(visible, size) {\n        var _a;\n        if (visible === this.visible) {\n            return;\n        }\n        if (visible) {\n            this.size = clamp((_a = this._cachedVisibleSize) !== null && _a !== void 0 ? _a : 0, this.viewMinimumSize, this.viewMaximumSize);\n            this._cachedVisibleSize = undefined;\n        }\n        else {\n            this._cachedVisibleSize =\n                typeof size === 'number' ? size : this.size;\n            this.size = 0;\n        }\n        this.container.classList.toggle('visible', visible);\n        if (this.view.setVisible) {\n            this.view.setVisible(visible);\n        }\n    }\n    dispose() {\n        this.disposable.dispose();\n        return this.view;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/splitview\n *--------------------------------------------------------------------------------------------*/\nimport { removeClasses, addClasses, toggleClass, disableIframePointEvents, } from '../dom';\nimport { Emitter } from '../events';\nimport { pushToStart, pushToEnd, firstIndex } from '../array';\nimport { range, clamp } from '../math';\nimport { ViewItem } from './viewItem';\nexport var Orientation;\n(function (Orientation) {\n    Orientation[\"HORIZONTAL\"] = \"HORIZONTAL\";\n    Orientation[\"VERTICAL\"] = \"VERTICAL\";\n})(Orientation || (Orientation = {}));\nexport var SashState;\n(function (SashState) {\n    SashState[SashState[\"MAXIMUM\"] = 0] = \"MAXIMUM\";\n    SashState[SashState[\"MINIMUM\"] = 1] = \"MINIMUM\";\n    SashState[SashState[\"DISABLED\"] = 2] = \"DISABLED\";\n    SashState[SashState[\"ENABLED\"] = 3] = \"ENABLED\";\n})(SashState || (SashState = {}));\nexport var LayoutPriority;\n(function (LayoutPriority) {\n    LayoutPriority[\"Low\"] = \"low\";\n    LayoutPriority[\"High\"] = \"high\";\n    LayoutPriority[\"Normal\"] = \"normal\";\n})(LayoutPriority || (LayoutPriority = {}));\nexport var Sizing;\n(function (Sizing) {\n    Sizing.Distribute = { type: 'distribute' };\n    function Split(index) {\n        return { type: 'split', index };\n    }\n    Sizing.Split = Split;\n    function Invisible(cachedVisibleSize) {\n        return { type: 'invisible', cachedVisibleSize };\n    }\n    Sizing.Invisible = Invisible;\n})(Sizing || (Sizing = {}));\nexport class Splitview {\n    get contentSize() {\n        return this._contentSize;\n    }\n    get size() {\n        return this._size;\n    }\n    set size(value) {\n        this._size = value;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    set orthogonalSize(value) {\n        this._orthogonalSize = value;\n    }\n    get length() {\n        return this.viewItems.length;\n    }\n    get proportions() {\n        return this._proportions ? [...this._proportions] : undefined;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    set orientation(value) {\n        this._orientation = value;\n        const tmp = this.size;\n        this.size = this.orthogonalSize;\n        this.orthogonalSize = tmp;\n        removeClasses(this.element, 'dv-horizontal', 'dv-vertical');\n        this.element.classList.add(this.orientation == Orientation.HORIZONTAL\n            ? 'dv-horizontal'\n            : 'dv-vertical');\n    }\n    get minimumSize() {\n        return this.viewItems.reduce((r, item) => r + item.minimumSize, 0);\n    }\n    get maximumSize() {\n        return this.length === 0\n            ? Number.POSITIVE_INFINITY\n            : this.viewItems.reduce((r, item) => r + item.maximumSize, 0);\n    }\n    get startSnappingEnabled() {\n        return this._startSnappingEnabled;\n    }\n    set startSnappingEnabled(startSnappingEnabled) {\n        if (this._startSnappingEnabled === startSnappingEnabled) {\n            return;\n        }\n        this._startSnappingEnabled = startSnappingEnabled;\n        this.updateSashEnablement();\n    }\n    get endSnappingEnabled() {\n        return this._endSnappingEnabled;\n    }\n    set endSnappingEnabled(endSnappingEnabled) {\n        if (this._endSnappingEnabled === endSnappingEnabled) {\n            return;\n        }\n        this._endSnappingEnabled = endSnappingEnabled;\n        this.updateSashEnablement();\n    }\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = value;\n        toggleClass(this.element, 'dv-splitview-disabled', value);\n    }\n    get margin() {\n        return this._margin;\n    }\n    set margin(value) {\n        this._margin = value;\n    }\n    constructor(container, options) {\n        var _a;\n        this.container = container;\n        this.viewItems = [];\n        this.sashes = [];\n        this._size = 0;\n        this._orthogonalSize = 0;\n        this._contentSize = 0;\n        this._proportions = undefined;\n        this._startSnappingEnabled = true;\n        this._endSnappingEnabled = true;\n        this._disabled = false;\n        this._margin = 0;\n        this._onDidSashEnd = new Emitter();\n        this.onDidSashEnd = this._onDidSashEnd.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        this.resize = (index, delta, sizes = this.viewItems.map((x) => x.size), lowPriorityIndexes, highPriorityIndexes, overloadMinDelta = Number.NEGATIVE_INFINITY, overloadMaxDelta = Number.POSITIVE_INFINITY, snapBefore, snapAfter) => {\n            if (index < 0 || index > this.viewItems.length) {\n                return 0;\n            }\n            const upIndexes = range(index, -1);\n            const downIndexes = range(index + 1, this.viewItems.length);\n            //\n            if (highPriorityIndexes) {\n                for (const i of highPriorityIndexes) {\n                    pushToStart(upIndexes, i);\n                    pushToStart(downIndexes, i);\n                }\n            }\n            if (lowPriorityIndexes) {\n                for (const i of lowPriorityIndexes) {\n                    pushToEnd(upIndexes, i);\n                    pushToEnd(downIndexes, i);\n                }\n            }\n            //\n            const upItems = upIndexes.map((i) => this.viewItems[i]);\n            const upSizes = upIndexes.map((i) => sizes[i]);\n            //\n            const downItems = downIndexes.map((i) => this.viewItems[i]);\n            const downSizes = downIndexes.map((i) => sizes[i]);\n            //\n            const minDeltaUp = upIndexes.reduce((_, i) => _ + this.viewItems[i].minimumSize - sizes[i], 0);\n            const maxDeltaUp = upIndexes.reduce((_, i) => _ + this.viewItems[i].maximumSize - sizes[i], 0);\n            //\n            const maxDeltaDown = downIndexes.length === 0\n                ? Number.POSITIVE_INFINITY\n                : downIndexes.reduce((_, i) => _ + sizes[i] - this.viewItems[i].minimumSize, 0);\n            const minDeltaDown = downIndexes.length === 0\n                ? Number.NEGATIVE_INFINITY\n                : downIndexes.reduce((_, i) => _ + sizes[i] - this.viewItems[i].maximumSize, 0);\n            //\n            const minDelta = Math.max(minDeltaUp, minDeltaDown);\n            const maxDelta = Math.min(maxDeltaDown, maxDeltaUp);\n            //\n            let snapped = false;\n            if (snapBefore) {\n                const snapView = this.viewItems[snapBefore.index];\n                const visible = delta >= snapBefore.limitDelta;\n                snapped = visible !== snapView.visible;\n                snapView.setVisible(visible, snapBefore.size);\n            }\n            if (!snapped && snapAfter) {\n                const snapView = this.viewItems[snapAfter.index];\n                const visible = delta < snapAfter.limitDelta;\n                snapped = visible !== snapView.visible;\n                snapView.setVisible(visible, snapAfter.size);\n            }\n            if (snapped) {\n                return this.resize(index, delta, sizes, lowPriorityIndexes, highPriorityIndexes, overloadMinDelta, overloadMaxDelta);\n            }\n            //\n            const tentativeDelta = clamp(delta, minDelta, maxDelta);\n            let actualDelta = 0;\n            //\n            let deltaUp = tentativeDelta;\n            for (let i = 0; i < upItems.length; i++) {\n                const item = upItems[i];\n                const size = clamp(upSizes[i] + deltaUp, item.minimumSize, item.maximumSize);\n                const viewDelta = size - upSizes[i];\n                actualDelta += viewDelta;\n                deltaUp -= viewDelta;\n                item.size = size;\n            }\n            //\n            let deltaDown = actualDelta;\n            for (let i = 0; i < downItems.length; i++) {\n                const item = downItems[i];\n                const size = clamp(downSizes[i] - deltaDown, item.minimumSize, item.maximumSize);\n                const viewDelta = size - downSizes[i];\n                deltaDown += viewDelta;\n                item.size = size;\n            }\n            //\n            return delta;\n        };\n        this._orientation = options.orientation;\n        this.element = this.createContainer();\n        this.margin = (_a = options.margin) !== null && _a !== void 0 ? _a : 0;\n        this.proportionalLayout =\n            options.proportionalLayout === undefined\n                ? true\n                : !!options.proportionalLayout;\n        this.viewContainer = this.createViewContainer();\n        this.sashContainer = this.createSashContainer();\n        this.element.appendChild(this.sashContainer);\n        this.element.appendChild(this.viewContainer);\n        this.container.appendChild(this.element);\n        this.style(options.styles);\n        // We have an existing set of view, add them now\n        if (options.descriptor) {\n            this._size = options.descriptor.size;\n            options.descriptor.views.forEach((viewDescriptor, index) => {\n                const sizing = viewDescriptor.visible === undefined ||\n                    viewDescriptor.visible\n                    ? viewDescriptor.size\n                    : {\n                        type: 'invisible',\n                        cachedVisibleSize: viewDescriptor.size,\n                    };\n                const view = viewDescriptor.view;\n                this.addView(view, sizing, index, true\n                // true skip layout\n                );\n            });\n            // Initialize content size and proportions for first layout\n            this._contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n            this.saveProportions();\n        }\n    }\n    style(styles) {\n        if ((styles === null || styles === void 0 ? void 0 : styles.separatorBorder) === 'transparent') {\n            removeClasses(this.element, 'dv-separator-border');\n            this.element.style.removeProperty('--dv-separator-border');\n        }\n        else {\n            addClasses(this.element, 'dv-separator-border');\n            if (styles === null || styles === void 0 ? void 0 : styles.separatorBorder) {\n                this.element.style.setProperty('--dv-separator-border', styles.separatorBorder);\n            }\n        }\n    }\n    isViewVisible(index) {\n        if (index < 0 || index >= this.viewItems.length) {\n            throw new Error('Index out of bounds');\n        }\n        const viewItem = this.viewItems[index];\n        return viewItem.visible;\n    }\n    setViewVisible(index, visible) {\n        if (index < 0 || index >= this.viewItems.length) {\n            throw new Error('Index out of bounds');\n        }\n        const viewItem = this.viewItems[index];\n        viewItem.setVisible(visible, viewItem.size);\n        this.distributeEmptySpace(index);\n        this.layoutViews();\n        this.saveProportions();\n    }\n    getViewSize(index) {\n        if (index < 0 || index >= this.viewItems.length) {\n            return -1;\n        }\n        return this.viewItems[index].size;\n    }\n    resizeView(index, size) {\n        if (index < 0 || index >= this.viewItems.length) {\n            return;\n        }\n        const indexes = range(this.viewItems.length).filter((i) => i !== index);\n        const lowPriorityIndexes = [\n            ...indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low),\n            index,\n        ];\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        const item = this.viewItems[index];\n        size = Math.round(size);\n        size = clamp(size, item.minimumSize, Math.min(item.maximumSize, this._size));\n        item.size = size;\n        this.relayout(lowPriorityIndexes, highPriorityIndexes);\n    }\n    getViews() {\n        return this.viewItems.map((x) => x.view);\n    }\n    onDidChange(item, size) {\n        const index = this.viewItems.indexOf(item);\n        if (index < 0 || index >= this.viewItems.length) {\n            return;\n        }\n        size = typeof size === 'number' ? size : item.size;\n        size = clamp(size, item.minimumSize, item.maximumSize);\n        item.size = size;\n        const indexes = range(this.viewItems.length).filter((i) => i !== index);\n        const lowPriorityIndexes = [\n            ...indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low),\n            index,\n        ];\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        /**\n         * add this view we are changing to the low-index list since we have determined the size\n         * here and don't want it changed\n         */\n        this.relayout([...lowPriorityIndexes, index], highPriorityIndexes);\n    }\n    addView(view, size = { type: 'distribute' }, index = this.viewItems.length, skipLayout) {\n        const container = document.createElement('div');\n        container.className = 'dv-view';\n        container.appendChild(view.element);\n        let viewSize;\n        if (typeof size === 'number') {\n            viewSize = size;\n        }\n        else if (size.type === 'split') {\n            viewSize = this.getViewSize(size.index) / 2;\n        }\n        else if (size.type === 'invisible') {\n            viewSize = { cachedVisibleSize: size.cachedVisibleSize };\n        }\n        else {\n            viewSize = view.minimumSize;\n        }\n        const disposable = view.onDidChange((newSize) => this.onDidChange(viewItem, newSize.size));\n        const viewItem = new ViewItem(container, view, viewSize, {\n            dispose: () => {\n                disposable.dispose();\n                this.viewContainer.removeChild(container);\n            },\n        });\n        if (index === this.viewItems.length) {\n            this.viewContainer.appendChild(container);\n        }\n        else {\n            this.viewContainer.insertBefore(container, this.viewContainer.children.item(index));\n        }\n        this.viewItems.splice(index, 0, viewItem);\n        if (this.viewItems.length > 1) {\n            //add sash\n            const sash = document.createElement('div');\n            sash.className = 'dv-sash';\n            const onPointerStart = (event) => {\n                for (const item of this.viewItems) {\n                    item.enabled = false;\n                }\n                const iframes = disableIframePointEvents();\n                const start = this._orientation === Orientation.HORIZONTAL\n                    ? event.clientX\n                    : event.clientY;\n                const sashIndex = firstIndex(this.sashes, (s) => s.container === sash);\n                //\n                const sizes = this.viewItems.map((x) => x.size);\n                //\n                let snapBefore;\n                let snapAfter;\n                const upIndexes = range(sashIndex, -1);\n                const downIndexes = range(sashIndex + 1, this.viewItems.length);\n                const minDeltaUp = upIndexes.reduce((r, i) => r + (this.viewItems[i].minimumSize - sizes[i]), 0);\n                const maxDeltaUp = upIndexes.reduce((r, i) => r + (this.viewItems[i].viewMaximumSize - sizes[i]), 0);\n                const maxDeltaDown = downIndexes.length === 0\n                    ? Number.POSITIVE_INFINITY\n                    : downIndexes.reduce((r, i) => r +\n                        (sizes[i] - this.viewItems[i].minimumSize), 0);\n                const minDeltaDown = downIndexes.length === 0\n                    ? Number.NEGATIVE_INFINITY\n                    : downIndexes.reduce((r, i) => r +\n                        (sizes[i] -\n                            this.viewItems[i].viewMaximumSize), 0);\n                const minDelta = Math.max(minDeltaUp, minDeltaDown);\n                const maxDelta = Math.min(maxDeltaDown, maxDeltaUp);\n                const snapBeforeIndex = this.findFirstSnapIndex(upIndexes);\n                const snapAfterIndex = this.findFirstSnapIndex(downIndexes);\n                if (typeof snapBeforeIndex === 'number') {\n                    const snappedViewItem = this.viewItems[snapBeforeIndex];\n                    const halfSize = Math.floor(snappedViewItem.viewMinimumSize / 2);\n                    snapBefore = {\n                        index: snapBeforeIndex,\n                        limitDelta: snappedViewItem.visible\n                            ? minDelta - halfSize\n                            : minDelta + halfSize,\n                        size: snappedViewItem.size,\n                    };\n                }\n                if (typeof snapAfterIndex === 'number') {\n                    const snappedViewItem = this.viewItems[snapAfterIndex];\n                    const halfSize = Math.floor(snappedViewItem.viewMinimumSize / 2);\n                    snapAfter = {\n                        index: snapAfterIndex,\n                        limitDelta: snappedViewItem.visible\n                            ? maxDelta + halfSize\n                            : maxDelta - halfSize,\n                        size: snappedViewItem.size,\n                    };\n                }\n                const onPointerMove = (event) => {\n                    const current = this._orientation === Orientation.HORIZONTAL\n                        ? event.clientX\n                        : event.clientY;\n                    const delta = current - start;\n                    this.resize(sashIndex, delta, sizes, undefined, undefined, minDelta, maxDelta, snapBefore, snapAfter);\n                    this.distributeEmptySpace();\n                    this.layoutViews();\n                };\n                const end = () => {\n                    for (const item of this.viewItems) {\n                        item.enabled = true;\n                    }\n                    iframes.release();\n                    this.saveProportions();\n                    document.removeEventListener('pointermove', onPointerMove);\n                    document.removeEventListener('pointerup', end);\n                    document.removeEventListener('pointercancel', end);\n                    this._onDidSashEnd.fire(undefined);\n                };\n                document.addEventListener('pointermove', onPointerMove);\n                document.addEventListener('pointerup', end);\n                document.addEventListener('pointercancel', end);\n            };\n            sash.addEventListener('pointerdown', onPointerStart);\n            const sashItem = {\n                container: sash,\n                disposable: () => {\n                    sash.removeEventListener('pointerdown', onPointerStart);\n                    this.sashContainer.removeChild(sash);\n                },\n            };\n            this.sashContainer.appendChild(sash);\n            this.sashes.push(sashItem);\n        }\n        if (!skipLayout) {\n            this.relayout([index]);\n        }\n        if (!skipLayout &&\n            typeof size !== 'number' &&\n            size.type === 'distribute') {\n            this.distributeViewSizes();\n        }\n        this._onDidAddView.fire(view);\n    }\n    distributeViewSizes() {\n        const flexibleViewItems = [];\n        let flexibleSize = 0;\n        for (const item of this.viewItems) {\n            if (item.maximumSize - item.minimumSize > 0) {\n                flexibleViewItems.push(item);\n                flexibleSize += item.size;\n            }\n        }\n        const size = Math.floor(flexibleSize / flexibleViewItems.length);\n        for (const item of flexibleViewItems) {\n            item.size = clamp(size, item.minimumSize, item.maximumSize);\n        }\n        const indexes = range(this.viewItems.length);\n        const lowPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low);\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        this.relayout(lowPriorityIndexes, highPriorityIndexes);\n    }\n    removeView(index, sizing, skipLayout = false) {\n        // Remove view\n        const viewItem = this.viewItems.splice(index, 1)[0];\n        viewItem.dispose();\n        // Remove sash\n        if (this.viewItems.length >= 1) {\n            const sashIndex = Math.max(index - 1, 0);\n            const sashItem = this.sashes.splice(sashIndex, 1)[0];\n            sashItem.disposable();\n        }\n        if (!skipLayout) {\n            this.relayout();\n        }\n        if (sizing && sizing.type === 'distribute') {\n            this.distributeViewSizes();\n        }\n        this._onDidRemoveView.fire(viewItem.view);\n        return viewItem.view;\n    }\n    getViewCachedVisibleSize(index) {\n        if (index < 0 || index >= this.viewItems.length) {\n            throw new Error('Index out of bounds');\n        }\n        const viewItem = this.viewItems[index];\n        return viewItem.cachedVisibleSize;\n    }\n    moveView(from, to) {\n        const cachedVisibleSize = this.getViewCachedVisibleSize(from);\n        const sizing = typeof cachedVisibleSize === 'undefined'\n            ? this.getViewSize(from)\n            : Sizing.Invisible(cachedVisibleSize);\n        const view = this.removeView(from, undefined, true);\n        this.addView(view, sizing, to);\n    }\n    layout(size, orthogonalSize) {\n        const previousSize = Math.max(this.size, this._contentSize);\n        this.size = size;\n        this.orthogonalSize = orthogonalSize;\n        if (!this.proportions) {\n            const indexes = range(this.viewItems.length);\n            const lowPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low);\n            const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n            this.resize(this.viewItems.length - 1, size - previousSize, undefined, lowPriorityIndexes, highPriorityIndexes);\n        }\n        else {\n            let total = 0;\n            for (let i = 0; i < this.viewItems.length; i++) {\n                const item = this.viewItems[i];\n                const proportion = this.proportions[i];\n                if (typeof proportion === 'number') {\n                    total += proportion;\n                }\n                else {\n                    size -= item.size;\n                }\n            }\n            for (let i = 0; i < this.viewItems.length; i++) {\n                const item = this.viewItems[i];\n                const proportion = this.proportions[i];\n                if (typeof proportion === 'number' && total > 0) {\n                    item.size = clamp(Math.round((proportion * size) / total), item.minimumSize, item.maximumSize);\n                }\n            }\n        }\n        this.distributeEmptySpace();\n        this.layoutViews();\n    }\n    relayout(lowPriorityIndexes, highPriorityIndexes) {\n        const contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n        this.resize(this.viewItems.length - 1, this._size - contentSize, undefined, lowPriorityIndexes, highPriorityIndexes);\n        this.distributeEmptySpace();\n        this.layoutViews();\n        this.saveProportions();\n    }\n    distributeEmptySpace(lowPriorityIndex) {\n        const contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n        let emptyDelta = this.size - contentSize;\n        const indexes = range(this.viewItems.length - 1, -1);\n        const lowPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low);\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        for (const index of highPriorityIndexes) {\n            pushToStart(indexes, index);\n        }\n        for (const index of lowPriorityIndexes) {\n            pushToEnd(indexes, index);\n        }\n        if (typeof lowPriorityIndex === 'number') {\n            pushToEnd(indexes, lowPriorityIndex);\n        }\n        for (let i = 0; emptyDelta !== 0 && i < indexes.length; i++) {\n            const item = this.viewItems[indexes[i]];\n            const size = clamp(item.size + emptyDelta, item.minimumSize, item.maximumSize);\n            const viewDelta = size - item.size;\n            emptyDelta -= viewDelta;\n            item.size = size;\n        }\n    }\n    saveProportions() {\n        if (this.proportionalLayout && this._contentSize > 0) {\n            this._proportions = this.viewItems.map((i) => i.visible ? i.size / this._contentSize : undefined);\n        }\n    }\n    /**\n     * Margin explain:\n     *\n     * For `n` views in a splitview there will be `n-1` margins `m`.\n     *\n     * To fit the margins each view must reduce in size by `(m * (n - 1)) / n`.\n     *\n     * For each view `i` the offet must be adjusted by `m * i/(n - 1)`.\n     */\n    layoutViews() {\n        this._contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n        this.updateSashEnablement();\n        if (this.viewItems.length === 0) {\n            return;\n        }\n        const visibleViewItems = this.viewItems.filter((i) => i.visible);\n        const sashCount = Math.max(0, visibleViewItems.length - 1);\n        const marginReducedSize = (this.margin * sashCount) / Math.max(1, visibleViewItems.length);\n        let totalLeftOffset = 0;\n        const viewLeftOffsets = [];\n        const sashWidth = 4; // hardcoded in css\n        const runningVisiblePanelCount = this.viewItems.reduce((arr, viewItem, i) => {\n            const flag = viewItem.visible ? 1 : 0;\n            if (i === 0) {\n                arr.push(flag);\n            }\n            else {\n                arr.push(arr[i - 1] + flag);\n            }\n            return arr;\n        }, []);\n        // calculate both view and cash positions\n        this.viewItems.forEach((view, i) => {\n            totalLeftOffset += this.viewItems[i].size;\n            viewLeftOffsets.push(totalLeftOffset);\n            const size = view.visible ? view.size - marginReducedSize : 0;\n            const visiblePanelsBeforeThisView = Math.max(0, runningVisiblePanelCount[i] - 1);\n            const offset = i === 0 || visiblePanelsBeforeThisView === 0\n                ? 0\n                : viewLeftOffsets[i - 1] +\n                    (visiblePanelsBeforeThisView / sashCount) *\n                        marginReducedSize;\n            if (i < this.viewItems.length - 1) {\n                // calculate sash position\n                const newSize = view.visible\n                    ? offset + size - sashWidth / 2 + this.margin / 2\n                    : offset;\n                if (this._orientation === Orientation.HORIZONTAL) {\n                    this.sashes[i].container.style.left = `${newSize}px`;\n                    this.sashes[i].container.style.top = `0px`;\n                }\n                if (this._orientation === Orientation.VERTICAL) {\n                    this.sashes[i].container.style.left = `0px`;\n                    this.sashes[i].container.style.top = `${newSize}px`;\n                }\n            }\n            // calculate view position\n            if (this._orientation === Orientation.HORIZONTAL) {\n                view.container.style.width = `${size}px`;\n                view.container.style.left = `${offset}px`;\n                view.container.style.top = '';\n                view.container.style.height = '';\n            }\n            if (this._orientation === Orientation.VERTICAL) {\n                view.container.style.height = `${size}px`;\n                view.container.style.top = `${offset}px`;\n                view.container.style.width = '';\n                view.container.style.left = '';\n            }\n            view.view.layout(view.size - marginReducedSize, this._orthogonalSize);\n        });\n    }\n    findFirstSnapIndex(indexes) {\n        // visible views first\n        for (const index of indexes) {\n            const viewItem = this.viewItems[index];\n            if (!viewItem.visible) {\n                continue;\n            }\n            if (viewItem.snap) {\n                return index;\n            }\n        }\n        // then, hidden views\n        for (const index of indexes) {\n            const viewItem = this.viewItems[index];\n            if (viewItem.visible &&\n                viewItem.maximumSize - viewItem.minimumSize > 0) {\n                return undefined;\n            }\n            if (!viewItem.visible && viewItem.snap) {\n                return index;\n            }\n        }\n        return undefined;\n    }\n    updateSashEnablement() {\n        let previous = false;\n        const collapsesDown = this.viewItems.map((i) => (previous = i.size - i.minimumSize > 0 || previous));\n        previous = false;\n        const expandsDown = this.viewItems.map((i) => (previous = i.maximumSize - i.size > 0 || previous));\n        const reverseViews = [...this.viewItems].reverse();\n        previous = false;\n        const collapsesUp = reverseViews\n            .map((i) => (previous = i.size - i.minimumSize > 0 || previous))\n            .reverse();\n        previous = false;\n        const expandsUp = reverseViews\n            .map((i) => (previous = i.maximumSize - i.size > 0 || previous))\n            .reverse();\n        let position = 0;\n        for (let index = 0; index < this.sashes.length; index++) {\n            const sash = this.sashes[index];\n            const viewItem = this.viewItems[index];\n            position += viewItem.size;\n            const min = !(collapsesDown[index] && expandsUp[index + 1]);\n            const max = !(expandsDown[index] && collapsesUp[index + 1]);\n            if (min && max) {\n                const upIndexes = range(index, -1);\n                const downIndexes = range(index + 1, this.viewItems.length);\n                const snapBeforeIndex = this.findFirstSnapIndex(upIndexes);\n                const snapAfterIndex = this.findFirstSnapIndex(downIndexes);\n                const snappedBefore = typeof snapBeforeIndex === 'number' &&\n                    !this.viewItems[snapBeforeIndex].visible;\n                const snappedAfter = typeof snapAfterIndex === 'number' &&\n                    !this.viewItems[snapAfterIndex].visible;\n                if (snappedBefore &&\n                    collapsesUp[index] &&\n                    (position > 0 || this.startSnappingEnabled)) {\n                    this.updateSash(sash, SashState.MINIMUM);\n                }\n                else if (snappedAfter &&\n                    collapsesDown[index] &&\n                    (position < this._contentSize || this.endSnappingEnabled)) {\n                    this.updateSash(sash, SashState.MAXIMUM);\n                }\n                else {\n                    this.updateSash(sash, SashState.DISABLED);\n                }\n            }\n            else if (min && !max) {\n                this.updateSash(sash, SashState.MINIMUM);\n            }\n            else if (!min && max) {\n                this.updateSash(sash, SashState.MAXIMUM);\n            }\n            else {\n                this.updateSash(sash, SashState.ENABLED);\n            }\n        }\n    }\n    updateSash(sash, state) {\n        toggleClass(sash.container, 'dv-disabled', state === SashState.DISABLED);\n        toggleClass(sash.container, 'dv-enabled', state === SashState.ENABLED);\n        toggleClass(sash.container, 'dv-maximum', state === SashState.MAXIMUM);\n        toggleClass(sash.container, 'dv-minimum', state === SashState.MINIMUM);\n    }\n    createViewContainer() {\n        const element = document.createElement('div');\n        element.className = 'dv-view-container';\n        return element;\n    }\n    createSashContainer() {\n        const element = document.createElement('div');\n        element.className = 'dv-sash-container';\n        return element;\n    }\n    createContainer() {\n        const element = document.createElement('div');\n        const orientationClassname = this._orientation === Orientation.HORIZONTAL\n            ? 'dv-horizontal'\n            : 'dv-vertical';\n        element.className = `dv-split-view-container ${orientationClassname}`;\n        return element;\n    }\n    dispose() {\n        this._onDidSashEnd.dispose();\n        this._onDidAddView.dispose();\n        this._onDidRemoveView.dispose();\n        for (let i = 0; i < this.element.children.length; i++) {\n            if (this.element.children.item(i) === this.element) {\n                this.element.removeChild(this.element);\n                break;\n            }\n        }\n        for (const viewItem of this.viewItems) {\n            viewItem.dispose();\n        }\n        this.element.remove();\n    }\n}\n","import { Splitview, Orientation, } from '../splitview/splitview';\nimport { CompositeDisposable } from '../lifecycle';\nimport { Emitter } from '../events';\nimport { addClasses, removeClasses } from '../dom';\nexport class Paneview extends CompositeDisposable {\n    get onDidAddView() {\n        return this.splitview.onDidAddView;\n    }\n    get onDidRemoveView() {\n        return this.splitview.onDidRemoveView;\n    }\n    get minimumSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumSize() {\n        return this.splitview.maximumSize;\n    }\n    get orientation() {\n        return this.splitview.orientation;\n    }\n    get size() {\n        return this.splitview.size;\n    }\n    get orthogonalSize() {\n        return this.splitview.orthogonalSize;\n    }\n    constructor(container, options) {\n        var _a;\n        super();\n        this.paneItems = [];\n        this.skipAnimation = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._orientation = (_a = options.orientation) !== null && _a !== void 0 ? _a : Orientation.VERTICAL;\n        this.element = document.createElement('div');\n        this.element.className = 'dv-pane-container';\n        container.appendChild(this.element);\n        this.splitview = new Splitview(this.element, {\n            orientation: this._orientation,\n            proportionalLayout: false,\n            descriptor: options.descriptor,\n        });\n        // if we've added views from the descriptor we need to\n        // add the panes to our Pane array and setup animation\n        this.getPanes().forEach((pane) => {\n            const disposable = new CompositeDisposable(pane.onDidChangeExpansionState(() => {\n                this.setupAnimation();\n                this._onDidChange.fire(undefined);\n            }));\n            const paneItem = {\n                pane,\n                disposable: {\n                    dispose: () => {\n                        disposable.dispose();\n                    },\n                },\n            };\n            this.paneItems.push(paneItem);\n            pane.orthogonalSize = this.splitview.orthogonalSize;\n        });\n        this.addDisposables(this._onDidChange, this.splitview.onDidSashEnd(() => {\n            this._onDidChange.fire(undefined);\n        }), this.splitview.onDidAddView(() => {\n            this._onDidChange.fire();\n        }), this.splitview.onDidRemoveView(() => {\n            this._onDidChange.fire();\n        }));\n    }\n    setViewVisible(index, visible) {\n        this.splitview.setViewVisible(index, visible);\n    }\n    addPane(pane, size, index = this.splitview.length, skipLayout = false) {\n        const disposable = pane.onDidChangeExpansionState(() => {\n            this.setupAnimation();\n            this._onDidChange.fire(undefined);\n        });\n        const paneItem = {\n            pane,\n            disposable: {\n                dispose: () => {\n                    disposable.dispose();\n                },\n            },\n        };\n        this.paneItems.splice(index, 0, paneItem);\n        pane.orthogonalSize = this.splitview.orthogonalSize;\n        this.splitview.addView(pane, size, index, skipLayout);\n    }\n    getViewSize(index) {\n        return this.splitview.getViewSize(index);\n    }\n    getPanes() {\n        return this.splitview.getViews();\n    }\n    removePane(index, options = { skipDispose: false }) {\n        const paneItem = this.paneItems.splice(index, 1)[0];\n        this.splitview.removeView(index);\n        if (!options.skipDispose) {\n            paneItem.disposable.dispose();\n            paneItem.pane.dispose();\n        }\n        return paneItem;\n    }\n    moveView(from, to) {\n        if (from === to) {\n            return;\n        }\n        const view = this.removePane(from, { skipDispose: true });\n        this.skipAnimation = true;\n        try {\n            this.addPane(view.pane, view.pane.size, to, false);\n        }\n        finally {\n            this.skipAnimation = false;\n        }\n    }\n    layout(size, orthogonalSize) {\n        this.splitview.layout(size, orthogonalSize);\n    }\n    setupAnimation() {\n        if (this.skipAnimation) {\n            return;\n        }\n        if (this.animationTimer) {\n            clearTimeout(this.animationTimer);\n            this.animationTimer = undefined;\n        }\n        addClasses(this.element, 'dv-animated');\n        this.animationTimer = setTimeout(() => {\n            this.animationTimer = undefined;\n            removeClasses(this.element, 'dv-animated');\n        }, 200);\n    }\n    dispose() {\n        super.dispose();\n        if (this.animationTimer) {\n            clearTimeout(this.animationTimer);\n            this.animationTimer = undefined;\n        }\n        this.paneItems.forEach((paneItem) => {\n            paneItem.disposable.dispose();\n            paneItem.pane.dispose();\n        });\n        this.paneItems = [];\n        this.splitview.dispose();\n        this.element.remove();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Orientation } from '../splitview/splitview';\nimport { Emitter } from '../events';\nexport class LeafNode {\n    get minimumWidth() {\n        return this.view.minimumWidth;\n    }\n    get maximumWidth() {\n        return this.view.maximumWidth;\n    }\n    get minimumHeight() {\n        return this.view.minimumHeight;\n    }\n    get maximumHeight() {\n        return this.view.maximumHeight;\n    }\n    get priority() {\n        return this.view.priority;\n    }\n    get snap() {\n        return this.view.snap;\n    }\n    get minimumSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumHeight\n            : this.minimumWidth;\n    }\n    get maximumSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumHeight\n            : this.maximumWidth;\n    }\n    get minimumOrthogonalSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumWidth\n            : this.minimumHeight;\n    }\n    get maximumOrthogonalSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumWidth\n            : this.maximumHeight;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    get size() {\n        return this._size;\n    }\n    get element() {\n        return this.view.element;\n    }\n    get width() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.orthogonalSize\n            : this.size;\n    }\n    get height() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.size\n            : this.orthogonalSize;\n    }\n    constructor(view, orientation, orthogonalSize, size = 0) {\n        this.view = view;\n        this.orientation = orientation;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._orthogonalSize = orthogonalSize;\n        this._size = size;\n        this._disposable = this.view.onDidChange((event) => {\n            if (event) {\n                this._onDidChange.fire({\n                    size: this.orientation === Orientation.VERTICAL\n                        ? event.width\n                        : event.height,\n                    orthogonalSize: this.orientation === Orientation.VERTICAL\n                        ? event.height\n                        : event.width,\n                });\n            }\n            else {\n                this._onDidChange.fire({});\n            }\n        });\n    }\n    setVisible(visible) {\n        if (this.view.setVisible) {\n            this.view.setVisible(visible);\n        }\n    }\n    layout(size, orthogonalSize) {\n        this._size = size;\n        this._orthogonalSize = orthogonalSize;\n        this.view.layout(this.width, this.height);\n    }\n    dispose() {\n        this._onDidChange.dispose();\n        this._disposable.dispose();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Splitview, Orientation, LayoutPriority, } from '../splitview/splitview';\nimport { Emitter, Event } from '../events';\nimport { LeafNode } from './leafNode';\nimport { CompositeDisposable, Disposable } from '../lifecycle';\nexport class BranchNode extends CompositeDisposable {\n    get width() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.size\n            : this.orthogonalSize;\n    }\n    get height() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.orthogonalSize\n            : this.size;\n    }\n    get minimumSize() {\n        return this.children.length === 0\n            ? 0\n            : Math.max(...this.children.map((c, index) => this.splitview.isViewVisible(index)\n                ? c.minimumOrthogonalSize\n                : 0));\n    }\n    get maximumSize() {\n        return Math.min(...this.children.map((c, index) => this.splitview.isViewVisible(index)\n            ? c.maximumOrthogonalSize\n            : Number.POSITIVE_INFINITY));\n    }\n    get minimumOrthogonalSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumOrthogonalSize() {\n        return this.splitview.maximumSize;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    get size() {\n        return this._size;\n    }\n    get minimumWidth() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumOrthogonalSize\n            : this.minimumSize;\n    }\n    get minimumHeight() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumSize\n            : this.minimumOrthogonalSize;\n    }\n    get maximumWidth() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumOrthogonalSize\n            : this.maximumSize;\n    }\n    get maximumHeight() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumSize\n            : this.maximumOrthogonalSize;\n    }\n    get priority() {\n        if (this.children.length === 0) {\n            return LayoutPriority.Normal;\n        }\n        const priorities = this.children.map((c) => typeof c.priority === 'undefined'\n            ? LayoutPriority.Normal\n            : c.priority);\n        if (priorities.some((p) => p === LayoutPriority.High)) {\n            return LayoutPriority.High;\n        }\n        else if (priorities.some((p) => p === LayoutPriority.Low)) {\n            return LayoutPriority.Low;\n        }\n        return LayoutPriority.Normal;\n    }\n    get disabled() {\n        return this.splitview.disabled;\n    }\n    set disabled(value) {\n        this.splitview.disabled = value;\n    }\n    get margin() {\n        return this.splitview.margin;\n    }\n    set margin(value) {\n        this.splitview.margin = value;\n        this.children.forEach((child) => {\n            if (child instanceof BranchNode) {\n                child.margin = value;\n            }\n        });\n    }\n    constructor(orientation, proportionalLayout, styles, size, orthogonalSize, disabled, margin, childDescriptors) {\n        super();\n        this.orientation = orientation;\n        this.proportionalLayout = proportionalLayout;\n        this.styles = styles;\n        this._childrenDisposable = Disposable.NONE;\n        this.children = [];\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._onDidVisibilityChange = new Emitter();\n        this.onDidVisibilityChange = this._onDidVisibilityChange.event;\n        this._orthogonalSize = orthogonalSize;\n        this._size = size;\n        this.element = document.createElement('div');\n        this.element.className = 'dv-branch-node';\n        if (!childDescriptors) {\n            this.splitview = new Splitview(this.element, {\n                orientation: this.orientation,\n                proportionalLayout,\n                styles,\n                margin,\n            });\n            this.splitview.layout(this.size, this.orthogonalSize);\n        }\n        else {\n            const descriptor = {\n                views: childDescriptors.map((childDescriptor) => {\n                    return {\n                        view: childDescriptor.node,\n                        size: childDescriptor.node.size,\n                        visible: childDescriptor.node instanceof LeafNode &&\n                            childDescriptor.visible !== undefined\n                            ? childDescriptor.visible\n                            : true,\n                    };\n                }),\n                size: this.orthogonalSize,\n            };\n            this.children = childDescriptors.map((c) => c.node);\n            this.splitview = new Splitview(this.element, {\n                orientation: this.orientation,\n                descriptor,\n                proportionalLayout,\n                styles,\n                margin,\n            });\n        }\n        this.disabled = disabled;\n        this.addDisposables(this._onDidChange, this._onDidVisibilityChange, this.splitview.onDidSashEnd(() => {\n            this._onDidChange.fire({});\n        }));\n        this.setupChildrenEvents();\n    }\n    setVisible(_visible) {\n        // noop\n    }\n    isChildVisible(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.isViewVisible(index);\n    }\n    setChildVisible(index, visible) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        if (this.splitview.isViewVisible(index) === visible) {\n            return;\n        }\n        const wereAllChildrenHidden = this.splitview.contentSize === 0;\n        this.splitview.setViewVisible(index, visible);\n        // }\n        const areAllChildrenHidden = this.splitview.contentSize === 0;\n        // If all children are hidden then the parent should hide the entire splitview\n        // If the entire splitview is hidden then the parent should show the splitview when a child is shown\n        if ((visible && wereAllChildrenHidden) ||\n            (!visible && areAllChildrenHidden)) {\n            this._onDidVisibilityChange.fire({ visible });\n        }\n    }\n    moveChild(from, to) {\n        if (from === to) {\n            return;\n        }\n        if (from < 0 || from >= this.children.length) {\n            throw new Error('Invalid from index');\n        }\n        if (from < to) {\n            to--;\n        }\n        this.splitview.moveView(from, to);\n        const child = this._removeChild(from);\n        this._addChild(child, to);\n    }\n    getChildSize(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.getViewSize(index);\n    }\n    resizeChild(index, size) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.resizeView(index, size);\n    }\n    layout(size, orthogonalSize) {\n        this._size = orthogonalSize;\n        this._orthogonalSize = size;\n        this.splitview.layout(orthogonalSize, size);\n    }\n    addChild(node, size, index, skipLayout) {\n        if (index < 0 || index > this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.addView(node, size, index, skipLayout);\n        this._addChild(node, index);\n    }\n    getChildCachedVisibleSize(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.getViewCachedVisibleSize(index);\n    }\n    removeChild(index, sizing) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.removeView(index, sizing);\n        return this._removeChild(index);\n    }\n    _addChild(node, index) {\n        this.children.splice(index, 0, node);\n        this.setupChildrenEvents();\n    }\n    _removeChild(index) {\n        const [child] = this.children.splice(index, 1);\n        this.setupChildrenEvents();\n        return child;\n    }\n    setupChildrenEvents() {\n        this._childrenDisposable.dispose();\n        this._childrenDisposable = new CompositeDisposable(Event.any(...this.children.map((c) => c.onDidChange))((e) => {\n            /**\n             * indicate a change has occured to allows any re-rendering but don't bubble\n             * event because that was specific to this branch\n             */\n            this._onDidChange.fire({ size: e.orthogonalSize });\n        }), ...this.children.map((c, i) => {\n            if (c instanceof BranchNode) {\n                return c.onDidVisibilityChange(({ visible }) => {\n                    this.setChildVisible(i, visible);\n                });\n            }\n            return Disposable.NONE;\n        }));\n    }\n    dispose() {\n        this._childrenDisposable.dispose();\n        this.splitview.dispose();\n        this.children.forEach((child) => child.dispose());\n        super.dispose();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Orientation, Sizing, } from '../splitview/splitview';\nimport { tail } from '../array';\nimport { LeafNode } from './leafNode';\nimport { BranchNode } from './branchNode';\nimport { Emitter } from '../events';\nimport { MutableDisposable } from '../lifecycle';\nfunction findLeaf(candiateNode, last) {\n    if (candiateNode instanceof LeafNode) {\n        return candiateNode;\n    }\n    if (candiateNode instanceof BranchNode) {\n        return findLeaf(candiateNode.children[last ? candiateNode.children.length - 1 : 0], last);\n    }\n    throw new Error('invalid node');\n}\nfunction flipNode(node, size, orthogonalSize) {\n    if (node instanceof BranchNode) {\n        const result = new BranchNode(orthogonal(node.orientation), node.proportionalLayout, node.styles, size, orthogonalSize, node.disabled, node.margin);\n        let totalSize = 0;\n        for (let i = node.children.length - 1; i >= 0; i--) {\n            const child = node.children[i];\n            const childSize = child instanceof BranchNode ? child.orthogonalSize : child.size;\n            let newSize = node.size === 0\n                ? 0\n                : Math.round((size * childSize) / node.size);\n            totalSize += newSize;\n            // The last view to add should adjust to rounding errors\n            if (i === 0) {\n                newSize += size - totalSize;\n            }\n            result.addChild(flipNode(child, orthogonalSize, newSize), newSize, 0, true);\n        }\n        return result;\n    }\n    else {\n        return new LeafNode(node.view, orthogonal(node.orientation), orthogonalSize);\n    }\n}\nexport function indexInParent(element) {\n    const parentElement = element.parentElement;\n    if (!parentElement) {\n        throw new Error('Invalid grid element');\n    }\n    let el = parentElement.firstElementChild;\n    let index = 0;\n    while (el !== element && el !== parentElement.lastElementChild && el) {\n        el = el.nextElementSibling;\n        index++;\n    }\n    return index;\n}\n/**\n * Find the grid location of a specific DOM element by traversing the parent\n * chain and finding each child index on the way.\n *\n * This will break as soon as DOM structures of the Splitview or Gridview change.\n */\nexport function getGridLocation(element) {\n    const parentElement = element.parentElement;\n    if (!parentElement) {\n        throw new Error('Invalid grid element');\n    }\n    if (/\\bdv-grid-view\\b/.test(parentElement.className)) {\n        return [];\n    }\n    const index = indexInParent(parentElement);\n    const ancestor = parentElement.parentElement.parentElement.parentElement;\n    return [...getGridLocation(ancestor), index];\n}\nexport function getRelativeLocation(rootOrientation, location, direction) {\n    const orientation = getLocationOrientation(rootOrientation, location);\n    const directionOrientation = getDirectionOrientation(direction);\n    if (orientation === directionOrientation) {\n        const [rest, _index] = tail(location);\n        let index = _index;\n        if (direction === 'right' || direction === 'bottom') {\n            index += 1;\n        }\n        return [...rest, index];\n    }\n    else {\n        const index = direction === 'right' || direction === 'bottom' ? 1 : 0;\n        return [...location, index];\n    }\n}\nexport function getDirectionOrientation(direction) {\n    return direction === 'top' || direction === 'bottom'\n        ? Orientation.VERTICAL\n        : Orientation.HORIZONTAL;\n}\nexport function getLocationOrientation(rootOrientation, location) {\n    return location.length % 2 === 0\n        ? orthogonal(rootOrientation)\n        : rootOrientation;\n}\nexport const orthogonal = (orientation) => orientation === Orientation.HORIZONTAL\n    ? Orientation.VERTICAL\n    : Orientation.HORIZONTAL;\nexport function isGridBranchNode(node) {\n    return !!node.children;\n}\nconst serializeBranchNode = (node, orientation) => {\n    const size = orientation === Orientation.VERTICAL ? node.box.width : node.box.height;\n    if (!isGridBranchNode(node)) {\n        if (typeof node.cachedVisibleSize === 'number') {\n            return {\n                type: 'leaf',\n                data: node.view.toJSON(),\n                size: node.cachedVisibleSize,\n                visible: false,\n            };\n        }\n        return { type: 'leaf', data: node.view.toJSON(), size };\n    }\n    return {\n        type: 'branch',\n        data: node.children.map((c) => serializeBranchNode(c, orthogonal(orientation))),\n        size,\n    };\n};\nexport class Gridview {\n    get length() {\n        return this._root ? this._root.children.length : 0;\n    }\n    get orientation() {\n        return this.root.orientation;\n    }\n    set orientation(orientation) {\n        if (this.root.orientation === orientation) {\n            return;\n        }\n        const { size, orthogonalSize } = this.root;\n        this.root = flipNode(this.root, orthogonalSize, size);\n        this.root.layout(size, orthogonalSize);\n    }\n    get width() {\n        return this.root.width;\n    }\n    get height() {\n        return this.root.height;\n    }\n    get minimumWidth() {\n        return this.root.minimumWidth;\n    }\n    get minimumHeight() {\n        return this.root.minimumHeight;\n    }\n    get maximumWidth() {\n        return this.root.maximumHeight;\n    }\n    get maximumHeight() {\n        return this.root.maximumHeight;\n    }\n    get locked() {\n        return this._locked;\n    }\n    set locked(value) {\n        this._locked = value;\n        const branch = [this.root];\n        /**\n         * simple depth-first-search to cover all nodes\n         *\n         * @see https://en.wikipedia.org/wiki/Depth-first_search\n         */\n        while (branch.length > 0) {\n            const node = branch.pop();\n            if (node instanceof BranchNode) {\n                node.disabled = value;\n                branch.push(...node.children);\n            }\n        }\n    }\n    get margin() {\n        return this._margin;\n    }\n    set margin(value) {\n        this._margin = value;\n        this.root.margin = value;\n    }\n    maximizedView() {\n        var _a;\n        return (_a = this._maximizedNode) === null || _a === void 0 ? void 0 : _a.leaf.view;\n    }\n    hasMaximizedView() {\n        return this._maximizedNode !== undefined;\n    }\n    maximizeView(view) {\n        var _a;\n        const location = getGridLocation(view.element);\n        const [_, node] = this.getNode(location);\n        if (!(node instanceof LeafNode)) {\n            return;\n        }\n        if (((_a = this._maximizedNode) === null || _a === void 0 ? void 0 : _a.leaf) === node) {\n            return;\n        }\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        serializeBranchNode(this.getView(), this.orientation);\n        const hiddenOnMaximize = [];\n        function hideAllViewsBut(parent, exclude) {\n            for (let i = 0; i < parent.children.length; i++) {\n                const child = parent.children[i];\n                if (child instanceof LeafNode) {\n                    if (child !== exclude) {\n                        if (parent.isChildVisible(i)) {\n                            parent.setChildVisible(i, false);\n                        }\n                        else {\n                            hiddenOnMaximize.push(child);\n                        }\n                    }\n                }\n                else {\n                    hideAllViewsBut(child, exclude);\n                }\n            }\n        }\n        hideAllViewsBut(this.root, node);\n        this._maximizedNode = { leaf: node, hiddenOnMaximize };\n        this._onDidMaximizedNodeChange.fire({\n            view: node.view,\n            isMaximized: true,\n        });\n    }\n    exitMaximizedView() {\n        if (!this._maximizedNode) {\n            return;\n        }\n        const hiddenOnMaximize = this._maximizedNode.hiddenOnMaximize;\n        function showViewsInReverseOrder(parent) {\n            for (let index = parent.children.length - 1; index >= 0; index--) {\n                const child = parent.children[index];\n                if (child instanceof LeafNode) {\n                    if (!hiddenOnMaximize.includes(child)) {\n                        parent.setChildVisible(index, true);\n                    }\n                }\n                else {\n                    showViewsInReverseOrder(child);\n                }\n            }\n        }\n        showViewsInReverseOrder(this.root);\n        const tmp = this._maximizedNode.leaf;\n        this._maximizedNode = undefined;\n        this._onDidMaximizedNodeChange.fire({\n            view: tmp.view,\n            isMaximized: false,\n        });\n    }\n    serialize() {\n        const maximizedView = this.maximizedView();\n        let maxmizedViewLocation;\n        if (maximizedView) {\n            /**\n             * The minimum information we can get away with in order to serialize a maxmized view is it's location within the grid\n             * which is represented as a branch of indices\n             */\n            maxmizedViewLocation = getGridLocation(maximizedView.element);\n        }\n        if (this.hasMaximizedView()) {\n            /**\n             * the saved layout cannot be in its maxmized state otherwise all of the underlying\n             * view dimensions will be wrong\n             *\n             * To counteract this we temporaily remove the maximized view to compute the serialized output\n             * of the grid before adding back the maxmized view as to not alter the layout from the users\n             * perspective when `.toJSON()` is called\n             */\n            this.exitMaximizedView();\n        }\n        const root = serializeBranchNode(this.getView(), this.orientation);\n        const resullt = {\n            root,\n            width: this.width,\n            height: this.height,\n            orientation: this.orientation,\n        };\n        if (maxmizedViewLocation) {\n            resullt.maximizedNode = {\n                location: maxmizedViewLocation,\n            };\n        }\n        if (maximizedView) {\n            // replace any maximzied view that was removed for serialization purposes\n            this.maximizeView(maximizedView);\n        }\n        return resullt;\n    }\n    dispose() {\n        this.disposable.dispose();\n        this._onDidChange.dispose();\n        this._onDidMaximizedNodeChange.dispose();\n        this._onDidViewVisibilityChange.dispose();\n        this.root.dispose();\n        this._maximizedNode = undefined;\n        this.element.remove();\n    }\n    clear() {\n        const orientation = this.root.orientation;\n        this.root = new BranchNode(orientation, this.proportionalLayout, this.styles, this.root.size, this.root.orthogonalSize, this.locked, this.margin);\n    }\n    deserialize(json, deserializer) {\n        const orientation = json.orientation;\n        const height = orientation === Orientation.VERTICAL ? json.height : json.width;\n        this._deserialize(json.root, orientation, deserializer, height);\n        /**\n         * The deserialied layout must be positioned through this.layout(...)\n         * before any maximizedNode can be positioned\n         */\n        this.layout(json.width, json.height);\n        if (json.maximizedNode) {\n            const location = json.maximizedNode.location;\n            const [_, node] = this.getNode(location);\n            if (!(node instanceof LeafNode)) {\n                return;\n            }\n            this.maximizeView(node.view);\n        }\n    }\n    _deserialize(root, orientation, deserializer, orthogonalSize) {\n        this.root = this._deserializeNode(root, orientation, deserializer, orthogonalSize);\n    }\n    _deserializeNode(node, orientation, deserializer, orthogonalSize) {\n        var _a;\n        let result;\n        if (node.type === 'branch') {\n            const serializedChildren = node.data;\n            const children = serializedChildren.map((serializedChild) => {\n                return {\n                    node: this._deserializeNode(serializedChild, orthogonal(orientation), deserializer, node.size),\n                    visible: serializedChild.visible,\n                };\n            });\n            result = new BranchNode(orientation, this.proportionalLayout, this.styles, node.size, // <- orthogonal size - flips at each depth\n            orthogonalSize, // <- size - flips at each depth,\n            this.locked, this.margin, children);\n        }\n        else {\n            const view = deserializer.fromJSON(node);\n            if (typeof node.visible === 'boolean') {\n                (_a = view.setVisible) === null || _a === void 0 ? void 0 : _a.call(view, node.visible);\n            }\n            result = new LeafNode(view, orientation, orthogonalSize, node.size);\n        }\n        return result;\n    }\n    get root() {\n        return this._root;\n    }\n    set root(root) {\n        const oldRoot = this._root;\n        if (oldRoot) {\n            oldRoot.dispose();\n            this._maximizedNode = undefined;\n            this.element.removeChild(oldRoot.element);\n        }\n        this._root = root;\n        this.element.appendChild(this._root.element);\n        this.disposable.value = this._root.onDidChange((e) => {\n            this._onDidChange.fire(e);\n        });\n    }\n    /**\n     * If the root is orientated as a VERTICAL node then nest the existing root within a new HORIZIONTAL root node\n     * If the root is orientated as a HORIZONTAL node then nest the existing root within a new VERITCAL root node\n     */\n    insertOrthogonalSplitviewAtRoot() {\n        if (!this._root) {\n            return;\n        }\n        const oldRoot = this.root;\n        oldRoot.element.remove();\n        this._root = new BranchNode(orthogonal(oldRoot.orientation), this.proportionalLayout, this.styles, this.root.orthogonalSize, this.root.size, this.locked, this.margin);\n        if (oldRoot.children.length === 0) {\n            // no data so no need to add anything back in\n        }\n        else if (oldRoot.children.length === 1) {\n            // can remove one level of redundant branching if there is only a single child\n            const childReference = oldRoot.children[0];\n            const child = oldRoot.removeChild(0); // remove to prevent disposal when disposing of unwanted root\n            child.dispose();\n            oldRoot.dispose();\n            this._root.addChild(\n            /**\n             * the child node will have the same orientation as the new root since\n             * we are removing the inbetween node.\n             * the entire 'tree' must be flipped recursively to ensure that the orientation\n             * flips at each level\n             */\n            flipNode(childReference, childReference.orthogonalSize, childReference.size), Sizing.Distribute, 0);\n        }\n        else {\n            this._root.addChild(oldRoot, Sizing.Distribute, 0);\n        }\n        this.element.appendChild(this._root.element);\n        this.disposable.value = this._root.onDidChange((e) => {\n            this._onDidChange.fire(e);\n        });\n    }\n    next(location) {\n        return this.progmaticSelect(location);\n    }\n    previous(location) {\n        return this.progmaticSelect(location, true);\n    }\n    getView(location) {\n        const node = location ? this.getNode(location)[1] : this.root;\n        return this._getViews(node, this.orientation);\n    }\n    _getViews(node, orientation, cachedVisibleSize) {\n        const box = { height: node.height, width: node.width };\n        if (node instanceof LeafNode) {\n            return { box, view: node.view, cachedVisibleSize };\n        }\n        const children = [];\n        for (let i = 0; i < node.children.length; i++) {\n            const child = node.children[i];\n            const nodeCachedVisibleSize = node.getChildCachedVisibleSize(i);\n            children.push(this._getViews(child, orthogonal(orientation), nodeCachedVisibleSize));\n        }\n        return { box, children };\n    }\n    progmaticSelect(location, reverse = false) {\n        const [path, node] = this.getNode(location);\n        if (!(node instanceof LeafNode)) {\n            throw new Error('invalid location');\n        }\n        for (let i = path.length - 1; i > -1; i--) {\n            const n = path[i];\n            const l = location[i] || 0;\n            const canProgressInCurrentLevel = reverse\n                ? l - 1 > -1\n                : l + 1 < n.children.length;\n            if (canProgressInCurrentLevel) {\n                return findLeaf(n.children[reverse ? l - 1 : l + 1], reverse);\n            }\n        }\n        return findLeaf(this.root, reverse);\n    }\n    constructor(proportionalLayout, styles, orientation, locked, margin) {\n        this.proportionalLayout = proportionalLayout;\n        this.styles = styles;\n        this._locked = false;\n        this._margin = 0;\n        this._maximizedNode = undefined;\n        this.disposable = new MutableDisposable();\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._onDidViewVisibilityChange = new Emitter();\n        this.onDidViewVisibilityChange = this._onDidViewVisibilityChange.event;\n        this._onDidMaximizedNodeChange = new Emitter();\n        this.onDidMaximizedNodeChange = this._onDidMaximizedNodeChange.event;\n        this.element = document.createElement('div');\n        this.element.className = 'dv-grid-view';\n        this._locked = locked !== null && locked !== void 0 ? locked : false;\n        this._margin = margin !== null && margin !== void 0 ? margin : 0;\n        this.root = new BranchNode(orientation, proportionalLayout, styles, 0, 0, this.locked, this.margin);\n    }\n    isViewVisible(location) {\n        const [rest, index] = tail(location);\n        const [, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid from location');\n        }\n        return parent.isChildVisible(index);\n    }\n    setViewVisible(location, visible) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [rest, index] = tail(location);\n        const [, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid from location');\n        }\n        this._onDidViewVisibilityChange.fire();\n        parent.setChildVisible(index, visible);\n    }\n    moveView(parentLocation, from, to) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [, parent] = this.getNode(parentLocation);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        parent.moveChild(from, to);\n    }\n    addView(view, size, location) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [rest, index] = tail(location);\n        const [pathToParent, parent] = this.getNode(rest);\n        if (parent instanceof BranchNode) {\n            const node = new LeafNode(view, orthogonal(parent.orientation), parent.orthogonalSize);\n            parent.addChild(node, size, index);\n        }\n        else {\n            const [grandParent, ..._] = [...pathToParent].reverse();\n            const [parentIndex, ...__] = [...rest].reverse();\n            let newSiblingSize = 0;\n            const newSiblingCachedVisibleSize = grandParent.getChildCachedVisibleSize(parentIndex);\n            if (typeof newSiblingCachedVisibleSize === 'number') {\n                newSiblingSize = Sizing.Invisible(newSiblingCachedVisibleSize);\n            }\n            const child = grandParent.removeChild(parentIndex);\n            child.dispose();\n            const newParent = new BranchNode(parent.orientation, this.proportionalLayout, this.styles, parent.size, parent.orthogonalSize, this.locked, this.margin);\n            grandParent.addChild(newParent, parent.size, parentIndex);\n            const newSibling = new LeafNode(parent.view, grandParent.orientation, parent.size);\n            newParent.addChild(newSibling, newSiblingSize, 0);\n            if (typeof size !== 'number' && size.type === 'split') {\n                size = { type: 'split', index: 0 };\n            }\n            const node = new LeafNode(view, grandParent.orientation, parent.size);\n            newParent.addChild(node, size, index);\n        }\n    }\n    remove(view, sizing) {\n        const location = getGridLocation(view.element);\n        return this.removeView(location, sizing);\n    }\n    removeView(location, sizing) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [rest, index] = tail(location);\n        const [pathToParent, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        const nodeToRemove = parent.children[index];\n        if (!(nodeToRemove instanceof LeafNode)) {\n            throw new Error('Invalid location');\n        }\n        parent.removeChild(index, sizing);\n        nodeToRemove.dispose();\n        if (parent.children.length !== 1) {\n            return nodeToRemove.view;\n        }\n        // if the parent has only one child and we know the parent is a BranchNode we can make the tree\n        // more efficiently spaced by replacing the parent BranchNode with the child.\n        // if that child is a LeafNode then we simply replace the BranchNode with the child otherwise if the child\n        // is a BranchNode too we should spread it's children into the grandparent.\n        // refer to the remaining child as the sibling\n        const sibling = parent.children[0];\n        if (pathToParent.length === 0) {\n            // if the parent is root\n            if (sibling instanceof LeafNode) {\n                // if the sibling is a leaf node no action is required\n                return nodeToRemove.view;\n            }\n            // otherwise the sibling is a branch node. since the parent is the root and the root has only one child\n            // which is a branch node we can just set this branch node to be the new root node\n            // for good housekeeping we'll removing the sibling from it's existing tree\n            parent.removeChild(0, sizing);\n            // and set that sibling node to be root\n            this.root = sibling;\n            return nodeToRemove.view;\n        }\n        // otherwise the parent is apart of a large sub-tree\n        const [grandParent, ..._] = [...pathToParent].reverse();\n        const [parentIndex, ...__] = [...rest].reverse();\n        const isSiblingVisible = parent.isChildVisible(0);\n        // either way we need to remove the sibling from it's existing tree\n        parent.removeChild(0, sizing);\n        // note the sizes of all of the grandparents children\n        const sizes = grandParent.children.map((_size, i) => grandParent.getChildSize(i));\n        // remove the parent from the grandparent since we are moving the sibling to take the parents place\n        // this parent is no longer used and can be disposed of\n        grandParent.removeChild(parentIndex, sizing).dispose();\n        if (sibling instanceof BranchNode) {\n            // replace the parent with the siblings children\n            sizes.splice(parentIndex, 1, ...sibling.children.map((c) => c.size));\n            // and add those siblings to the grandparent\n            for (let i = 0; i < sibling.children.length; i++) {\n                const child = sibling.children[i];\n                grandParent.addChild(child, child.size, parentIndex + i);\n            }\n            /**\n             * clean down the branch node since we need to dipose of it and\n             * when .dispose() it called on a branch it will dispose of any\n             * views it is holding onto.\n             */\n            while (sibling.children.length > 0) {\n                sibling.removeChild(0);\n            }\n        }\n        else {\n            // otherwise create a new leaf node and add that to the grandparent\n            const newSibling = new LeafNode(sibling.view, orthogonal(sibling.orientation), sibling.size);\n            const siblingSizing = isSiblingVisible\n                ? sibling.orthogonalSize\n                : Sizing.Invisible(sibling.orthogonalSize);\n            grandParent.addChild(newSibling, siblingSizing, parentIndex);\n        }\n        // the containing node of the sibling is no longer required and can be disposed of\n        sibling.dispose();\n        // resize everything\n        for (let i = 0; i < sizes.length; i++) {\n            grandParent.resizeChild(i, sizes[i]);\n        }\n        return nodeToRemove.view;\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.root.orientation === Orientation.HORIZONTAL\n            ? [height, width]\n            : [width, height];\n        this.root.layout(size, orthogonalSize);\n    }\n    getNode(location, node = this.root, path = []) {\n        if (location.length === 0) {\n            return [path, node];\n        }\n        if (!(node instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        const [index, ...rest] = location;\n        if (index < 0 || index >= node.children.length) {\n            throw new Error('Invalid location');\n        }\n        const child = node.children[index];\n        path.push(node);\n        return this.getNode(rest, child, path);\n    }\n}\n","import { isInDocument, watchElementResize } from './dom';\nimport { CompositeDisposable } from './lifecycle';\nexport class Resizable extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    get disableResizing() {\n        return this._disableResizing;\n    }\n    set disableResizing(value) {\n        this._disableResizing = value;\n    }\n    constructor(parentElement, disableResizing = false) {\n        super();\n        this._disableResizing = disableResizing;\n        this._element = parentElement;\n        this.addDisposables(watchElementResize(this._element, (entry) => {\n            if (this.isDisposed) {\n                /**\n                 * resize is delayed through requestAnimationFrame so there is a small chance\n                 * the component has already been disposed of\n                 */\n                return;\n            }\n            if (this.disableResizing) {\n                return;\n            }\n            if (!this._element.offsetParent) {\n                /**\n                 * offsetParent === null is equivalent to display: none being set on the element or one\n                 * of it's parents. In the display: none case the size will become (0, 0) which we do\n                 * not want to propagate.\n                 *\n                 * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/offsetParent\n                 *\n                 * You could use checkVisibility() but at the time of writing it's not supported across\n                 * all Browsers\n                 *\n                 * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/checkVisibility\n                 */\n                return;\n            }\n            if (!isInDocument(this._element)) {\n                /**\n                 * since the event is dispatched through requestAnimationFrame there is a small chance\n                 * the component is no longer attached to the DOM, if that is the case the dimensions\n                 * are mostly likely all zero and meaningless. we should skip this case.\n                 */\n                return;\n            }\n            const { width, height } = entry.contentRect;\n            this.layout(width, height);\n        }));\n    }\n}\n","import { Emitter, Event, AsapEvent } from '../events';\nimport { getGridLocation, Gridview } from './gridview';\nimport { Disposable } from '../lifecycle';\nimport { sequentialNumberGenerator } from '../math';\nimport { Sizing } from '../splitview/splitview';\nimport { Resizable } from '../resizable';\nimport { Classnames } from '../dom';\nconst nextLayoutId = sequentialNumberGenerator();\nexport function toTarget(direction) {\n    switch (direction) {\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'above':\n            return 'top';\n        case 'below':\n            return 'bottom';\n        case 'within':\n        default:\n            return 'center';\n    }\n}\nexport class BaseGrid extends Resizable {\n    get id() {\n        return this._id;\n    }\n    get size() {\n        return this._groups.size;\n    }\n    get groups() {\n        return Array.from(this._groups.values()).map((_) => _.value);\n    }\n    get width() {\n        return this.gridview.width;\n    }\n    get height() {\n        return this.gridview.height;\n    }\n    get minimumHeight() {\n        return this.gridview.minimumHeight;\n    }\n    get maximumHeight() {\n        return this.gridview.maximumHeight;\n    }\n    get minimumWidth() {\n        return this.gridview.minimumWidth;\n    }\n    get maximumWidth() {\n        return this.gridview.maximumWidth;\n    }\n    get activeGroup() {\n        return this._activeGroup;\n    }\n    get locked() {\n        return this.gridview.locked;\n    }\n    set locked(value) {\n        this.gridview.locked = value;\n    }\n    constructor(parentElement, options) {\n        var _a;\n        super(document.createElement('div'), options.disableAutoResizing);\n        this._id = nextLayoutId.next();\n        this._groups = new Map();\n        this._onDidRemove = new Emitter();\n        this.onDidRemove = this._onDidRemove.event;\n        this._onDidAdd = new Emitter();\n        this.onDidAdd = this._onDidAdd.event;\n        this._onDidMaximizedChange = new Emitter();\n        this.onDidMaximizedChange = this._onDidMaximizedChange.event;\n        this._onDidActiveChange = new Emitter();\n        this.onDidActiveChange = this._onDidActiveChange.event;\n        this._bufferOnDidLayoutChange = new AsapEvent();\n        this.onDidLayoutChange = this._bufferOnDidLayoutChange.onEvent;\n        this._onDidViewVisibilityChangeMicroTaskQueue = new AsapEvent();\n        this.onDidViewVisibilityChangeMicroTaskQueue = this._onDidViewVisibilityChangeMicroTaskQueue.onEvent;\n        this.element.style.height = '100%';\n        this.element.style.width = '100%';\n        this._classNames = new Classnames(this.element);\n        this._classNames.setClassNames((_a = options.className) !== null && _a !== void 0 ? _a : '');\n        parentElement.appendChild(this.element);\n        this.gridview = new Gridview(!!options.proportionalLayout, options.styles, options.orientation, options.locked, options.margin);\n        this.gridview.locked = !!options.locked;\n        this.element.appendChild(this.gridview.element);\n        this.layout(0, 0, true); // set some elements height/widths\n        this.addDisposables(this.gridview.onDidMaximizedNodeChange((event) => {\n            this._onDidMaximizedChange.fire({\n                panel: event.view,\n                isMaximized: event.isMaximized,\n            });\n        }), this.gridview.onDidViewVisibilityChange(() => this._onDidViewVisibilityChangeMicroTaskQueue.fire()), this.onDidViewVisibilityChangeMicroTaskQueue(() => {\n            this.layout(this.width, this.height, true);\n        }), Disposable.from(() => {\n            var _a;\n            (_a = this.element.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(this.element);\n        }), this.gridview.onDidChange(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), Event.any(this.onDidAdd, this.onDidRemove, this.onDidActiveChange)(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), this._bufferOnDidLayoutChange);\n    }\n    setVisible(panel, visible) {\n        this.gridview.setViewVisible(getGridLocation(panel.element), visible);\n        this._bufferOnDidLayoutChange.fire();\n    }\n    isVisible(panel) {\n        return this.gridview.isViewVisible(getGridLocation(panel.element));\n    }\n    updateOptions(options) {\n        var _a, _b, _c, _d;\n        if (typeof options.proportionalLayout === 'boolean') {\n            // this.gridview.proportionalLayout = options.proportionalLayout; // not supported\n        }\n        if (options.orientation) {\n            this.gridview.orientation = options.orientation;\n        }\n        if ('styles' in options) {\n            // this.gridview.styles = options.styles; // not supported\n        }\n        if ('disableResizing' in options) {\n            this.disableResizing = (_a = options.disableAutoResizing) !== null && _a !== void 0 ? _a : false;\n        }\n        if ('locked' in options) {\n            this.locked = (_b = options.locked) !== null && _b !== void 0 ? _b : false;\n        }\n        if ('margin' in options) {\n            this.gridview.margin = (_c = options.margin) !== null && _c !== void 0 ? _c : 0;\n        }\n        if ('className' in options) {\n            this._classNames.setClassNames((_d = options.className) !== null && _d !== void 0 ? _d : '');\n        }\n    }\n    maximizeGroup(panel) {\n        this.gridview.maximizeView(panel);\n        this.doSetGroupActive(panel);\n    }\n    isMaximizedGroup(panel) {\n        return this.gridview.maximizedView() === panel;\n    }\n    exitMaximizedGroup() {\n        this.gridview.exitMaximizedView();\n    }\n    hasMaximizedGroup() {\n        return this.gridview.hasMaximizedView();\n    }\n    doAddGroup(group, location = [0], size) {\n        this.gridview.addView(group, size !== null && size !== void 0 ? size : Sizing.Distribute, location);\n        this._onDidAdd.fire(group);\n    }\n    doRemoveGroup(group, options) {\n        if (!this._groups.has(group.id)) {\n            throw new Error('invalid operation');\n        }\n        const item = this._groups.get(group.id);\n        const view = this.gridview.remove(group, Sizing.Distribute);\n        if (item && !(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n            item.disposable.dispose();\n            item.value.dispose();\n            this._groups.delete(group.id);\n            this._onDidRemove.fire(group);\n        }\n        if (!(options === null || options === void 0 ? void 0 : options.skipActive) && this._activeGroup === group) {\n            const groups = Array.from(this._groups.values());\n            this.doSetGroupActive(groups.length > 0 ? groups[0].value : undefined);\n        }\n        return view;\n    }\n    getPanel(id) {\n        var _a;\n        return (_a = this._groups.get(id)) === null || _a === void 0 ? void 0 : _a.value;\n    }\n    doSetGroupActive(group) {\n        if (this._activeGroup === group) {\n            return;\n        }\n        if (this._activeGroup) {\n            this._activeGroup.setActive(false);\n        }\n        if (group) {\n            group.setActive(true);\n        }\n        this._activeGroup = group;\n        this._onDidActiveChange.fire(group);\n    }\n    removeGroup(group) {\n        this.doRemoveGroup(group);\n    }\n    moveToNext(options) {\n        var _a;\n        if (!options) {\n            options = {};\n        }\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.next(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupActive(next);\n    }\n    moveToPrevious(options) {\n        var _a;\n        if (!options) {\n            options = {};\n        }\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.previous(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupActive(next);\n    }\n    layout(width, height, forceResize) {\n        const different = forceResize || width !== this.width || height !== this.height;\n        if (!different) {\n            return;\n        }\n        this.gridview.element.style.height = `${height}px`;\n        this.gridview.element.style.width = `${width}px`;\n        this.gridview.layout(width, height);\n    }\n    dispose() {\n        this._onDidActiveChange.dispose();\n        this._onDidAdd.dispose();\n        this._onDidRemove.dispose();\n        for (const group of this.groups) {\n            group.dispose();\n        }\n        this.gridview.dispose();\n        super.dispose();\n    }\n}\n","import { Emitter } from '../events';\nexport class SplitviewApi {\n    /**\n     * The minimum size  the component can reach where size is measured in the direction of orientation provided.\n     */\n    get minimumSize() {\n        return this.component.minimumSize;\n    }\n    /**\n     * The maximum size the component can reach where size is measured in the direction of orientation provided.\n     */\n    get maximumSize() {\n        return this.component.maximumSize;\n    }\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * The current number of panels.\n     */\n    get length() {\n        return this.component.length;\n    }\n    /**\n     * The current orientation of the component.\n     */\n    get orientation() {\n        return this.component.orientation;\n    }\n    /**\n     * The list of current panels.\n     */\n    get panels() {\n        return this.component.panels;\n    }\n    /**\n     * Invoked after a layout is loaded through the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * Invoked whenever any aspect of the layout changes.\n     * If listening to this event it may be worth debouncing ouputs.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked when a view is added.\n     */\n    get onDidAddView() {\n        return this.component.onDidAddView;\n    }\n    /**\n     * Invoked when a view is removed.\n     */\n    get onDidRemoveView() {\n        return this.component.onDidRemoveView;\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     * Removes an existing panel and optionally provide a `Sizing` method\n     * for the subsequent resize.\n     */\n    removePanel(panel, sizing) {\n        this.component.removePanel(panel, sizing);\n    }\n    /**\n     * Focus the component.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Get the reference to a panel given it's `string` id.\n     */\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Layout the panel with a width and height.\n     */\n    layout(width, height) {\n        return this.component.layout(width, height);\n    }\n    /**\n     * Add a new panel and return the created instance.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Move a panel given it's current and desired index.\n     */\n    movePanel(from, to) {\n        this.component.movePanel(from, to);\n    }\n    /**\n     * Deserialize a layout to built a splitivew.\n     */\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    /** Serialize a layout */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Remove all panels and clear the component.\n     */\n    clear() {\n        this.component.clear();\n    }\n    /**\n     * Update configuratable options.\n     */\n    updateOptions(options) {\n        this.component.updateOptions(options);\n    }\n    /**\n     * Release resources and teardown component. Do not call when using framework versions of dockview.\n     */\n    dispose() {\n        this.component.dispose();\n    }\n}\nexport class PaneviewApi {\n    /**\n     * The minimum size  the component can reach where size is measured in the direction of orientation provided.\n     */\n    get minimumSize() {\n        return this.component.minimumSize;\n    }\n    /**\n     * The maximum size the component can reach where size is measured in the direction of orientation provided.\n     */\n    get maximumSize() {\n        return this.component.maximumSize;\n    }\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * All panel objects.\n     */\n    get panels() {\n        return this.component.panels;\n    }\n    /**\n     * Invoked when any layout change occures, an aggregation of many events.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked after a layout is deserialzied using the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * Invoked when a panel is added. May be called multiple times when moving panels.\n     */\n    get onDidAddView() {\n        return this.component.onDidAddView;\n    }\n    /**\n     * Invoked when a panel is removed. May be called multiple times when moving panels.\n     */\n    get onDidRemoveView() {\n        return this.component.onDidRemoveView;\n    }\n    /**\n     * Invoked when a Drag'n'Drop event occurs that the component was unable to handle. Exposed for custom Drag'n'Drop functionality.\n     */\n    get onDidDrop() {\n        const emitter = new Emitter();\n        const disposable = this.component.onDidDrop((e) => {\n            emitter.fire(Object.assign(Object.assign({}, e), { api: this }));\n        });\n        emitter.dispose = () => {\n            disposable.dispose();\n            emitter.dispose();\n        };\n        return emitter.event;\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     * Remove a panel given the panel object.\n     */\n    removePanel(panel) {\n        this.component.removePanel(panel);\n    }\n    /**\n     * Get a panel object given a `string` id. May return `undefined`.\n     */\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Move a panel given it's current and desired index.\n     */\n    movePanel(from, to) {\n        this.component.movePanel(from, to);\n    }\n    /**\n     *  Focus the component. Will try to focus an active panel if one exists.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Force resize the component to an exact width and height. Read about auto-resizing before using.\n     */\n    layout(width, height) {\n        this.component.layout(width, height);\n    }\n    /**\n     * Add a panel and return the created object.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Create a component from a serialized object.\n     */\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    /**\n     * Create a serialized object of the current component.\n     */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Reset the component back to an empty and default state.\n     */\n    clear() {\n        this.component.clear();\n    }\n    /**\n     * Update configuratable options.\n     */\n    updateOptions(options) {\n        this.component.updateOptions(options);\n    }\n    /**\n     * Release resources and teardown component. Do not call when using framework versions of dockview.\n     */\n    dispose() {\n        this.component.dispose();\n    }\n}\nexport class GridviewApi {\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * Minimum height of the component.\n     */\n    get minimumHeight() {\n        return this.component.minimumHeight;\n    }\n    /**\n     * Maximum height of the component.\n     */\n    get maximumHeight() {\n        return this.component.maximumHeight;\n    }\n    /**\n     * Minimum width of the component.\n     */\n    get minimumWidth() {\n        return this.component.minimumWidth;\n    }\n    /**\n     * Maximum width of the component.\n     */\n    get maximumWidth() {\n        return this.component.maximumWidth;\n    }\n    /**\n     * Invoked when any layout change occures, an aggregation of many events.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked when a panel is added. May be called multiple times when moving panels.\n     */\n    get onDidAddPanel() {\n        return this.component.onDidAddGroup;\n    }\n    /**\n     * Invoked when a panel is removed. May be called multiple times when moving panels.\n     */\n    get onDidRemovePanel() {\n        return this.component.onDidRemoveGroup;\n    }\n    /**\n     * Invoked when the active panel changes. May be undefined if no panel is active.\n     */\n    get onDidActivePanelChange() {\n        return this.component.onDidActiveGroupChange;\n    }\n    /**\n     * Invoked after a layout is deserialzied using the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * All panel objects.\n     */\n    get panels() {\n        return this.component.groups;\n    }\n    /**\n     * Current orientation. Can be changed after initialization.\n     */\n    get orientation() {\n        return this.component.orientation;\n    }\n    set orientation(value) {\n        this.component.updateOptions({ orientation: value });\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     *  Focus the component. Will try to focus an active panel if one exists.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Force resize the component to an exact width and height. Read about auto-resizing before using.\n     */\n    layout(width, height, force = false) {\n        this.component.layout(width, height, force);\n    }\n    /**\n     * Add a panel and return the created object.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Remove a panel given the panel object.\n     */\n    removePanel(panel, sizing) {\n        this.component.removePanel(panel, sizing);\n    }\n    /**\n     * Move a panel in a particular direction relative to another panel.\n     */\n    movePanel(panel, options) {\n        this.component.movePanel(panel, options);\n    }\n    /**\n     * Get a panel object given a `string` id. May return `undefined`.\n     */\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Create a component from a serialized object.\n     */\n    fromJSON(data) {\n        return this.component.fromJSON(data);\n    }\n    /**\n     * Create a serialized object of the current component.\n     */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Reset the component back to an empty and default state.\n     */\n    clear() {\n        this.component.clear();\n    }\n    updateOptions(options) {\n        this.component.updateOptions(options);\n    }\n    /**\n     * Release resources and teardown component. Do not call when using framework versions of dockview.\n     */\n    dispose() {\n        this.component.dispose();\n    }\n}\nexport class DockviewApi {\n    /**\n     * The unique identifier for this instance. Used to manage scope of Drag'n'Drop events.\n     */\n    get id() {\n        return this.component.id;\n    }\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * Minimum height of the component.\n     */\n    get minimumHeight() {\n        return this.component.minimumHeight;\n    }\n    /**\n     * Maximum height of the component.\n     */\n    get maximumHeight() {\n        return this.component.maximumHeight;\n    }\n    /**\n     * Minimum width of the component.\n     */\n    get minimumWidth() {\n        return this.component.minimumWidth;\n    }\n    /**\n     * Maximum width of the component.\n     */\n    get maximumWidth() {\n        return this.component.maximumWidth;\n    }\n    /**\n     * Total number of groups.\n     */\n    get size() {\n        return this.component.size;\n    }\n    /**\n     * Total number of panels.\n     */\n    get totalPanels() {\n        return this.component.totalPanels;\n    }\n    get gap() {\n        return this.component.gap;\n    }\n    /**\n     * Invoked when the active group changes. May be undefined if no group is active.\n     */\n    get onDidActiveGroupChange() {\n        return this.component.onDidActiveGroupChange;\n    }\n    /**\n     * Invoked when a group is added. May be called multiple times when moving groups.\n     */\n    get onDidAddGroup() {\n        return this.component.onDidAddGroup;\n    }\n    /**\n     * Invoked when a group is removed. May be called multiple times when moving groups.\n     */\n    get onDidRemoveGroup() {\n        return this.component.onDidRemoveGroup;\n    }\n    /**\n     * Invoked when the active panel changes. May be undefined if no panel is active.\n     */\n    get onDidActivePanelChange() {\n        return this.component.onDidActivePanelChange;\n    }\n    /**\n     * Invoked when a panel is added. May be called multiple times when moving panels.\n     */\n    get onDidAddPanel() {\n        return this.component.onDidAddPanel;\n    }\n    /**\n     * Invoked when a panel is removed. May be called multiple times when moving panels.\n     */\n    get onDidRemovePanel() {\n        return this.component.onDidRemovePanel;\n    }\n    get onDidMovePanel() {\n        return this.component.onDidMovePanel;\n    }\n    /**\n     * Invoked after a layout is deserialzied using the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * Invoked when any layout change occures, an aggregation of many events.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked when a Drag'n'Drop event occurs that the component was unable to handle. Exposed for custom Drag'n'Drop functionality.\n     */\n    get onDidDrop() {\n        return this.component.onDidDrop;\n    }\n    /**\n     * Invoked when a Drag'n'Drop event occurs but before dockview handles it giving the user an opportunity to intecept and\n     * prevent the event from occuring using the standard `preventDefault()` syntax.\n     *\n     * Preventing certain events may causes unexpected behaviours, use carefully.\n     */\n    get onWillDrop() {\n        return this.component.onWillDrop;\n    }\n    /**\n     * Invoked before an overlay is shown indicating a drop target.\n     *\n     * Calling `event.preventDefault()` will prevent the overlay being shown and prevent\n     * the any subsequent drop event.\n     */\n    get onWillShowOverlay() {\n        return this.component.onWillShowOverlay;\n    }\n    /**\n     * Invoked before a group is dragged.\n     *\n     * Calling `event.nativeEvent.preventDefault()` will prevent the group drag starting.\n     *\n     */\n    get onWillDragGroup() {\n        return this.component.onWillDragGroup;\n    }\n    /**\n     * Invoked before a panel is dragged.\n     *\n     * Calling `event.nativeEvent.preventDefault()` will prevent the panel drag starting.\n     */\n    get onWillDragPanel() {\n        return this.component.onWillDragPanel;\n    }\n    get onUnhandledDragOverEvent() {\n        return this.component.onUnhandledDragOverEvent;\n    }\n    /**\n     * All panel objects.\n     */\n    get panels() {\n        return this.component.panels;\n    }\n    /**\n     * All group objects.\n     */\n    get groups() {\n        return this.component.groups;\n    }\n    /**\n     *  Active panel object.\n     */\n    get activePanel() {\n        return this.component.activePanel;\n    }\n    /**\n     * Active group object.\n     */\n    get activeGroup() {\n        return this.component.activeGroup;\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     *  Focus the component. Will try to focus an active panel if one exists.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Get a panel object given a `string` id. May return `undefined`.\n     */\n    getPanel(id) {\n        return this.component.getGroupPanel(id);\n    }\n    /**\n     * Force resize the component to an exact width and height. Read about auto-resizing before using.\n     */\n    layout(width, height, force = false) {\n        this.component.layout(width, height, force);\n    }\n    /**\n     * Add a panel and return the created object.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Remove a panel given the panel object.\n     */\n    removePanel(panel) {\n        this.component.removePanel(panel);\n    }\n    /**\n     * Add a group and return the created object.\n     */\n    addGroup(options) {\n        return this.component.addGroup(options);\n    }\n    /**\n     * Close all groups and panels.\n     */\n    closeAllGroups() {\n        return this.component.closeAllGroups();\n    }\n    /**\n     * Remove a group and any panels within the group.\n     */\n    removeGroup(group) {\n        this.component.removeGroup(group);\n    }\n    /**\n     * Get a group object given a `string` id. May return undefined.\n     */\n    getGroup(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Add a floating group\n     */\n    addFloatingGroup(item, options) {\n        return this.component.addFloatingGroup(item, options);\n    }\n    /**\n     * Create a component from a serialized object.\n     */\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    /**\n     * Create a serialized object of the current component.\n     */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Reset the component back to an empty and default state.\n     */\n    clear() {\n        this.component.clear();\n    }\n    /**\n     * Move the focus progmatically to the next panel or group.\n     */\n    moveToNext(options) {\n        this.component.moveToNext(options);\n    }\n    /**\n     * Move the focus progmatically to the previous panel or group.\n     */\n    moveToPrevious(options) {\n        this.component.moveToPrevious(options);\n    }\n    maximizeGroup(panel) {\n        this.component.maximizeGroup(panel.group);\n    }\n    hasMaximizedGroup() {\n        return this.component.hasMaximizedGroup();\n    }\n    exitMaximizedGroup() {\n        this.component.exitMaximizedGroup();\n    }\n    get onDidMaximizedGroupChange() {\n        return this.component.onDidMaximizedGroupChange;\n    }\n    /**\n     * Add a popout group in a new Window\n     */\n    addPopoutGroup(item, options) {\n        return this.component.addPopoutGroup(item, options);\n    }\n    setGap(gap) {\n        this.component.updateOptions({ gap });\n    }\n    updateOptions(options) {\n        this.component.updateOptions(options);\n    }\n    /**\n     * Release resources and teardown component. Do not call when using framework versions of dockview.\n     */\n    dispose() {\n        this.component.dispose();\n    }\n}\n","import { disableIframePointEvents } from '../dom';\nimport { addDisposableListener, Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nexport class DragHandler extends CompositeDisposable {\n    constructor(el) {\n        super();\n        this.el = el;\n        this.dataDisposable = new MutableDisposable();\n        this.pointerEventsDisposable = new MutableDisposable();\n        this._onDragStart = new Emitter();\n        this.onDragStart = this._onDragStart.event;\n        this.addDisposables(this._onDragStart, this.dataDisposable, this.pointerEventsDisposable);\n        this.configure();\n    }\n    isCancelled(_event) {\n        return false;\n    }\n    configure() {\n        this.addDisposables(this._onDragStart, addDisposableListener(this.el, 'dragstart', (event) => {\n            if (event.defaultPrevented || this.isCancelled(event)) {\n                event.preventDefault();\n                return;\n            }\n            const iframes = disableIframePointEvents();\n            this.pointerEventsDisposable.value = {\n                dispose: () => {\n                    iframes.release();\n                },\n            };\n            this.el.classList.add('dv-dragged');\n            setTimeout(() => this.el.classList.remove('dv-dragged'), 0);\n            this.dataDisposable.value = this.getData(event);\n            this._onDragStart.fire(event);\n            if (event.dataTransfer) {\n                event.dataTransfer.effectAllowed = 'move';\n                const hasData = event.dataTransfer.items.length > 0;\n                if (!hasData) {\n                    /**\n                     * Although this is not used by dockview many third party dnd libraries will check\n                     * dataTransfer.types to determine valid drag events.\n                     *\n                     * For example: in react-dnd if dataTransfer.types is not set then the dragStart event will be cancelled\n                     * through .preventDefault(). Since this is applied globally to all drag events this would break dockviews\n                     * dnd logic. You can see the code at\n                     * https://github.com/react-dnd/react-dnd/blob/main/packages/backend-html5/src/HTML5BackendImpl.ts#L542\n                     */\n                    event.dataTransfer.setData('text/plain', '');\n                }\n            }\n        }), addDisposableListener(this.el, 'dragend', () => {\n            this.pointerEventsDisposable.dispose();\n            this.dataDisposable.dispose();\n        }));\n    }\n}\n","import { addDisposableListener } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nexport class DragAndDropObserver extends CompositeDisposable {\n    constructor(element, callbacks) {\n        super();\n        this.element = element;\n        this.callbacks = callbacks;\n        this.target = null;\n        this.registerListeners();\n    }\n    onDragEnter(e) {\n        this.target = e.target;\n        this.callbacks.onDragEnter(e);\n    }\n    onDragOver(e) {\n        e.preventDefault(); // needed so that the drop event fires (https://stackoverflow.com/questions/21339924/drop-event-not-firing-in-chrome)\n        if (this.callbacks.onDragOver) {\n            this.callbacks.onDragOver(e);\n        }\n    }\n    onDragLeave(e) {\n        if (this.target === e.target) {\n            this.target = null;\n            this.callbacks.onDragLeave(e);\n        }\n    }\n    onDragEnd(e) {\n        this.target = null;\n        this.callbacks.onDragEnd(e);\n    }\n    onDrop(e) {\n        this.callbacks.onDrop(e);\n    }\n    registerListeners() {\n        this.addDisposables(addDisposableListener(this.element, 'dragenter', (e) => {\n            this.onDragEnter(e);\n        }, true));\n        this.addDisposables(addDisposableListener(this.element, 'dragover', (e) => {\n            this.onDragOver(e);\n        }, true));\n        this.addDisposables(addDisposableListener(this.element, 'dragleave', (e) => {\n            this.onDragLeave(e);\n        }));\n        this.addDisposables(addDisposableListener(this.element, 'dragend', (e) => {\n            this.onDragEnd(e);\n        }));\n        this.addDisposables(addDisposableListener(this.element, 'drop', (e) => {\n            this.onDrop(e);\n        }));\n    }\n}\n","import { toggleClass } from '../dom';\nimport { DockviewEvent, Emitter } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nimport { DragAndDropObserver } from './dnd';\nimport { clamp } from '../math';\nexport class WillShowOverlayEvent extends DockviewEvent {\n    get nativeEvent() {\n        return this.options.nativeEvent;\n    }\n    get position() {\n        return this.options.position;\n    }\n    constructor(options) {\n        super();\n        this.options = options;\n    }\n}\nexport function directionToPosition(direction) {\n    switch (direction) {\n        case 'above':\n            return 'top';\n        case 'below':\n            return 'bottom';\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'within':\n            return 'center';\n        default:\n            throw new Error(`invalid direction '${direction}'`);\n    }\n}\nexport function positionToDirection(position) {\n    switch (position) {\n        case 'top':\n            return 'above';\n        case 'bottom':\n            return 'below';\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'center':\n            return 'within';\n        default:\n            throw new Error(`invalid position '${position}'`);\n    }\n}\nconst DEFAULT_ACTIVATION_SIZE = {\n    value: 20,\n    type: 'percentage',\n};\nconst DEFAULT_SIZE = {\n    value: 50,\n    type: 'percentage',\n};\nconst SMALL_WIDTH_BOUNDARY = 100;\nconst SMALL_HEIGHT_BOUNDARY = 100;\nexport class Droptarget extends CompositeDisposable {\n    get state() {\n        return this._state;\n    }\n    constructor(element, options) {\n        super();\n        this.element = element;\n        this.options = options;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        // use a set to take advantage of #<set>.has\n        this._acceptedTargetZonesSet = new Set(this.options.acceptedTargetZones);\n        this.dnd = new DragAndDropObserver(this.element, {\n            onDragEnter: () => undefined,\n            onDragOver: (e) => {\n                if (this._acceptedTargetZonesSet.size === 0) {\n                    this.removeDropTarget();\n                    return;\n                }\n                const width = this.element.clientWidth;\n                const height = this.element.clientHeight;\n                if (width === 0 || height === 0) {\n                    return; // avoid div!0\n                }\n                const rect = e.currentTarget.getBoundingClientRect();\n                const x = e.clientX - rect.left;\n                const y = e.clientY - rect.top;\n                const quadrant = this.calculateQuadrant(this._acceptedTargetZonesSet, x, y, width, height);\n                /**\n                 * If the event has already been used by another DropTarget instance\n                 * then don't show a second drop target, only one target should be\n                 * active at any one time\n                 */\n                if (this.isAlreadyUsed(e) || quadrant === null) {\n                    // no drop target should be displayed\n                    this.removeDropTarget();\n                    return;\n                }\n                if (!this.options.canDisplayOverlay(e, quadrant)) {\n                    this.removeDropTarget();\n                    return;\n                }\n                const willShowOverlayEvent = new WillShowOverlayEvent({\n                    nativeEvent: e,\n                    position: quadrant,\n                });\n                /**\n                 * Provide an opportunity to prevent the overlay appearing and in turn\n                 * any dnd behaviours\n                 */\n                this._onWillShowOverlay.fire(willShowOverlayEvent);\n                if (willShowOverlayEvent.defaultPrevented) {\n                    this.removeDropTarget();\n                    return;\n                }\n                this.markAsUsed(e);\n                if (!this.targetElement) {\n                    this.targetElement = document.createElement('div');\n                    this.targetElement.className = 'dv-drop-target-dropzone';\n                    this.overlayElement = document.createElement('div');\n                    this.overlayElement.className = 'dv-drop-target-selection';\n                    this._state = 'center';\n                    this.targetElement.appendChild(this.overlayElement);\n                    this.element.classList.add('dv-drop-target');\n                    this.element.append(this.targetElement);\n                }\n                this.toggleClasses(quadrant, width, height);\n                this._state = quadrant;\n            },\n            onDragLeave: () => {\n                this.removeDropTarget();\n            },\n            onDragEnd: () => {\n                this.removeDropTarget();\n            },\n            onDrop: (e) => {\n                e.preventDefault();\n                const state = this._state;\n                this.removeDropTarget();\n                if (state) {\n                    // only stop the propagation of the event if we are dealing with it\n                    // which is only when the target has state\n                    e.stopPropagation();\n                    this._onDrop.fire({ position: state, nativeEvent: e });\n                }\n            },\n        });\n        this.addDisposables(this._onDrop, this._onWillShowOverlay, this.dnd);\n    }\n    setTargetZones(acceptedTargetZones) {\n        this._acceptedTargetZonesSet = new Set(acceptedTargetZones);\n    }\n    setOverlayModel(model) {\n        this.options.overlayModel = model;\n    }\n    dispose() {\n        this.removeDropTarget();\n        super.dispose();\n    }\n    /**\n     * Add a property to the event object for other potential listeners to check\n     */\n    markAsUsed(event) {\n        event[Droptarget.USED_EVENT_ID] = true;\n    }\n    /**\n     * Check is the event has already been used by another instance of DropTarget\n     */\n    isAlreadyUsed(event) {\n        const value = event[Droptarget.USED_EVENT_ID];\n        return typeof value === 'boolean' && value;\n    }\n    toggleClasses(quadrant, width, height) {\n        var _a, _b;\n        if (!this.overlayElement) {\n            return;\n        }\n        const isSmallX = width < SMALL_WIDTH_BOUNDARY;\n        const isSmallY = height < SMALL_HEIGHT_BOUNDARY;\n        const isLeft = quadrant === 'left';\n        const isRight = quadrant === 'right';\n        const isTop = quadrant === 'top';\n        const isBottom = quadrant === 'bottom';\n        const rightClass = !isSmallX && isRight;\n        const leftClass = !isSmallX && isLeft;\n        const topClass = !isSmallY && isTop;\n        const bottomClass = !isSmallY && isBottom;\n        let size = 1;\n        const sizeOptions = (_b = (_a = this.options.overlayModel) === null || _a === void 0 ? void 0 : _a.size) !== null && _b !== void 0 ? _b : DEFAULT_SIZE;\n        if (sizeOptions.type === 'percentage') {\n            size = clamp(sizeOptions.value, 0, 100) / 100;\n        }\n        else {\n            if (rightClass || leftClass) {\n                size = clamp(0, sizeOptions.value, width) / width;\n            }\n            if (topClass || bottomClass) {\n                size = clamp(0, sizeOptions.value, height) / height;\n            }\n        }\n        const box = { top: '0px', left: '0px', width: '100%', height: '100%' };\n        /**\n         * You can also achieve the overlay placement using the transform CSS property\n         * to translate and scale the element however this has the undesired effect of\n         * 'skewing' the element. Comment left here for anybody that ever revisits this.\n         *\n         * @see https://developer.mozilla.org/en-US/docs/Web/CSS/transform\n         *\n         * right\n         * translateX(${100 * (1 - size) / 2}%) scaleX(${scale})\n         *\n         * left\n         * translateX(-${100 * (1 - size) / 2}%) scaleX(${scale})\n         *\n         * top\n         * translateY(-${100 * (1 - size) / 2}%) scaleY(${scale})\n         *\n         * bottom\n         * translateY(${100 * (1 - size) / 2}%) scaleY(${scale})\n         */\n        if (rightClass) {\n            box.left = `${100 * (1 - size)}%`;\n            box.width = `${100 * size}%`;\n        }\n        else if (leftClass) {\n            box.width = `${100 * size}%`;\n        }\n        else if (topClass) {\n            box.height = `${100 * size}%`;\n        }\n        else if (bottomClass) {\n            box.top = `${100 * (1 - size)}%`;\n            box.height = `${100 * size}%`;\n        }\n        this.overlayElement.style.top = box.top;\n        this.overlayElement.style.left = box.left;\n        this.overlayElement.style.width = box.width;\n        this.overlayElement.style.height = box.height;\n        toggleClass(this.overlayElement, 'dv-drop-target-small-vertical', isSmallY);\n        toggleClass(this.overlayElement, 'dv-drop-target-small-horizontal', isSmallX);\n        toggleClass(this.overlayElement, 'dv-drop-target-left', isLeft);\n        toggleClass(this.overlayElement, 'dv-drop-target-right', isRight);\n        toggleClass(this.overlayElement, 'dv-drop-target-top', isTop);\n        toggleClass(this.overlayElement, 'dv-drop-target-bottom', isBottom);\n        toggleClass(this.overlayElement, 'dv-drop-target-center', quadrant === 'center');\n    }\n    calculateQuadrant(overlayType, x, y, width, height) {\n        var _a, _b;\n        const activationSizeOptions = (_b = (_a = this.options.overlayModel) === null || _a === void 0 ? void 0 : _a.activationSize) !== null && _b !== void 0 ? _b : DEFAULT_ACTIVATION_SIZE;\n        const isPercentage = activationSizeOptions.type === 'percentage';\n        if (isPercentage) {\n            return calculateQuadrantAsPercentage(overlayType, x, y, width, height, activationSizeOptions.value);\n        }\n        return calculateQuadrantAsPixels(overlayType, x, y, width, height, activationSizeOptions.value);\n    }\n    removeDropTarget() {\n        if (this.targetElement) {\n            this._state = undefined;\n            this.element.removeChild(this.targetElement);\n            this.targetElement = undefined;\n            this.overlayElement = undefined;\n            this.element.classList.remove('dv-drop-target');\n        }\n    }\n}\nDroptarget.USED_EVENT_ID = '__dockview_droptarget_event_is_used__';\nexport function calculateQuadrantAsPercentage(overlayType, x, y, width, height, threshold) {\n    const xp = (100 * x) / width;\n    const yp = (100 * y) / height;\n    if (overlayType.has('left') && xp < threshold) {\n        return 'left';\n    }\n    if (overlayType.has('right') && xp > 100 - threshold) {\n        return 'right';\n    }\n    if (overlayType.has('top') && yp < threshold) {\n        return 'top';\n    }\n    if (overlayType.has('bottom') && yp > 100 - threshold) {\n        return 'bottom';\n    }\n    if (!overlayType.has('center')) {\n        return null;\n    }\n    return 'center';\n}\nexport function calculateQuadrantAsPixels(overlayType, x, y, width, height, threshold) {\n    if (overlayType.has('left') && x < threshold) {\n        return 'left';\n    }\n    if (overlayType.has('right') && x > width - threshold) {\n        return 'right';\n    }\n    if (overlayType.has('top') && y < threshold) {\n        return 'top';\n    }\n    if (overlayType.has('bottom') && y > height - threshold) {\n        return 'bottom';\n    }\n    if (!overlayType.has('center')) {\n        return null;\n    }\n    return 'center';\n}\n","import { DockviewEvent, Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nexport class WillFocusEvent extends DockviewEvent {\n    constructor() {\n        super();\n    }\n}\n/**\n * A core api implementation that should be used across all panel-like objects\n */\nexport class PanelApiImpl extends CompositeDisposable {\n    get isFocused() {\n        return this._isFocused;\n    }\n    get isActive() {\n        return this._isActive;\n    }\n    get isVisible() {\n        return this._isVisible;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    constructor(id, component) {\n        super();\n        this.id = id;\n        this.component = component;\n        this._isFocused = false;\n        this._isActive = false;\n        this._isVisible = true;\n        this._width = 0;\n        this._height = 0;\n        this._parameters = {};\n        this.panelUpdatesDisposable = new MutableDisposable();\n        this._onDidDimensionChange = new Emitter();\n        this.onDidDimensionsChange = this._onDidDimensionChange.event;\n        this._onDidChangeFocus = new Emitter();\n        this.onDidFocusChange = this._onDidChangeFocus.event;\n        //\n        this._onWillFocus = new Emitter();\n        this.onWillFocus = this._onWillFocus.event;\n        //\n        this._onDidVisibilityChange = new Emitter();\n        this.onDidVisibilityChange = this._onDidVisibilityChange.event;\n        this._onWillVisibilityChange = new Emitter();\n        this.onWillVisibilityChange = this._onWillVisibilityChange.event;\n        this._onDidActiveChange = new Emitter();\n        this.onDidActiveChange = this._onDidActiveChange.event;\n        this._onActiveChange = new Emitter();\n        this.onActiveChange = this._onActiveChange.event;\n        this._onDidParametersChange = new Emitter();\n        this.onDidParametersChange = this._onDidParametersChange.event;\n        this.addDisposables(this.onDidFocusChange((event) => {\n            this._isFocused = event.isFocused;\n        }), this.onDidActiveChange((event) => {\n            this._isActive = event.isActive;\n        }), this.onDidVisibilityChange((event) => {\n            this._isVisible = event.isVisible;\n        }), this.onDidDimensionsChange((event) => {\n            this._width = event.width;\n            this._height = event.height;\n        }), this.panelUpdatesDisposable, this._onDidDimensionChange, this._onDidChangeFocus, this._onDidVisibilityChange, this._onDidActiveChange, this._onWillFocus, this._onActiveChange, this._onWillFocus, this._onWillVisibilityChange, this._onDidParametersChange);\n    }\n    getParameters() {\n        return this._parameters;\n    }\n    initialize(panel) {\n        this.panelUpdatesDisposable.value = this._onDidParametersChange.event((parameters) => {\n            this._parameters = parameters;\n            panel.update({\n                params: parameters,\n            });\n        });\n    }\n    setVisible(isVisible) {\n        this._onWillVisibilityChange.fire({ isVisible });\n    }\n    setActive() {\n        this._onActiveChange.fire();\n    }\n    updateParameters(parameters) {\n        this._onDidParametersChange.fire(parameters);\n    }\n}\n","import { Emitter } from '../events';\nimport { PanelApiImpl } from './panelApi';\nexport class SplitviewPanelApiImpl extends PanelApiImpl {\n    //\n    constructor(id, component) {\n        super(id, component);\n        this._onDidConstraintsChangeInternal = new Emitter();\n        this.onDidConstraintsChangeInternal = this._onDidConstraintsChangeInternal.event;\n        //\n        this._onDidConstraintsChange = new Emitter({\n            replay: true,\n        });\n        this.onDidConstraintsChange = this._onDidConstraintsChange.event;\n        //\n        this._onDidSizeChange = new Emitter();\n        this.onDidSizeChange = this._onDidSizeChange.event;\n        this.addDisposables(this._onDidConstraintsChangeInternal, this._onDidConstraintsChange, this._onDidSizeChange);\n    }\n    setConstraints(value) {\n        this._onDidConstraintsChangeInternal.fire(value);\n    }\n    setSize(event) {\n        this._onDidSizeChange.fire(event);\n    }\n}\n","import { Emitter } from '../events';\nimport { SplitviewPanelApiImpl } from './splitviewPanelApi';\nexport class PaneviewPanelApiImpl extends SplitviewPanelApiImpl {\n    set pane(pane) {\n        this._pane = pane;\n    }\n    constructor(id, component) {\n        super(id, component);\n        this._onDidExpansionChange = new Emitter({\n            replay: true,\n        });\n        this.onDidExpansionChange = this._onDidExpansionChange.event;\n        this._onMouseEnter = new Emitter({});\n        this.onMouseEnter = this._onMouseEnter.event;\n        this._onMouseLeave = new Emitter({});\n        this.onMouseLeave = this._onMouseLeave.event;\n        this.addDisposables(this._onDidExpansionChange, this._onMouseEnter, this._onMouseLeave);\n    }\n    setExpanded(isExpanded) {\n        var _a;\n        (_a = this._pane) === null || _a === void 0 ? void 0 : _a.setExpanded(isExpanded);\n    }\n    get isExpanded() {\n        var _a;\n        return !!((_a = this._pane) === null || _a === void 0 ? void 0 : _a.isExpanded());\n    }\n}\n","import { trackFocus } from '../dom';\nimport { CompositeDisposable } from '../lifecycle';\nimport { WillFocusEvent } from '../api/panelApi';\nexport class BasePanelView extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    get params() {\n        var _a;\n        return (_a = this._params) === null || _a === void 0 ? void 0 : _a.params;\n    }\n    constructor(id, component, api) {\n        super();\n        this.id = id;\n        this.component = component;\n        this.api = api;\n        this._height = 0;\n        this._width = 0;\n        this._element = document.createElement('div');\n        this._element.tabIndex = -1;\n        this._element.style.outline = 'none';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n        this._element.style.overflow = 'hidden';\n        const focusTracker = trackFocus(this._element);\n        this.addDisposables(this.api, focusTracker.onDidFocus(() => {\n            this.api._onDidChangeFocus.fire({ isFocused: true });\n        }), focusTracker.onDidBlur(() => {\n            this.api._onDidChangeFocus.fire({ isFocused: false });\n        }), focusTracker);\n    }\n    focus() {\n        const event = new WillFocusEvent();\n        this.api._onWillFocus.fire(event);\n        if (event.defaultPrevented) {\n            return;\n        }\n        this._element.focus();\n    }\n    layout(width, height) {\n        this._width = width;\n        this._height = height;\n        this.api._onDidDimensionChange.fire({ width, height });\n        if (this.part) {\n            if (this._params) {\n                this.part.update(this._params.params);\n            }\n        }\n    }\n    init(parameters) {\n        this._params = parameters;\n        this.part = this.getComponent();\n    }\n    update(event) {\n        var _a, _b;\n        // merge the new parameters with the existing parameters\n        this._params = Object.assign(Object.assign({}, this._params), { params: Object.assign(Object.assign({}, (_a = this._params) === null || _a === void 0 ? void 0 : _a.params), event.params) });\n        /**\n         * delete new keys that have a value of undefined,\n         * allow values of null\n         */\n        for (const key of Object.keys(event.params)) {\n            if (event.params[key] === undefined) {\n                delete this._params.params[key];\n            }\n        }\n        // update the view with the updated props\n        (_b = this.part) === null || _b === void 0 ? void 0 : _b.update({ params: this._params.params });\n    }\n    toJSON() {\n        var _a, _b;\n        const params = (_b = (_a = this._params) === null || _a === void 0 ? void 0 : _a.params) !== null && _b !== void 0 ? _b : {};\n        return {\n            id: this.id,\n            component: this.component,\n            params: Object.keys(params).length > 0 ? params : undefined,\n        };\n    }\n    dispose() {\n        var _a;\n        this.api.dispose();\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n        super.dispose();\n    }\n}\n","import { PaneviewPanelApiImpl } from '../api/paneviewPanelApi';\nimport { addClasses, removeClasses } from '../dom';\nimport { addDisposableListener, Emitter } from '../events';\nimport { BasePanelView, } from '../gridview/basePanelView';\nimport { Orientation } from '../splitview/splitview';\nexport class PaneviewPanel extends BasePanelView {\n    set orientation(value) {\n        this._orientation = value;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    get minimumSize() {\n        const headerSize = this.headerSize;\n        const expanded = this.isExpanded();\n        const minimumBodySize = expanded ? this._minimumBodySize : 0;\n        return headerSize + minimumBodySize;\n    }\n    get maximumSize() {\n        const headerSize = this.headerSize;\n        const expanded = this.isExpanded();\n        const maximumBodySize = expanded ? this._maximumBodySize : 0;\n        return headerSize + maximumBodySize;\n    }\n    get size() {\n        return this._size;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    set orthogonalSize(size) {\n        this._orthogonalSize = size;\n    }\n    get minimumBodySize() {\n        return this._minimumBodySize;\n    }\n    set minimumBodySize(value) {\n        this._minimumBodySize = typeof value === 'number' ? value : 0;\n    }\n    get maximumBodySize() {\n        return this._maximumBodySize;\n    }\n    set maximumBodySize(value) {\n        this._maximumBodySize =\n            typeof value === 'number' ? value : Number.POSITIVE_INFINITY;\n    }\n    get headerVisible() {\n        return this._headerVisible;\n    }\n    set headerVisible(value) {\n        this._headerVisible = value;\n        this.header.style.display = value ? '' : 'none';\n    }\n    constructor(id, component, headerComponent, orientation, isExpanded, isHeaderVisible) {\n        super(id, component, new PaneviewPanelApiImpl(id, component));\n        this.headerComponent = headerComponent;\n        this._onDidChangeExpansionState = new Emitter({ replay: true });\n        this.onDidChangeExpansionState = this._onDidChangeExpansionState.event;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this.headerSize = 22;\n        this._orthogonalSize = 0;\n        this._size = 0;\n        this._minimumBodySize = 100;\n        this._maximumBodySize = Number.POSITIVE_INFINITY;\n        this._isExpanded = false;\n        this.expandedSize = 0;\n        this.api.pane = this; // TODO cannot use 'this' before 'super'\n        this.api.initialize(this);\n        this._isExpanded = isExpanded;\n        this._headerVisible = isHeaderVisible;\n        this._onDidChangeExpansionState.fire(this.isExpanded()); // initialize value\n        this._orientation = orientation;\n        this.element.classList.add('dv-pane');\n        this.addDisposables(this.api.onWillVisibilityChange((event) => {\n            const { isVisible } = event;\n            const { accessor } = this._params;\n            accessor.setVisible(this, isVisible);\n        }), this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire({ size: event.size });\n        }), addDisposableListener(this.element, 'mouseenter', (ev) => {\n            this.api._onMouseEnter.fire(ev);\n        }), addDisposableListener(this.element, 'mouseleave', (ev) => {\n            this.api._onMouseLeave.fire(ev);\n        }));\n        this.addDisposables(this._onDidChangeExpansionState, this.onDidChangeExpansionState((isPanelExpanded) => {\n            this.api._onDidExpansionChange.fire({\n                isExpanded: isPanelExpanded,\n            });\n        }), this.api.onDidFocusChange((e) => {\n            if (!this.header) {\n                return;\n            }\n            if (e.isFocused) {\n                addClasses(this.header, 'focused');\n            }\n            else {\n                removeClasses(this.header, 'focused');\n            }\n        }));\n        this.renderOnce();\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    isExpanded() {\n        return this._isExpanded;\n    }\n    setExpanded(expanded) {\n        if (this._isExpanded === expanded) {\n            return;\n        }\n        this._isExpanded = expanded;\n        if (expanded) {\n            if (this.animationTimer) {\n                clearTimeout(this.animationTimer);\n            }\n            if (this.body) {\n                this.element.appendChild(this.body);\n            }\n        }\n        else {\n            this.animationTimer = setTimeout(() => {\n                var _a;\n                (_a = this.body) === null || _a === void 0 ? void 0 : _a.remove();\n            }, 200);\n        }\n        this._onDidChange.fire(expanded ? { size: this.width } : {});\n        this._onDidChangeExpansionState.fire(expanded);\n    }\n    layout(size, orthogonalSize) {\n        this._size = size;\n        this._orthogonalSize = orthogonalSize;\n        const [width, height] = this.orientation === Orientation.HORIZONTAL\n            ? [size, orthogonalSize]\n            : [orthogonalSize, size];\n        if (this.isExpanded()) {\n            this.expandedSize = width;\n        }\n        super.layout(width, height);\n    }\n    init(parameters) {\n        var _a, _b;\n        super.init(parameters);\n        if (typeof parameters.minimumBodySize === 'number') {\n            this.minimumBodySize = parameters.minimumBodySize;\n        }\n        if (typeof parameters.maximumBodySize === 'number') {\n            this.maximumBodySize = parameters.maximumBodySize;\n        }\n        this.bodyPart = this.getBodyComponent();\n        this.headerPart = this.getHeaderComponent();\n        this.bodyPart.init(Object.assign(Object.assign({}, parameters), { api: this.api }));\n        this.headerPart.init(Object.assign(Object.assign({}, parameters), { api: this.api }));\n        (_a = this.body) === null || _a === void 0 ? void 0 : _a.append(this.bodyPart.element);\n        (_b = this.header) === null || _b === void 0 ? void 0 : _b.append(this.headerPart.element);\n        if (typeof parameters.isExpanded === 'boolean') {\n            this.setExpanded(parameters.isExpanded);\n        }\n    }\n    toJSON() {\n        const params = this._params;\n        return Object.assign(Object.assign({}, super.toJSON()), { headerComponent: this.headerComponent, title: params.title });\n    }\n    renderOnce() {\n        this.header = document.createElement('div');\n        this.header.tabIndex = 0;\n        this.header.className = 'dv-pane-header';\n        this.header.style.height = `${this.headerSize}px`;\n        this.header.style.lineHeight = `${this.headerSize}px`;\n        this.header.style.minHeight = `${this.headerSize}px`;\n        this.header.style.maxHeight = `${this.headerSize}px`;\n        this.element.appendChild(this.header);\n        this.body = document.createElement('div');\n        this.body.className = 'dv-pane-body';\n        this.element.appendChild(this.body);\n    }\n    // TODO slightly hacky by-pass of the component to create a body and header component\n    getComponent() {\n        return {\n            update: (params) => {\n                var _a, _b;\n                (_a = this.bodyPart) === null || _a === void 0 ? void 0 : _a.update({ params });\n                (_b = this.headerPart) === null || _b === void 0 ? void 0 : _b.update({ params });\n            },\n            dispose: () => {\n                var _a, _b;\n                (_a = this.bodyPart) === null || _a === void 0 ? void 0 : _a.dispose();\n                (_b = this.headerPart) === null || _b === void 0 ? void 0 : _b.dispose();\n            },\n        };\n    }\n}\n","import { PaneviewApi } from '../api/component.api';\nimport { DragHandler } from '../dnd/abstractDragHandler';\nimport { getPaneData, LocalSelectionTransfer, PaneTransfer, } from '../dnd/dataTransfer';\nimport { Droptarget } from '../dnd/droptarget';\nimport { Emitter } from '../events';\nimport { PaneviewPanel, } from './paneviewPanel';\nexport class DraggablePaneviewPanel extends PaneviewPanel {\n    constructor(accessor, id, component, headerComponent, orientation, isExpanded, disableDnd) {\n        super(id, component, headerComponent, orientation, isExpanded, true);\n        this.accessor = accessor;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        if (!disableDnd) {\n            this.initDragFeatures();\n        }\n    }\n    initDragFeatures() {\n        if (!this.header) {\n            return;\n        }\n        const id = this.id;\n        const accessorId = this.accessor.id;\n        this.header.draggable = true;\n        this.handler = new (class PaneDragHandler extends DragHandler {\n            getData() {\n                LocalSelectionTransfer.getInstance().setData([new PaneTransfer(accessorId, id)], PaneTransfer.prototype);\n                return {\n                    dispose: () => {\n                        LocalSelectionTransfer.getInstance().clearData(PaneTransfer.prototype);\n                    },\n                };\n            }\n        })(this.header);\n        this.target = new Droptarget(this.element, {\n            acceptedTargetZones: ['top', 'bottom'],\n            overlayModel: {\n                activationSize: { type: 'percentage', value: 50 },\n            },\n            canDisplayOverlay: (event) => {\n                const data = getPaneData();\n                if (data) {\n                    if (data.paneId !== this.id &&\n                        data.viewId === this.accessor.id) {\n                        return true;\n                    }\n                }\n                if (this.accessor.options.showDndOverlay) {\n                    return this.accessor.options.showDndOverlay({\n                        nativeEvent: event,\n                        getData: getPaneData,\n                        panel: this,\n                    });\n                }\n                return false;\n            },\n        });\n        this.addDisposables(this._onDidDrop, this.handler, this.target, this.target.onDrop((event) => {\n            this.onDrop(event);\n        }));\n    }\n    onDrop(event) {\n        const data = getPaneData();\n        if (!data || data.viewId !== this.accessor.id) {\n            // if there is no local drag event for this panel\n            // or if the drag event was creating by another Paneview instance\n            this._onDidDrop.fire(Object.assign(Object.assign({}, event), { panel: this, api: new PaneviewApi(this.accessor), getData: getPaneData }));\n            return;\n        }\n        const containerApi = this._params\n            .containerApi;\n        const panelId = data.paneId;\n        const existingPanel = containerApi.getPanel(panelId);\n        if (!existingPanel) {\n            // if the panel doesn't exist\n            this._onDidDrop.fire(Object.assign(Object.assign({}, event), { panel: this, getData: getPaneData, api: new PaneviewApi(this.accessor) }));\n            return;\n        }\n        const allPanels = containerApi.panels;\n        const fromIndex = allPanels.indexOf(existingPanel);\n        let toIndex = containerApi.panels.indexOf(this);\n        if (event.position === 'left' || event.position === 'top') {\n            toIndex = Math.max(0, toIndex - 1);\n        }\n        if (event.position === 'right' || event.position === 'bottom') {\n            if (fromIndex > toIndex) {\n                toIndex++;\n            }\n            toIndex = Math.min(allPanels.length - 1, toIndex);\n        }\n        containerApi.movePanel(fromIndex, toIndex);\n    }\n}\n","import { CompositeDisposable, MutableDisposable, } from '../../../lifecycle';\nimport { Emitter } from '../../../events';\nimport { trackFocus } from '../../../dom';\nimport { Droptarget } from '../../../dnd/droptarget';\nimport { getPanelData } from '../../../dnd/dataTransfer';\nexport class ContentContainer extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor(accessor, group) {\n        super();\n        this.accessor = accessor;\n        this.group = group;\n        this.disposable = new MutableDisposable();\n        this._onDidFocus = new Emitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new Emitter();\n        this.onDidBlur = this._onDidBlur.event;\n        this._element = document.createElement('div');\n        this._element.className = 'dv-content-container';\n        this._element.tabIndex = -1;\n        this.addDisposables(this._onDidFocus, this._onDidBlur);\n        this.dropTarget = new Droptarget(this.element, {\n            acceptedTargetZones: ['top', 'bottom', 'left', 'right', 'center'],\n            canDisplayOverlay: (event, position) => {\n                if (this.group.locked === 'no-drop-target' ||\n                    (this.group.locked && position === 'center')) {\n                    return false;\n                }\n                const data = getPanelData();\n                if (!data &&\n                    event.shiftKey &&\n                    this.group.location.type !== 'floating') {\n                    return false;\n                }\n                if (data && data.viewId === this.accessor.id) {\n                    if (data.groupId === this.group.id) {\n                        if (position === 'center') {\n                            // don't allow to drop on self for center position\n                            return false;\n                        }\n                        if (data.panelId === null) {\n                            // don't allow group move to drop anywhere on self\n                            return false;\n                        }\n                    }\n                    const groupHasOnePanelAndIsActiveDragElement = this.group.panels.length === 1 &&\n                        data.groupId === this.group.id;\n                    return !groupHasOnePanelAndIsActiveDragElement;\n                }\n                return this.group.canDisplayOverlay(event, position, 'content');\n            },\n        });\n        this.addDisposables(this.dropTarget);\n    }\n    show() {\n        this.element.style.display = '';\n    }\n    hide() {\n        this.element.style.display = 'none';\n    }\n    renderPanel(panel, options = { asActive: true }) {\n        const doRender = options.asActive ||\n            (this.panel && this.group.isPanelActive(this.panel));\n        if (this.panel &&\n            this.panel.view.content.element.parentElement === this._element) {\n            /**\n             * If the currently attached panel is mounted directly to the content then remove it\n             */\n            this._element.removeChild(this.panel.view.content.element);\n        }\n        this.panel = panel;\n        let container;\n        switch (panel.api.renderer) {\n            case 'onlyWhenVisible':\n                this.group.renderContainer.detatch(panel);\n                if (this.panel) {\n                    if (doRender) {\n                        this._element.appendChild(this.panel.view.content.element);\n                    }\n                }\n                container = this._element;\n                break;\n            case 'always':\n                if (panel.view.content.element.parentElement === this._element) {\n                    this._element.removeChild(panel.view.content.element);\n                }\n                container = this.group.renderContainer.attach({\n                    panel,\n                    referenceContainer: this,\n                });\n                break;\n            default:\n                throw new Error(`dockview: invalid renderer type '${panel.api.renderer}'`);\n        }\n        if (doRender) {\n            const focusTracker = trackFocus(container);\n            const disposable = new CompositeDisposable();\n            disposable.addDisposables(focusTracker, focusTracker.onDidFocus(() => this._onDidFocus.fire()), focusTracker.onDidBlur(() => this._onDidBlur.fire()));\n            this.disposable.value = disposable;\n        }\n    }\n    openPanel(panel) {\n        if (this.panel === panel) {\n            return;\n        }\n        this.renderPanel(panel);\n    }\n    layout(_width, _height) {\n        // noop\n    }\n    closePanel() {\n        var _a;\n        if (this.panel) {\n            if (this.panel.api.renderer === 'onlyWhenVisible') {\n                (_a = this.panel.view.content.element.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(this.panel.view.content.element);\n            }\n        }\n        this.panel = undefined;\n    }\n    dispose() {\n        this.disposable.dispose();\n        super.dispose();\n    }\n}\n","import { addDisposableListener, Emitter } from '../../../events';\nimport { CompositeDisposable } from '../../../lifecycle';\nimport { getPanelData, LocalSelectionTransfer, PanelTransfer, } from '../../../dnd/dataTransfer';\nimport { toggleClass } from '../../../dom';\nimport { Droptarget, } from '../../../dnd/droptarget';\nimport { DragHandler } from '../../../dnd/abstractDragHandler';\nclass TabDragHandler extends DragHandler {\n    constructor(element, accessor, group, panel) {\n        super(element);\n        this.accessor = accessor;\n        this.group = group;\n        this.panel = panel;\n        this.panelTransfer = LocalSelectionTransfer.getInstance();\n    }\n    getData(event) {\n        this.panelTransfer.setData([new PanelTransfer(this.accessor.id, this.group.id, this.panel.id)], PanelTransfer.prototype);\n        return {\n            dispose: () => {\n                this.panelTransfer.clearData(PanelTransfer.prototype);\n            },\n        };\n    }\n}\nexport class Tab extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor(panel, accessor, group) {\n        super();\n        this.panel = panel;\n        this.accessor = accessor;\n        this.group = group;\n        this.content = undefined;\n        this._onChanged = new Emitter();\n        this.onChanged = this._onChanged.event;\n        this._onDropped = new Emitter();\n        this.onDrop = this._onDropped.event;\n        this._onDragStart = new Emitter();\n        this.onDragStart = this._onDragStart.event;\n        this._element = document.createElement('div');\n        this._element.className = 'dv-tab';\n        this._element.tabIndex = 0;\n        this._element.draggable = true;\n        toggleClass(this.element, 'dv-inactive-tab', true);\n        const dragHandler = new TabDragHandler(this._element, this.accessor, this.group, this.panel);\n        this.dropTarget = new Droptarget(this._element, {\n            acceptedTargetZones: ['center'],\n            canDisplayOverlay: (event, position) => {\n                if (this.group.locked) {\n                    return false;\n                }\n                const data = getPanelData();\n                if (data && this.accessor.id === data.viewId) {\n                    if (data.panelId === null &&\n                        data.groupId === this.group.id) {\n                        // don't allow group move to drop on self\n                        return false;\n                    }\n                    return this.panel.id !== data.panelId;\n                }\n                return this.group.model.canDisplayOverlay(event, position, 'tab');\n            },\n        });\n        this.onWillShowOverlay = this.dropTarget.onWillShowOverlay;\n        this.addDisposables(this._onChanged, this._onDropped, this._onDragStart, dragHandler.onDragStart((event) => {\n            this._onDragStart.fire(event);\n        }), dragHandler, addDisposableListener(this._element, 'pointerdown', (event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            this._onChanged.fire(event);\n        }), this.dropTarget.onDrop((event) => {\n            this._onDropped.fire(event);\n        }), this.dropTarget);\n    }\n    setActive(isActive) {\n        toggleClass(this.element, 'dv-active-tab', isActive);\n        toggleClass(this.element, 'dv-inactive-tab', !isActive);\n    }\n    setContent(part) {\n        if (this.content) {\n            this._element.removeChild(this.content.element);\n        }\n        this.content = part;\n        this._element.appendChild(this.content.element);\n    }\n    dispose() {\n        super.dispose();\n    }\n}\n","import { quasiPreventDefault } from '../dom';\nimport { addDisposableListener } from '../events';\nimport { DragHandler } from './abstractDragHandler';\nimport { LocalSelectionTransfer, PanelTransfer } from './dataTransfer';\nimport { addGhostImage } from './ghost';\nexport class GroupDragHandler extends DragHandler {\n    constructor(element, accessor, group) {\n        super(element);\n        this.accessor = accessor;\n        this.group = group;\n        this.panelTransfer = LocalSelectionTransfer.getInstance();\n        this.addDisposables(addDisposableListener(element, 'pointerdown', (e) => {\n            if (e.shiftKey) {\n                /**\n                 * You cannot call e.preventDefault() because that will prevent drag events from firing\n                 * but we also need to stop any group overlay drag events from occuring\n                 * Use a custom event marker that can be checked by the overlay drag events\n                 */\n                quasiPreventDefault(e);\n            }\n        }, true));\n    }\n    isCancelled(_event) {\n        if (this.group.api.location.type === 'floating' && !_event.shiftKey) {\n            return true;\n        }\n        return false;\n    }\n    getData(dragEvent) {\n        const dataTransfer = dragEvent.dataTransfer;\n        this.panelTransfer.setData([new PanelTransfer(this.accessor.id, this.group.id, null)], PanelTransfer.prototype);\n        const style = window.getComputedStyle(this.el);\n        const bgColor = style.getPropertyValue('--dv-activegroup-visiblepanel-tab-background-color');\n        const color = style.getPropertyValue('--dv-activegroup-visiblepanel-tab-color');\n        if (dataTransfer) {\n            const ghostElement = document.createElement('div');\n            ghostElement.style.backgroundColor = bgColor;\n            ghostElement.style.color = color;\n            ghostElement.style.padding = '2px 8px';\n            ghostElement.style.height = '24px';\n            ghostElement.style.fontSize = '11px';\n            ghostElement.style.lineHeight = '20px';\n            ghostElement.style.borderRadius = '12px';\n            ghostElement.style.position = 'absolute';\n            ghostElement.textContent = `Multiple Panels (${this.group.size})`;\n            addGhostImage(dataTransfer, ghostElement);\n        }\n        return {\n            dispose: () => {\n                this.panelTransfer.clearData(PanelTransfer.prototype);\n            },\n        };\n    }\n}\n","import { addClasses, removeClasses } from '../dom';\nexport function addGhostImage(dataTransfer, ghostElement) {\n    // class dockview provides to force ghost image to be drawn on a different layer and prevent weird rendering issues\n    addClasses(ghostElement, 'dv-dragged');\n    document.body.appendChild(ghostElement);\n    dataTransfer.setDragImage(ghostElement, 0, 0);\n    setTimeout(() => {\n        removeClasses(ghostElement, 'dv-dragged');\n        ghostElement.remove();\n    }, 0);\n}\n","import { last } from '../../../array';\nimport { getPanelData } from '../../../dnd/dataTransfer';\nimport { Droptarget, } from '../../../dnd/droptarget';\nimport { GroupDragHandler } from '../../../dnd/groupDragHandler';\nimport { addDisposableListener, Emitter } from '../../../events';\nimport { CompositeDisposable } from '../../../lifecycle';\nexport class VoidContainer extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor(accessor, group) {\n        super();\n        this.accessor = accessor;\n        this.group = group;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this._onDragStart = new Emitter();\n        this.onDragStart = this._onDragStart.event;\n        this._element = document.createElement('div');\n        this._element.className = 'dv-void-container';\n        this._element.draggable = true;\n        this.addDisposables(this._onDrop, this._onDragStart, addDisposableListener(this._element, 'pointerdown', () => {\n            this.accessor.doSetGroupActive(this.group);\n        }));\n        const handler = new GroupDragHandler(this._element, accessor, group);\n        this.dropTraget = new Droptarget(this._element, {\n            acceptedTargetZones: ['center'],\n            canDisplayOverlay: (event, position) => {\n                var _a;\n                const data = getPanelData();\n                if (data && this.accessor.id === data.viewId) {\n                    if (data.panelId === null &&\n                        data.groupId === this.group.id) {\n                        // don't allow group move to drop on self\n                        return false;\n                    }\n                    // don't show the overlay if the tab being dragged is the last panel of this group\n                    return ((_a = last(this.group.panels)) === null || _a === void 0 ? void 0 : _a.id) !== data.panelId;\n                }\n                return group.model.canDisplayOverlay(event, position, 'header_space');\n            },\n        });\n        this.onWillShowOverlay = this.dropTraget.onWillShowOverlay;\n        this.addDisposables(handler, handler.onDragStart((event) => {\n            this._onDragStart.fire(event);\n        }), this.dropTraget.onDrop((event) => {\n            this._onDrop.fire(event);\n        }), this.dropTraget);\n    }\n}\n","import { CompositeDisposable, } from '../../../lifecycle';\nimport { addDisposableListener, Emitter } from '../../../events';\nimport { Tab } from '../tab/tab';\nimport { VoidContainer } from './voidContainer';\nimport { toggleClass } from '../../../dom';\nimport { WillShowOverlayLocationEvent } from '../../dockviewGroupPanelModel';\nimport { getPanelData } from '../../../dnd/dataTransfer';\nexport class TabsContainer extends CompositeDisposable {\n    get panels() {\n        return this.tabs.map((_) => _.value.panel.id);\n    }\n    get size() {\n        return this.tabs.length;\n    }\n    get hidden() {\n        return this._hidden;\n    }\n    set hidden(value) {\n        this._hidden = value;\n        this.element.style.display = value ? 'none' : '';\n    }\n    show() {\n        if (!this.hidden) {\n            this.element.style.display = '';\n        }\n    }\n    hide() {\n        this._element.style.display = 'none';\n    }\n    setRightActionsElement(element) {\n        if (this.rightActions === element) {\n            return;\n        }\n        if (this.rightActions) {\n            this.rightActions.remove();\n            this.rightActions = undefined;\n        }\n        if (element) {\n            this.rightActionsContainer.appendChild(element);\n            this.rightActions = element;\n        }\n    }\n    setLeftActionsElement(element) {\n        if (this.leftActions === element) {\n            return;\n        }\n        if (this.leftActions) {\n            this.leftActions.remove();\n            this.leftActions = undefined;\n        }\n        if (element) {\n            this.leftActionsContainer.appendChild(element);\n            this.leftActions = element;\n        }\n    }\n    setPrefixActionsElement(element) {\n        if (this.preActions === element) {\n            return;\n        }\n        if (this.preActions) {\n            this.preActions.remove();\n            this.preActions = undefined;\n        }\n        if (element) {\n            this.preActionsContainer.appendChild(element);\n            this.preActions = element;\n        }\n    }\n    get element() {\n        return this._element;\n    }\n    isActive(tab) {\n        return (this.selectedIndex > -1 &&\n            this.tabs[this.selectedIndex].value === tab);\n    }\n    indexOf(id) {\n        return this.tabs.findIndex((tab) => tab.value.panel.id === id);\n    }\n    constructor(accessor, group) {\n        super();\n        this.accessor = accessor;\n        this.group = group;\n        this.tabs = [];\n        this.selectedIndex = -1;\n        this._hidden = false;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this._onTabDragStart = new Emitter();\n        this.onTabDragStart = this._onTabDragStart.event;\n        this._onGroupDragStart = new Emitter();\n        this.onGroupDragStart = this._onGroupDragStart.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        this._element = document.createElement('div');\n        this._element.className = 'dv-tabs-and-actions-container';\n        toggleClass(this._element, 'dv-full-width-single-tab', this.accessor.options.singleTabMode === 'fullwidth');\n        this.rightActionsContainer = document.createElement('div');\n        this.rightActionsContainer.className = 'dv-right-actions-container';\n        this.leftActionsContainer = document.createElement('div');\n        this.leftActionsContainer.className = 'dv-left-actions-container';\n        this.preActionsContainer = document.createElement('div');\n        this.preActionsContainer.className = 'dv-pre-actions-container';\n        this.tabContainer = document.createElement('div');\n        this.tabContainer.className = 'dv-tabs-container';\n        this.voidContainer = new VoidContainer(this.accessor, this.group);\n        this._element.appendChild(this.preActionsContainer);\n        this._element.appendChild(this.tabContainer);\n        this._element.appendChild(this.leftActionsContainer);\n        this._element.appendChild(this.voidContainer.element);\n        this._element.appendChild(this.rightActionsContainer);\n        this.addDisposables(this.accessor.onDidAddPanel((e) => {\n            if (e.api.group === this.group) {\n                toggleClass(this._element, 'dv-single-tab', this.size === 1);\n            }\n        }), this.accessor.onDidRemovePanel((e) => {\n            if (e.api.group === this.group) {\n                toggleClass(this._element, 'dv-single-tab', this.size === 1);\n            }\n        }), this._onWillShowOverlay, this._onDrop, this._onTabDragStart, this._onGroupDragStart, this.voidContainer, this.voidContainer.onDragStart((event) => {\n            this._onGroupDragStart.fire({\n                nativeEvent: event,\n                group: this.group,\n            });\n        }), this.voidContainer.onDrop((event) => {\n            this._onDrop.fire({\n                event: event.nativeEvent,\n                index: this.tabs.length,\n            });\n        }), this.voidContainer.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'header_space',\n                panel: this.group.activePanel,\n                api: this.accessor.api,\n                group: this.group,\n                getData: getPanelData,\n            }));\n        }), addDisposableListener(this.voidContainer.element, 'pointerdown', (event) => {\n            const isFloatingGroupsEnabled = !this.accessor.options.disableFloatingGroups;\n            if (isFloatingGroupsEnabled &&\n                event.shiftKey &&\n                this.group.api.location.type !== 'floating') {\n                event.preventDefault();\n                const { top, left } = this.element.getBoundingClientRect();\n                const { top: rootTop, left: rootLeft } = this.accessor.element.getBoundingClientRect();\n                this.accessor.addFloatingGroup(this.group, {\n                    x: left - rootLeft + 20,\n                    y: top - rootTop + 20,\n                    inDragMode: true,\n                });\n            }\n        }), addDisposableListener(this.tabContainer, 'pointerdown', (event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            const isLeftClick = event.button === 0;\n            if (isLeftClick) {\n                this.accessor.doSetGroupActive(this.group);\n            }\n        }));\n    }\n    setActive(_isGroupActive) {\n        // noop\n    }\n    addTab(tab, index = this.tabs.length) {\n        if (index < 0 || index > this.tabs.length) {\n            throw new Error('invalid location');\n        }\n        this.tabContainer.insertBefore(tab.value.element, this.tabContainer.children[index]);\n        this.tabs = [\n            ...this.tabs.slice(0, index),\n            tab,\n            ...this.tabs.slice(index),\n        ];\n        if (this.selectedIndex < 0) {\n            this.selectedIndex = index;\n        }\n    }\n    delete(id) {\n        const index = this.tabs.findIndex((tab) => tab.value.panel.id === id);\n        const tabToRemove = this.tabs.splice(index, 1)[0];\n        const { value, disposable } = tabToRemove;\n        disposable.dispose();\n        value.dispose();\n        value.element.remove();\n    }\n    setActivePanel(panel) {\n        this.tabs.forEach((tab) => {\n            const isActivePanel = panel.id === tab.value.panel.id;\n            tab.value.setActive(isActivePanel);\n        });\n    }\n    openPanel(panel, index = this.tabs.length) {\n        if (this.tabs.find((tab) => tab.value.panel.id === panel.id)) {\n            return;\n        }\n        const tab = new Tab(panel, this.accessor, this.group);\n        tab.setContent(panel.view.tab);\n        const disposable = new CompositeDisposable(tab.onDragStart((event) => {\n            this._onTabDragStart.fire({ nativeEvent: event, panel });\n        }), tab.onChanged((event) => {\n            const isFloatingGroupsEnabled = !this.accessor.options.disableFloatingGroups;\n            const isFloatingWithOnePanel = this.group.api.location.type === 'floating' &&\n                this.size === 1;\n            if (isFloatingGroupsEnabled &&\n                !isFloatingWithOnePanel &&\n                event.shiftKey) {\n                event.preventDefault();\n                const panel = this.accessor.getGroupPanel(tab.panel.id);\n                const { top, left } = tab.element.getBoundingClientRect();\n                const { top: rootTop, left: rootLeft } = this.accessor.element.getBoundingClientRect();\n                this.accessor.addFloatingGroup(panel, {\n                    x: left - rootLeft,\n                    y: top - rootTop,\n                    inDragMode: true,\n                });\n                return;\n            }\n            const isLeftClick = event.button === 0;\n            if (!isLeftClick || event.defaultPrevented) {\n                return;\n            }\n            if (this.group.activePanel !== panel) {\n                this.group.model.openPanel(panel);\n            }\n        }), tab.onDrop((event) => {\n            this._onDrop.fire({\n                event: event.nativeEvent,\n                index: this.tabs.findIndex((x) => x.value === tab),\n            });\n        }), tab.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'tab',\n                panel: this.group.activePanel,\n                api: this.accessor.api,\n                group: this.group,\n                getData: getPanelData,\n            }));\n        }));\n        const value = { value: tab, disposable };\n        this.addTab(value, index);\n    }\n    closePanel(panel) {\n        this.delete(panel.id);\n    }\n    dispose() {\n        super.dispose();\n        for (const { value, disposable } of this.tabs) {\n            disposable.dispose();\n            value.dispose();\n        }\n        this.tabs = [];\n    }\n}\n","export class DockviewUnhandledDragOverEvent {\n    get isAccepted() {\n        return this._isAccepted;\n    }\n    constructor(nativeEvent, target, position, getData, group) {\n        this.nativeEvent = nativeEvent;\n        this.target = target;\n        this.position = position;\n        this.getData = getData;\n        this.group = group;\n        this._isAccepted = false;\n    }\n    accept() {\n        this._isAccepted = true;\n    }\n}\nexport const PROPERTY_KEYS = (() => {\n    /**\n     * by readong the keys from an empty value object TypeScript will error\n     * when we add or remove new properties to `DockviewOptions`\n     */\n    const properties = {\n        disableAutoResizing: undefined,\n        hideBorders: undefined,\n        singleTabMode: undefined,\n        disableFloatingGroups: undefined,\n        floatingGroupBounds: undefined,\n        popoutUrl: undefined,\n        defaultRenderer: undefined,\n        debug: undefined,\n        rootOverlayModel: undefined,\n        locked: undefined,\n        disableDnd: undefined,\n        gap: undefined,\n        className: undefined,\n        noPanelsOverlay: undefined,\n    };\n    return Object.keys(properties);\n})();\nexport function isPanelOptionsWithPanel(data) {\n    if (data.referencePanel) {\n        return true;\n    }\n    return false;\n}\nexport function isPanelOptionsWithGroup(data) {\n    if (data.referenceGroup) {\n        return true;\n    }\n    return false;\n}\nexport function isGroupOptionsWithPanel(data) {\n    if (data.referencePanel) {\n        return true;\n    }\n    return false;\n}\nexport function isGroupOptionsWithGroup(data) {\n    if (data.referenceGroup) {\n        return true;\n    }\n    return false;\n}\n","import { DockviewApi } from '../api/component.api';\nimport { getPanelData } from '../dnd/dataTransfer';\nimport { isAncestor, toggleClass } from '../dom';\nimport { addDisposableListener, DockviewEvent, Emitter, } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nimport { ContentContainer, } from './components/panel/content';\nimport { TabsContainer, } from './components/titlebar/tabsContainer';\nimport { DockviewUnhandledDragOverEvent, } from './options';\nexport class DockviewDidDropEvent extends DockviewEvent {\n    get nativeEvent() {\n        return this.options.nativeEvent;\n    }\n    get position() {\n        return this.options.position;\n    }\n    get panel() {\n        return this.options.panel;\n    }\n    get group() {\n        return this.options.group;\n    }\n    get api() {\n        return this.options.api;\n    }\n    constructor(options) {\n        super();\n        this.options = options;\n    }\n    getData() {\n        return this.options.getData();\n    }\n}\nexport class DockviewWillDropEvent extends DockviewDidDropEvent {\n    get kind() {\n        return this._kind;\n    }\n    constructor(options) {\n        super(options);\n        this._kind = options.kind;\n    }\n}\nexport class WillShowOverlayLocationEvent {\n    get kind() {\n        return this.options.kind;\n    }\n    get nativeEvent() {\n        return this.event.nativeEvent;\n    }\n    get position() {\n        return this.event.position;\n    }\n    get defaultPrevented() {\n        return this.event.defaultPrevented;\n    }\n    get panel() {\n        return this.options.panel;\n    }\n    get api() {\n        return this.options.api;\n    }\n    get group() {\n        return this.options.group;\n    }\n    preventDefault() {\n        this.event.preventDefault();\n    }\n    getData() {\n        return this.options.getData();\n    }\n    constructor(event, options) {\n        this.event = event;\n        this.options = options;\n    }\n}\nexport class DockviewGroupPanelModel extends CompositeDisposable {\n    get element() {\n        throw new Error('dockview: not supported');\n    }\n    get activePanel() {\n        return this._activePanel;\n    }\n    get locked() {\n        return this._locked;\n    }\n    set locked(value) {\n        this._locked = value;\n        toggleClass(this.container, 'dv-locked-groupview', value === 'no-drop-target' || value);\n    }\n    get isActive() {\n        return this._isGroupActive;\n    }\n    get panels() {\n        return this._panels;\n    }\n    get size() {\n        return this._panels.length;\n    }\n    get isEmpty() {\n        return this._panels.length === 0;\n    }\n    get hasWatermark() {\n        return !!(this.watermark && this.container.contains(this.watermark.element));\n    }\n    get header() {\n        return this.tabsContainer;\n    }\n    get isContentFocused() {\n        if (!document.activeElement) {\n            return false;\n        }\n        return isAncestor(document.activeElement, this.contentContainer.element);\n    }\n    get location() {\n        return this._location;\n    }\n    set location(value) {\n        this._location = value;\n        toggleClass(this.container, 'dv-groupview-floating', false);\n        toggleClass(this.container, 'dv-groupview-popout', false);\n        switch (value.type) {\n            case 'grid':\n                this.contentContainer.dropTarget.setTargetZones([\n                    'top',\n                    'bottom',\n                    'left',\n                    'right',\n                    'center',\n                ]);\n                break;\n            case 'floating':\n                this.contentContainer.dropTarget.setTargetZones(['center']);\n                this.contentContainer.dropTarget.setTargetZones(value\n                    ? ['center']\n                    : ['top', 'bottom', 'left', 'right', 'center']);\n                toggleClass(this.container, 'dv-groupview-floating', true);\n                break;\n            case 'popout':\n                this.contentContainer.dropTarget.setTargetZones(['center']);\n                toggleClass(this.container, 'dv-groupview-popout', true);\n                break;\n        }\n        this.groupPanel.api._onDidLocationChange.fire({\n            location: this.location,\n        });\n    }\n    constructor(container, accessor, id, options, groupPanel) {\n        var _a;\n        super();\n        this.container = container;\n        this.accessor = accessor;\n        this.id = id;\n        this.options = options;\n        this.groupPanel = groupPanel;\n        this._isGroupActive = false;\n        this._locked = false;\n        this._location = { type: 'grid' };\n        this.mostRecentlyUsed = [];\n        this._overwriteRenderContainer = null;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._width = 0;\n        this._height = 0;\n        this._panels = [];\n        this._panelDisposables = new Map();\n        this._onMove = new Emitter();\n        this.onMove = this._onMove.event;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onWillDrop = new Emitter();\n        this.onWillDrop = this._onWillDrop.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        this._onTabDragStart = new Emitter();\n        this.onTabDragStart = this._onTabDragStart.event;\n        this._onGroupDragStart = new Emitter();\n        this.onGroupDragStart = this._onGroupDragStart.event;\n        this._onDidAddPanel = new Emitter();\n        this.onDidAddPanel = this._onDidAddPanel.event;\n        this._onDidPanelTitleChange = new Emitter();\n        this.onDidPanelTitleChange = this._onDidPanelTitleChange.event;\n        this._onDidPanelParametersChange = new Emitter();\n        this.onDidPanelParametersChange = this._onDidPanelParametersChange.event;\n        this._onDidRemovePanel = new Emitter();\n        this.onDidRemovePanel = this._onDidRemovePanel.event;\n        this._onDidActivePanelChange = new Emitter();\n        this.onDidActivePanelChange = this._onDidActivePanelChange.event;\n        this._onUnhandledDragOverEvent = new Emitter();\n        this.onUnhandledDragOverEvent = this._onUnhandledDragOverEvent.event;\n        toggleClass(this.container, 'dv-groupview', true);\n        this._api = new DockviewApi(this.accessor);\n        this.tabsContainer = new TabsContainer(this.accessor, this.groupPanel);\n        this.contentContainer = new ContentContainer(this.accessor, this);\n        container.append(this.tabsContainer.element, this.contentContainer.element);\n        this.header.hidden = !!options.hideHeader;\n        this.locked = (_a = options.locked) !== null && _a !== void 0 ? _a : false;\n        this.addDisposables(this._onTabDragStart, this._onGroupDragStart, this._onWillShowOverlay, this.tabsContainer.onTabDragStart((event) => {\n            this._onTabDragStart.fire(event);\n        }), this.tabsContainer.onGroupDragStart((event) => {\n            this._onGroupDragStart.fire(event);\n        }), this.tabsContainer.onDrop((event) => {\n            this.handleDropEvent('header', event.event, 'center', event.index);\n        }), this.contentContainer.onDidFocus(() => {\n            this.accessor.doSetGroupActive(this.groupPanel);\n        }), this.contentContainer.onDidBlur(() => {\n            // noop\n        }), this.contentContainer.dropTarget.onDrop((event) => {\n            this.handleDropEvent('content', event.nativeEvent, event.position);\n        }), this.tabsContainer.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(event);\n        }), this.contentContainer.dropTarget.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'content',\n                panel: this.activePanel,\n                api: this._api,\n                group: this.groupPanel,\n                getData: getPanelData,\n            }));\n        }), this._onMove, this._onDidChange, this._onDidDrop, this._onWillDrop, this._onDidAddPanel, this._onDidRemovePanel, this._onDidActivePanelChange, this._onUnhandledDragOverEvent);\n    }\n    focusContent() {\n        this.contentContainer.element.focus();\n    }\n    set renderContainer(value) {\n        this.panels.forEach((panel) => {\n            this.renderContainer.detatch(panel);\n        });\n        this._overwriteRenderContainer = value;\n        this.panels.forEach((panel) => {\n            this.rerender(panel);\n        });\n    }\n    get renderContainer() {\n        var _a;\n        return ((_a = this._overwriteRenderContainer) !== null && _a !== void 0 ? _a : this.accessor.overlayRenderContainer);\n    }\n    initialize() {\n        if (this.options.panels) {\n            this.options.panels.forEach((panel) => {\n                this.doAddPanel(panel);\n            });\n        }\n        if (this.options.activePanel) {\n            this.openPanel(this.options.activePanel);\n        }\n        // must be run after the constructor otherwise this.parent may not be\n        // correctly initialized\n        this.setActive(this.isActive, true);\n        this.updateContainer();\n        if (this.accessor.options.createRightHeaderActionComponent) {\n            this._rightHeaderActions =\n                this.accessor.options.createRightHeaderActionComponent(this.groupPanel);\n            this.addDisposables(this._rightHeaderActions);\n            this._rightHeaderActions.init({\n                containerApi: this._api,\n                api: this.groupPanel.api,\n                group: this.groupPanel,\n            });\n            this.tabsContainer.setRightActionsElement(this._rightHeaderActions.element);\n        }\n        if (this.accessor.options.createLeftHeaderActionComponent) {\n            this._leftHeaderActions =\n                this.accessor.options.createLeftHeaderActionComponent(this.groupPanel);\n            this.addDisposables(this._leftHeaderActions);\n            this._leftHeaderActions.init({\n                containerApi: this._api,\n                api: this.groupPanel.api,\n                group: this.groupPanel,\n            });\n            this.tabsContainer.setLeftActionsElement(this._leftHeaderActions.element);\n        }\n        if (this.accessor.options.createPrefixHeaderActionComponent) {\n            this._prefixHeaderActions =\n                this.accessor.options.createPrefixHeaderActionComponent(this.groupPanel);\n            this.addDisposables(this._prefixHeaderActions);\n            this._prefixHeaderActions.init({\n                containerApi: this._api,\n                api: this.groupPanel.api,\n                group: this.groupPanel,\n            });\n            this.tabsContainer.setPrefixActionsElement(this._prefixHeaderActions.element);\n        }\n    }\n    rerender(panel) {\n        this.contentContainer.renderPanel(panel, { asActive: false });\n    }\n    indexOf(panel) {\n        return this.tabsContainer.indexOf(panel.id);\n    }\n    toJSON() {\n        var _a;\n        const result = {\n            views: this.tabsContainer.panels,\n            activeView: (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.id,\n            id: this.id,\n        };\n        if (this.locked !== false) {\n            result.locked = this.locked;\n        }\n        if (this.header.hidden) {\n            result.hideHeader = true;\n        }\n        return result;\n    }\n    moveToNext(options) {\n        if (!options) {\n            options = {};\n        }\n        if (!options.panel) {\n            options.panel = this.activePanel;\n        }\n        const index = options.panel ? this.panels.indexOf(options.panel) : -1;\n        let normalizedIndex;\n        if (index < this.panels.length - 1) {\n            normalizedIndex = index + 1;\n        }\n        else if (!options.suppressRoll) {\n            normalizedIndex = 0;\n        }\n        else {\n            return;\n        }\n        this.openPanel(this.panels[normalizedIndex]);\n    }\n    moveToPrevious(options) {\n        if (!options) {\n            options = {};\n        }\n        if (!options.panel) {\n            options.panel = this.activePanel;\n        }\n        if (!options.panel) {\n            return;\n        }\n        const index = this.panels.indexOf(options.panel);\n        let normalizedIndex;\n        if (index > 0) {\n            normalizedIndex = index - 1;\n        }\n        else if (!options.suppressRoll) {\n            normalizedIndex = this.panels.length - 1;\n        }\n        else {\n            return;\n        }\n        this.openPanel(this.panels[normalizedIndex]);\n    }\n    containsPanel(panel) {\n        return this.panels.includes(panel);\n    }\n    init(_params) {\n        //noop\n    }\n    update(_params) {\n        //noop\n    }\n    focus() {\n        var _a;\n        (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    openPanel(panel, options = {}) {\n        /**\n         * set the panel group\n         * add the panel\n         * check if group active\n         * check if panel active\n         */\n        if (typeof options.index !== 'number' ||\n            options.index > this.panels.length) {\n            options.index = this.panels.length;\n        }\n        const skipSetActive = !!options.skipSetActive;\n        // ensure the group is updated before we fire any events\n        panel.updateParentGroup(this.groupPanel, {\n            skipSetActive: options.skipSetActive,\n        });\n        this.doAddPanel(panel, options.index, {\n            skipSetActive: skipSetActive,\n        });\n        if (this._activePanel === panel) {\n            this.contentContainer.renderPanel(panel, { asActive: true });\n            return;\n        }\n        if (!skipSetActive) {\n            this.doSetActivePanel(panel);\n        }\n        if (!options.skipSetGroupActive) {\n            this.accessor.doSetGroupActive(this.groupPanel);\n        }\n        if (!options.skipSetActive) {\n            this.updateContainer();\n        }\n    }\n    removePanel(groupItemOrId, options = {\n        skipSetActive: false,\n    }) {\n        const id = typeof groupItemOrId === 'string'\n            ? groupItemOrId\n            : groupItemOrId.id;\n        const panelToRemove = this._panels.find((panel) => panel.id === id);\n        if (!panelToRemove) {\n            throw new Error('invalid operation');\n        }\n        return this._removePanel(panelToRemove, options);\n    }\n    closeAllPanels() {\n        if (this.panels.length > 0) {\n            // take a copy since we will be edting the array as we iterate through\n            const arrPanelCpy = [...this.panels];\n            for (const panel of arrPanelCpy) {\n                this.doClose(panel);\n            }\n        }\n        else {\n            this.accessor.removeGroup(this.groupPanel);\n        }\n    }\n    closePanel(panel) {\n        this.doClose(panel);\n    }\n    doClose(panel) {\n        const isLast = this.panels.length === 1 && this.accessor.groups.length === 1;\n        this.accessor.removePanel(panel, isLast && this.accessor.options.noPanelsOverlay === 'emptyGroup'\n            ? { removeEmptyGroup: false }\n            : undefined);\n    }\n    isPanelActive(panel) {\n        return this._activePanel === panel;\n    }\n    updateActions(element) {\n        this.tabsContainer.setRightActionsElement(element);\n    }\n    setActive(isGroupActive, force = false) {\n        if (!force && this.isActive === isGroupActive) {\n            return;\n        }\n        this._isGroupActive = isGroupActive;\n        toggleClass(this.container, 'dv-active-group', isGroupActive);\n        toggleClass(this.container, 'dv-inactive-group', !isGroupActive);\n        this.tabsContainer.setActive(this.isActive);\n        if (!this._activePanel && this.panels.length > 0) {\n            this.doSetActivePanel(this.panels[0]);\n        }\n        this.updateContainer();\n    }\n    layout(width, height) {\n        var _a;\n        this._width = width;\n        this._height = height;\n        this.contentContainer.layout(this._width, this._height);\n        if ((_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.layout) {\n            this._activePanel.layout(this._width, this._height);\n        }\n    }\n    _removePanel(panel, options) {\n        const isActivePanel = this._activePanel === panel;\n        this.doRemovePanel(panel);\n        if (isActivePanel && this.panels.length > 0) {\n            const nextPanel = this.mostRecentlyUsed[0];\n            this.openPanel(nextPanel, {\n                skipSetActive: options.skipSetActive,\n                skipSetGroupActive: options.skipSetActiveGroup,\n            });\n        }\n        if (this._activePanel && this.panels.length === 0) {\n            this.doSetActivePanel(undefined);\n        }\n        if (!options.skipSetActive) {\n            this.updateContainer();\n        }\n        return panel;\n    }\n    doRemovePanel(panel) {\n        const index = this.panels.indexOf(panel);\n        if (this._activePanel === panel) {\n            this.contentContainer.closePanel();\n        }\n        this.tabsContainer.delete(panel.id);\n        this._panels.splice(index, 1);\n        if (this.mostRecentlyUsed.includes(panel)) {\n            const index = this.mostRecentlyUsed.indexOf(panel);\n            this.mostRecentlyUsed.splice(index, 1);\n        }\n        const disposable = this._panelDisposables.get(panel.id);\n        if (disposable) {\n            disposable.dispose();\n            this._panelDisposables.delete(panel.id);\n        }\n        this._onDidRemovePanel.fire({ panel });\n    }\n    doAddPanel(panel, index = this.panels.length, options = { skipSetActive: false }) {\n        const existingPanel = this._panels.indexOf(panel);\n        const hasExistingPanel = existingPanel > -1;\n        this.tabsContainer.show();\n        this.contentContainer.show();\n        this.tabsContainer.openPanel(panel, index);\n        if (!options.skipSetActive) {\n            this.contentContainer.openPanel(panel);\n        }\n        if (hasExistingPanel) {\n            // TODO - need to ensure ordering hasn't changed and if it has need to re-order this.panels\n            return;\n        }\n        this.updateMru(panel);\n        this.panels.splice(index, 0, panel);\n        this._panelDisposables.set(panel.id, new CompositeDisposable(panel.api.onDidTitleChange((event) => this._onDidPanelTitleChange.fire(event)), panel.api.onDidParametersChange((event) => this._onDidPanelParametersChange.fire(event))));\n        this._onDidAddPanel.fire({ panel });\n    }\n    doSetActivePanel(panel) {\n        if (this._activePanel === panel) {\n            return;\n        }\n        this._activePanel = panel;\n        if (panel) {\n            this.tabsContainer.setActivePanel(panel);\n            panel.layout(this._width, this._height);\n            this.updateMru(panel);\n            this._onDidActivePanelChange.fire({\n                panel,\n            });\n        }\n    }\n    updateMru(panel) {\n        if (this.mostRecentlyUsed.includes(panel)) {\n            this.mostRecentlyUsed.splice(this.mostRecentlyUsed.indexOf(panel), 1);\n        }\n        this.mostRecentlyUsed = [panel, ...this.mostRecentlyUsed];\n    }\n    updateContainer() {\n        var _a, _b;\n        this.panels.forEach((panel) => panel.runEvents());\n        if (this.isEmpty && !this.watermark) {\n            const watermark = this.accessor.createWatermarkComponent();\n            watermark.init({\n                containerApi: this._api,\n                group: this.groupPanel,\n            });\n            this.watermark = watermark;\n            addDisposableListener(this.watermark.element, 'pointerdown', () => {\n                if (!this.isActive) {\n                    this.accessor.doSetGroupActive(this.groupPanel);\n                }\n            });\n            this.contentContainer.element.appendChild(this.watermark.element);\n        }\n        if (!this.isEmpty && this.watermark) {\n            this.watermark.element.remove();\n            (_b = (_a = this.watermark).dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n            this.watermark = undefined;\n        }\n    }\n    canDisplayOverlay(event, position, target) {\n        const firedEvent = new DockviewUnhandledDragOverEvent(event, target, position, getPanelData, this.accessor.getPanel(this.id));\n        this._onUnhandledDragOverEvent.fire(firedEvent);\n        return firedEvent.isAccepted;\n    }\n    handleDropEvent(type, event, position, index) {\n        if (this.locked === 'no-drop-target') {\n            return;\n        }\n        function getKind() {\n            switch (type) {\n                case 'header':\n                    return typeof index === 'number' ? 'tab' : 'header_space';\n                case 'content':\n                    return 'content';\n            }\n        }\n        const panel = typeof index === 'number' ? this.panels[index] : undefined;\n        const willDropEvent = new DockviewWillDropEvent({\n            nativeEvent: event,\n            position,\n            panel,\n            getData: () => getPanelData(),\n            kind: getKind(),\n            group: this.groupPanel,\n            api: this._api,\n        });\n        this._onWillDrop.fire(willDropEvent);\n        if (willDropEvent.defaultPrevented) {\n            return;\n        }\n        const data = getPanelData();\n        if (data && data.viewId === this.accessor.id) {\n            if (data.panelId === null) {\n                // this is a group move dnd event\n                const { groupId } = data;\n                this._onMove.fire({\n                    target: position,\n                    groupId: groupId,\n                    index,\n                });\n                return;\n            }\n            const fromSameGroup = this.tabsContainer.indexOf(data.panelId) !== -1;\n            if (fromSameGroup && this.tabsContainer.size === 1) {\n                return;\n            }\n            const { groupId, panelId } = data;\n            const isSameGroup = this.id === groupId;\n            if (isSameGroup && !position) {\n                const oldIndex = this.tabsContainer.indexOf(panelId);\n                if (oldIndex === index) {\n                    return;\n                }\n            }\n            this._onMove.fire({\n                target: position,\n                groupId: data.groupId,\n                itemId: data.panelId,\n                index,\n            });\n        }\n        else {\n            this._onDidDrop.fire(new DockviewDidDropEvent({\n                nativeEvent: event,\n                position,\n                panel,\n                getData: () => getPanelData(),\n                group: this.groupPanel,\n                api: this._api,\n            }));\n        }\n    }\n    dispose() {\n        var _a, _b, _c;\n        super.dispose();\n        (_a = this.watermark) === null || _a === void 0 ? void 0 : _a.element.remove();\n        (_c = (_b = this.watermark) === null || _b === void 0 ? void 0 : _b.dispose) === null || _c === void 0 ? void 0 : _c.call(_b);\n        this.watermark = undefined;\n        for (const panel of this.panels) {\n            panel.dispose();\n        }\n        this.tabsContainer.dispose();\n        this.contentContainer.dispose();\n    }\n}\n","import { Emitter } from '../events';\nimport { PanelApiImpl } from './panelApi';\nexport class GridviewPanelApiImpl extends PanelApiImpl {\n    constructor(id, component, panel) {\n        super(id, component);\n        this._onDidConstraintsChangeInternal = new Emitter();\n        this.onDidConstraintsChangeInternal = this._onDidConstraintsChangeInternal.event;\n        this._onDidConstraintsChange = new Emitter();\n        this.onDidConstraintsChange = this._onDidConstraintsChange.event;\n        this._onDidSizeChange = new Emitter();\n        this.onDidSizeChange = this._onDidSizeChange.event;\n        this.addDisposables(this._onDidConstraintsChangeInternal, this._onDidConstraintsChange, this._onDidSizeChange);\n        if (panel) {\n            this.initialize(panel);\n        }\n    }\n    setConstraints(value) {\n        this._onDidConstraintsChangeInternal.fire(value);\n    }\n    setSize(event) {\n        this._onDidSizeChange.fire(event);\n    }\n}\n","import { BasePanelView, } from './basePanelView';\nimport { GridviewPanelApiImpl, } from '../api/gridviewPanelApi';\nimport { Emitter } from '../events';\nexport class GridviewPanel extends BasePanelView {\n    get priority() {\n        return this._priority;\n    }\n    get snap() {\n        return this._snap;\n    }\n    get minimumWidth() {\n        /**\n         * defer to protected function to allow subclasses to override easily.\n         * see https://github.com/microsoft/TypeScript/issues/338\n         */\n        return this.__minimumWidth();\n    }\n    get minimumHeight() {\n        /**\n         * defer to protected function to allow subclasses to override easily.\n         * see https://github.com/microsoft/TypeScript/issues/338\n         */\n        return this.__minimumHeight();\n    }\n    get maximumHeight() {\n        /**\n         * defer to protected function to allow subclasses to override easily.\n         * see https://github.com/microsoft/TypeScript/issues/338\n         */\n        return this.__maximumHeight();\n    }\n    get maximumWidth() {\n        /**\n         * defer to protected function to allow subclasses to override easily.\n         * see https://github.com/microsoft/TypeScript/issues/338\n         */\n        return this.__maximumWidth();\n    }\n    __minimumWidth() {\n        const width = typeof this._minimumWidth === 'function'\n            ? this._minimumWidth()\n            : this._minimumWidth;\n        if (width !== this._evaluatedMinimumWidth) {\n            this._evaluatedMinimumWidth = width;\n            this.updateConstraints();\n        }\n        return width;\n    }\n    __maximumWidth() {\n        const width = typeof this._maximumWidth === 'function'\n            ? this._maximumWidth()\n            : this._maximumWidth;\n        if (width !== this._evaluatedMaximumWidth) {\n            this._evaluatedMaximumWidth = width;\n            this.updateConstraints();\n        }\n        return width;\n    }\n    __minimumHeight() {\n        const height = typeof this._minimumHeight === 'function'\n            ? this._minimumHeight()\n            : this._minimumHeight;\n        if (height !== this._evaluatedMinimumHeight) {\n            this._evaluatedMinimumHeight = height;\n            this.updateConstraints();\n        }\n        return height;\n    }\n    __maximumHeight() {\n        const height = typeof this._maximumHeight === 'function'\n            ? this._maximumHeight()\n            : this._maximumHeight;\n        if (height !== this._evaluatedMaximumHeight) {\n            this._evaluatedMaximumHeight = height;\n            this.updateConstraints();\n        }\n        return height;\n    }\n    get isActive() {\n        return this.api.isActive;\n    }\n    get isVisible() {\n        return this.api.isVisible;\n    }\n    constructor(id, component, options, api) {\n        super(id, component, api !== null && api !== void 0 ? api : new GridviewPanelApiImpl(id, component));\n        this._evaluatedMinimumWidth = 0;\n        this._evaluatedMaximumWidth = Number.MAX_SAFE_INTEGER;\n        this._evaluatedMinimumHeight = 0;\n        this._evaluatedMaximumHeight = Number.MAX_SAFE_INTEGER;\n        this._minimumWidth = 0;\n        this._minimumHeight = 0;\n        this._maximumWidth = Number.MAX_SAFE_INTEGER;\n        this._maximumHeight = Number.MAX_SAFE_INTEGER;\n        this._snap = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        if (typeof (options === null || options === void 0 ? void 0 : options.minimumWidth) === 'number') {\n            this._minimumWidth = options.minimumWidth;\n        }\n        if (typeof (options === null || options === void 0 ? void 0 : options.maximumWidth) === 'number') {\n            this._maximumWidth = options.maximumWidth;\n        }\n        if (typeof (options === null || options === void 0 ? void 0 : options.minimumHeight) === 'number') {\n            this._minimumHeight = options.minimumHeight;\n        }\n        if (typeof (options === null || options === void 0 ? void 0 : options.maximumHeight) === 'number') {\n            this._maximumHeight = options.maximumHeight;\n        }\n        this.api.initialize(this); // TODO: required to by-pass 'super before this' requirement\n        this.addDisposables(this.api.onWillVisibilityChange((event) => {\n            const { isVisible } = event;\n            const { accessor } = this._params;\n            accessor.setVisible(this, isVisible);\n        }), this.api.onActiveChange(() => {\n            const { accessor } = this._params;\n            accessor.doSetGroupActive(this);\n        }), this.api.onDidConstraintsChangeInternal((event) => {\n            if (typeof event.minimumWidth === 'number' ||\n                typeof event.minimumWidth === 'function') {\n                this._minimumWidth = event.minimumWidth;\n            }\n            if (typeof event.minimumHeight === 'number' ||\n                typeof event.minimumHeight === 'function') {\n                this._minimumHeight = event.minimumHeight;\n            }\n            if (typeof event.maximumWidth === 'number' ||\n                typeof event.maximumWidth === 'function') {\n                this._maximumWidth = event.maximumWidth;\n            }\n            if (typeof event.maximumHeight === 'number' ||\n                typeof event.maximumHeight === 'function') {\n                this._maximumHeight = event.maximumHeight;\n            }\n        }), this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire({\n                height: event.height,\n                width: event.width,\n            });\n        }), this._onDidChange);\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    init(parameters) {\n        if (parameters.maximumHeight) {\n            this._maximumHeight = parameters.maximumHeight;\n        }\n        if (parameters.minimumHeight) {\n            this._minimumHeight = parameters.minimumHeight;\n        }\n        if (parameters.maximumWidth) {\n            this._maximumWidth = parameters.maximumWidth;\n        }\n        if (parameters.minimumWidth) {\n            this._minimumWidth = parameters.minimumWidth;\n        }\n        this._priority = parameters.priority;\n        this._snap = !!parameters.snap;\n        super.init(parameters);\n        if (typeof parameters.isVisible === 'boolean') {\n            this.setVisible(parameters.isVisible);\n        }\n    }\n    updateConstraints() {\n        this.api._onDidConstraintsChange.fire({\n            minimumWidth: this._evaluatedMinimumWidth,\n            maximumWidth: this._evaluatedMaximumWidth,\n            minimumHeight: this._evaluatedMinimumHeight,\n            maximumHeight: this._evaluatedMaximumHeight,\n        });\n    }\n    toJSON() {\n        const state = super.toJSON();\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ? undefined : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        return Object.assign(Object.assign({}, state), { minimumHeight: minimum(this.minimumHeight), maximumHeight: maximum(this.maximumHeight), minimumWidth: minimum(this.minimumWidth), maximumWidth: maximum(this.maximumWidth), snap: this.snap, priority: this.priority });\n    }\n}\n","import { positionToDirection } from '../dnd/droptarget';\nimport { Emitter } from '../events';\nimport { MutableDisposable } from '../lifecycle';\nimport { GridviewPanelApiImpl } from './gridviewPanelApi';\nconst NOT_INITIALIZED_MESSAGE = 'dockview: DockviewGroupPanelApiImpl not initialized';\nexport class DockviewGroupPanelApiImpl extends GridviewPanelApiImpl {\n    get location() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        return this._group.model.location;\n    }\n    constructor(id, accessor) {\n        super(id, '__dockviewgroup__');\n        this.accessor = accessor;\n        this._mutableDisposable = new MutableDisposable();\n        this._onDidLocationChange = new Emitter();\n        this.onDidLocationChange = this._onDidLocationChange.event;\n        this._onDidActivePanelChange = new Emitter();\n        this.onDidActivePanelChange = this._onDidActivePanelChange.event;\n        this.addDisposables(this._onDidLocationChange, this._onDidActivePanelChange, this._mutableDisposable);\n    }\n    close() {\n        if (!this._group) {\n            return;\n        }\n        return this.accessor.removeGroup(this._group);\n    }\n    getWindow() {\n        return this.location.type === 'popout'\n            ? this.location.getWindow()\n            : window;\n    }\n    moveTo(options) {\n        var _a, _b, _c;\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        const group = (_a = options.group) !== null && _a !== void 0 ? _a : this.accessor.addGroup({\n            direction: positionToDirection((_b = options.position) !== null && _b !== void 0 ? _b : 'right'),\n            skipSetActive: true,\n        });\n        this.accessor.moveGroupOrPanel({\n            from: { groupId: this._group.id },\n            to: {\n                group,\n                position: options.group\n                    ? (_c = options.position) !== null && _c !== void 0 ? _c : 'center'\n                    : 'center',\n                index: options.index,\n            },\n        });\n    }\n    maximize() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        if (this.location.type !== 'grid') {\n            // only grid groups can be maximized\n            return;\n        }\n        this.accessor.maximizeGroup(this._group);\n    }\n    isMaximized() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        return this.accessor.isMaximizedGroup(this._group);\n    }\n    exitMaximized() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        if (this.isMaximized()) {\n            this.accessor.exitMaximizedGroup();\n        }\n    }\n    initialize(group) {\n        /**\n         * TODO: Annoying initialization order caveat, find a better way to initialize and avoid needing null checks\n         *\n         * Due to the order on initialization we know that the model isn't defined until later in the same stack-frame of setup.\n         * By queuing a microtask we can ensure the setup is completed within the same stack-frame, but after everything else has\n         * finished ensuring the `model` is defined.\n         */\n        this._group = group;\n        queueMicrotask(() => {\n            this._mutableDisposable.value =\n                this._group.model.onDidActivePanelChange((event) => {\n                    this._onDidActivePanelChange.fire(event);\n                });\n        });\n    }\n}\n","import { DockviewGroupPanelModel, } from './dockviewGroupPanelModel';\nimport { GridviewPanel } from '../gridview/gridviewPanel';\nimport { DockviewGroupPanelApiImpl, } from '../api/dockviewGroupPanelApi';\nconst MINIMUM_DOCKVIEW_GROUP_PANEL_WIDTH = 100;\nconst MINIMUM_DOCKVIEW_GROUP_PANEL_HEIGHT = 100;\nexport class DockviewGroupPanel extends GridviewPanel {\n    get minimumWidth() {\n        var _a;\n        const activePanelMinimumWidth = (_a = this.activePanel) === null || _a === void 0 ? void 0 : _a.minimumWidth;\n        if (typeof activePanelMinimumWidth === 'number') {\n            return activePanelMinimumWidth;\n        }\n        return super.__minimumWidth();\n    }\n    get minimumHeight() {\n        var _a;\n        const activePanelMinimumHeight = (_a = this.activePanel) === null || _a === void 0 ? void 0 : _a.minimumHeight;\n        if (typeof activePanelMinimumHeight === 'number') {\n            return activePanelMinimumHeight;\n        }\n        return super.__minimumHeight();\n    }\n    get maximumWidth() {\n        var _a;\n        const activePanelMaximumWidth = (_a = this.activePanel) === null || _a === void 0 ? void 0 : _a.maximumWidth;\n        if (typeof activePanelMaximumWidth === 'number') {\n            return activePanelMaximumWidth;\n        }\n        return super.__maximumWidth();\n    }\n    get maximumHeight() {\n        var _a;\n        const activePanelMaximumHeight = (_a = this.activePanel) === null || _a === void 0 ? void 0 : _a.maximumHeight;\n        if (typeof activePanelMaximumHeight === 'number') {\n            return activePanelMaximumHeight;\n        }\n        return super.__maximumHeight();\n    }\n    get panels() {\n        return this._model.panels;\n    }\n    get activePanel() {\n        return this._model.activePanel;\n    }\n    get size() {\n        return this._model.size;\n    }\n    get model() {\n        return this._model;\n    }\n    get locked() {\n        return this._model.locked;\n    }\n    set locked(value) {\n        this._model.locked = value;\n    }\n    get header() {\n        return this._model.header;\n    }\n    constructor(accessor, id, options) {\n        var _a, _b, _c, _d, _e, _f;\n        super(id, 'groupview_default', {\n            minimumHeight: (_b = (_a = options.constraints) === null || _a === void 0 ? void 0 : _a.minimumHeight) !== null && _b !== void 0 ? _b : MINIMUM_DOCKVIEW_GROUP_PANEL_HEIGHT,\n            minimumWidth: (_d = (_c = options.constraints) === null || _c === void 0 ? void 0 : _c.maximumHeight) !== null && _d !== void 0 ? _d : MINIMUM_DOCKVIEW_GROUP_PANEL_WIDTH,\n            maximumHeight: (_e = options.constraints) === null || _e === void 0 ? void 0 : _e.maximumHeight,\n            maximumWidth: (_f = options.constraints) === null || _f === void 0 ? void 0 : _f.maximumWidth,\n        }, new DockviewGroupPanelApiImpl(id, accessor));\n        this.api.initialize(this); // cannot use 'this' after after 'super' call\n        this._model = new DockviewGroupPanelModel(this.element, accessor, id, options, this);\n    }\n    focus() {\n        if (!this.api.isActive) {\n            this.api.setActive();\n        }\n        super.focus();\n    }\n    initialize() {\n        this._model.initialize();\n    }\n    setActive(isActive) {\n        super.setActive(isActive);\n        this.model.setActive(isActive);\n    }\n    layout(width, height) {\n        super.layout(width, height);\n        this.model.layout(width, height);\n    }\n    getComponent() {\n        return this._model;\n    }\n    toJSON() {\n        return this.model.toJSON();\n    }\n}\n","import { Emitter } from '../events';\nimport { GridviewPanelApiImpl } from './gridviewPanelApi';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nexport class DockviewPanelApiImpl extends GridviewPanelApiImpl {\n    get location() {\n        return this.group.api.location;\n    }\n    get title() {\n        return this.panel.title;\n    }\n    get isGroupActive() {\n        return this.group.isActive;\n    }\n    get renderer() {\n        return this.panel.renderer;\n    }\n    set group(value) {\n        const oldGroup = this._group;\n        if (this._group !== value) {\n            this._group = value;\n            this._onDidGroupChange.fire({});\n            this.setupGroupEventListeners(oldGroup);\n            this._onDidLocationChange.fire({\n                location: this.group.api.location,\n            });\n        }\n    }\n    get group() {\n        return this._group;\n    }\n    get tabComponent() {\n        return this._tabComponent;\n    }\n    constructor(panel, group, accessor, component, tabComponent) {\n        super(panel.id, component);\n        this.panel = panel;\n        this.accessor = accessor;\n        this._onDidTitleChange = new Emitter();\n        this.onDidTitleChange = this._onDidTitleChange.event;\n        this._onDidActiveGroupChange = new Emitter();\n        this.onDidActiveGroupChange = this._onDidActiveGroupChange.event;\n        this._onDidGroupChange = new Emitter();\n        this.onDidGroupChange = this._onDidGroupChange.event;\n        this._onDidRendererChange = new Emitter();\n        this.onDidRendererChange = this._onDidRendererChange.event;\n        this._onDidLocationChange = new Emitter();\n        this.onDidLocationChange = this._onDidLocationChange.event;\n        this.groupEventsDisposable = new MutableDisposable();\n        this._tabComponent = tabComponent;\n        this.initialize(panel);\n        this._group = group;\n        this.setupGroupEventListeners();\n        this.addDisposables(this.groupEventsDisposable, this._onDidRendererChange, this._onDidTitleChange, this._onDidGroupChange, this._onDidActiveGroupChange, this._onDidLocationChange);\n    }\n    getWindow() {\n        return this.group.api.getWindow();\n    }\n    moveTo(options) {\n        var _a, _b;\n        this.accessor.moveGroupOrPanel({\n            from: { groupId: this._group.id, panelId: this.panel.id },\n            to: {\n                group: (_a = options.group) !== null && _a !== void 0 ? _a : this._group,\n                position: options.group\n                    ? (_b = options.position) !== null && _b !== void 0 ? _b : 'center'\n                    : 'center',\n                index: options.index,\n            },\n        });\n    }\n    setTitle(title) {\n        this.panel.setTitle(title);\n    }\n    setRenderer(renderer) {\n        this.panel.setRenderer(renderer);\n    }\n    close() {\n        this.group.model.closePanel(this.panel);\n    }\n    maximize() {\n        this.group.api.maximize();\n    }\n    isMaximized() {\n        return this.group.api.isMaximized();\n    }\n    exitMaximized() {\n        this.group.api.exitMaximized();\n    }\n    setupGroupEventListeners(previousGroup) {\n        var _a;\n        let _trackGroupActive = (_a = previousGroup === null || previousGroup === void 0 ? void 0 : previousGroup.isActive) !== null && _a !== void 0 ? _a : false; // prevent duplicate events with same state\n        this.groupEventsDisposable.value = new CompositeDisposable(this.group.api.onDidVisibilityChange((event) => {\n            const hasBecomeHidden = !event.isVisible && this.isVisible;\n            const hasBecomeVisible = event.isVisible && !this.isVisible;\n            const isActivePanel = this.group.model.isPanelActive(this.panel);\n            if (hasBecomeHidden || (hasBecomeVisible && isActivePanel)) {\n                this._onDidVisibilityChange.fire(event);\n            }\n        }), this.group.api.onDidLocationChange((event) => {\n            if (this.group !== this.panel.group) {\n                return;\n            }\n            this._onDidLocationChange.fire(event);\n        }), this.group.api.onDidActiveChange(() => {\n            if (this.group !== this.panel.group) {\n                return;\n            }\n            if (_trackGroupActive !== this.isGroupActive) {\n                _trackGroupActive = this.isGroupActive;\n                this._onDidActiveGroupChange.fire({\n                    isActive: this.isGroupActive,\n                });\n            }\n        }));\n    }\n}\n","import { DockviewPanelApiImpl, } from '../api/dockviewPanelApi';\nimport { CompositeDisposable } from '../lifecycle';\nimport { WillFocusEvent } from '../api/panelApi';\nexport class DockviewPanel extends CompositeDisposable {\n    get params() {\n        return this._params;\n    }\n    get title() {\n        return this._title;\n    }\n    get group() {\n        return this._group;\n    }\n    get renderer() {\n        var _a;\n        return (_a = this._renderer) !== null && _a !== void 0 ? _a : this.accessor.renderer;\n    }\n    get minimumWidth() {\n        return this._minimumWidth;\n    }\n    get minimumHeight() {\n        return this._minimumHeight;\n    }\n    get maximumWidth() {\n        return this._maximumWidth;\n    }\n    get maximumHeight() {\n        return this._maximumHeight;\n    }\n    constructor(id, component, tabComponent, accessor, containerApi, group, view, options) {\n        super();\n        this.id = id;\n        this.accessor = accessor;\n        this.containerApi = containerApi;\n        this.view = view;\n        this._renderer = options.renderer;\n        this._group = group;\n        this._minimumWidth = options.minimumWidth;\n        this._minimumHeight = options.minimumHeight;\n        this._maximumWidth = options.maximumWidth;\n        this._maximumHeight = options.maximumHeight;\n        this.api = new DockviewPanelApiImpl(this, this._group, accessor, component, tabComponent);\n        this.addDisposables(this.api.onActiveChange(() => {\n            accessor.setActivePanel(this);\n        }), this.api.onDidSizeChange((event) => {\n            // forward the resize event to the group since if you want to resize a panel\n            // you are actually just resizing the panels parent which is the group\n            this.group.api.setSize(event);\n        }), this.api.onDidRendererChange(() => {\n            this.group.model.rerender(this);\n        }));\n    }\n    init(params) {\n        this._params = params.params;\n        this.view.init(Object.assign(Object.assign({}, params), { api: this.api, containerApi: this.containerApi }));\n        this.setTitle(params.title);\n    }\n    focus() {\n        const event = new WillFocusEvent();\n        this.api._onWillFocus.fire(event);\n        if (event.defaultPrevented) {\n            return;\n        }\n        if (!this.api.isActive) {\n            this.api.setActive();\n        }\n    }\n    toJSON() {\n        return {\n            id: this.id,\n            contentComponent: this.view.contentComponent,\n            tabComponent: this.view.tabComponent,\n            params: Object.keys(this._params || {}).length > 0\n                ? this._params\n                : undefined,\n            title: this.title,\n            renderer: this._renderer,\n            minimumHeight: this._minimumHeight,\n            maximumHeight: this._maximumHeight,\n            minimumWidth: this._minimumWidth,\n            maximumWidth: this._maximumWidth,\n        };\n    }\n    setTitle(title) {\n        const didTitleChange = title !== this.title;\n        if (didTitleChange) {\n            this._title = title;\n            this.api._onDidTitleChange.fire({ title });\n        }\n    }\n    setRenderer(renderer) {\n        const didChange = renderer !== this.renderer;\n        if (didChange) {\n            this._renderer = renderer;\n            this.api._onDidRendererChange.fire({\n                renderer: renderer,\n            });\n        }\n    }\n    update(event) {\n        var _a;\n        // merge the new parameters with the existing parameters\n        this._params = Object.assign(Object.assign({}, ((_a = this._params) !== null && _a !== void 0 ? _a : {})), event.params);\n        /**\n         * delete new keys that have a value of undefined,\n         * allow values of null\n         */\n        for (const key of Object.keys(event.params)) {\n            if (event.params[key] === undefined) {\n                delete this._params[key];\n            }\n        }\n        // update the view with the updated props\n        this.view.update({\n            params: this._params,\n        });\n    }\n    updateParentGroup(group, options) {\n        this._group = group;\n        this.api.group = this._group;\n        const isPanelVisible = this._group.model.isPanelActive(this);\n        const isActive = this.group.api.isActive && isPanelVisible;\n        if (!(options === null || options === void 0 ? void 0 : options.skipSetActive)) {\n            if (this.api.isActive !== isActive) {\n                this.api._onDidActiveChange.fire({\n                    isActive: this.group.api.isActive && isPanelVisible,\n                });\n            }\n        }\n        if (this.api.isVisible !== isPanelVisible) {\n            this.api._onDidVisibilityChange.fire({\n                isVisible: isPanelVisible,\n            });\n        }\n    }\n    runEvents() {\n        const isPanelVisible = this._group.model.isPanelActive(this);\n        const isActive = this.group.api.isActive && isPanelVisible;\n        if (this.api.isActive !== isActive) {\n            this.api._onDidActiveChange.fire({\n                isActive: this.group.api.isActive && isPanelVisible,\n            });\n        }\n        if (this.api.isVisible !== isPanelVisible) {\n            this.api._onDidVisibilityChange.fire({\n                isVisible: isPanelVisible,\n            });\n        }\n    }\n    layout(width, height) {\n        // TODO: Can we somehow do height without header height or indicate what the header height is?\n        this.api._onDidDimensionChange.fire({\n            width,\n            height: height,\n        });\n        this.view.layout(width, height);\n    }\n    dispose() {\n        this.api.dispose();\n        this.view.dispose();\n    }\n}\n","const createSvgElementFromPath = (params) => {\n    const svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n    svg.setAttributeNS(null, 'height', params.height);\n    svg.setAttributeNS(null, 'width', params.width);\n    svg.setAttributeNS(null, 'viewBox', params.viewbox);\n    svg.setAttributeNS(null, 'aria-hidden', 'false');\n    svg.setAttributeNS(null, 'focusable', 'false');\n    svg.classList.add('dv-svg');\n    const path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n    path.setAttributeNS(null, 'd', params.path);\n    svg.appendChild(path);\n    return svg;\n};\nexport const createCloseButton = () => createSvgElementFromPath({\n    width: '11',\n    height: '11',\n    viewbox: '0 0 28 28',\n    path: 'M2.1 27.3L0 25.2L11.55 13.65L0 2.1L2.1 0L13.65 11.55L25.2 0L27.3 2.1L15.75 13.65L27.3 25.2L25.2 27.3L13.65 15.75L2.1 27.3Z',\n});\nexport const createExpandMoreButton = () => createSvgElementFromPath({\n    width: '11',\n    height: '11',\n    viewbox: '0 0 24 15',\n    path: 'M12 14.15L0 2.15L2.15 0L12 9.9L21.85 0.0499992L24 2.2L12 14.15Z',\n});\nexport const createChevronRightButton = () => createSvgElementFromPath({\n    width: '11',\n    height: '11',\n    viewbox: '0 0 15 25',\n    path: 'M2.15 24.1L0 21.95L9.9 12.05L0 2.15L2.15 0L14.2 12.05L2.15 24.1Z',\n});\n","import { CompositeDisposable } from '../../../lifecycle';\nimport { addDisposableListener } from '../../../events';\nimport { createCloseButton } from '../../../svg';\nexport class DefaultTab extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor() {\n        super();\n        this._element = document.createElement('div');\n        this._element.className = 'dv-default-tab';\n        this._content = document.createElement('div');\n        this._content.className = 'dv-default-tab-content';\n        this.action = document.createElement('div');\n        this.action.className = 'dv-default-tab-action';\n        this.action.appendChild(createCloseButton());\n        this._element.appendChild(this._content);\n        this._element.appendChild(this.action);\n        this.addDisposables(addDisposableListener(this.action, 'pointerdown', (ev) => {\n            ev.preventDefault();\n        }));\n        this.render();\n    }\n    init(params) {\n        this._title = params.title;\n        this.addDisposables(params.api.onDidTitleChange((event) => {\n            this._title = event.title;\n            this.render();\n        }), addDisposableListener(this.action, 'pointerdown', (ev) => {\n            ev.preventDefault();\n        }), addDisposableListener(this.action, 'click', (ev) => {\n            if (ev.defaultPrevented) {\n                return;\n            }\n            ev.preventDefault();\n            params.api.close();\n        }));\n        this.render();\n    }\n    render() {\n        var _a;\n        if (this._content.textContent !== this._title) {\n            this._content.textContent = (_a = this._title) !== null && _a !== void 0 ? _a : '';\n        }\n    }\n}\n","import { DefaultTab } from './components/tab/defaultTab';\nexport class DockviewPanelModel {\n    get content() {\n        return this._content;\n    }\n    get tab() {\n        return this._tab;\n    }\n    constructor(accessor, id, contentComponent, tabComponent) {\n        this.accessor = accessor;\n        this.id = id;\n        this.contentComponent = contentComponent;\n        this.tabComponent = tabComponent;\n        this._content = this.createContentComponent(this.id, contentComponent);\n        this._tab = this.createTabComponent(this.id, tabComponent);\n    }\n    init(params) {\n        this.content.init(params);\n        this.tab.init(params);\n    }\n    updateParentGroup(_group, _isPanelVisible) {\n        // noop\n    }\n    layout(width, height) {\n        var _a, _b;\n        (_b = (_a = this.content).layout) === null || _b === void 0 ? void 0 : _b.call(_a, width, height);\n    }\n    update(event) {\n        var _a, _b, _c, _d;\n        (_b = (_a = this.content).update) === null || _b === void 0 ? void 0 : _b.call(_a, event);\n        (_d = (_c = this.tab).update) === null || _d === void 0 ? void 0 : _d.call(_c, event);\n    }\n    dispose() {\n        var _a, _b, _c, _d;\n        (_b = (_a = this.content).dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n        (_d = (_c = this.tab).dispose) === null || _d === void 0 ? void 0 : _d.call(_c);\n    }\n    createContentComponent(id, componentName) {\n        return this.accessor.options.createComponent({\n            id,\n            name: componentName,\n        });\n    }\n    createTabComponent(id, componentName) {\n        const name = componentName !== null && componentName !== void 0 ? componentName : this.accessor.options.defaultTabComponent;\n        if (name) {\n            if (this.accessor.options.createTabComponent) {\n                const component = this.accessor.options.createTabComponent({\n                    id,\n                    name,\n                });\n                if (component) {\n                    return component;\n                }\n                else {\n                    return new DefaultTab();\n                }\n            }\n            console.warn(`dockview: tabComponent '${componentName}' was not found. falling back to the default tab.`);\n        }\n        return new DefaultTab();\n    }\n}\n","import { DockviewPanel } from './dockviewPanel';\nimport { DockviewPanelModel } from './dockviewPanelModel';\nimport { DockviewApi } from '../api/component.api';\nexport class DefaultDockviewDeserialzier {\n    constructor(accessor) {\n        this.accessor = accessor;\n    }\n    fromJSON(panelData, group) {\n        var _a, _b;\n        const panelId = panelData.id;\n        const params = panelData.params;\n        const title = panelData.title;\n        const viewData = panelData.view;\n        const contentComponent = viewData\n            ? viewData.content.id\n            : (_a = panelData.contentComponent) !== null && _a !== void 0 ? _a : 'unknown';\n        const tabComponent = viewData\n            ? (_b = viewData.tab) === null || _b === void 0 ? void 0 : _b.id\n            : panelData.tabComponent;\n        const view = new DockviewPanelModel(this.accessor, panelId, contentComponent, tabComponent);\n        const panel = new DockviewPanel(panelId, contentComponent, tabComponent, this.accessor, new DockviewApi(this.accessor), group, view, {\n            renderer: panelData.renderer,\n            minimumWidth: panelData.minimumWidth,\n            minimumHeight: panelData.minimumHeight,\n            maximumWidth: panelData.maximumWidth,\n            maximumHeight: panelData.maximumHeight,\n        });\n        panel.init({\n            title: title !== null && title !== void 0 ? title : panelId,\n            params: params !== null && params !== void 0 ? params : {},\n        });\n        return panel;\n    }\n}\n","import { CompositeDisposable } from '../../../lifecycle';\nexport class Watermark extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor() {\n        super();\n        this._element = document.createElement('div');\n        this._element.className = 'dv-watermark';\n    }\n    init(_params) {\n        // noop\n    }\n}\n","import { disableIframePointEvents, quasiDefaultPrevented, toggleClass, } from '../dom';\nimport { Emitter, addDisposableListener, addDisposableWindowListener, } from '../events';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nimport { clamp } from '../math';\nclass AriaLevelTracker {\n    constructor() {\n        this._orderedList = [];\n    }\n    push(element) {\n        this._orderedList = [\n            ...this._orderedList.filter((item) => item !== element),\n            element,\n        ];\n        this.update();\n    }\n    destroy(element) {\n        this._orderedList = this._orderedList.filter((item) => item !== element);\n        this.update();\n    }\n    update() {\n        for (let i = 0; i < this._orderedList.length; i++) {\n            this._orderedList[i].setAttribute('aria-level', `${i}`);\n            this._orderedList[i].style.zIndex = `calc(var(--dv-overlay-z-index, 999) + ${i * 2})`;\n        }\n    }\n}\nconst arialLevelTracker = new AriaLevelTracker();\nexport class Overlay extends CompositeDisposable {\n    set minimumInViewportWidth(value) {\n        this.options.minimumInViewportWidth = value;\n    }\n    set minimumInViewportHeight(value) {\n        this.options.minimumInViewportHeight = value;\n    }\n    get element() {\n        return this._element;\n    }\n    get isVisible() {\n        return this._isVisible;\n    }\n    constructor(options) {\n        super();\n        this.options = options;\n        this._element = document.createElement('div');\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._onDidChangeEnd = new Emitter();\n        this.onDidChangeEnd = this._onDidChangeEnd.event;\n        this.addDisposables(this._onDidChange, this._onDidChangeEnd);\n        this._element.className = 'dv-resize-container';\n        this._isVisible = true;\n        this.setupResize('top');\n        this.setupResize('bottom');\n        this.setupResize('left');\n        this.setupResize('right');\n        this.setupResize('topleft');\n        this.setupResize('topright');\n        this.setupResize('bottomleft');\n        this.setupResize('bottomright');\n        this._element.appendChild(this.options.content);\n        this.options.container.appendChild(this._element);\n        // if input bad resize within acceptable boundaries\n        this.setBounds(Object.assign(Object.assign(Object.assign(Object.assign({ height: this.options.height, width: this.options.width }, ('top' in this.options && { top: this.options.top })), ('bottom' in this.options && { bottom: this.options.bottom })), ('left' in this.options && { left: this.options.left })), ('right' in this.options && { right: this.options.right })));\n        arialLevelTracker.push(this._element);\n    }\n    setVisible(isVisible) {\n        if (isVisible === this.isVisible) {\n            return;\n        }\n        this._isVisible = isVisible;\n        toggleClass(this.element, 'dv-hidden', !this.isVisible);\n    }\n    bringToFront() {\n        arialLevelTracker.push(this._element);\n    }\n    setBounds(bounds = {}) {\n        if (typeof bounds.height === 'number') {\n            this._element.style.height = `${bounds.height}px`;\n        }\n        if (typeof bounds.width === 'number') {\n            this._element.style.width = `${bounds.width}px`;\n        }\n        if ('top' in bounds && typeof bounds.top === 'number') {\n            this._element.style.top = `${bounds.top}px`;\n            this._element.style.bottom = 'auto';\n            this.verticalAlignment = 'top';\n        }\n        if ('bottom' in bounds && typeof bounds.bottom === 'number') {\n            this._element.style.bottom = `${bounds.bottom}px`;\n            this._element.style.top = 'auto';\n            this.verticalAlignment = 'bottom';\n        }\n        if ('left' in bounds && typeof bounds.left === 'number') {\n            this._element.style.left = `${bounds.left}px`;\n            this._element.style.right = 'auto';\n            this.horiziontalAlignment = 'left';\n        }\n        if ('right' in bounds && typeof bounds.right === 'number') {\n            this._element.style.right = `${bounds.right}px`;\n            this._element.style.left = 'auto';\n            this.horiziontalAlignment = 'right';\n        }\n        const containerRect = this.options.container.getBoundingClientRect();\n        const overlayRect = this._element.getBoundingClientRect();\n        // region: ensure bounds within allowable limits\n        // a minimum width of minimumViewportWidth must be inside the viewport\n        const xOffset = Math.max(0, this.getMinimumWidth(overlayRect.width));\n        // a minimum height of minimumViewportHeight must be inside the viewport\n        const yOffset = Math.max(0, this.getMinimumHeight(overlayRect.height));\n        if (this.verticalAlignment === 'top') {\n            const top = clamp(overlayRect.top - containerRect.top, -yOffset, Math.max(0, containerRect.height - overlayRect.height + yOffset));\n            this._element.style.top = `${top}px`;\n            this._element.style.bottom = 'auto';\n        }\n        if (this.verticalAlignment === 'bottom') {\n            const bottom = clamp(containerRect.bottom - overlayRect.bottom, -yOffset, Math.max(0, containerRect.height - overlayRect.height + yOffset));\n            this._element.style.bottom = `${bottom}px`;\n            this._element.style.top = 'auto';\n        }\n        if (this.horiziontalAlignment === 'left') {\n            const left = clamp(overlayRect.left - containerRect.left, -xOffset, Math.max(0, containerRect.width - overlayRect.width + xOffset));\n            this._element.style.left = `${left}px`;\n            this._element.style.right = 'auto';\n        }\n        if (this.horiziontalAlignment === 'right') {\n            const right = clamp(containerRect.right - overlayRect.right, -xOffset, Math.max(0, containerRect.width - overlayRect.width + xOffset));\n            this._element.style.right = `${right}px`;\n            this._element.style.left = 'auto';\n        }\n        this._onDidChange.fire();\n    }\n    toJSON() {\n        const container = this.options.container.getBoundingClientRect();\n        const element = this._element.getBoundingClientRect();\n        const result = {};\n        if (this.verticalAlignment === 'top') {\n            result.top = parseFloat(this._element.style.top);\n        }\n        else if (this.verticalAlignment === 'bottom') {\n            result.bottom = parseFloat(this._element.style.bottom);\n        }\n        else {\n            result.top = element.top - container.top;\n        }\n        if (this.horiziontalAlignment === 'left') {\n            result.left = parseFloat(this._element.style.left);\n        }\n        else if (this.horiziontalAlignment === 'right') {\n            result.right = parseFloat(this._element.style.right);\n        }\n        else {\n            result.left = element.left - container.left;\n        }\n        result.width = element.width;\n        result.height = element.height;\n        return result;\n    }\n    setupDrag(dragTarget, options = { inDragMode: false }) {\n        const move = new MutableDisposable();\n        const track = () => {\n            let offset = null;\n            const iframes = disableIframePointEvents();\n            move.value = new CompositeDisposable({\n                dispose: () => {\n                    iframes.release();\n                },\n            }, addDisposableWindowListener(window, 'pointermove', (e) => {\n                const containerRect = this.options.container.getBoundingClientRect();\n                const x = e.clientX - containerRect.left;\n                const y = e.clientY - containerRect.top;\n                toggleClass(this._element, 'dv-resize-container-dragging', true);\n                const overlayRect = this._element.getBoundingClientRect();\n                if (offset === null) {\n                    offset = {\n                        x: e.clientX - overlayRect.left,\n                        y: e.clientY - overlayRect.top,\n                    };\n                }\n                const xOffset = Math.max(0, this.getMinimumWidth(overlayRect.width));\n                const yOffset = Math.max(0, this.getMinimumHeight(overlayRect.height));\n                const top = clamp(y - offset.y, -yOffset, Math.max(0, containerRect.height - overlayRect.height + yOffset));\n                const bottom = clamp(offset.y -\n                    y +\n                    containerRect.height -\n                    overlayRect.height, -yOffset, Math.max(0, containerRect.height - overlayRect.height + yOffset));\n                const left = clamp(x - offset.x, -xOffset, Math.max(0, containerRect.width - overlayRect.width + xOffset));\n                const right = clamp(offset.x - x + containerRect.width - overlayRect.width, -xOffset, Math.max(0, containerRect.width - overlayRect.width + xOffset));\n                const bounds = {};\n                // Anchor to top or to bottom depending on which one is closer\n                if (top <= bottom) {\n                    bounds.top = top;\n                }\n                else {\n                    bounds.bottom = bottom;\n                }\n                // Anchor to left or to right depending on which one is closer\n                if (left <= right) {\n                    bounds.left = left;\n                }\n                else {\n                    bounds.right = right;\n                }\n                this.setBounds(bounds);\n            }), addDisposableWindowListener(window, 'pointerup', () => {\n                toggleClass(this._element, 'dv-resize-container-dragging', false);\n                move.dispose();\n                this._onDidChangeEnd.fire();\n            }));\n        };\n        this.addDisposables(move, addDisposableListener(dragTarget, 'pointerdown', (event) => {\n            if (event.defaultPrevented) {\n                event.preventDefault();\n                return;\n            }\n            // if somebody has marked this event then treat as a defaultPrevented\n            // without actually calling event.preventDefault()\n            if (quasiDefaultPrevented(event)) {\n                return;\n            }\n            track();\n        }), addDisposableListener(this.options.content, 'pointerdown', (event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            // if somebody has marked this event then treat as a defaultPrevented\n            // without actually calling event.preventDefault()\n            if (quasiDefaultPrevented(event)) {\n                return;\n            }\n            if (event.shiftKey) {\n                track();\n            }\n        }), addDisposableListener(this.options.content, 'pointerdown', () => {\n            arialLevelTracker.push(this._element);\n        }, true));\n        if (options.inDragMode) {\n            track();\n        }\n    }\n    setupResize(direction) {\n        const resizeHandleElement = document.createElement('div');\n        resizeHandleElement.className = `dv-resize-handle-${direction}`;\n        this._element.appendChild(resizeHandleElement);\n        const move = new MutableDisposable();\n        this.addDisposables(move, addDisposableListener(resizeHandleElement, 'pointerdown', (e) => {\n            e.preventDefault();\n            let startPosition = null;\n            const iframes = disableIframePointEvents();\n            move.value = new CompositeDisposable(addDisposableWindowListener(window, 'pointermove', (e) => {\n                const containerRect = this.options.container.getBoundingClientRect();\n                const overlayRect = this._element.getBoundingClientRect();\n                const y = e.clientY - containerRect.top;\n                const x = e.clientX - containerRect.left;\n                if (startPosition === null) {\n                    // record the initial dimensions since as all subsequence moves are relative to this\n                    startPosition = {\n                        originalY: y,\n                        originalHeight: overlayRect.height,\n                        originalX: x,\n                        originalWidth: overlayRect.width,\n                    };\n                }\n                let top = undefined;\n                let bottom = undefined;\n                let height = undefined;\n                let left = undefined;\n                let right = undefined;\n                let width = undefined;\n                const moveTop = () => {\n                    top = clamp(y, -Number.MAX_VALUE, startPosition.originalY +\n                        startPosition.originalHeight >\n                        containerRect.height\n                        ? this.getMinimumHeight(containerRect.height)\n                        : Math.max(0, startPosition.originalY +\n                            startPosition.originalHeight -\n                            Overlay.MINIMUM_HEIGHT));\n                    height =\n                        startPosition.originalY +\n                            startPosition.originalHeight -\n                            top;\n                    bottom = containerRect.height - top - height;\n                };\n                const moveBottom = () => {\n                    top =\n                        startPosition.originalY -\n                            startPosition.originalHeight;\n                    height = clamp(y - top, top < 0 &&\n                        typeof this.options\n                            .minimumInViewportHeight === 'number'\n                        ? -top +\n                            this.options.minimumInViewportHeight\n                        : Overlay.MINIMUM_HEIGHT, Number.MAX_VALUE);\n                    bottom = containerRect.height - top - height;\n                };\n                const moveLeft = () => {\n                    left = clamp(x, -Number.MAX_VALUE, startPosition.originalX +\n                        startPosition.originalWidth >\n                        containerRect.width\n                        ? this.getMinimumWidth(containerRect.width)\n                        : Math.max(0, startPosition.originalX +\n                            startPosition.originalWidth -\n                            Overlay.MINIMUM_WIDTH));\n                    width =\n                        startPosition.originalX +\n                            startPosition.originalWidth -\n                            left;\n                    right = containerRect.width - left - width;\n                };\n                const moveRight = () => {\n                    left =\n                        startPosition.originalX -\n                            startPosition.originalWidth;\n                    width = clamp(x - left, left < 0 &&\n                        typeof this.options\n                            .minimumInViewportWidth === 'number'\n                        ? -left +\n                            this.options.minimumInViewportWidth\n                        : Overlay.MINIMUM_WIDTH, Number.MAX_VALUE);\n                    right = containerRect.width - left - width;\n                };\n                switch (direction) {\n                    case 'top':\n                        moveTop();\n                        break;\n                    case 'bottom':\n                        moveBottom();\n                        break;\n                    case 'left':\n                        moveLeft();\n                        break;\n                    case 'right':\n                        moveRight();\n                        break;\n                    case 'topleft':\n                        moveTop();\n                        moveLeft();\n                        break;\n                    case 'topright':\n                        moveTop();\n                        moveRight();\n                        break;\n                    case 'bottomleft':\n                        moveBottom();\n                        moveLeft();\n                        break;\n                    case 'bottomright':\n                        moveBottom();\n                        moveRight();\n                        break;\n                }\n                const bounds = {};\n                // Anchor to top or to bottom depending on which one is closer\n                if (top <= bottom) {\n                    bounds.top = top;\n                }\n                else {\n                    bounds.bottom = bottom;\n                }\n                // Anchor to left or to right depending on which one is closer\n                if (left <= right) {\n                    bounds.left = left;\n                }\n                else {\n                    bounds.right = right;\n                }\n                bounds.height = height;\n                bounds.width = width;\n                this.setBounds(bounds);\n            }), {\n                dispose: () => {\n                    iframes.release();\n                },\n            }, addDisposableWindowListener(window, 'pointerup', () => {\n                move.dispose();\n                this._onDidChangeEnd.fire();\n            }));\n        }));\n    }\n    getMinimumWidth(width) {\n        if (typeof this.options.minimumInViewportWidth === 'number') {\n            return width - this.options.minimumInViewportWidth;\n        }\n        return 0;\n    }\n    getMinimumHeight(height) {\n        if (typeof this.options.minimumInViewportHeight === 'number') {\n            return height - this.options.minimumInViewportHeight;\n        }\n        return 0;\n    }\n    dispose() {\n        arialLevelTracker.destroy(this._element);\n        this._element.remove();\n        super.dispose();\n    }\n}\nOverlay.MINIMUM_HEIGHT = 20;\nOverlay.MINIMUM_WIDTH = 20;\n","import { CompositeDisposable } from '../lifecycle';\nexport class DockviewFloatingGroupPanel extends CompositeDisposable {\n    constructor(group, overlay) {\n        super();\n        this.group = group;\n        this.overlay = overlay;\n        this.addDisposables(overlay);\n    }\n    position(bounds) {\n        this.overlay.setBounds(bounds);\n    }\n}\n","export const DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE = 100;\nexport const DEFAULT_FLOATING_GROUP_POSITION = { left: 100, top: 100, width: 300, height: 300 };\n","import { DragAndDropObserver } from '../dnd/dnd';\nimport { getDomNodePagePosition, toggleClass } from '../dom';\nimport { CompositeDisposable, Disposable, MutableDisposable, } from '../lifecycle';\nfunction createFocusableElement() {\n    const element = document.createElement('div');\n    element.tabIndex = -1;\n    return element;\n}\nexport class OverlayRenderContainer extends CompositeDisposable {\n    constructor(element, accessor) {\n        super();\n        this.element = element;\n        this.accessor = accessor;\n        this.map = {};\n        this._disposed = false;\n        this.addDisposables(Disposable.from(() => {\n            for (const value of Object.values(this.map)) {\n                value.disposable.dispose();\n                value.destroy.dispose();\n            }\n            this._disposed = true;\n        }));\n    }\n    detatch(panel) {\n        if (this.map[panel.api.id]) {\n            const { disposable, destroy } = this.map[panel.api.id];\n            disposable.dispose();\n            destroy.dispose();\n            delete this.map[panel.api.id];\n            return true;\n        }\n        return false;\n    }\n    attach(options) {\n        const { panel, referenceContainer } = options;\n        if (!this.map[panel.api.id]) {\n            const element = createFocusableElement();\n            element.className = 'dv-render-overlay';\n            this.map[panel.api.id] = {\n                panel,\n                disposable: Disposable.NONE,\n                destroy: Disposable.NONE,\n                element,\n            };\n        }\n        const focusContainer = this.map[panel.api.id].element;\n        if (panel.view.content.element.parentElement !== focusContainer) {\n            focusContainer.appendChild(panel.view.content.element);\n        }\n        if (focusContainer.parentElement !== this.element) {\n            this.element.appendChild(focusContainer);\n        }\n        const resize = () => {\n            // TODO propagate position to avoid getDomNodePagePosition calls, possible performance bottleneck?\n            const box = getDomNodePagePosition(referenceContainer.element);\n            const box2 = getDomNodePagePosition(this.element);\n            focusContainer.style.left = `${box.left - box2.left}px`;\n            focusContainer.style.top = `${box.top - box2.top}px`;\n            focusContainer.style.width = `${box.width}px`;\n            focusContainer.style.height = `${box.height}px`;\n            toggleClass(focusContainer, 'dv-render-overlay-float', panel.group.api.location.type === 'floating');\n        };\n        const visibilityChanged = () => {\n            if (panel.api.isVisible) {\n                resize();\n            }\n            focusContainer.style.display = panel.api.isVisible ? '' : 'none';\n        };\n        const observerDisposable = new MutableDisposable();\n        const correctLayerPosition = () => {\n            if (panel.api.location.type === 'floating') {\n                queueMicrotask(() => {\n                    const floatingGroup = this.accessor.floatingGroups.find((group) => group.group === panel.api.group);\n                    if (!floatingGroup) {\n                        return;\n                    }\n                    const element = floatingGroup.overlay.element;\n                    const update = () => {\n                        const level = Number(element.getAttribute('aria-level'));\n                        focusContainer.style.zIndex = `calc(var(--dv-overlay-z-index, 999) + ${level * 2 + 1})`;\n                    };\n                    const observer = new MutationObserver(() => {\n                        update();\n                    });\n                    observerDisposable.value = Disposable.from(() => observer.disconnect());\n                    observer.observe(element, {\n                        attributeFilter: ['aria-level'],\n                        attributes: true,\n                    });\n                    update();\n                });\n            }\n            else {\n                focusContainer.style.zIndex = ''; // reset the z-index, perhaps CSS will take over here\n            }\n        };\n        const disposable = new CompositeDisposable(observerDisposable, \n        /**\n         * since container is positioned absoutely we must explicitly forward\n         * the dnd events for the expect behaviours to continue to occur in terms of dnd\n         *\n         * the dnd observer does not need to be conditional on whether the panel is visible since\n         * non-visible panels are 'display: none' and in such case the dnd observer will not fire.\n         */\n        new DragAndDropObserver(focusContainer, {\n            onDragEnd: (e) => {\n                referenceContainer.dropTarget.dnd.onDragEnd(e);\n            },\n            onDragEnter: (e) => {\n                referenceContainer.dropTarget.dnd.onDragEnter(e);\n            },\n            onDragLeave: (e) => {\n                referenceContainer.dropTarget.dnd.onDragLeave(e);\n            },\n            onDrop: (e) => {\n                referenceContainer.dropTarget.dnd.onDrop(e);\n            },\n            onDragOver: (e) => {\n                referenceContainer.dropTarget.dnd.onDragOver(e);\n            },\n        }), panel.api.onDidVisibilityChange(() => {\n            /**\n             * Control the visibility of the content, however even when not visible (display: none)\n             * the content is still maintained within the DOM hence DOM specific attributes\n             * such as scroll position are maintained when next made visible.\n             */\n            visibilityChanged();\n        }), panel.api.onDidDimensionsChange(() => {\n            if (!panel.api.isVisible) {\n                return;\n            }\n            resize();\n        }), panel.api.onDidLocationChange(() => {\n            correctLayerPosition();\n        }));\n        this.map[panel.api.id].destroy = Disposable.from(() => {\n            var _a;\n            if (panel.view.content.element.parentElement === focusContainer) {\n                focusContainer.removeChild(panel.view.content.element);\n            }\n            (_a = focusContainer.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(focusContainer);\n        });\n        correctLayerPosition();\n        queueMicrotask(() => {\n            if (this.isDisposed) {\n                return;\n            }\n            /**\n             * wait until everything has finished in the current stack-frame call before\n             * calling the first resize as other size-altering events may still occur before\n             * the end of the stack-frame.\n             */\n            visibilityChanged();\n        });\n        // dispose of logic asoccciated with previous reference-container\n        this.map[panel.api.id].disposable.dispose();\n        // and reset the disposable to the active reference-container\n        this.map[panel.api.id].disposable = disposable;\n        return focusContainer;\n    }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { addStyles } from './dom';\nimport { Emitter, addDisposableWindowListener } from './events';\nimport { CompositeDisposable, Disposable } from './lifecycle';\nexport class PopoutWindow extends CompositeDisposable {\n    get window() {\n        var _a, _b;\n        return (_b = (_a = this._window) === null || _a === void 0 ? void 0 : _a.value) !== null && _b !== void 0 ? _b : null;\n    }\n    constructor(target, className, options) {\n        super();\n        this.target = target;\n        this.className = className;\n        this.options = options;\n        this._onWillClose = new Emitter();\n        this.onWillClose = this._onWillClose.event;\n        this._onDidClose = new Emitter();\n        this.onDidClose = this._onDidClose.event;\n        this._window = null;\n        this.addDisposables(this._onWillClose, this._onDidClose, {\n            dispose: () => {\n                this.close();\n            },\n        });\n    }\n    dimensions() {\n        if (!this._window) {\n            return null;\n        }\n        const left = this._window.value.screenX;\n        const top = this._window.value.screenY;\n        const width = this._window.value.innerWidth;\n        const height = this._window.value.innerHeight;\n        return { top, left, width, height };\n    }\n    close() {\n        var _a, _b;\n        if (this._window) {\n            this._onWillClose.fire();\n            (_b = (_a = this.options).onWillClose) === null || _b === void 0 ? void 0 : _b.call(_a, {\n                id: this.target,\n                window: this._window.value,\n            });\n            this._window.disposable.dispose();\n            this._window = null;\n            this._onDidClose.fire();\n        }\n    }\n    open() {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this._window) {\n                throw new Error('instance of popout window is already open');\n            }\n            const url = `${this.options.url}`;\n            const features = Object.entries({\n                top: this.options.top,\n                left: this.options.left,\n                width: this.options.width,\n                height: this.options.height,\n            })\n                .map(([key, value]) => `${key}=${value}`)\n                .join(',');\n            /**\n             * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/open\n             */\n            const externalWindow = window.open(url, this.target, features);\n            if (!externalWindow) {\n                /**\n                 * Popup blocked\n                 */\n                return null;\n            }\n            const disposable = new CompositeDisposable();\n            this._window = { value: externalWindow, disposable };\n            disposable.addDisposables(Disposable.from(() => {\n                externalWindow.close();\n            }), addDisposableWindowListener(window, 'beforeunload', () => {\n                /**\n                 * before the main window closes we should close this popup too\n                 * to be good citizens\n                 *\n                 * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/beforeunload_event\n                 */\n                this.close();\n            }));\n            const container = this.createPopoutWindowContainer();\n            if (this.className) {\n                container.classList.add(this.className);\n            }\n            (_b = (_a = this.options).onDidOpen) === null || _b === void 0 ? void 0 : _b.call(_a, {\n                id: this.target,\n                window: externalWindow,\n            });\n            return new Promise((resolve, reject) => {\n                externalWindow.addEventListener('unload', (e) => {\n                    // if page fails to load before unloading\n                    // this.close();\n                });\n                externalWindow.addEventListener('load', () => {\n                    /**\n                     * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/load_event\n                     */\n                    try {\n                        const externalDocument = externalWindow.document;\n                        externalDocument.title = document.title;\n                        externalDocument.body.appendChild(container);\n                        addStyles(externalDocument, window.document.styleSheets);\n                        /**\n                         * beforeunload must be registered after load for reasons I could not determine\n                         * otherwise the beforeunload event will not fire when the window is closed\n                         */\n                        addDisposableWindowListener(externalWindow, 'beforeunload', () => {\n                            /**\n                             * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/beforeunload_event\n                             */\n                            this.close();\n                        });\n                        resolve(container);\n                    }\n                    catch (err) {\n                        // only except this is the DOM isn't setup. e.g. in a in correctly configured test\n                        reject(err);\n                    }\n                });\n            });\n        });\n    }\n    createPopoutWindowContainer() {\n        const el = document.createElement('div');\n        el.classList.add('dv-popout-window');\n        el.id = 'dv-popout-window';\n        el.style.position = 'absolute';\n        el.style.width = '100%';\n        el.style.height = '100%';\n        el.style.top = '0px';\n        el.style.left = '0px';\n        return el;\n    }\n}\n","import { getRelativeLocation, getGridLocation, orthogonal, } from '../gridview/gridview';\nimport { directionToPosition, Droptarget, } from '../dnd/droptarget';\nimport { tail, sequenceEquals, remove } from '../array';\nimport { DockviewPanel } from './dockviewPanel';\nimport { CompositeDisposable, Disposable } from '../lifecycle';\nimport { Event, Emitter, addDisposableWindowListener } from '../events';\nimport { Watermark } from './components/watermark/watermark';\nimport { sequentialNumberGenerator } from '../math';\nimport { DefaultDockviewDeserialzier } from './deserializer';\nimport { DockviewUnhandledDragOverEvent, isGroupOptionsWithGroup, isGroupOptionsWithPanel, isPanelOptionsWithGroup, isPanelOptionsWithPanel, } from './options';\nimport { BaseGrid, toTarget, } from '../gridview/baseComponentGridview';\nimport { DockviewApi } from '../api/component.api';\nimport { Orientation } from '../splitview/splitview';\nimport { DockviewDidDropEvent, DockviewWillDropEvent, WillShowOverlayLocationEvent, } from './dockviewGroupPanelModel';\nimport { DockviewGroupPanel } from './dockviewGroupPanel';\nimport { DockviewPanelModel } from './dockviewPanelModel';\nimport { getPanelData } from '../dnd/dataTransfer';\nimport { Overlay } from '../overlay/overlay';\nimport { addTestId, getDockviewTheme, toggleClass, watchElementResize, } from '../dom';\nimport { DockviewFloatingGroupPanel } from './dockviewFloatingGroupPanel';\nimport { DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE, DEFAULT_FLOATING_GROUP_POSITION, } from '../constants';\nimport { OverlayRenderContainer, } from '../overlay/overlayRenderContainer';\nimport { PopoutWindow } from '../popoutWindow';\nconst DEFAULT_ROOT_OVERLAY_MODEL = {\n    activationSize: { type: 'pixels', value: 10 },\n    size: { type: 'pixels', value: 20 },\n};\nfunction moveGroupWithoutDestroying(options) {\n    const activePanel = options.from.activePanel;\n    const panels = [...options.from.panels].map((panel) => {\n        const removedPanel = options.from.model.removePanel(panel);\n        options.from.model.renderContainer.detatch(panel);\n        return removedPanel;\n    });\n    panels.forEach((panel) => {\n        options.to.model.openPanel(panel, {\n            skipSetActive: activePanel !== panel,\n            skipSetGroupActive: true,\n        });\n    });\n}\nexport class DockviewComponent extends BaseGrid {\n    get orientation() {\n        return this.gridview.orientation;\n    }\n    get totalPanels() {\n        return this.panels.length;\n    }\n    get panels() {\n        return this.groups.flatMap((group) => group.panels);\n    }\n    get options() {\n        return this._options;\n    }\n    get activePanel() {\n        const activeGroup = this.activeGroup;\n        if (!activeGroup) {\n            return undefined;\n        }\n        return activeGroup.activePanel;\n    }\n    get renderer() {\n        var _a;\n        return (_a = this.options.defaultRenderer) !== null && _a !== void 0 ? _a : 'onlyWhenVisible';\n    }\n    get api() {\n        return this._api;\n    }\n    get gap() {\n        return this.gridview.margin;\n    }\n    get floatingGroups() {\n        return this._floatingGroups;\n    }\n    constructor(parentElement, options) {\n        var _a;\n        super(parentElement, {\n            proportionalLayout: true,\n            orientation: Orientation.HORIZONTAL,\n            styles: options.hideBorders\n                ? { separatorBorder: 'transparent' }\n                : undefined,\n            disableAutoResizing: options.disableAutoResizing,\n            locked: options.locked,\n            margin: options.gap,\n            className: options.className,\n        });\n        this.nextGroupId = sequentialNumberGenerator();\n        this._deserializer = new DefaultDockviewDeserialzier(this);\n        this.watermark = null;\n        this._onWillDragPanel = new Emitter();\n        this.onWillDragPanel = this._onWillDragPanel.event;\n        this._onWillDragGroup = new Emitter();\n        this.onWillDragGroup = this._onWillDragGroup.event;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onWillDrop = new Emitter();\n        this.onWillDrop = this._onWillDrop.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        this._onUnhandledDragOverEvent = new Emitter();\n        this.onUnhandledDragOverEvent = this._onUnhandledDragOverEvent.event;\n        this._onDidRemovePanel = new Emitter();\n        this.onDidRemovePanel = this._onDidRemovePanel.event;\n        this._onDidAddPanel = new Emitter();\n        this.onDidAddPanel = this._onDidAddPanel.event;\n        this._onDidLayoutFromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutFromJSON.event;\n        this._onDidActivePanelChange = new Emitter();\n        this.onDidActivePanelChange = this._onDidActivePanelChange.event;\n        this._onDidMovePanel = new Emitter();\n        this.onDidMovePanel = this._onDidMovePanel.event;\n        this._onDidMaximizedGroupChange = new Emitter();\n        this.onDidMaximizedGroupChange = this._onDidMaximizedGroupChange.event;\n        this._floatingGroups = [];\n        this._popoutGroups = [];\n        this._onDidRemoveGroup = new Emitter();\n        this.onDidRemoveGroup = this._onDidRemoveGroup.event;\n        this._onDidAddGroup = new Emitter();\n        this.onDidAddGroup = this._onDidAddGroup.event;\n        this._onDidActiveGroupChange = new Emitter();\n        this.onDidActiveGroupChange = this._onDidActiveGroupChange.event;\n        this._moving = false;\n        this.overlayRenderContainer = new OverlayRenderContainer(this.gridview.element, this);\n        toggleClass(this.gridview.element, 'dv-dockview', true);\n        toggleClass(this.element, 'dv-debug', !!options.debug);\n        this.addDisposables(this.overlayRenderContainer, this._onWillDragPanel, this._onWillDragGroup, this._onWillShowOverlay, this._onDidActivePanelChange, this._onDidAddPanel, this._onDidRemovePanel, this._onDidLayoutFromJSON, this._onDidDrop, this._onWillDrop, this._onDidMovePanel, this._onDidAddGroup, this._onDidRemoveGroup, this._onDidActiveGroupChange, this._onUnhandledDragOverEvent, this.onDidViewVisibilityChangeMicroTaskQueue(() => {\n            this.updateWatermark();\n        }), this.onDidAdd((event) => {\n            if (!this._moving) {\n                this._onDidAddGroup.fire(event);\n            }\n        }), this.onDidRemove((event) => {\n            if (!this._moving) {\n                this._onDidRemoveGroup.fire(event);\n            }\n        }), this.onDidActiveChange((event) => {\n            if (!this._moving) {\n                this._onDidActiveGroupChange.fire(event);\n            }\n        }), this.onDidMaximizedChange((event) => {\n            this._onDidMaximizedGroupChange.fire({\n                group: event.panel,\n                isMaximized: event.isMaximized,\n            });\n        }), Event.any(this.onDidAdd, this.onDidRemove)(() => {\n            this.updateWatermark();\n        }), Event.any(this.onDidAddPanel, this.onDidRemovePanel, this.onDidAddGroup, this.onDidRemove, this.onDidMovePanel, this.onDidActivePanelChange)(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), Disposable.from(() => {\n            // iterate over a copy of the array since .dispose() mutates the original array\n            for (const group of [...this._floatingGroups]) {\n                group.dispose();\n            }\n            // iterate over a copy of the array since .dispose() mutates the original array\n            for (const group of [...this._popoutGroups]) {\n                group.disposable.dispose();\n            }\n        }));\n        this._options = options;\n        this._rootDropTarget = new Droptarget(this.element, {\n            canDisplayOverlay: (event, position) => {\n                const data = getPanelData();\n                if (data) {\n                    if (data.viewId !== this.id) {\n                        return false;\n                    }\n                    if (position === 'center') {\n                        // center drop target is only allowed if there are no panels in the grid\n                        // floating panels are allowed\n                        return this.gridview.length === 0;\n                    }\n                    return true;\n                }\n                if (position === 'center' && this.gridview.length !== 0) {\n                    /**\n                     * for external events only show the four-corner drag overlays, disable\n                     * the center position so that external drag events can fall through to the group\n                     * and panel drop target handlers\n                     */\n                    return false;\n                }\n                const firedEvent = new DockviewUnhandledDragOverEvent(event, 'edge', position, getPanelData);\n                this._onUnhandledDragOverEvent.fire(firedEvent);\n                return firedEvent.isAccepted;\n            },\n            acceptedTargetZones: ['top', 'bottom', 'left', 'right', 'center'],\n            overlayModel: (_a = this.options.rootOverlayModel) !== null && _a !== void 0 ? _a : DEFAULT_ROOT_OVERLAY_MODEL,\n        });\n        this.addDisposables(this._rootDropTarget, this._rootDropTarget.onWillShowOverlay((event) => {\n            if (this.gridview.length > 0 && event.position === 'center') {\n                // option only available when no panels in primary grid\n                return;\n            }\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'edge',\n                panel: undefined,\n                api: this._api,\n                group: undefined,\n                getData: getPanelData,\n            }));\n        }), this._rootDropTarget.onDrop((event) => {\n            var _a;\n            const willDropEvent = new DockviewWillDropEvent({\n                nativeEvent: event.nativeEvent,\n                position: event.position,\n                panel: undefined,\n                api: this._api,\n                group: undefined,\n                getData: getPanelData,\n                kind: 'edge',\n            });\n            this._onWillDrop.fire(willDropEvent);\n            if (willDropEvent.defaultPrevented) {\n                return;\n            }\n            const data = getPanelData();\n            if (data) {\n                this.moveGroupOrPanel({\n                    from: {\n                        groupId: data.groupId,\n                        panelId: (_a = data.panelId) !== null && _a !== void 0 ? _a : undefined,\n                    },\n                    to: {\n                        group: this.orthogonalize(event.position),\n                        position: 'center',\n                    },\n                });\n            }\n            else {\n                this._onDidDrop.fire(new DockviewDidDropEvent({\n                    nativeEvent: event.nativeEvent,\n                    position: event.position,\n                    panel: undefined,\n                    api: this._api,\n                    group: undefined,\n                    getData: getPanelData,\n                }));\n            }\n        }), this._rootDropTarget);\n        this._api = new DockviewApi(this);\n        this.updateWatermark();\n    }\n    setVisible(panel, visible) {\n        switch (panel.api.location.type) {\n            case 'grid':\n                super.setVisible(panel, visible);\n                break;\n            case 'floating': {\n                const item = this.floatingGroups.find((floatingGroup) => floatingGroup.group === panel);\n                if (item) {\n                    item.overlay.setVisible(visible);\n                    panel.api._onDidVisibilityChange.fire({\n                        isVisible: visible,\n                    });\n                }\n                break;\n            }\n            case 'popout':\n                console.warn('dockview: You cannot hide a group that is in a popout window');\n                break;\n        }\n    }\n    addPopoutGroup(itemToPopout, options) {\n        var _a, _b, _c, _d, _e;\n        if (itemToPopout instanceof DockviewPanel &&\n            itemToPopout.group.size === 1) {\n            return this.addPopoutGroup(itemToPopout.group, options);\n        }\n        const theme = getDockviewTheme(this.gridview.element);\n        const element = this.element;\n        function getBox() {\n            if (options === null || options === void 0 ? void 0 : options.position) {\n                return options.position;\n            }\n            if (itemToPopout instanceof DockviewGroupPanel) {\n                return itemToPopout.element.getBoundingClientRect();\n            }\n            if (itemToPopout.group) {\n                return itemToPopout.group.element.getBoundingClientRect();\n            }\n            return element.getBoundingClientRect();\n        }\n        const box = getBox();\n        const groupId = (_b = (_a = options === null || options === void 0 ? void 0 : options.overridePopoutGroup) === null || _a === void 0 ? void 0 : _a.id) !== null && _b !== void 0 ? _b : this.getNextGroupId();\n        const _window = new PopoutWindow(`${this.id}-${groupId}`, // unique id\n        theme !== null && theme !== void 0 ? theme : '', {\n            url: (_e = (_c = options === null || options === void 0 ? void 0 : options.popoutUrl) !== null && _c !== void 0 ? _c : (_d = this.options) === null || _d === void 0 ? void 0 : _d.popoutUrl) !== null && _e !== void 0 ? _e : '/popout.html',\n            left: window.screenX + box.left,\n            top: window.screenY + box.top,\n            width: box.width,\n            height: box.height,\n            onDidOpen: options === null || options === void 0 ? void 0 : options.onDidOpen,\n            onWillClose: options === null || options === void 0 ? void 0 : options.onWillClose,\n        });\n        const popoutWindowDisposable = new CompositeDisposable(_window, _window.onDidClose(() => {\n            popoutWindowDisposable.dispose();\n        }));\n        return _window\n            .open()\n            .then((popoutContainer) => {\n            if (_window.isDisposed) {\n                return false;\n            }\n            if (popoutContainer === null) {\n                popoutWindowDisposable.dispose();\n                return false;\n            }\n            const gready = document.createElement('div');\n            gready.className = 'dv-overlay-render-container';\n            const overlayRenderContainer = new OverlayRenderContainer(gready, this);\n            const referenceGroup = itemToPopout instanceof DockviewPanel\n                ? itemToPopout.group\n                : itemToPopout;\n            const referenceLocation = itemToPopout.api.location.type;\n            /**\n             * The group that is being added doesn't already exist within the DOM, the most likely occurance\n             * of this case is when being called from the `fromJSON(...)` method\n             */\n            const isGroupAddedToDom = referenceGroup.element.parentElement !== null;\n            let group;\n            if (!isGroupAddedToDom) {\n                group = referenceGroup;\n            }\n            else if (options === null || options === void 0 ? void 0 : options.overridePopoutGroup) {\n                group = options.overridePopoutGroup;\n            }\n            else {\n                group = this.createGroup({ id: groupId });\n                this._onDidAddGroup.fire(group);\n            }\n            group.model.renderContainer = overlayRenderContainer;\n            group.layout(_window.window.innerWidth, _window.window.innerHeight);\n            if (!(options === null || options === void 0 ? void 0 : options.overridePopoutGroup) && isGroupAddedToDom) {\n                if (itemToPopout instanceof DockviewPanel) {\n                    this.movingLock(() => {\n                        const panel = referenceGroup.model.removePanel(itemToPopout);\n                        group.model.openPanel(panel);\n                    });\n                }\n                else {\n                    this.movingLock(() => moveGroupWithoutDestroying({\n                        from: referenceGroup,\n                        to: group,\n                    }));\n                    switch (referenceLocation) {\n                        case 'grid':\n                            referenceGroup.api.setVisible(false);\n                            break;\n                        case 'floating':\n                        case 'popout':\n                            this.removeGroup(referenceGroup);\n                            break;\n                    }\n                }\n            }\n            popoutContainer.classList.add('dv-dockview');\n            popoutContainer.style.overflow = 'hidden';\n            popoutContainer.appendChild(gready);\n            popoutContainer.appendChild(group.element);\n            group.model.location = {\n                type: 'popout',\n                getWindow: () => _window.window,\n                popoutUrl: options === null || options === void 0 ? void 0 : options.popoutUrl,\n            };\n            if (isGroupAddedToDom &&\n                itemToPopout.api.location.type === 'grid') {\n                itemToPopout.api.setVisible(false);\n            }\n            this.doSetGroupAndPanelActive(group);\n            popoutWindowDisposable.addDisposables(group.api.onDidActiveChange((event) => {\n                var _a;\n                if (event.isActive) {\n                    (_a = _window.window) === null || _a === void 0 ? void 0 : _a.focus();\n                }\n            }), group.api.onWillFocus(() => {\n                var _a;\n                (_a = _window.window) === null || _a === void 0 ? void 0 : _a.focus();\n            }));\n            let returnedGroup;\n            const isValidReferenceGroup = isGroupAddedToDom &&\n                referenceGroup &&\n                this.getPanel(referenceGroup.id);\n            const value = {\n                window: _window,\n                popoutGroup: group,\n                referenceGroup: isValidReferenceGroup\n                    ? referenceGroup.id\n                    : undefined,\n                disposable: {\n                    dispose: () => {\n                        popoutWindowDisposable.dispose();\n                        return returnedGroup;\n                    },\n                },\n            };\n            popoutWindowDisposable.addDisposables(\n            /**\n             * ResizeObserver seems slow here, I do not know why but we don't need it\n             * since we can reply on the window resize event as we will occupy the full\n             * window dimensions\n             */\n            addDisposableWindowListener(_window.window, 'resize', () => {\n                group.layout(_window.window.innerWidth, _window.window.innerHeight);\n            }), overlayRenderContainer, Disposable.from(() => {\n                if (isGroupAddedToDom &&\n                    this.getPanel(referenceGroup.id)) {\n                    this.movingLock(() => moveGroupWithoutDestroying({\n                        from: group,\n                        to: referenceGroup,\n                    }));\n                    if (!referenceGroup.api.isVisible) {\n                        referenceGroup.api.setVisible(true);\n                    }\n                    if (this.getPanel(group.id)) {\n                        this.doRemoveGroup(group, {\n                            skipPopoutAssociated: true,\n                        });\n                    }\n                }\n                else if (this.getPanel(group.id)) {\n                    this.doRemoveGroup(group, {\n                        skipDispose: true,\n                        skipActive: true,\n                        skipPopoutReturn: true,\n                    });\n                    const removedGroup = group;\n                    removedGroup.model.renderContainer =\n                        this.overlayRenderContainer;\n                    removedGroup.model.location = { type: 'grid' };\n                    returnedGroup = removedGroup;\n                    this.doAddGroup(removedGroup, [0]);\n                    this.doSetGroupAndPanelActive(removedGroup);\n                }\n            }));\n            this._popoutGroups.push(value);\n            this.updateWatermark();\n            return true;\n        })\n            .catch((err) => {\n            console.error('dockview: failed to create popout window', err);\n            return false;\n        });\n    }\n    addFloatingGroup(item, options) {\n        var _a, _b, _c, _d, _e;\n        let group;\n        if (item instanceof DockviewPanel) {\n            group = this.createGroup();\n            this._onDidAddGroup.fire(group);\n            this.movingLock(() => this.removePanel(item, {\n                removeEmptyGroup: true,\n                skipDispose: true,\n                skipSetActiveGroup: true,\n            }));\n            this.movingLock(() => group.model.openPanel(item, { skipSetGroupActive: true }));\n        }\n        else {\n            group = item;\n            const popoutReferenceGroupId = (_a = this._popoutGroups.find((_) => _.popoutGroup === group)) === null || _a === void 0 ? void 0 : _a.referenceGroup;\n            const popoutReferenceGroup = popoutReferenceGroupId\n                ? this.getPanel(popoutReferenceGroupId)\n                : undefined;\n            const skip = typeof (options === null || options === void 0 ? void 0 : options.skipRemoveGroup) === 'boolean' &&\n                options.skipRemoveGroup;\n            if (!skip) {\n                if (popoutReferenceGroup) {\n                    this.movingLock(() => moveGroupWithoutDestroying({\n                        from: item,\n                        to: popoutReferenceGroup,\n                    }));\n                    this.doRemoveGroup(item, {\n                        skipPopoutReturn: true,\n                        skipPopoutAssociated: true,\n                    });\n                    this.doRemoveGroup(popoutReferenceGroup, {\n                        skipDispose: true,\n                    });\n                    group = popoutReferenceGroup;\n                }\n                else {\n                    this.doRemoveGroup(item, {\n                        skipDispose: true,\n                        skipPopoutReturn: true,\n                        skipPopoutAssociated: false,\n                    });\n                }\n            }\n        }\n        function getAnchoredBox() {\n            if (options === null || options === void 0 ? void 0 : options.position) {\n                const result = {};\n                if ('left' in options.position) {\n                    result.left = Math.max(options.position.left, 0);\n                }\n                else if ('right' in options.position) {\n                    result.right = Math.max(options.position.right, 0);\n                }\n                else {\n                    result.left = DEFAULT_FLOATING_GROUP_POSITION.left;\n                }\n                if ('top' in options.position) {\n                    result.top = Math.max(options.position.top, 0);\n                }\n                else if ('bottom' in options.position) {\n                    result.bottom = Math.max(options.position.bottom, 0);\n                }\n                else {\n                    result.top = DEFAULT_FLOATING_GROUP_POSITION.top;\n                }\n                if (typeof options.width === 'number') {\n                    result.width = Math.max(options.width, 0);\n                }\n                else {\n                    result.width = DEFAULT_FLOATING_GROUP_POSITION.width;\n                }\n                if (typeof options.height === 'number') {\n                    result.height = Math.max(options.height, 0);\n                }\n                else {\n                    result.height = DEFAULT_FLOATING_GROUP_POSITION.height;\n                }\n                return result;\n            }\n            return {\n                left: typeof (options === null || options === void 0 ? void 0 : options.x) === 'number'\n                    ? Math.max(options.x, 0)\n                    : DEFAULT_FLOATING_GROUP_POSITION.left,\n                top: typeof (options === null || options === void 0 ? void 0 : options.y) === 'number'\n                    ? Math.max(options.y, 0)\n                    : DEFAULT_FLOATING_GROUP_POSITION.top,\n                width: typeof (options === null || options === void 0 ? void 0 : options.width) === 'number'\n                    ? Math.max(options.width, 0)\n                    : DEFAULT_FLOATING_GROUP_POSITION.width,\n                height: typeof (options === null || options === void 0 ? void 0 : options.height) === 'number'\n                    ? Math.max(options.height, 0)\n                    : DEFAULT_FLOATING_GROUP_POSITION.height,\n            };\n        }\n        const anchoredBox = getAnchoredBox();\n        const overlay = new Overlay(Object.assign(Object.assign({ container: this.gridview.element, content: group.element }, anchoredBox), { minimumInViewportWidth: this.options.floatingGroupBounds === 'boundedWithinViewport'\n                ? undefined\n                : (_c = (_b = this.options.floatingGroupBounds) === null || _b === void 0 ? void 0 : _b.minimumWidthWithinViewport) !== null && _c !== void 0 ? _c : DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE, minimumInViewportHeight: this.options.floatingGroupBounds === 'boundedWithinViewport'\n                ? undefined\n                : (_e = (_d = this.options.floatingGroupBounds) === null || _d === void 0 ? void 0 : _d.minimumHeightWithinViewport) !== null && _e !== void 0 ? _e : DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE }));\n        const el = group.element.querySelector('.dv-void-container');\n        if (!el) {\n            throw new Error('failed to find drag handle');\n        }\n        overlay.setupDrag(el, {\n            inDragMode: typeof (options === null || options === void 0 ? void 0 : options.inDragMode) === 'boolean'\n                ? options.inDragMode\n                : false,\n        });\n        const floatingGroupPanel = new DockviewFloatingGroupPanel(group, overlay);\n        const disposable = new CompositeDisposable(group.api.onDidActiveChange((event) => {\n            if (event.isActive) {\n                overlay.bringToFront();\n            }\n        }), watchElementResize(group.element, (entry) => {\n            const { width, height } = entry.contentRect;\n            group.layout(width, height); // let the group know it's size is changing so it can fire events to the panel\n        }));\n        floatingGroupPanel.addDisposables(overlay.onDidChange(() => {\n            // this is either a resize or a move\n            // to inform the panels .layout(...) the group with it's current size\n            // don't care about resize since the above watcher handles that\n            group.layout(group.width, group.height);\n        }), overlay.onDidChangeEnd(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), group.onDidChange((event) => {\n            overlay.setBounds({\n                height: event === null || event === void 0 ? void 0 : event.height,\n                width: event === null || event === void 0 ? void 0 : event.width,\n            });\n        }), {\n            dispose: () => {\n                disposable.dispose();\n                remove(this._floatingGroups, floatingGroupPanel);\n                group.model.location = { type: 'grid' };\n                this.updateWatermark();\n            },\n        });\n        this._floatingGroups.push(floatingGroupPanel);\n        group.model.location = { type: 'floating' };\n        if (!(options === null || options === void 0 ? void 0 : options.skipActiveGroup)) {\n            this.doSetGroupAndPanelActive(group);\n        }\n        this.updateWatermark();\n    }\n    orthogonalize(position) {\n        switch (position) {\n            case 'top':\n            case 'bottom':\n                if (this.gridview.orientation === Orientation.HORIZONTAL) {\n                    // we need to add to a vertical splitview but the current root is a horizontal splitview.\n                    // insert a vertical splitview at the root level and add the existing view as a child\n                    this.gridview.insertOrthogonalSplitviewAtRoot();\n                }\n                break;\n            case 'left':\n            case 'right':\n                if (this.gridview.orientation === Orientation.VERTICAL) {\n                    // we need to add to a horizontal splitview but the current root is a vertical splitview.\n                    // insert a horiziontal splitview at the root level and add the existing view as a child\n                    this.gridview.insertOrthogonalSplitviewAtRoot();\n                }\n                break;\n            default:\n                break;\n        }\n        switch (position) {\n            case 'top':\n            case 'left':\n            case 'center':\n                return this.createGroupAtLocation([0]); // insert into first position\n            case 'bottom':\n            case 'right':\n                return this.createGroupAtLocation([this.gridview.length]); // insert into last position\n            default:\n                throw new Error(`unsupported position ${position}`);\n        }\n    }\n    updateOptions(options) {\n        var _a, _b, _c, _d;\n        super.updateOptions(options);\n        if ('floatingGroupBounds' in options) {\n            for (const group of this._floatingGroups) {\n                switch (options.floatingGroupBounds) {\n                    case 'boundedWithinViewport':\n                        group.overlay.minimumInViewportHeight = undefined;\n                        group.overlay.minimumInViewportWidth = undefined;\n                        break;\n                    case undefined:\n                        group.overlay.minimumInViewportHeight =\n                            DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE;\n                        group.overlay.minimumInViewportWidth =\n                            DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE;\n                        break;\n                    default:\n                        group.overlay.minimumInViewportHeight =\n                            (_a = options.floatingGroupBounds) === null || _a === void 0 ? void 0 : _a.minimumHeightWithinViewport;\n                        group.overlay.minimumInViewportWidth =\n                            (_b = options.floatingGroupBounds) === null || _b === void 0 ? void 0 : _b.minimumWidthWithinViewport;\n                }\n                group.overlay.setBounds();\n            }\n        }\n        if ('rootOverlayModel' in options) {\n            this._rootDropTarget.setOverlayModel((_c = options.rootOverlayModel) !== null && _c !== void 0 ? _c : DEFAULT_ROOT_OVERLAY_MODEL);\n        }\n        if ('gap' in options) {\n            this.gridview.margin = (_d = options.gap) !== null && _d !== void 0 ? _d : 0;\n        }\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        this.layout(this.gridview.width, this.gridview.height, true);\n    }\n    layout(width, height, forceResize) {\n        super.layout(width, height, forceResize);\n        if (this._floatingGroups) {\n            for (const floating of this._floatingGroups) {\n                // ensure floting groups stay within visible boundaries\n                floating.overlay.setBounds();\n            }\n        }\n    }\n    focus() {\n        var _a;\n        (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    getGroupPanel(id) {\n        return this.panels.find((panel) => panel.id === id);\n    }\n    setActivePanel(panel) {\n        panel.group.model.openPanel(panel);\n        this.doSetGroupAndPanelActive(panel.group);\n    }\n    moveToNext(options = {}) {\n        var _a;\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        if (options.includePanel && options.group) {\n            if (options.group.activePanel !==\n                options.group.panels[options.group.panels.length - 1]) {\n                options.group.model.moveToNext({ suppressRoll: true });\n                return;\n            }\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.next(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupAndPanelActive(next);\n    }\n    moveToPrevious(options = {}) {\n        var _a;\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        if (options.includePanel && options.group) {\n            if (options.group.activePanel !== options.group.panels[0]) {\n                options.group.model.moveToPrevious({ suppressRoll: true });\n                return;\n            }\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.previous(location)) === null || _a === void 0 ? void 0 : _a.view;\n        if (next) {\n            this.doSetGroupAndPanelActive(next);\n        }\n    }\n    /**\n     * Serialize the current state of the layout\n     *\n     * @returns A JSON respresentation of the layout\n     */\n    toJSON() {\n        var _a;\n        const data = this.gridview.serialize();\n        const panels = this.panels.reduce((collection, panel) => {\n            collection[panel.id] = panel.toJSON();\n            return collection;\n        }, {});\n        const floats = this._floatingGroups.map((group) => {\n            return {\n                data: group.group.toJSON(),\n                position: group.overlay.toJSON(),\n            };\n        });\n        const popoutGroups = this._popoutGroups.map((group) => {\n            return {\n                data: group.popoutGroup.toJSON(),\n                gridReferenceGroup: group.referenceGroup,\n                position: group.window.dimensions(),\n                url: group.popoutGroup.api.location.type === 'popout'\n                    ? group.popoutGroup.api.location.popoutUrl\n                    : undefined,\n            };\n        });\n        const result = {\n            grid: data,\n            panels,\n            activeGroup: (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.id,\n        };\n        if (floats.length > 0) {\n            result.floatingGroups = floats;\n        }\n        if (popoutGroups.length > 0) {\n            result.popoutGroups = popoutGroups;\n        }\n        return result;\n    }\n    fromJSON(data) {\n        var _a, _b, _c;\n        this.clear();\n        if (typeof data !== 'object' || data === null) {\n            throw new Error('serialized layout must be a non-null object');\n        }\n        const { grid, panels, activeGroup } = data;\n        if (grid.root.type !== 'branch' || !Array.isArray(grid.root.data)) {\n            throw new Error('root must be of type branch');\n        }\n        try {\n            // take note of the existing dimensions\n            const width = this.width;\n            const height = this.height;\n            const createGroupFromSerializedState = (data) => {\n                const { id, locked, hideHeader, views, activeView } = data;\n                if (typeof id !== 'string') {\n                    throw new Error('group id must be of type string');\n                }\n                const group = this.createGroup({\n                    id,\n                    locked: !!locked,\n                    hideHeader: !!hideHeader,\n                });\n                const createdPanels = [];\n                for (const child of views) {\n                    /**\n                     * Run the deserializer step seperately since this may fail to due corrupted external state.\n                     * In running this section first we avoid firing lots of 'add' events in the event of a failure\n                     * due to a corruption of input data.\n                     */\n                    const panel = this._deserializer.fromJSON(panels[child], group);\n                    createdPanels.push(panel);\n                }\n                this._onDidAddGroup.fire(group);\n                for (let i = 0; i < views.length; i++) {\n                    const panel = createdPanels[i];\n                    const isActive = typeof activeView === 'string' &&\n                        activeView === panel.id;\n                    group.model.openPanel(panel, {\n                        skipSetActive: !isActive,\n                        skipSetGroupActive: true,\n                    });\n                }\n                if (!group.activePanel && group.panels.length > 0) {\n                    group.model.openPanel(group.panels[group.panels.length - 1], {\n                        skipSetGroupActive: true,\n                    });\n                }\n                return group;\n            };\n            this.gridview.deserialize(grid, {\n                fromJSON: (node) => {\n                    return createGroupFromSerializedState(node.data);\n                },\n            });\n            this.layout(width, height, true);\n            const serializedFloatingGroups = (_a = data.floatingGroups) !== null && _a !== void 0 ? _a : [];\n            for (const serializedFloatingGroup of serializedFloatingGroups) {\n                const { data, position } = serializedFloatingGroup;\n                const group = createGroupFromSerializedState(data);\n                this.addFloatingGroup(group, {\n                    position: position,\n                    width: position.width,\n                    height: position.height,\n                    skipRemoveGroup: true,\n                    inDragMode: false,\n                });\n            }\n            const serializedPopoutGroups = (_b = data.popoutGroups) !== null && _b !== void 0 ? _b : [];\n            for (const serializedPopoutGroup of serializedPopoutGroups) {\n                const { data, position, gridReferenceGroup, url } = serializedPopoutGroup;\n                const group = createGroupFromSerializedState(data);\n                this.addPopoutGroup((_c = (gridReferenceGroup\n                    ? this.getPanel(gridReferenceGroup)\n                    : undefined)) !== null && _c !== void 0 ? _c : group, {\n                    position: position !== null && position !== void 0 ? position : undefined,\n                    overridePopoutGroup: gridReferenceGroup\n                        ? group\n                        : undefined,\n                    popoutUrl: url,\n                });\n            }\n            for (const floatingGroup of this._floatingGroups) {\n                floatingGroup.overlay.setBounds();\n            }\n            if (typeof activeGroup === 'string') {\n                const panel = this.getPanel(activeGroup);\n                if (panel) {\n                    this.doSetGroupAndPanelActive(panel);\n                }\n            }\n        }\n        catch (err) {\n            console.error('dockview: failed to deserialize layout. Reverting changes', err);\n            /**\n             * Takes all the successfully created groups and remove all of their panels.\n             */\n            for (const group of this.groups) {\n                for (const panel of group.panels) {\n                    this.removePanel(panel, {\n                        removeEmptyGroup: false,\n                        skipDispose: false,\n                    });\n                }\n            }\n            /**\n             * To remove a group we cannot call this.removeGroup(...) since this makes assumptions about\n             * the underlying HTMLElement existing in the Gridview.\n             */\n            for (const group of this.groups) {\n                group.dispose();\n                this._groups.delete(group.id);\n                this._onDidRemoveGroup.fire(group);\n            }\n            // iterate over a reassigned array since original array will be modified\n            for (const floatingGroup of [...this._floatingGroups]) {\n                floatingGroup.dispose();\n            }\n            // fires clean-up events and clears the underlying HTML gridview.\n            this.clear();\n            /**\n             * even though we have cleaned-up we still want to inform the caller of their error\n             * and we'll do this through re-throwing the original error since afterall you would\n             * expect trying to load a corrupted layout to result in an error and not silently fail...\n             */\n            throw err;\n        }\n        this.updateWatermark();\n        this._onDidLayoutFromJSON.fire();\n    }\n    clear() {\n        const groups = Array.from(this._groups.values()).map((_) => _.value);\n        const hasActiveGroup = !!this.activeGroup;\n        for (const group of groups) {\n            // remove the group will automatically remove the panels\n            this.removeGroup(group, { skipActive: true });\n        }\n        if (hasActiveGroup) {\n            this.doSetGroupAndPanelActive(undefined);\n        }\n        this.gridview.clear();\n    }\n    closeAllGroups() {\n        for (const entry of this._groups.entries()) {\n            const [_, group] = entry;\n            group.value.model.closeAllPanels();\n        }\n    }\n    addPanel(options) {\n        var _a, _b;\n        if (this.panels.find((_) => _.id === options.id)) {\n            throw new Error(`panel with id ${options.id} already exists`);\n        }\n        let referenceGroup;\n        if (options.position && options.floating) {\n            throw new Error('you can only provide one of: position, floating as arguments to .addPanel(...)');\n        }\n        const initial = {\n            width: options.initialWidth,\n            height: options.initialHeight,\n        };\n        let index;\n        if (options.position) {\n            if (isPanelOptionsWithPanel(options.position)) {\n                const referencePanel = typeof options.position.referencePanel === 'string'\n                    ? this.getGroupPanel(options.position.referencePanel)\n                    : options.position.referencePanel;\n                index = options.position.index;\n                if (!referencePanel) {\n                    throw new Error(`referencePanel '${options.position.referencePanel}' does not exist`);\n                }\n                referenceGroup = this.findGroup(referencePanel);\n            }\n            else if (isPanelOptionsWithGroup(options.position)) {\n                referenceGroup =\n                    typeof options.position.referenceGroup === 'string'\n                        ? (_a = this._groups.get(options.position.referenceGroup)) === null || _a === void 0 ? void 0 : _a.value\n                        : options.position.referenceGroup;\n                index = options.position.index;\n                if (!referenceGroup) {\n                    throw new Error(`referenceGroup '${options.position.referenceGroup}' does not exist`);\n                }\n            }\n            else {\n                const group = this.orthogonalize(directionToPosition(options.position.direction));\n                const panel = this.createPanel(options, group);\n                group.model.openPanel(panel, {\n                    skipSetActive: options.inactive,\n                    skipSetGroupActive: options.inactive,\n                    index,\n                });\n                if (!options.inactive) {\n                    this.doSetGroupAndPanelActive(group);\n                }\n                group.api.setSize({\n                    height: initial === null || initial === void 0 ? void 0 : initial.height,\n                    width: initial === null || initial === void 0 ? void 0 : initial.width,\n                });\n                return panel;\n            }\n        }\n        else {\n            referenceGroup = this.activeGroup;\n        }\n        let panel;\n        if (referenceGroup) {\n            const target = toTarget(((_b = options.position) === null || _b === void 0 ? void 0 : _b.direction) || 'within');\n            if (options.floating) {\n                const group = this.createGroup();\n                this._onDidAddGroup.fire(group);\n                const floatingGroupOptions = typeof options.floating === 'object' &&\n                    options.floating !== null\n                    ? options.floating\n                    : {};\n                this.addFloatingGroup(group, Object.assign(Object.assign({}, floatingGroupOptions), { inDragMode: false, skipRemoveGroup: true, skipActiveGroup: true }));\n                panel = this.createPanel(options, group);\n                group.model.openPanel(panel, {\n                    skipSetActive: options.inactive,\n                    skipSetGroupActive: options.inactive,\n                    index,\n                });\n            }\n            else if (referenceGroup.api.location.type === 'floating' ||\n                target === 'center') {\n                panel = this.createPanel(options, referenceGroup);\n                referenceGroup.model.openPanel(panel, {\n                    skipSetActive: options.inactive,\n                    skipSetGroupActive: options.inactive,\n                    index,\n                });\n                referenceGroup.api.setSize({\n                    width: initial === null || initial === void 0 ? void 0 : initial.width,\n                    height: initial === null || initial === void 0 ? void 0 : initial.height,\n                });\n                if (!options.inactive) {\n                    this.doSetGroupAndPanelActive(referenceGroup);\n                }\n            }\n            else {\n                const location = getGridLocation(referenceGroup.element);\n                const relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n                const group = this.createGroupAtLocation(relativeLocation, this.orientationAtLocation(relativeLocation) ===\n                    Orientation.VERTICAL\n                    ? initial === null || initial === void 0 ? void 0 : initial.height\n                    : initial === null || initial === void 0 ? void 0 : initial.width);\n                panel = this.createPanel(options, group);\n                group.model.openPanel(panel, {\n                    skipSetActive: options.inactive,\n                    skipSetGroupActive: options.inactive,\n                    index,\n                });\n                if (!options.inactive) {\n                    this.doSetGroupAndPanelActive(group);\n                }\n            }\n        }\n        else if (options.floating) {\n            const group = this.createGroup();\n            this._onDidAddGroup.fire(group);\n            const coordinates = typeof options.floating === 'object' &&\n                options.floating !== null\n                ? options.floating\n                : {};\n            this.addFloatingGroup(group, Object.assign(Object.assign({}, coordinates), { inDragMode: false, skipRemoveGroup: true, skipActiveGroup: true }));\n            panel = this.createPanel(options, group);\n            group.model.openPanel(panel, {\n                skipSetActive: options.inactive,\n                skipSetGroupActive: options.inactive,\n                index,\n            });\n        }\n        else {\n            const group = this.createGroupAtLocation([0], this.gridview.orientation === Orientation.VERTICAL\n                ? initial === null || initial === void 0 ? void 0 : initial.height\n                : initial === null || initial === void 0 ? void 0 : initial.width);\n            panel = this.createPanel(options, group);\n            group.model.openPanel(panel, {\n                skipSetActive: options.inactive,\n                skipSetGroupActive: options.inactive,\n                index,\n            });\n            if (!options.inactive) {\n                this.doSetGroupAndPanelActive(group);\n            }\n        }\n        return panel;\n    }\n    removePanel(panel, options = {\n        removeEmptyGroup: true,\n    }) {\n        const group = panel.group;\n        if (!group) {\n            throw new Error(`cannot remove panel ${panel.id}. it's missing a group.`);\n        }\n        group.model.removePanel(panel, {\n            skipSetActiveGroup: options.skipSetActiveGroup,\n        });\n        if (!options.skipDispose) {\n            panel.group.model.renderContainer.detatch(panel);\n            panel.dispose();\n        }\n        if (group.size === 0 && options.removeEmptyGroup) {\n            this.removeGroup(group, { skipActive: options.skipSetActiveGroup });\n        }\n    }\n    createWatermarkComponent() {\n        if (this.options.createWatermarkComponent) {\n            return this.options.createWatermarkComponent();\n        }\n        return new Watermark();\n    }\n    updateWatermark() {\n        var _a, _b;\n        if (this.groups.filter((x) => x.api.location.type === 'grid' && x.api.isVisible).length === 0) {\n            if (!this.watermark) {\n                this.watermark = this.createWatermarkComponent();\n                this.watermark.init({\n                    containerApi: new DockviewApi(this),\n                });\n                const watermarkContainer = document.createElement('div');\n                watermarkContainer.className = 'dv-watermark-container';\n                addTestId(watermarkContainer, 'watermark-component');\n                watermarkContainer.appendChild(this.watermark.element);\n                this.gridview.element.appendChild(watermarkContainer);\n            }\n        }\n        else if (this.watermark) {\n            this.watermark.element.parentElement.remove();\n            (_b = (_a = this.watermark).dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n            this.watermark = null;\n        }\n    }\n    addGroup(options) {\n        var _a;\n        if (options) {\n            let referenceGroup;\n            if (isGroupOptionsWithPanel(options)) {\n                const referencePanel = typeof options.referencePanel === 'string'\n                    ? this.panels.find((panel) => panel.id === options.referencePanel)\n                    : options.referencePanel;\n                if (!referencePanel) {\n                    throw new Error(`reference panel ${options.referencePanel} does not exist`);\n                }\n                referenceGroup = this.findGroup(referencePanel);\n                if (!referenceGroup) {\n                    throw new Error(`reference group for reference panel ${options.referencePanel} does not exist`);\n                }\n            }\n            else if (isGroupOptionsWithGroup(options)) {\n                referenceGroup =\n                    typeof options.referenceGroup === 'string'\n                        ? (_a = this._groups.get(options.referenceGroup)) === null || _a === void 0 ? void 0 : _a.value\n                        : options.referenceGroup;\n                if (!referenceGroup) {\n                    throw new Error(`reference group ${options.referenceGroup} does not exist`);\n                }\n            }\n            else {\n                const group = this.orthogonalize(directionToPosition(options.direction));\n                if (!options.skipSetActive) {\n                    this.doSetGroupAndPanelActive(group);\n                }\n                return group;\n            }\n            const target = toTarget(options.direction || 'within');\n            const location = getGridLocation(referenceGroup.element);\n            const relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n            const group = this.createGroup(options);\n            const size = this.getLocationOrientation(relativeLocation) ===\n                Orientation.VERTICAL\n                ? options.initialHeight\n                : options.initialWidth;\n            this.doAddGroup(group, relativeLocation, size);\n            if (!options.skipSetActive) {\n                this.doSetGroupAndPanelActive(group);\n            }\n            return group;\n        }\n        else {\n            const group = this.createGroup(options);\n            this.doAddGroup(group);\n            this.doSetGroupAndPanelActive(group);\n            return group;\n        }\n    }\n    getLocationOrientation(location) {\n        return location.length % 2 == 0 &&\n            this.gridview.orientation === Orientation.HORIZONTAL\n            ? Orientation.HORIZONTAL\n            : Orientation.VERTICAL;\n    }\n    removeGroup(group, options) {\n        this.doRemoveGroup(group, options);\n    }\n    doRemoveGroup(group, options) {\n        var _a;\n        const panels = [...group.panels]; // reassign since group panels will mutate\n        if (!(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n            for (const panel of panels) {\n                this.removePanel(panel, {\n                    removeEmptyGroup: false,\n                    skipDispose: (_a = options === null || options === void 0 ? void 0 : options.skipDispose) !== null && _a !== void 0 ? _a : false,\n                });\n            }\n        }\n        const activePanel = this.activePanel;\n        if (group.api.location.type === 'floating') {\n            const floatingGroup = this._floatingGroups.find((_) => _.group === group);\n            if (floatingGroup) {\n                if (!(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n                    floatingGroup.group.dispose();\n                    this._groups.delete(group.id);\n                    this._onDidRemoveGroup.fire(group);\n                }\n                remove(this._floatingGroups, floatingGroup);\n                floatingGroup.dispose();\n                if (!(options === null || options === void 0 ? void 0 : options.skipActive) && this._activeGroup === group) {\n                    const groups = Array.from(this._groups.values());\n                    this.doSetGroupAndPanelActive(groups.length > 0 ? groups[0].value : undefined);\n                }\n                return floatingGroup.group;\n            }\n            throw new Error('failed to find floating group');\n        }\n        if (group.api.location.type === 'popout') {\n            const selectedGroup = this._popoutGroups.find((_) => _.popoutGroup === group);\n            if (selectedGroup) {\n                if (!(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n                    if (!(options === null || options === void 0 ? void 0 : options.skipPopoutAssociated)) {\n                        const refGroup = selectedGroup.referenceGroup\n                            ? this.getPanel(selectedGroup.referenceGroup)\n                            : undefined;\n                        if (refGroup && refGroup.panels.length === 0) {\n                            this.removeGroup(refGroup);\n                        }\n                    }\n                    selectedGroup.popoutGroup.dispose();\n                    this._groups.delete(group.id);\n                    this._onDidRemoveGroup.fire(group);\n                }\n                remove(this._popoutGroups, selectedGroup);\n                const removedGroup = selectedGroup.disposable.dispose();\n                if (!(options === null || options === void 0 ? void 0 : options.skipPopoutReturn) && removedGroup) {\n                    this.doAddGroup(removedGroup, [0]);\n                    this.doSetGroupAndPanelActive(removedGroup);\n                }\n                if (!(options === null || options === void 0 ? void 0 : options.skipActive) && this._activeGroup === group) {\n                    const groups = Array.from(this._groups.values());\n                    this.doSetGroupAndPanelActive(groups.length > 0 ? groups[0].value : undefined);\n                }\n                this.updateWatermark();\n                return selectedGroup.popoutGroup;\n            }\n            throw new Error('failed to find popout group');\n        }\n        const re = super.doRemoveGroup(group, options);\n        if (!(options === null || options === void 0 ? void 0 : options.skipActive)) {\n            if (this.activePanel !== activePanel) {\n                this._onDidActivePanelChange.fire(this.activePanel);\n            }\n        }\n        return re;\n    }\n    movingLock(func) {\n        const isMoving = this._moving;\n        try {\n            this._moving = true;\n            return func();\n        }\n        finally {\n            this._moving = isMoving;\n        }\n    }\n    moveGroupOrPanel(options) {\n        var _a;\n        const destinationGroup = options.to.group;\n        const sourceGroupId = options.from.groupId;\n        const sourceItemId = options.from.panelId;\n        const destinationTarget = options.to.position;\n        const destinationIndex = options.to.index;\n        const sourceGroup = sourceGroupId\n            ? (_a = this._groups.get(sourceGroupId)) === null || _a === void 0 ? void 0 : _a.value\n            : undefined;\n        if (!sourceGroup) {\n            throw new Error(`Failed to find group id ${sourceGroupId}`);\n        }\n        if (sourceItemId === undefined) {\n            /**\n             * Moving an entire group into another group\n             */\n            this.moveGroup({\n                from: { group: sourceGroup },\n                to: {\n                    group: destinationGroup,\n                    position: destinationTarget,\n                },\n            });\n            return;\n        }\n        if (!destinationTarget || destinationTarget === 'center') {\n            /**\n             * Dropping a panel within another group\n             */\n            const removedPanel = this.movingLock(() => sourceGroup.model.removePanel(sourceItemId, {\n                skipSetActive: false,\n                skipSetActiveGroup: true,\n            }));\n            if (!removedPanel) {\n                throw new Error(`No panel with id ${sourceItemId}`);\n            }\n            if (sourceGroup.model.size === 0) {\n                // remove the group and do not set a new group as active\n                this.doRemoveGroup(sourceGroup, { skipActive: true });\n            }\n            this.movingLock(() => destinationGroup.model.openPanel(removedPanel, {\n                index: destinationIndex,\n                skipSetGroupActive: true,\n            }));\n            this.doSetGroupAndPanelActive(destinationGroup);\n            this._onDidMovePanel.fire({\n                panel: removedPanel,\n                from: sourceGroup,\n            });\n        }\n        else {\n            /**\n             * Dropping a panel to the extremities of a group which will place that panel\n             * into an adjacent group\n             */\n            const referenceLocation = getGridLocation(destinationGroup.element);\n            const targetLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, destinationTarget);\n            if (sourceGroup.size < 2) {\n                /**\n                 * If we are moving from a group which only has one panel left we will consider\n                 * moving the group itself rather than moving the panel into a newly created group\n                 */\n                const [targetParentLocation, to] = tail(targetLocation);\n                if (sourceGroup.api.location.type === 'grid') {\n                    const sourceLocation = getGridLocation(sourceGroup.element);\n                    const [sourceParentLocation, from] = tail(sourceLocation);\n                    if (sequenceEquals(sourceParentLocation, targetParentLocation)) {\n                        // special case when 'swapping' two views within same grid location\n                        // if a group has one tab - we are essentially moving the 'group'\n                        // which is equivalent to swapping two views in this case\n                        this.gridview.moveView(sourceParentLocation, from, to);\n                        this._onDidMovePanel.fire({\n                            panel: this.getGroupPanel(sourceItemId),\n                            from: sourceGroup,\n                        });\n                        return;\n                    }\n                }\n                if (sourceGroup.api.location.type === 'popout') {\n                    /**\n                     * the source group is a popout group with a single panel\n                     *\n                     * 1. remove the panel from the group without triggering any events\n                     * 2. remove the popout group\n                     * 3. create a new group at the requested location and add that panel\n                     */\n                    const popoutGroup = this._popoutGroups.find((group) => group.popoutGroup === sourceGroup);\n                    const removedPanel = this.movingLock(() => popoutGroup.popoutGroup.model.removePanel(popoutGroup.popoutGroup.panels[0], {\n                        skipSetActive: true,\n                        skipSetActiveGroup: true,\n                    }));\n                    this.doRemoveGroup(sourceGroup, { skipActive: true });\n                    const newGroup = this.createGroupAtLocation(targetLocation);\n                    this.movingLock(() => newGroup.model.openPanel(removedPanel, {\n                        skipSetActive: true,\n                    }));\n                    this.doSetGroupAndPanelActive(newGroup);\n                    this._onDidMovePanel.fire({\n                        panel: this.getGroupPanel(sourceItemId),\n                        from: sourceGroup,\n                    });\n                    return;\n                }\n                // source group will become empty so delete the group\n                const targetGroup = this.movingLock(() => this.doRemoveGroup(sourceGroup, {\n                    skipActive: true,\n                    skipDispose: true,\n                }));\n                // after deleting the group we need to re-evaulate the ref location\n                const updatedReferenceLocation = getGridLocation(destinationGroup.element);\n                const location = getRelativeLocation(this.gridview.orientation, updatedReferenceLocation, destinationTarget);\n                this.movingLock(() => this.doAddGroup(targetGroup, location));\n                this.doSetGroupAndPanelActive(targetGroup);\n                this._onDidMovePanel.fire({\n                    panel: this.getGroupPanel(sourceItemId),\n                    from: sourceGroup,\n                });\n            }\n            else {\n                /**\n                 * The group we are removing from has many panels, we need to remove the panels we are moving,\n                 * create a new group, add the panels to that new group and add the new group in an appropiate position\n                 */\n                const removedPanel = this.movingLock(() => sourceGroup.model.removePanel(sourceItemId, {\n                    skipSetActive: false,\n                    skipSetActiveGroup: true,\n                }));\n                if (!removedPanel) {\n                    throw new Error(`No panel with id ${sourceItemId}`);\n                }\n                const dropLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, destinationTarget);\n                const group = this.createGroupAtLocation(dropLocation);\n                this.movingLock(() => group.model.openPanel(removedPanel, {\n                    skipSetGroupActive: true,\n                }));\n                this.doSetGroupAndPanelActive(group);\n                this._onDidMovePanel.fire({\n                    panel: removedPanel,\n                    from: sourceGroup,\n                });\n            }\n        }\n    }\n    moveGroup(options) {\n        const from = options.from.group;\n        const to = options.to.group;\n        const target = options.to.position;\n        if (target === 'center') {\n            const activePanel = from.activePanel;\n            const panels = this.movingLock(() => [...from.panels].map((p) => from.model.removePanel(p.id, {\n                skipSetActive: true,\n            })));\n            if ((from === null || from === void 0 ? void 0 : from.model.size) === 0) {\n                this.doRemoveGroup(from, { skipActive: true });\n            }\n            this.movingLock(() => {\n                for (const panel of panels) {\n                    to.model.openPanel(panel, {\n                        skipSetActive: panel !== activePanel,\n                        skipSetGroupActive: true,\n                    });\n                }\n            });\n            this.doSetGroupAndPanelActive(to);\n        }\n        else {\n            switch (from.api.location.type) {\n                case 'grid':\n                    this.gridview.removeView(getGridLocation(from.element));\n                    break;\n                case 'floating': {\n                    const selectedFloatingGroup = this._floatingGroups.find((x) => x.group === from);\n                    if (!selectedFloatingGroup) {\n                        throw new Error('failed to find floating group');\n                    }\n                    selectedFloatingGroup.dispose();\n                    break;\n                }\n                case 'popout': {\n                    const selectedPopoutGroup = this._popoutGroups.find((x) => x.popoutGroup === from);\n                    if (!selectedPopoutGroup) {\n                        throw new Error('failed to find popout group');\n                    }\n                    selectedPopoutGroup.disposable.dispose();\n                }\n            }\n            const referenceLocation = getGridLocation(to.element);\n            const dropLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, target);\n            let size;\n            switch (this.gridview.orientation) {\n                case Orientation.VERTICAL:\n                    size =\n                        referenceLocation.length % 2 == 0\n                            ? from.api.width\n                            : from.api.height;\n                    break;\n                case Orientation.HORIZONTAL:\n                    size =\n                        referenceLocation.length % 2 == 0\n                            ? from.api.height\n                            : from.api.width;\n                    break;\n            }\n            this.gridview.addView(from, size, dropLocation);\n        }\n        from.panels.forEach((panel) => {\n            this._onDidMovePanel.fire({ panel, from });\n        });\n    }\n    doSetGroupActive(group) {\n        super.doSetGroupActive(group);\n        const activePanel = this.activePanel;\n        if (!this._moving &&\n            activePanel !== this._onDidActivePanelChange.value) {\n            this._onDidActivePanelChange.fire(activePanel);\n        }\n    }\n    doSetGroupAndPanelActive(group) {\n        super.doSetGroupActive(group);\n        const activePanel = this.activePanel;\n        if (group &&\n            this.hasMaximizedGroup() &&\n            !this.isMaximizedGroup(group)) {\n            this.exitMaximizedGroup();\n        }\n        if (!this._moving &&\n            activePanel !== this._onDidActivePanelChange.value) {\n            this._onDidActivePanelChange.fire(activePanel);\n        }\n    }\n    getNextGroupId() {\n        let id = this.nextGroupId.next();\n        while (this._groups.has(id)) {\n            id = this.nextGroupId.next();\n        }\n        return id;\n    }\n    createGroup(options) {\n        if (!options) {\n            options = {};\n        }\n        let id = options === null || options === void 0 ? void 0 : options.id;\n        if (id && this._groups.has(options.id)) {\n            console.warn(`dockview: Duplicate group id ${options === null || options === void 0 ? void 0 : options.id}. reassigning group id to avoid errors`);\n            id = undefined;\n        }\n        if (!id) {\n            id = this.nextGroupId.next();\n            while (this._groups.has(id)) {\n                id = this.nextGroupId.next();\n            }\n        }\n        const view = new DockviewGroupPanel(this, id, options);\n        view.init({ params: {}, accessor: this });\n        if (!this._groups.has(view.id)) {\n            const disposable = new CompositeDisposable(view.model.onTabDragStart((event) => {\n                this._onWillDragPanel.fire(event);\n            }), view.model.onGroupDragStart((event) => {\n                this._onWillDragGroup.fire(event);\n            }), view.model.onMove((event) => {\n                const { groupId, itemId, target, index } = event;\n                this.moveGroupOrPanel({\n                    from: { groupId: groupId, panelId: itemId },\n                    to: {\n                        group: view,\n                        position: target,\n                        index,\n                    },\n                });\n            }), view.model.onDidDrop((event) => {\n                this._onDidDrop.fire(event);\n            }), view.model.onWillDrop((event) => {\n                this._onWillDrop.fire(event);\n            }), view.model.onWillShowOverlay((event) => {\n                if (this.options.disableDnd) {\n                    event.preventDefault();\n                    return;\n                }\n                this._onWillShowOverlay.fire(event);\n            }), view.model.onUnhandledDragOverEvent((event) => {\n                this._onUnhandledDragOverEvent.fire(event);\n            }), view.model.onDidAddPanel((event) => {\n                if (this._moving) {\n                    return;\n                }\n                this._onDidAddPanel.fire(event.panel);\n            }), view.model.onDidRemovePanel((event) => {\n                if (this._moving) {\n                    return;\n                }\n                this._onDidRemovePanel.fire(event.panel);\n            }), view.model.onDidActivePanelChange((event) => {\n                if (this._moving) {\n                    return;\n                }\n                if (event.panel !== this.activePanel) {\n                    return;\n                }\n                if (this._onDidActivePanelChange.value !== event.panel) {\n                    this._onDidActivePanelChange.fire(event.panel);\n                }\n            }), Event.any(view.model.onDidPanelTitleChange, view.model.onDidPanelParametersChange)(() => {\n                this._bufferOnDidLayoutChange.fire();\n            }));\n            this._groups.set(view.id, { value: view, disposable });\n        }\n        // TODO: must be called after the above listeners have been setup, not an ideal pattern\n        view.initialize();\n        return view;\n    }\n    createPanel(options, group) {\n        var _a, _b, _c;\n        const contentComponent = options.component;\n        const tabComponent = (_a = options.tabComponent) !== null && _a !== void 0 ? _a : this.options.defaultTabComponent;\n        const view = new DockviewPanelModel(this, options.id, contentComponent, tabComponent);\n        const panel = new DockviewPanel(options.id, contentComponent, tabComponent, this, this._api, group, view, {\n            renderer: options.renderer,\n            minimumWidth: options.minimumWidth,\n            minimumHeight: options.minimumHeight,\n            maximumWidth: options.maximumWidth,\n            maximumHeight: options.maximumHeight,\n        });\n        panel.init({\n            title: (_b = options.title) !== null && _b !== void 0 ? _b : options.id,\n            params: (_c = options === null || options === void 0 ? void 0 : options.params) !== null && _c !== void 0 ? _c : {},\n        });\n        return panel;\n    }\n    createGroupAtLocation(location, size) {\n        const group = this.createGroup();\n        this.doAddGroup(group, location, size);\n        return group;\n    }\n    findGroup(panel) {\n        var _a;\n        return (_a = Array.from(this._groups.values()).find((group) => group.value.model.containsPanel(panel))) === null || _a === void 0 ? void 0 : _a.value;\n    }\n    orientationAtLocation(location) {\n        const rootOrientation = this.gridview.orientation;\n        return location.length % 2 == 1\n            ? rootOrientation\n            : orthogonal(rootOrientation);\n    }\n}\n","export function createComponent(id, componentName, components = {}, frameworkComponents = {}, createFrameworkComponent, fallback) {\n    const Component = typeof componentName === 'string'\n        ? components[componentName]\n        : undefined;\n    const FrameworkComponent = typeof componentName === 'string'\n        ? frameworkComponents[componentName]\n        : undefined;\n    if (Component && FrameworkComponent) {\n        throw new Error(`Cannot create '${id}'. component '${componentName}' registered as both a component and frameworkComponent`);\n    }\n    if (FrameworkComponent) {\n        if (!createFrameworkComponent) {\n            throw new Error(`Cannot create '${id}' for framework component '${componentName}'. you must register a frameworkPanelWrapper to use framework components`);\n        }\n        return createFrameworkComponent.createComponent(id, componentName, FrameworkComponent);\n    }\n    if (!Component) {\n        if (fallback) {\n            return fallback();\n        }\n        throw new Error(`Cannot create '${id}', no component '${componentName}' provided`);\n    }\n    return new Component(id, componentName);\n}\n","import { getRelativeLocation, getGridLocation, } from './gridview';\nimport { tail, sequenceEquals } from '../array';\nimport { CompositeDisposable } from '../lifecycle';\nimport { BaseGrid, toTarget, } from './baseComponentGridview';\nimport { createComponent } from '../panel/componentFactory';\nimport { Emitter } from '../events';\nexport class GridviewComponent extends BaseGrid {\n    get orientation() {\n        return this.gridview.orientation;\n    }\n    set orientation(value) {\n        this.gridview.orientation = value;\n    }\n    get options() {\n        return this._options;\n    }\n    get deserializer() {\n        return this._deserializer;\n    }\n    set deserializer(value) {\n        this._deserializer = value;\n    }\n    constructor(parentElement, options) {\n        super(parentElement, {\n            proportionalLayout: options.proportionalLayout,\n            orientation: options.orientation,\n            styles: options.styles,\n            disableAutoResizing: options.disableAutoResizing,\n            className: options.className,\n        });\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._onDidRemoveGroup = new Emitter();\n        this.onDidRemoveGroup = this._onDidRemoveGroup.event;\n        this._onDidAddGroup = new Emitter();\n        this.onDidAddGroup = this._onDidAddGroup.event;\n        this._onDidActiveGroupChange = new Emitter();\n        this.onDidActiveGroupChange = this._onDidActiveGroupChange.event;\n        this._options = options;\n        this.addDisposables(this._onDidAddGroup, this._onDidRemoveGroup, this._onDidActiveGroupChange, this.onDidAdd((event) => {\n            this._onDidAddGroup.fire(event);\n        }), this.onDidRemove((event) => {\n            this._onDidRemoveGroup.fire(event);\n        }), this.onDidActiveChange((event) => {\n            this._onDidActiveGroupChange.fire(event);\n        }));\n        if (!this.options.components) {\n            this.options.components = {};\n        }\n        if (!this.options.frameworkComponents) {\n            this.options.frameworkComponents = {};\n        }\n    }\n    updateOptions(options) {\n        super.updateOptions(options);\n        const hasOrientationChanged = typeof options.orientation === 'string' &&\n            this.gridview.orientation !== options.orientation;\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        if (hasOrientationChanged) {\n            this.gridview.orientation = options.orientation;\n        }\n        this.layout(this.gridview.width, this.gridview.height, true);\n    }\n    removePanel(panel) {\n        this.removeGroup(panel);\n    }\n    /**\n     * Serialize the current state of the layout\n     *\n     * @returns A JSON respresentation of the layout\n     */\n    toJSON() {\n        var _a;\n        const data = this.gridview.serialize();\n        return {\n            grid: data,\n            activePanel: (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.id,\n        };\n    }\n    setVisible(panel, visible) {\n        this.gridview.setViewVisible(getGridLocation(panel.element), visible);\n    }\n    setActive(panel) {\n        this._groups.forEach((value, _key) => {\n            value.value.setActive(panel === value.value);\n        });\n    }\n    focus() {\n        var _a;\n        (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    fromJSON(serializedGridview) {\n        this.clear();\n        const { grid, activePanel } = serializedGridview;\n        try {\n            const queue = [];\n            // take note of the existing dimensions\n            const width = this.width;\n            const height = this.height;\n            this.gridview.deserialize(grid, {\n                fromJSON: (node) => {\n                    var _a, _b;\n                    const { data } = node;\n                    const view = createComponent(data.id, data.component, (_a = this.options.components) !== null && _a !== void 0 ? _a : {}, (_b = this.options.frameworkComponents) !== null && _b !== void 0 ? _b : {}, this.options.frameworkComponentFactory\n                        ? {\n                            createComponent: this.options.frameworkComponentFactory\n                                .createComponent,\n                        }\n                        : undefined);\n                    queue.push(() => view.init({\n                        params: data.params,\n                        minimumWidth: data.minimumWidth,\n                        maximumWidth: data.maximumWidth,\n                        minimumHeight: data.minimumHeight,\n                        maximumHeight: data.maximumHeight,\n                        priority: data.priority,\n                        snap: !!data.snap,\n                        accessor: this,\n                        isVisible: node.visible,\n                    }));\n                    this._onDidAddGroup.fire(view);\n                    this.registerPanel(view);\n                    return view;\n                },\n            });\n            this.layout(width, height, true);\n            queue.forEach((f) => f());\n            if (typeof activePanel === 'string') {\n                const panel = this.getPanel(activePanel);\n                if (panel) {\n                    this.doSetGroupActive(panel);\n                }\n            }\n        }\n        catch (err) {\n            /**\n             * To remove a group we cannot call this.removeGroup(...) since this makes assumptions about\n             * the underlying HTMLElement existing in the Gridview.\n             */\n            for (const group of this.groups) {\n                group.dispose();\n                this._groups.delete(group.id);\n                this._onDidRemoveGroup.fire(group);\n            }\n            // fires clean-up events and clears the underlying HTML gridview.\n            this.clear();\n            /**\n             * even though we have cleaned-up we still want to inform the caller of their error\n             * and we'll do this through re-throwing the original error since afterall you would\n             * expect trying to load a corrupted layout to result in an error and not silently fail...\n             */\n            throw err;\n        }\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        const hasActiveGroup = this.activeGroup;\n        const groups = Array.from(this._groups.values()); // reassign since group panels will mutate\n        for (const group of groups) {\n            group.disposable.dispose();\n            this.doRemoveGroup(group.value, { skipActive: true });\n        }\n        if (hasActiveGroup) {\n            this.doSetGroupActive(undefined);\n        }\n        this.gridview.clear();\n    }\n    movePanel(panel, options) {\n        var _a;\n        let relativeLocation;\n        const removedPanel = this.gridview.remove(panel);\n        const referenceGroup = (_a = this._groups.get(options.reference)) === null || _a === void 0 ? void 0 : _a.value;\n        if (!referenceGroup) {\n            throw new Error(`reference group ${options.reference} does not exist`);\n        }\n        const target = toTarget(options.direction);\n        if (target === 'center') {\n            throw new Error(`${target} not supported as an option`);\n        }\n        else {\n            const location = getGridLocation(referenceGroup.element);\n            relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n        }\n        this.doAddGroup(removedPanel, relativeLocation, options.size);\n    }\n    addPanel(options) {\n        var _a, _b, _c, _d, _e, _f;\n        let relativeLocation = (_a = options.location) !== null && _a !== void 0 ? _a : [0];\n        if ((_b = options.position) === null || _b === void 0 ? void 0 : _b.referencePanel) {\n            const referenceGroup = (_c = this._groups.get(options.position.referencePanel)) === null || _c === void 0 ? void 0 : _c.value;\n            if (!referenceGroup) {\n                throw new Error(`reference group ${options.position.referencePanel} does not exist`);\n            }\n            const target = toTarget(options.position.direction);\n            if (target === 'center') {\n                throw new Error(`${target} not supported as an option`);\n            }\n            else {\n                const location = getGridLocation(referenceGroup.element);\n                relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n            }\n        }\n        const view = createComponent(options.id, options.component, (_d = this.options.components) !== null && _d !== void 0 ? _d : {}, (_e = this.options.frameworkComponents) !== null && _e !== void 0 ? _e : {}, this.options.frameworkComponentFactory\n            ? {\n                createComponent: this.options.frameworkComponentFactory\n                    .createComponent,\n            }\n            : undefined);\n        view.init({\n            params: (_f = options.params) !== null && _f !== void 0 ? _f : {},\n            minimumWidth: options.minimumWidth,\n            maximumWidth: options.maximumWidth,\n            minimumHeight: options.minimumHeight,\n            maximumHeight: options.maximumHeight,\n            priority: options.priority,\n            snap: !!options.snap,\n            accessor: this,\n            isVisible: true,\n        });\n        this.registerPanel(view);\n        this.doAddGroup(view, relativeLocation, options.size);\n        this.doSetGroupActive(view);\n        return view;\n    }\n    registerPanel(panel) {\n        const disposable = new CompositeDisposable(panel.api.onDidFocusChange((event) => {\n            if (!event.isFocused) {\n                return;\n            }\n            this._groups.forEach((groupItem) => {\n                const group = groupItem.value;\n                if (group !== panel) {\n                    group.setActive(false);\n                }\n                else {\n                    group.setActive(true);\n                }\n            });\n        }));\n        this._groups.set(panel.id, {\n            value: panel,\n            disposable,\n        });\n    }\n    moveGroup(referenceGroup, groupId, target) {\n        const sourceGroup = this.getPanel(groupId);\n        if (!sourceGroup) {\n            throw new Error('invalid operation');\n        }\n        const referenceLocation = getGridLocation(referenceGroup.element);\n        const targetLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, target);\n        const [targetParentLocation, to] = tail(targetLocation);\n        const sourceLocation = getGridLocation(sourceGroup.element);\n        const [sourceParentLocation, from] = tail(sourceLocation);\n        if (sequenceEquals(sourceParentLocation, targetParentLocation)) {\n            // special case when 'swapping' two views within same grid location\n            // if a group has one tab - we are essentially moving the 'group'\n            // which is equivalent to swapping two views in this case\n            this.gridview.moveView(sourceParentLocation, from, to);\n            return;\n        }\n        // source group will become empty so delete the group\n        const targetGroup = this.doRemoveGroup(sourceGroup, {\n            skipActive: true,\n            skipDispose: true,\n        });\n        // after deleting the group we need to re-evaulate the ref location\n        const updatedReferenceLocation = getGridLocation(referenceGroup.element);\n        const location = getRelativeLocation(this.gridview.orientation, updatedReferenceLocation, target);\n        this.doAddGroup(targetGroup, location);\n    }\n    removeGroup(group) {\n        super.removeGroup(group);\n    }\n    dispose() {\n        super.dispose();\n        this._onDidLayoutfromJSON.dispose();\n    }\n}\n","import { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nimport { Orientation, Sizing, Splitview, } from './splitview';\nimport { Emitter } from '../events';\nimport { createComponent } from '../panel/componentFactory';\nimport { Resizable } from '../resizable';\nimport { Classnames } from '../dom';\n/**\n * A high-level implementation of splitview that works using 'panels'\n */\nexport class SplitviewComponent extends Resizable {\n    get panels() {\n        return this.splitview.getViews();\n    }\n    get options() {\n        return this._options;\n    }\n    get length() {\n        return this._panels.size;\n    }\n    get orientation() {\n        return this.splitview.orientation;\n    }\n    get splitview() {\n        return this._splitview;\n    }\n    set splitview(value) {\n        this._splitview = value;\n        this._splitviewChangeDisposable.value = new CompositeDisposable(this._splitview.onDidSashEnd(() => {\n            this._onDidLayoutChange.fire(undefined);\n        }), this._splitview.onDidAddView((e) => this._onDidAddView.fire(e)), this._splitview.onDidRemoveView((e) => this._onDidRemoveView.fire(e)));\n    }\n    get minimumSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumSize() {\n        return this.splitview.maximumSize;\n    }\n    get height() {\n        return this.splitview.orientation === Orientation.HORIZONTAL\n            ? this.splitview.orthogonalSize\n            : this.splitview.size;\n    }\n    get width() {\n        return this.splitview.orientation === Orientation.HORIZONTAL\n            ? this.splitview.size\n            : this.splitview.orthogonalSize;\n    }\n    constructor(parentElement, options) {\n        var _a;\n        super(parentElement, options.disableAutoResizing);\n        this._splitviewChangeDisposable = new MutableDisposable();\n        this._panels = new Map();\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        this._onDidLayoutChange = new Emitter();\n        this.onDidLayoutChange = this._onDidLayoutChange.event;\n        this._classNames = new Classnames(this.element);\n        this._classNames.setClassNames((_a = options.className) !== null && _a !== void 0 ? _a : '');\n        this._options = options;\n        if (!options.components) {\n            options.components = {};\n        }\n        if (!options.frameworkComponents) {\n            options.frameworkComponents = {};\n        }\n        this.splitview = new Splitview(this.element, options);\n        this.addDisposables(this._onDidAddView, this._onDidLayoutfromJSON, this._onDidRemoveView, this._onDidLayoutChange);\n    }\n    updateOptions(options) {\n        var _a, _b;\n        if ('className' in options) {\n            this._classNames.setClassNames((_a = options.className) !== null && _a !== void 0 ? _a : '');\n        }\n        if ('disableResizing' in options) {\n            this.disableResizing = (_b = options.disableAutoResizing) !== null && _b !== void 0 ? _b : false;\n        }\n        if (typeof options.orientation === 'string') {\n            this.splitview.orientation = options.orientation;\n        }\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        this.splitview.layout(this.splitview.size, this.splitview.orthogonalSize);\n    }\n    focus() {\n        var _a;\n        (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    movePanel(from, to) {\n        this.splitview.moveView(from, to);\n    }\n    setVisible(panel, visible) {\n        const index = this.panels.indexOf(panel);\n        this.splitview.setViewVisible(index, visible);\n    }\n    setActive(panel, skipFocus) {\n        this._activePanel = panel;\n        this.panels\n            .filter((v) => v !== panel)\n            .forEach((v) => {\n            v.api._onDidActiveChange.fire({ isActive: false });\n            if (!skipFocus) {\n                v.focus();\n            }\n        });\n        panel.api._onDidActiveChange.fire({ isActive: true });\n        if (!skipFocus) {\n            panel.focus();\n        }\n    }\n    removePanel(panel, sizing) {\n        const item = this._panels.get(panel.id);\n        if (!item) {\n            throw new Error(`unknown splitview panel ${panel.id}`);\n        }\n        item.dispose();\n        this._panels.delete(panel.id);\n        const index = this.panels.findIndex((_) => _ === panel);\n        const removedView = this.splitview.removeView(index, sizing);\n        removedView.dispose();\n        const panels = this.panels;\n        if (panels.length > 0) {\n            this.setActive(panels[panels.length - 1]);\n        }\n    }\n    getPanel(id) {\n        return this.panels.find((view) => view.id === id);\n    }\n    addPanel(options) {\n        var _a, _b, _c;\n        if (this._panels.has(options.id)) {\n            throw new Error(`panel ${options.id} already exists`);\n        }\n        const view = createComponent(options.id, options.component, (_a = this.options.components) !== null && _a !== void 0 ? _a : {}, (_b = this.options.frameworkComponents) !== null && _b !== void 0 ? _b : {}, this.options.frameworkWrapper\n            ? {\n                createComponent: this.options.frameworkWrapper.createComponent,\n            }\n            : undefined);\n        view.orientation = this.splitview.orientation;\n        view.init({\n            params: (_c = options.params) !== null && _c !== void 0 ? _c : {},\n            minimumSize: options.minimumSize,\n            maximumSize: options.maximumSize,\n            snap: options.snap,\n            priority: options.priority,\n            accessor: this,\n        });\n        const size = typeof options.size === 'number' ? options.size : Sizing.Distribute;\n        const index = typeof options.index === 'number' ? options.index : undefined;\n        this.splitview.addView(view, size, index);\n        this.doAddView(view);\n        this.setActive(view);\n        return view;\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.splitview.orientation === Orientation.HORIZONTAL\n            ? [width, height]\n            : [height, width];\n        this.splitview.layout(size, orthogonalSize);\n    }\n    doAddView(view) {\n        const disposable = view.api.onDidFocusChange((event) => {\n            if (!event.isFocused) {\n                return;\n            }\n            this.setActive(view, true);\n        });\n        this._panels.set(view.id, disposable);\n    }\n    toJSON() {\n        var _a;\n        const views = this.splitview\n            .getViews()\n            .map((view, i) => {\n            const size = this.splitview.getViewSize(i);\n            return {\n                size,\n                data: view.toJSON(),\n                snap: !!view.snap,\n                priority: view.priority,\n            };\n        });\n        return {\n            views,\n            activeView: (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.id,\n            size: this.splitview.size,\n            orientation: this.splitview.orientation,\n        };\n    }\n    fromJSON(serializedSplitview) {\n        this.clear();\n        const { views, orientation, size, activeView } = serializedSplitview;\n        const queue = [];\n        // take note of the existing dimensions\n        const width = this.width;\n        const height = this.height;\n        this.splitview = new Splitview(this.element, {\n            orientation,\n            proportionalLayout: this.options.proportionalLayout,\n            descriptor: {\n                size,\n                views: views.map((view) => {\n                    var _a, _b;\n                    const data = view.data;\n                    if (this._panels.has(data.id)) {\n                        throw new Error(`panel ${data.id} already exists`);\n                    }\n                    const panel = createComponent(data.id, data.component, (_a = this.options.components) !== null && _a !== void 0 ? _a : {}, (_b = this.options.frameworkComponents) !== null && _b !== void 0 ? _b : {}, this.options.frameworkWrapper\n                        ? {\n                            createComponent: this.options.frameworkWrapper\n                                .createComponent,\n                        }\n                        : undefined);\n                    queue.push(() => {\n                        var _a;\n                        panel.init({\n                            params: (_a = data.params) !== null && _a !== void 0 ? _a : {},\n                            minimumSize: data.minimumSize,\n                            maximumSize: data.maximumSize,\n                            snap: view.snap,\n                            priority: view.priority,\n                            accessor: this,\n                        });\n                    });\n                    panel.orientation = orientation;\n                    this.doAddView(panel);\n                    setTimeout(() => {\n                        // the original onDidAddView events are missed since they are fired before we can subcribe to them\n                        this._onDidAddView.fire(panel);\n                    }, 0);\n                    return { size: view.size, view: panel };\n                }),\n            },\n        });\n        this.layout(width, height);\n        queue.forEach((f) => f());\n        if (typeof activeView === 'string') {\n            const panel = this.getPanel(activeView);\n            if (panel) {\n                this.setActive(panel);\n            }\n        }\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        for (const disposable of this._panels.values()) {\n            disposable.dispose();\n        }\n        this._panels.clear();\n        while (this.splitview.length > 0) {\n            const view = this.splitview.removeView(0, Sizing.Distribute, true);\n            view.dispose();\n        }\n    }\n    dispose() {\n        for (const disposable of this._panels.values()) {\n            disposable.dispose();\n        }\n        this._panels.clear();\n        const views = this.splitview.getViews();\n        this._splitviewChangeDisposable.dispose();\n        this.splitview.dispose();\n        for (const view of views) {\n            view.dispose();\n        }\n        super.dispose();\n    }\n}\n","import { addDisposableListener } from '../events';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nimport { toggleClass } from '../dom';\nimport { createChevronRightButton, createExpandMoreButton } from '../svg';\nexport class DefaultHeader extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor() {\n        super();\n        this._expandedIcon = createExpandMoreButton();\n        this._collapsedIcon = createChevronRightButton();\n        this.disposable = new MutableDisposable();\n        this.apiRef = {\n            api: null,\n        };\n        this._element = document.createElement('div');\n        this.element.className = 'dv-default-header';\n        this._content = document.createElement('span');\n        this._expander = document.createElement('div');\n        this._expander.className = 'dv-pane-header-icon';\n        this.element.appendChild(this._expander);\n        this.element.appendChild(this._content);\n        this.addDisposables(addDisposableListener(this._element, 'click', () => {\n            var _a;\n            (_a = this.apiRef.api) === null || _a === void 0 ? void 0 : _a.setExpanded(!this.apiRef.api.isExpanded);\n        }));\n    }\n    init(params) {\n        this.apiRef.api = params.api;\n        this._content.textContent = params.title;\n        this.updateIcon();\n        this.disposable.value = params.api.onDidExpansionChange(() => {\n            this.updateIcon();\n        });\n    }\n    updateIcon() {\n        var _a;\n        const isExpanded = !!((_a = this.apiRef.api) === null || _a === void 0 ? void 0 : _a.isExpanded);\n        toggleClass(this._expander, 'collapsed', !isExpanded);\n        if (isExpanded) {\n            if (this._expander.contains(this._collapsedIcon)) {\n                this._collapsedIcon.remove();\n            }\n            if (!this._expander.contains(this._expandedIcon)) {\n                this._expander.appendChild(this._expandedIcon);\n            }\n        }\n        else {\n            if (this._expander.contains(this._expandedIcon)) {\n                this._expandedIcon.remove();\n            }\n            if (!this._expander.contains(this._collapsedIcon)) {\n                this._expander.appendChild(this._collapsedIcon);\n            }\n        }\n    }\n    update(_params) {\n        //\n    }\n    dispose() {\n        this.disposable.dispose();\n        super.dispose();\n    }\n}\n","import { PaneviewApi } from '../api/component.api';\nimport { createComponent } from '../panel/componentFactory';\nimport { Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nimport { Orientation, Sizing } from '../splitview/splitview';\nimport { Paneview } from './paneview';\nimport { DraggablePaneviewPanel, } from './draggablePaneviewPanel';\nimport { DefaultHeader } from './defaultPaneviewHeader';\nimport { sequentialNumberGenerator } from '../math';\nimport { Resizable } from '../resizable';\nimport { Classnames } from '../dom';\nconst nextLayoutId = sequentialNumberGenerator();\nexport class PaneFramework extends DraggablePaneviewPanel {\n    constructor(options) {\n        super(options.accessor, options.id, options.component, options.headerComponent, options.orientation, options.isExpanded, options.disableDnd);\n        this.options = options;\n    }\n    getBodyComponent() {\n        return this.options.body;\n    }\n    getHeaderComponent() {\n        return this.options.header;\n    }\n}\nexport class PaneviewComponent extends Resizable {\n    get id() {\n        return this._id;\n    }\n    get panels() {\n        return this.paneview.getPanes();\n    }\n    set paneview(value) {\n        this._paneview = value;\n        this._disposable.value = new CompositeDisposable(this._paneview.onDidChange(() => {\n            this._onDidLayoutChange.fire(undefined);\n        }), this._paneview.onDidAddView((e) => this._onDidAddView.fire(e)), this._paneview.onDidRemoveView((e) => this._onDidRemoveView.fire(e)));\n    }\n    get paneview() {\n        return this._paneview;\n    }\n    get minimumSize() {\n        return this.paneview.minimumSize;\n    }\n    get maximumSize() {\n        return this.paneview.maximumSize;\n    }\n    get height() {\n        return this.paneview.orientation === Orientation.HORIZONTAL\n            ? this.paneview.orthogonalSize\n            : this.paneview.size;\n    }\n    get width() {\n        return this.paneview.orientation === Orientation.HORIZONTAL\n            ? this.paneview.size\n            : this.paneview.orthogonalSize;\n    }\n    get options() {\n        return this._options;\n    }\n    constructor(parentElement, options) {\n        var _a;\n        super(parentElement, options.disableAutoResizing);\n        this._id = nextLayoutId.next();\n        this._disposable = new MutableDisposable();\n        this._viewDisposables = new Map();\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._onDidLayoutChange = new Emitter();\n        this.onDidLayoutChange = this._onDidLayoutChange.event;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        this.addDisposables(this._onDidLayoutChange, this._onDidLayoutfromJSON, this._onDidDrop, this._onDidAddView, this._onDidRemoveView);\n        this._classNames = new Classnames(this.element);\n        this._classNames.setClassNames((_a = options.className) !== null && _a !== void 0 ? _a : '');\n        this._options = options;\n        if (!options.components) {\n            options.components = {};\n        }\n        if (!options.frameworkComponents) {\n            options.frameworkComponents = {};\n        }\n        this.paneview = new Paneview(this.element, {\n            // only allow paneview in the vertical orientation for now\n            orientation: Orientation.VERTICAL,\n        });\n        this.addDisposables(this._disposable);\n    }\n    setVisible(panel, visible) {\n        const index = this.panels.indexOf(panel);\n        this.paneview.setViewVisible(index, visible);\n    }\n    focus() {\n        //noop\n    }\n    updateOptions(options) {\n        var _a, _b;\n        if ('className' in options) {\n            this._classNames.setClassNames((_a = options.className) !== null && _a !== void 0 ? _a : '');\n        }\n        if ('disableResizing' in options) {\n            this.disableResizing = (_b = options.disableAutoResizing) !== null && _b !== void 0 ? _b : false;\n        }\n        this._options = Object.assign(Object.assign({}, this.options), options);\n    }\n    addPanel(options) {\n        var _a, _b, _c, _d;\n        const body = createComponent(options.id, options.component, (_a = this.options.components) !== null && _a !== void 0 ? _a : {}, (_b = this.options.frameworkComponents) !== null && _b !== void 0 ? _b : {}, this.options.frameworkWrapper\n            ? {\n                createComponent: this.options.frameworkWrapper.body.createComponent,\n            }\n            : undefined);\n        let header;\n        if (options.headerComponent) {\n            header = createComponent(options.id, options.headerComponent, (_c = this.options.headerComponents) !== null && _c !== void 0 ? _c : {}, this.options.headerframeworkComponents, this.options.frameworkWrapper\n                ? {\n                    createComponent: this.options.frameworkWrapper.header\n                        .createComponent,\n                }\n                : undefined);\n        }\n        else {\n            header = new DefaultHeader();\n        }\n        const view = new PaneFramework({\n            id: options.id,\n            component: options.component,\n            headerComponent: options.headerComponent,\n            header,\n            body,\n            orientation: Orientation.VERTICAL,\n            isExpanded: !!options.isExpanded,\n            disableDnd: !!this.options.disableDnd,\n            accessor: this,\n        });\n        this.doAddPanel(view);\n        const size = typeof options.size === 'number' ? options.size : Sizing.Distribute;\n        const index = typeof options.index === 'number' ? options.index : undefined;\n        view.init({\n            params: (_d = options.params) !== null && _d !== void 0 ? _d : {},\n            minimumBodySize: options.minimumBodySize,\n            maximumBodySize: options.maximumBodySize,\n            isExpanded: options.isExpanded,\n            title: options.title,\n            containerApi: new PaneviewApi(this),\n            accessor: this,\n        });\n        this.paneview.addPane(view, size, index);\n        view.orientation = this.paneview.orientation;\n        return view;\n    }\n    removePanel(panel) {\n        const views = this.panels;\n        const index = views.findIndex((_) => _ === panel);\n        this.paneview.removePane(index);\n        this.doRemovePanel(panel);\n    }\n    movePanel(from, to) {\n        this.paneview.moveView(from, to);\n    }\n    getPanel(id) {\n        return this.panels.find((view) => view.id === id);\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.paneview.orientation === Orientation.HORIZONTAL\n            ? [width, height]\n            : [height, width];\n        this.paneview.layout(size, orthogonalSize);\n    }\n    toJSON() {\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ||\n            value === Number.POSITIVE_INFINITY\n            ? undefined\n            : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        const views = this.paneview\n            .getPanes()\n            .map((view, i) => {\n            const size = this.paneview.getViewSize(i);\n            return {\n                size,\n                data: view.toJSON(),\n                minimumSize: minimum(view.minimumBodySize),\n                maximumSize: maximum(view.maximumBodySize),\n                expanded: view.isExpanded(),\n            };\n        });\n        return {\n            views,\n            size: this.paneview.size,\n        };\n    }\n    fromJSON(serializedPaneview) {\n        this.clear();\n        const { views, size } = serializedPaneview;\n        const queue = [];\n        // take note of the existing dimensions\n        const width = this.width;\n        const height = this.height;\n        this.paneview = new Paneview(this.element, {\n            orientation: Orientation.VERTICAL,\n            descriptor: {\n                size,\n                views: views.map((view) => {\n                    var _a, _b, _c, _d;\n                    const data = view.data;\n                    const body = createComponent(data.id, data.component, (_a = this.options.components) !== null && _a !== void 0 ? _a : {}, (_b = this.options.frameworkComponents) !== null && _b !== void 0 ? _b : {}, this.options.frameworkWrapper\n                        ? {\n                            createComponent: this.options.frameworkWrapper.body\n                                .createComponent,\n                        }\n                        : undefined);\n                    let header;\n                    if (data.headerComponent) {\n                        header = createComponent(data.id, data.headerComponent, (_c = this.options.headerComponents) !== null && _c !== void 0 ? _c : {}, (_d = this.options.headerframeworkComponents) !== null && _d !== void 0 ? _d : {}, this.options.frameworkWrapper\n                            ? {\n                                createComponent: this.options.frameworkWrapper.header\n                                    .createComponent,\n                            }\n                            : undefined);\n                    }\n                    else {\n                        header = new DefaultHeader();\n                    }\n                    const panel = new PaneFramework({\n                        id: data.id,\n                        component: data.component,\n                        headerComponent: data.headerComponent,\n                        header,\n                        body,\n                        orientation: Orientation.VERTICAL,\n                        isExpanded: !!view.expanded,\n                        disableDnd: !!this.options.disableDnd,\n                        accessor: this,\n                    });\n                    this.doAddPanel(panel);\n                    queue.push(() => {\n                        var _a;\n                        panel.init({\n                            params: (_a = data.params) !== null && _a !== void 0 ? _a : {},\n                            minimumBodySize: view.minimumSize,\n                            maximumBodySize: view.maximumSize,\n                            title: data.title,\n                            isExpanded: !!view.expanded,\n                            containerApi: new PaneviewApi(this),\n                            accessor: this,\n                        });\n                        panel.orientation = this.paneview.orientation;\n                    });\n                    setTimeout(() => {\n                        // the original onDidAddView events are missed since they are fired before we can subcribe to them\n                        this._onDidAddView.fire(panel);\n                    }, 0);\n                    return { size: view.size, view: panel };\n                }),\n            },\n        });\n        this.layout(width, height);\n        queue.forEach((f) => f());\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        for (const [_, value] of this._viewDisposables.entries()) {\n            value.dispose();\n        }\n        this._viewDisposables.clear();\n        this.paneview.dispose();\n    }\n    doAddPanel(panel) {\n        const disposable = panel.onDidDrop((event) => {\n            this._onDidDrop.fire(event);\n        });\n        this._viewDisposables.set(panel.id, disposable);\n    }\n    doRemovePanel(panel) {\n        const disposable = this._viewDisposables.get(panel.id);\n        if (disposable) {\n            disposable.dispose();\n            this._viewDisposables.delete(panel.id);\n        }\n    }\n    dispose() {\n        super.dispose();\n        for (const [_, value] of this._viewDisposables.entries()) {\n            value.dispose();\n        }\n        this._viewDisposables.clear();\n        this.paneview.dispose();\n    }\n}\n","import { BasePanelView, } from '../gridview/basePanelView';\nimport { SplitviewPanelApiImpl } from '../api/splitviewPanelApi';\nimport { Orientation } from './splitview';\nimport { Emitter } from '../events';\nexport class SplitviewPanel extends BasePanelView {\n    get priority() {\n        return this._priority;\n    }\n    set orientation(value) {\n        this._orientation = value;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    get minimumSize() {\n        const size = typeof this._minimumSize === 'function'\n            ? this._minimumSize()\n            : this._minimumSize;\n        if (size !== this._evaluatedMinimumSize) {\n            this._evaluatedMinimumSize = size;\n            this.updateConstraints();\n        }\n        return size;\n    }\n    get maximumSize() {\n        const size = typeof this._maximumSize === 'function'\n            ? this._maximumSize()\n            : this._maximumSize;\n        if (size !== this._evaluatedMaximumSize) {\n            this._evaluatedMaximumSize = size;\n            this.updateConstraints();\n        }\n        return size;\n    }\n    get snap() {\n        return this._snap;\n    }\n    constructor(id, componentName) {\n        super(id, componentName, new SplitviewPanelApiImpl(id, componentName));\n        this._evaluatedMinimumSize = 0;\n        this._evaluatedMaximumSize = Number.POSITIVE_INFINITY;\n        this._minimumSize = 0;\n        this._maximumSize = Number.POSITIVE_INFINITY;\n        this._snap = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this.api.initialize(this);\n        this.addDisposables(this._onDidChange, this.api.onWillVisibilityChange((event) => {\n            const { isVisible } = event;\n            const { accessor } = this._params;\n            accessor.setVisible(this, isVisible);\n        }), this.api.onActiveChange(() => {\n            const { accessor } = this._params;\n            accessor.setActive(this);\n        }), this.api.onDidConstraintsChangeInternal((event) => {\n            if (typeof event.minimumSize === 'number' ||\n                typeof event.minimumSize === 'function') {\n                this._minimumSize = event.minimumSize;\n            }\n            if (typeof event.maximumSize === 'number' ||\n                typeof event.maximumSize === 'function') {\n                this._maximumSize = event.maximumSize;\n            }\n            this.updateConstraints();\n        }), this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire({ size: event.size });\n        }));\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    layout(size, orthogonalSize) {\n        const [width, height] = this.orientation === Orientation.HORIZONTAL\n            ? [size, orthogonalSize]\n            : [orthogonalSize, size];\n        super.layout(width, height);\n    }\n    init(parameters) {\n        super.init(parameters);\n        this._priority = parameters.priority;\n        if (parameters.minimumSize) {\n            this._minimumSize = parameters.minimumSize;\n        }\n        if (parameters.maximumSize) {\n            this._maximumSize = parameters.maximumSize;\n        }\n        if (parameters.snap) {\n            this._snap = parameters.snap;\n        }\n    }\n    toJSON() {\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ||\n            value === Number.POSITIVE_INFINITY\n            ? undefined\n            : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        return Object.assign(Object.assign({}, super.toJSON()), { minimumSize: minimum(this.minimumSize), maximumSize: maximum(this.maximumSize) });\n    }\n    updateConstraints() {\n        this.api._onDidConstraintsChange.fire({\n            maximumSize: this._evaluatedMaximumSize,\n            minimumSize: this._evaluatedMinimumSize,\n        });\n    }\n}\n","import { GridviewApi, PaneviewApi, SplitviewApi, } from '../api/component.api';\nimport { DockviewComponent } from '../dockview/dockviewComponent';\nimport { GridviewComponent } from '../gridview/gridviewComponent';\nimport { PaneviewComponent } from '../paneview/paneviewComponent';\nimport { SplitviewComponent } from '../splitview/splitviewComponent';\nexport function createDockview(element, options) {\n    const component = new DockviewComponent(element, options);\n    return component.api;\n}\nexport function createSplitview(element, options) {\n    const component = new SplitviewComponent(element, options);\n    return new SplitviewApi(component);\n}\nexport function createGridview(element, options) {\n    const component = new GridviewComponent(element, options);\n    return new GridviewApi(component);\n}\nexport function createPaneview(element, options) {\n    const component = new PaneviewComponent(element, options);\n    return new PaneviewApi(component);\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { DockviewDisposable, } from 'dockview-core';\n/**\n * This component is intended to interface between vanilla-js and React hence we need to be\n * creative in how we update props.\n * A ref of the component is exposed with an update method; which when called stores the props\n * as a ref within this component and forcefully triggers a re-render of the component using\n * the ref of props we just set on the renderered component as the props passed to the inner\n * component\n */\nconst ReactComponentBridge = (props, ref) => {\n    const [_, triggerRender] = React.useState();\n    const _props = React.useRef(props.componentProps);\n    React.useImperativeHandle(ref, () => ({\n        update: (componentProps) => {\n            _props.current = Object.assign(Object.assign({}, _props.current), componentProps);\n            /**\n             * setting a arbitrary piece of state within this component will\n             * trigger a re-render.\n             * we use this rather than updating through a prop since we can\n             * pass a ref into the vanilla-js world.\n             */\n            triggerRender(Date.now());\n        },\n    }), []);\n    return React.createElement(props.component, _props.current);\n};\nReactComponentBridge.displayName = 'DockviewReactJsBridge';\n/**\n * Since we are storing the React.Portal references in a rendered array they\n * require a key property like any other React element rendered in an array\n * to prevent excessive re-rendering\n */\nconst uniquePortalKeyGenerator = (() => {\n    let value = 1;\n    return { next: () => `dockview_react_portal_key_${(value++).toString()}` };\n})();\nexport const ReactPartContext = React.createContext({});\nexport class ReactPart {\n    constructor(parent, portalStore, component, parameters, context) {\n        this.parent = parent;\n        this.portalStore = portalStore;\n        this.component = component;\n        this.parameters = parameters;\n        this.context = context;\n        this._initialProps = {};\n        this.disposed = false;\n        this.createPortal();\n    }\n    update(props) {\n        if (this.disposed) {\n            throw new Error('invalid operation: resource is already disposed');\n        }\n        if (!this.componentInstance) {\n            // if the component is yet to be mounted store the props\n            this._initialProps = Object.assign(Object.assign({}, this._initialProps), props);\n        }\n        else {\n            this.componentInstance.update(props);\n        }\n    }\n    createPortal() {\n        if (this.disposed) {\n            throw new Error('invalid operation: resource is already disposed');\n        }\n        if (!isReactComponent(this.component)) {\n            /**\n             * we know this isn't a React.FunctionComponent so throw an error here.\n             * if we do not intercept then React library will throw a very obsure error\n             * for the same reason... at least at this point we will emit a sensible stacktrace.\n             */\n            throw new Error('Dockview: Only React.memo(...), React.ForwardRef(...) and functional components are accepted as components');\n        }\n        const bridgeComponent = React.createElement(React.forwardRef(ReactComponentBridge), {\n            component: this\n                .component,\n            componentProps: this.parameters,\n            ref: (element) => {\n                this.componentInstance = element;\n                if (Object.keys(this._initialProps).length > 0) {\n                    this.componentInstance.update(this._initialProps);\n                    this._initialProps = {}; // don't keep a reference to the users object once no longer required\n                }\n            },\n        });\n        const node = this.context\n            ? React.createElement(ReactPartContext.Provider, { value: this.context }, bridgeComponent)\n            : bridgeComponent;\n        const portal = ReactDOM.createPortal(node, this.parent, uniquePortalKeyGenerator.next());\n        this.ref = {\n            portal,\n            disposable: this.portalStore.addPortal(portal),\n        };\n    }\n    dispose() {\n        var _a;\n        (_a = this.ref) === null || _a === void 0 ? void 0 : _a.disposable.dispose();\n        this.disposed = true;\n    }\n}\n/**\n * A React Hook that returns an array of portals to be rendered by the user of this hook\n * and a disposable function to add a portal. Calling dispose removes this portal from the\n * portal array\n */\nexport const usePortalsLifecycle = () => {\n    const [portals, setPortals] = React.useState([]);\n    React.useDebugValue(`Portal count: ${portals.length}`);\n    const addPortal = React.useCallback((portal) => {\n        setPortals((existingPortals) => [...existingPortals, portal]);\n        let disposed = false;\n        return DockviewDisposable.from(() => {\n            if (disposed) {\n                throw new Error('invalid operation: resource already disposed');\n            }\n            disposed = true;\n            setPortals((existingPortals) => existingPortals.filter((p) => p !== portal));\n        });\n    }, []);\n    return [portals, addPortal];\n};\nexport function isReactComponent(component) {\n    /**\n     * Yes, we could use \"react-is\" but that would introduce an unwanted peer dependency\n     * so for now we will check in a rather crude fashion...\n     */\n    return (typeof component === 'function' /** Functional Componnts */ ||\n        !!(component === null || component === void 0 ? void 0 : component.$$typeof) /** React.memo(...) Components */);\n}\n","import { ReactPart } from '../react';\nimport { DockviewEmitter, } from 'dockview-core';\nexport class ReactPanelContentPart {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._onDidFocus = new DockviewEmitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new DockviewEmitter();\n        this.onDidBlur = this._onDidBlur.event;\n        this._element = document.createElement('div');\n        this._element.className = 'dockview-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    focus() {\n        // TODO\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n        });\n    }\n    update(event) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update({ params: event.params });\n    }\n    layout(_width, _height) {\n        // noop\n    }\n    dispose() {\n        var _a;\n        this._onDidFocus.dispose();\n        this._onDidBlur.dispose();\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { ReactPart } from '../react';\nexport class ReactPanelHeaderPart {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._element = document.createElement('div');\n        this._element.className = 'dockview-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    focus() {\n        //noop\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n        });\n    }\n    update(event) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update({ params: event.params });\n    }\n    layout(_width, _height) {\n        // noop - retrieval from api\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { ReactPart } from '../react';\nexport class ReactWatermarkPart {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._element = document.createElement('div');\n        this._element.className = 'dockview-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            group: parameters.group,\n            containerApi: parameters.containerApi,\n        });\n    }\n    focus() {\n        // noop\n    }\n    update(params) {\n        var _a, _b, _c;\n        if (this.parameters) {\n            this.parameters.params = params.params;\n        }\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update({ params: (_c = (_b = this.parameters) === null || _b === void 0 ? void 0 : _b.params) !== null && _c !== void 0 ? _c : {} });\n    }\n    layout(_width, _height) {\n        // noop - retrieval from api\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { ReactPart } from '../react';\nimport { DockviewCompositeDisposable, DockviewMutableDisposable, } from 'dockview-core';\nexport class ReactHeaderActionsRendererPart {\n    get element() {\n        return this._element;\n    }\n    get part() {\n        return this._part;\n    }\n    constructor(component, reactPortalStore, _group) {\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._group = _group;\n        this.mutableDisposable = new DockviewMutableDisposable();\n        this._element = document.createElement('div');\n        this._element.className = 'dockview-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    init(parameters) {\n        this.mutableDisposable.value = new DockviewCompositeDisposable(this._group.model.onDidAddPanel(() => {\n            this.updatePanels();\n        }), this._group.model.onDidRemovePanel(() => {\n            this.updatePanels();\n        }), this._group.model.onDidActivePanelChange(() => {\n            this.updateActivePanel();\n        }), parameters.api.onDidActiveChange(() => {\n            this.updateGroupActive();\n        }));\n        this._part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n            panels: this._group.model.panels,\n            activePanel: this._group.model.activePanel,\n            isGroupActive: this._group.api.isActive,\n            group: this._group,\n        });\n    }\n    dispose() {\n        var _a;\n        this.mutableDisposable.dispose();\n        (_a = this._part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n    update(event) {\n        var _a;\n        (_a = this._part) === null || _a === void 0 ? void 0 : _a.update(event.params);\n    }\n    updatePanels() {\n        this.update({ params: { panels: this._group.model.panels } });\n    }\n    updateActivePanel() {\n        this.update({\n            params: {\n                activePanel: this._group.model.activePanel,\n            },\n        });\n    }\n    updateGroupActive() {\n        this.update({\n            params: {\n                isGroupActive: this._group.api.isActive,\n            },\n        });\n    }\n}\n","import React from 'react';\nimport { PROPERTY_KEYS, createDockview, } from 'dockview-core';\nimport { ReactPanelContentPart } from './reactContentPart';\nimport { ReactPanelHeaderPart } from './reactHeaderPart';\nimport { usePortalsLifecycle } from '../react';\nimport { ReactWatermarkPart } from './reactWatermarkPart';\nimport { ReactHeaderActionsRendererPart } from './headerActionsRenderer';\nfunction createGroupControlElement(component, store) {\n    return component\n        ? (groupPanel) => {\n            return new ReactHeaderActionsRendererPart(component, store, groupPanel);\n        }\n        : undefined;\n}\nconst DEFAULT_REACT_TAB = 'props.defaultTabComponent';\nfunction extractCoreOptions(props) {\n    const coreOptions = PROPERTY_KEYS.reduce((obj, key) => {\n        if (key in props) {\n            obj[key] = props[key];\n        }\n        return obj;\n    }, {});\n    return coreOptions;\n}\nexport const DockviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const dockviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    const prevProps = React.useRef({});\n    React.useEffect(() => {\n        const changes = {};\n        PROPERTY_KEYS.forEach((propKey) => {\n            const key = propKey;\n            const propValue = props[key];\n            if (key in props && propValue !== prevProps.current[key]) {\n                changes[key] = propValue;\n            }\n        });\n        if (dockviewRef.current) {\n            dockviewRef.current.updateOptions(changes);\n        }\n        else {\n            // not yet fully initialized\n        }\n        prevProps.current = props;\n    }, PROPERTY_KEYS.map((key) => props[key]));\n    React.useEffect(() => {\n        var _a;\n        if (!domRef.current) {\n            return;\n        }\n        const frameworkTabComponents = (_a = props.tabComponents) !== null && _a !== void 0 ? _a : {};\n        if (props.defaultTabComponent) {\n            frameworkTabComponents[DEFAULT_REACT_TAB] =\n                props.defaultTabComponent;\n        }\n        const frameworkOptions = {\n            createLeftHeaderActionComponent: createGroupControlElement(props.leftHeaderActionsComponent, { addPortal }),\n            createRightHeaderActionComponent: createGroupControlElement(props.rightHeaderActionsComponent, { addPortal }),\n            createPrefixHeaderActionComponent: createGroupControlElement(props.prefixHeaderActionsComponent, { addPortal }),\n            createComponent: (options) => {\n                return new ReactPanelContentPart(options.id, props.components[options.name], {\n                    addPortal,\n                });\n            },\n            createTabComponent(options) {\n                return new ReactPanelHeaderPart(options.id, frameworkTabComponents[options.name], {\n                    addPortal,\n                });\n            },\n            createWatermarkComponent: props.watermarkComponent\n                ? () => {\n                    return new ReactWatermarkPart('watermark', props.watermarkComponent, {\n                        addPortal,\n                    });\n                }\n                : undefined,\n            defaultTabComponent: props.defaultTabComponent\n                ? DEFAULT_REACT_TAB\n                : undefined,\n        };\n        const api = createDockview(domRef.current, Object.assign(Object.assign({}, extractCoreOptions(props)), frameworkOptions));\n        const { clientWidth, clientHeight } = domRef.current;\n        api.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api });\n        }\n        dockviewRef.current = api;\n        return () => {\n            api.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const disposable = dockviewRef.current.onDidDrop((event) => {\n            if (props.onDidDrop) {\n                props.onDidDrop(event);\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.onDidDrop]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const disposable = dockviewRef.current.onWillDrop((event) => {\n            if (props.onWillDrop) {\n                props.onWillDrop(event);\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.onWillDrop]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createComponent: (options) => {\n                return new ReactPanelContentPart(options.id, props.components[options.name], {\n                    addPortal,\n                });\n            },\n        });\n    }, [props.components]);\n    React.useEffect(() => {\n        var _a;\n        if (!dockviewRef.current) {\n            return;\n        }\n        const frameworkTabComponents = (_a = props.tabComponents) !== null && _a !== void 0 ? _a : {};\n        if (props.defaultTabComponent) {\n            frameworkTabComponents[DEFAULT_REACT_TAB] =\n                props.defaultTabComponent;\n        }\n        dockviewRef.current.updateOptions({\n            defaultTabComponent: props.defaultTabComponent\n                ? DEFAULT_REACT_TAB\n                : undefined,\n            createTabComponent(options) {\n                return new ReactPanelHeaderPart(options.id, frameworkTabComponents[options.name], {\n                    addPortal,\n                });\n            },\n        });\n    }, [props.tabComponents, props.defaultTabComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createWatermarkComponent: props.watermarkComponent\n                ? () => {\n                    return new ReactWatermarkPart('watermark', props.watermarkComponent, {\n                        addPortal,\n                    });\n                }\n                : undefined,\n        });\n    }, [props.watermarkComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createRightHeaderActionComponent: createGroupControlElement(props.rightHeaderActionsComponent, { addPortal }),\n        });\n    }, [props.rightHeaderActionsComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createLeftHeaderActionComponent: createGroupControlElement(props.leftHeaderActionsComponent, { addPortal }),\n        });\n    }, [props.leftHeaderActionsComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createPrefixHeaderActionComponent: createGroupControlElement(props.prefixHeaderActionsComponent, { addPortal }),\n        });\n    }, [props.prefixHeaderActionsComponent]);\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nDockviewReact.displayName = 'DockviewComponent';\n","import React from 'react';\nexport const CloseButton = () => (React.createElement(\"svg\", { height: \"11\", width: \"11\", viewBox: \"0 0 28 28\", \"aria-hidden\": 'false', focusable: false, className: \"dockview-svg\" },\n    React.createElement(\"path\", { d: \"M2.1 27.3L0 25.2L11.55 13.65L0 2.1L2.1 0L13.65 11.55L25.2 0L27.3 2.1L15.75 13.65L27.3 25.2L25.2 27.3L13.65 15.75L2.1 27.3Z\" })));\nexport const ExpandMore = () => {\n    return (React.createElement(\"svg\", { width: \"11\", height: \"11\", viewBox: \"0 0 24 15\", \"aria-hidden\": 'false', focusable: false, className: \"dockview-svg\" },\n        React.createElement(\"path\", { d: \"M12 14.15L0 2.15L2.15 0L12 9.9L21.85 0.0499992L24 2.2L12 14.15Z\" })));\n};\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React from 'react';\nimport { CloseButton } from '../svg';\nfunction useTitle(api) {\n    const [title, setTitle] = React.useState(api.title);\n    React.useEffect(() => {\n        const disposable = api.onDidTitleChange((event) => {\n            setTitle(event.title);\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [api]);\n    return title;\n}\nexport const DockviewDefaultTab = (_a) => {\n    var { api, containerApi: _containerApi, params: _params, hideClose, closeActionOverride } = _a, rest = __rest(_a, [\"api\", \"containerApi\", \"params\", \"hideClose\", \"closeActionOverride\"]);\n    const title = useTitle(api);\n    const onClose = React.useCallback((event) => {\n        event.preventDefault();\n        if (closeActionOverride) {\n            closeActionOverride();\n        }\n        else {\n            api.close();\n        }\n    }, [api, closeActionOverride]);\n    const onPointerDown = React.useCallback((e) => {\n        e.preventDefault();\n    }, []);\n    const onClick = React.useCallback((event) => {\n        if (event.defaultPrevented) {\n            return;\n        }\n        api.setActive();\n        if (rest.onClick) {\n            rest.onClick(event);\n        }\n    }, [api, rest.onClick]);\n    return (React.createElement(\"div\", Object.assign({ \"data-testid\": \"dockview-dv-default-tab\" }, rest, { onClick: onClick, className: \"dv-default-tab\" }),\n        React.createElement(\"span\", { className: \"dv-default-tab-content\" }, title),\n        !hideClose && (React.createElement(\"div\", { className: \"dv-default-tab-action\", onPointerDown: onPointerDown, onClick: onClose },\n            React.createElement(CloseButton, null)))));\n};\n","import { SplitviewApi, SplitviewPanel, } from 'dockview-core';\nimport { ReactPart } from '../react';\nexport class ReactPanelView extends SplitviewPanel {\n    constructor(id, component, reactComponent, reactPortalStore) {\n        super(id, component);\n        this.reactComponent = reactComponent;\n        this.reactPortalStore = reactPortalStore;\n    }\n    getComponent() {\n        var _a, _b;\n        return new ReactPart(this.element, this.reactPortalStore, this.reactComponent, {\n            params: (_b = (_a = this._params) === null || _a === void 0 ? void 0 : _a.params) !== null && _b !== void 0 ? _b : {},\n            api: this.api,\n            containerApi: new SplitviewApi(this._params.accessor),\n        });\n    }\n}\n","import React from 'react';\nimport { Orientation, createSplitview, } from 'dockview-core';\nimport { usePortalsLifecycle } from '../react';\nimport { ReactPanelView } from './view';\nexport const SplitviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const splitviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    React.useEffect(() => {\n        var _a;\n        const api = createSplitview(domRef.current, {\n            disableAutoResizing: props.disableAutoResizing,\n            orientation: (_a = props.orientation) !== null && _a !== void 0 ? _a : Orientation.HORIZONTAL,\n            frameworkComponents: props.components,\n            frameworkWrapper: {\n                createComponent: (id, componentId, component) => {\n                    return new ReactPanelView(id, componentId, component, {\n                        addPortal,\n                    });\n                },\n            },\n            proportionalLayout: typeof props.proportionalLayout === 'boolean'\n                ? props.proportionalLayout\n                : true,\n            styles: props.hideBorders\n                ? { separatorBorder: 'transparent' }\n                : undefined,\n        });\n        const { clientWidth, clientHeight } = domRef.current;\n        api.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api });\n        }\n        splitviewRef.current = api;\n        return () => {\n            api.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!splitviewRef.current) {\n            return;\n        }\n        splitviewRef.current.updateOptions({\n            frameworkComponents: props.components,\n        });\n    }, [props.components]);\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nSplitviewReact.displayName = 'SplitviewComponent';\n","import { GridviewApi, GridviewPanel, } from 'dockview-core';\nimport { ReactPart } from '../react';\nexport class ReactGridPanelView extends GridviewPanel {\n    constructor(id, component, reactComponent, reactPortalStore) {\n        super(id, component);\n        this.reactComponent = reactComponent;\n        this.reactPortalStore = reactPortalStore;\n    }\n    getComponent() {\n        var _a, _b;\n        return new ReactPart(this.element, this.reactPortalStore, this.reactComponent, {\n            params: (_b = (_a = this._params) === null || _a === void 0 ? void 0 : _a.params) !== null && _b !== void 0 ? _b : {},\n            api: this.api,\n            // TODO: fix casting hack\n            containerApi: new GridviewApi(this._params\n                .accessor),\n        });\n    }\n}\n","import React from 'react';\nimport { Orientation, createGridview, } from 'dockview-core';\nimport { ReactGridPanelView } from './view';\nimport { usePortalsLifecycle } from '../react';\nexport const GridviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const gridviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    React.useEffect(() => {\n        var _a;\n        if (!domRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const api = createGridview(domRef.current, {\n            disableAutoResizing: props.disableAutoResizing,\n            proportionalLayout: typeof props.proportionalLayout === 'boolean'\n                ? props.proportionalLayout\n                : true,\n            orientation: (_a = props.orientation) !== null && _a !== void 0 ? _a : Orientation.HORIZONTAL,\n            frameworkComponents: props.components,\n            frameworkComponentFactory: {\n                createComponent: (id, componentId, component) => {\n                    return new ReactGridPanelView(id, componentId, component, {\n                        addPortal,\n                    });\n                },\n            },\n            styles: props.hideBorders\n                ? { separatorBorder: 'transparent' }\n                : undefined,\n        });\n        const { clientWidth, clientHeight } = domRef.current;\n        api.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api });\n        }\n        gridviewRef.current = api;\n        return () => {\n            api.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!gridviewRef.current) {\n            return;\n        }\n        gridviewRef.current.updateOptions({\n            frameworkComponents: props.components,\n        });\n    }, [props.components]);\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nGridviewReact.displayName = 'GridviewComponent';\n","import { ReactPart } from '../react';\nexport class PanePanelSection {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._element = document.createElement('div');\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            title: parameters.title,\n            containerApi: parameters.containerApi,\n        });\n    }\n    toJSON() {\n        return {\n            id: this.id,\n        };\n    }\n    update(params) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update(params.params);\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import React from 'react';\nimport { createPaneview, } from 'dockview-core';\nimport { usePortalsLifecycle } from '../react';\nimport { PanePanelSection } from './view';\nexport const PaneviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const paneviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    React.useEffect(() => {\n        const createComponent = (id, _componentId, component) => new PanePanelSection(id, component, {\n            addPortal,\n        });\n        const api = createPaneview(domRef.current, {\n            disableAutoResizing: props.disableAutoResizing,\n            frameworkComponents: props.components,\n            components: {},\n            headerComponents: {},\n            disableDnd: props.disableDnd,\n            headerframeworkComponents: props.headerComponents,\n            frameworkWrapper: {\n                header: {\n                    createComponent,\n                },\n                body: {\n                    createComponent,\n                },\n            },\n            showDndOverlay: props.showDndOverlay,\n        });\n        const { clientWidth, clientHeight } = domRef.current;\n        api.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api });\n        }\n        paneviewRef.current = api;\n        return () => {\n            api.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return;\n        }\n        paneviewRef.current.updateOptions({\n            frameworkComponents: props.components,\n        });\n    }, [props.components]);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return;\n        }\n        paneviewRef.current.updateOptions({\n            headerframeworkComponents: props.headerComponents,\n        });\n    }, [props.headerComponents]);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return () => {\n                //\n            };\n        }\n        const api = paneviewRef.current;\n        const disposable = api.onDidDrop((event) => {\n            if (props.onDidDrop) {\n                props.onDidDrop(Object.assign(Object.assign({}, event), { api }));\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.onDidDrop]);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return;\n        }\n        paneviewRef.current.updateOptions({\n            showDndOverlay: props.showDndOverlay,\n        });\n    }, [props.showDndOverlay]);\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nPaneviewReact.displayName = 'PaneviewComponent';\n","// extracted by mini-css-extract-plugin\nexport default {\"admonition\":\"admonition_Gfwi\",\"admonitionHeading\":\"admonitionHeading_f1Ed\",\"admonitionIcon\":\"admonitionIcon_kpSf\",\"admonitionContent\":\"admonitionContent_UjKb\"};","import React from 'react';\nimport clsx from 'clsx';\nimport { ThemeClassNames } from '@docusaurus/theme-common';\nimport styles from './styles.module.css';\nfunction AdmonitionContainer({ type, className, children }) {\n    return (\n        <div\n            className={clsx(\n                ThemeClassNames.common.admonition,\n                ThemeClassNames.common.admonitionType(type),\n                styles.admonition,\n                className\n            )}\n        >\n            {children}\n        </div>\n    );\n}\nfunction AdmonitionHeading({ icon, title }) {\n    return (\n        <div className={styles.admonitionHeading}>\n            <span className={styles.admonitionIcon}>{icon}</span>\n            {/* {title} */}\n        </div>\n    );\n}\nfunction AdmonitionContent({ children }) {\n    return children ? (\n        <div className={styles.admonitionContent}>{children}</div>\n    ) : null;\n}\nexport default function AdmonitionLayout(props) {\n    const { type, icon, title, children, className } = props;\n    return (\n        <AdmonitionContainer type={type} className={className}>\n            <AdmonitionHeading title={title} icon={icon} />\n            <AdmonitionContent>{children}</AdmonitionContent>\n        </AdmonitionContainer>\n    );\n}\n","import React from 'react';\nexport default function AdmonitionIconNote(props) {\n  return (\n    <svg viewBox=\"0 0 14 16\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        d=\"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z\"\n      />\n    </svg>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport Translate from '@docusaurus/Translate';\nimport AdmonitionLayout from '@theme/Admonition/Layout';\nimport IconNote from '@theme/Admonition/Icon/Note';\nconst infimaClassName = 'alert alert--secondary';\nconst defaultProps = {\n  icon: <IconNote />,\n  title: (\n    <Translate\n      id=\"theme.admonition.note\"\n      description=\"The default label used for the Note admonition (:::note)\">\n      note\n    </Translate>\n  ),\n};\nexport default function AdmonitionTypeNote(props) {\n  return (\n    <AdmonitionLayout\n      {...defaultProps}\n      {...props}\n      className={clsx(infimaClassName, props.className)}>\n      {props.children}\n    </AdmonitionLayout>\n  );\n}\n","import React from 'react';\nexport default function AdmonitionIconTip(props) {\n  return (\n    <svg viewBox=\"0 0 12 16\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        d=\"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z\"\n      />\n    </svg>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport Translate from '@docusaurus/Translate';\nimport AdmonitionLayout from '@theme/Admonition/Layout';\nimport IconTip from '@theme/Admonition/Icon/Tip';\nconst infimaClassName = 'alert alert--success';\nconst defaultProps = {\n  icon: <IconTip />,\n  title: (\n    <Translate\n      id=\"theme.admonition.tip\"\n      description=\"The default label used for the Tip admonition (:::tip)\">\n      tip\n    </Translate>\n  ),\n};\nexport default function AdmonitionTypeTip(props) {\n  return (\n    <AdmonitionLayout\n      {...defaultProps}\n      {...props}\n      className={clsx(infimaClassName, props.className)}>\n      {props.children}\n    </AdmonitionLayout>\n  );\n}\n","import React from 'react';\nexport default function AdmonitionIconInfo(props) {\n  return (\n    <svg viewBox=\"0 0 14 16\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        d=\"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z\"\n      />\n    </svg>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport Translate from '@docusaurus/Translate';\nimport AdmonitionLayout from '@theme/Admonition/Layout';\nimport IconInfo from '@theme/Admonition/Icon/Info';\nconst infimaClassName = 'alert alert--info';\nconst defaultProps = {\n  icon: <IconInfo />,\n  title: (\n    <Translate\n      id=\"theme.admonition.info\"\n      description=\"The default label used for the Info admonition (:::info)\">\n      info\n    </Translate>\n  ),\n};\nexport default function AdmonitionTypeInfo(props) {\n  return (\n    <AdmonitionLayout\n      {...defaultProps}\n      {...props}\n      className={clsx(infimaClassName, props.className)}>\n      {props.children}\n    </AdmonitionLayout>\n  );\n}\n","import React from 'react';\nexport default function AdmonitionIconCaution(props) {\n  return (\n    <svg viewBox=\"0 0 16 16\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        d=\"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z\"\n      />\n    </svg>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport Translate from '@docusaurus/Translate';\nimport AdmonitionLayout from '@theme/Admonition/Layout';\nimport IconWarning from '@theme/Admonition/Icon/Warning';\nconst infimaClassName = 'alert alert--warning';\nconst defaultProps = {\n  icon: <IconWarning />,\n  title: (\n    <Translate\n      id=\"theme.admonition.warning\"\n      description=\"The default label used for the Warning admonition (:::warning)\">\n      warning\n    </Translate>\n  ),\n};\nexport default function AdmonitionTypeWarning(props) {\n  return (\n    <AdmonitionLayout\n      {...defaultProps}\n      {...props}\n      className={clsx(infimaClassName, props.className)}>\n      {props.children}\n    </AdmonitionLayout>\n  );\n}\n","import React from 'react';\nexport default function AdmonitionIconDanger(props) {\n  return (\n    <svg viewBox=\"0 0 12 16\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        d=\"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z\"\n      />\n    </svg>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport Translate from '@docusaurus/Translate';\nimport AdmonitionLayout from '@theme/Admonition/Layout';\nimport IconDanger from '@theme/Admonition/Icon/Danger';\nconst infimaClassName = 'alert alert--danger';\nconst defaultProps = {\n  icon: <IconDanger />,\n  title: (\n    <Translate\n      id=\"theme.admonition.danger\"\n      description=\"The default label used for the Danger admonition (:::danger)\">\n      danger\n    </Translate>\n  ),\n};\nexport default function AdmonitionTypeDanger(props) {\n  return (\n    <AdmonitionLayout\n      {...defaultProps}\n      {...props}\n      className={clsx(infimaClassName, props.className)}>\n      {props.children}\n    </AdmonitionLayout>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport Translate from '@docusaurus/Translate';\nimport AdmonitionLayout from '@theme/Admonition/Layout';\nimport IconWarning from '@theme/Admonition/Icon/Warning';\nconst infimaClassName = 'alert alert--warning';\nconst defaultProps = {\n  icon: <IconWarning />,\n  title: (\n    <Translate\n      id=\"theme.admonition.caution\"\n      description=\"The default label used for the Caution admonition (:::caution)\">\n      caution\n    </Translate>\n  ),\n};\n// TODO remove before v4: Caution replaced by Warning\n// see https://github.com/facebook/docusaurus/issues/7558\nexport default function AdmonitionTypeCaution(props) {\n  return (\n    <AdmonitionLayout\n      {...defaultProps}\n      {...props}\n      className={clsx(infimaClassName, props.className)}>\n      {props.children}\n    </AdmonitionLayout>\n  );\n}\n","import React from 'react';\nimport AdmonitionTypeNote from '@theme/Admonition/Type/Note';\nimport AdmonitionTypeTip from '@theme/Admonition/Type/Tip';\nimport AdmonitionTypeInfo from '@theme/Admonition/Type/Info';\nimport AdmonitionTypeWarning from '@theme/Admonition/Type/Warning';\nimport AdmonitionTypeDanger from '@theme/Admonition/Type/Danger';\nimport AdmonitionTypeCaution from '@theme/Admonition/Type/Caution';\nconst admonitionTypes = {\n  note: AdmonitionTypeNote,\n  tip: AdmonitionTypeTip,\n  info: AdmonitionTypeInfo,\n  warning: AdmonitionTypeWarning,\n  danger: AdmonitionTypeDanger,\n};\n// Undocumented legacy admonition type aliases\n// Provide hardcoded/untranslated retrocompatible label\n// See also https://github.com/facebook/docusaurus/issues/7767\nconst admonitionAliases = {\n  secondary: (props) => <AdmonitionTypeNote title=\"secondary\" {...props} />,\n  important: (props) => <AdmonitionTypeInfo title=\"important\" {...props} />,\n  success: (props) => <AdmonitionTypeTip title=\"success\" {...props} />,\n  caution: AdmonitionTypeCaution,\n};\nexport default {\n  ...admonitionTypes,\n  ...admonitionAliases,\n};\n","import React from 'react';\nimport {processAdmonitionProps} from '@docusaurus/theme-common';\nimport AdmonitionTypes from '@theme/Admonition/Types';\nfunction getAdmonitionTypeComponent(type) {\n  const component = AdmonitionTypes[type];\n  if (component) {\n    return component;\n  }\n  console.warn(\n    `No admonition component found for admonition type \"${type}\". Using Info as fallback.`,\n  );\n  return AdmonitionTypes.info;\n}\nexport default function Admonition(unprocessedProps) {\n  const props = processAdmonitionProps(unprocessedProps);\n  const AdmonitionTypeComponent = getAdmonitionTypeComponent(props.type);\n  return <AdmonitionTypeComponent {...props} />;\n}\n","import React from 'react';\n// Import the original mapper\nimport MDXComponents from '@theme-original/MDXComponents';\nimport { FrameworkSpecific } from '@site/src/components/frameworkSpecific';\nimport { CodeRunner } from '../components/ui/codeRunner';\n\nexport default {\n    // Re-use the default mapping\n    ...MDXComponents,\n    // Map the \"<Highlight>\" tag to our Highlight component\n    // `Highlight` will receive all props that were passed to `<Highlight>` in MDX\n    FrameworkSpecific,\n    CodeRunner,\n};\n","import BrowserOnly from '@docusaurus/BrowserOnly';\nimport { DockviewEmitter } from 'dockview';\nimport * as React from 'react';\nimport './frameworkSpecific.css';\n\nexport interface FrameworkDescriptor {\n    value: string;\n    label: string;\n    icon: string;\n}\n\nconst frameworks: FrameworkDescriptor[] = [\n    { value: 'JavaScript', label: 'JavaScript', icon: 'img/js-icon.svg' },\n    { value: 'React', label: 'React', icon: 'img/react-icon.svg' },\n    { value: 'Vue', label: 'Vue', icon: 'img/vue-icon.svg' },\n    // { value: 'Angular', label: 'Angular' },\n];\n\nconst activeFrameworkGlobal = new DockviewEmitter<string>({ replay: true });\n\nexport function useActiveFramework(): [\n    FrameworkDescriptor,\n    (value: string) => void\n] {\n    const [value, setValue] = React.useState<string>(\n        localStorage.getItem('dv-docs-framework') ?? frameworks[0].value\n    );\n\n    React.useEffect(() => {\n        const disposable = activeFrameworkGlobal.event((value) => [\n            setValue(value),\n        ]);\n\n        activeFrameworkGlobal.fire(\n            localStorage.getItem('dv-docs-framework') ?? frameworks[0].value\n        );\n\n        return () => {\n            disposable.dispose();\n        };\n    }, []);\n\n    const setter = React.useCallback((value: string) => {\n        localStorage.setItem('dv-docs-framework', value);\n        setValue(value);\n        activeFrameworkGlobal.fire(value);\n    }, []);\n\n    const option = frameworks.find((_) => _.value === value);\n\n    return [option, setter];\n}\n\nimport * as DropdownMenu from '@radix-ui/react-dropdown-menu';\nimport useBaseUrl from '@docusaurus/useBaseUrl';\n\nconst FrameworkSelector1 = () => {\n    const [activeFramework, setActiveFramework] = useActiveFramework();\n\n    const onChange = (event: React.ChangeEvent<HTMLSelectElement>) => [\n        setActiveFramework(event.target.value),\n    ];\n\n    return (\n        <DropdownMenu.Root>\n            <DropdownMenu.Trigger asChild={true}>\n                <div className=\"framework-menu-item-select\">\n                    <span style={{ padding: '0px 8px' }}>\n                        {activeFramework.label}\n                    </span>\n                    <img\n                        width={20}\n                        height={20}\n                        src={useBaseUrl(activeFramework.icon)}\n                        style={{ marginRight: '8px' }}\n                    />\n                </div>\n            </DropdownMenu.Trigger>\n            <DropdownMenu.Content\n                side=\"bottom\"\n                align=\"end\"\n                sideOffset={10}\n                className=\"DropdownMenuContent\"\n            >\n                {frameworks.map((framework) => {\n                    return (\n                        <DropdownMenu.Item\n                            onClick={() => setActiveFramework(framework.label)}\n                            className=\"DropdownMenuItem\"\n                        >\n                            <div className=\"framework-menu-item\">\n                                <span style={{ paddingRight: '8px' }}>\n                                    {framework.label}\n                                </span>\n                                <img\n                                    width={20}\n                                    height={20}\n                                    src={useBaseUrl(framework.icon)}\n                                />\n                            </div>\n                        </DropdownMenu.Item>\n                    );\n                })}\n            </DropdownMenu.Content>\n        </DropdownMenu.Root>\n    );\n};\n\nexport const FrameworkSelector = () => {\n    return <BrowserOnly>{() => <FrameworkSelector1 />}</BrowserOnly>;\n};\n\nconst FrameworkSpecific1 = (props: {\n    framework: string;\n    children: React.ReactNode;\n}) => {\n    const [activeFramework] = useActiveFramework();\n\n    if (activeFramework.value === props.framework) {\n        return props.children;\n    }\n\n    return null;\n};\n\nexport const FrameworkSpecific = (props: {\n    framework: string;\n    children: React.ReactNode;\n}) => {\n    return <BrowserOnly>{() => <FrameworkSpecific1 {...props} />}</BrowserOnly>;\n};\n","import * as React from 'react';\nimport { useActiveFramework } from '../frameworkSpecific';\nimport BrowserOnly from '@docusaurus/BrowserOnly';\n\nconst BASE_SANDBOX_URL =\n    'https://codesandbox.io/s/github/mathuo/dockview/tree/gh-pages';\n\nexport const _CodeRunner = (props: { id: string; height: number }) => {\n    const [framework] = useActiveFramework();\n\n    const sandboxUrl = `${BASE_SANDBOX_URL}/templates/${\n        props.id\n    }/${framework.label.toLowerCase()}`;\n    const path = `/templates/${\n        props.id\n    }/${framework.value.toLowerCase()}/index.html`;\n    return (\n        <div>\n            <iframe\n                src={path}\n                style={{ width: '100%', height: `${props.height ?? 300}px` }}\n            />\n            <div style={{ display: 'flex', justifyContent: 'flex-end' }}>\n                <CodeSandbox url={sandboxUrl} />\n                <a\n                    target=\"#blank\"\n                    href={path}\n                    className=\"material-symbols-outlined\"\n                >\n                    open_in_new\n                </a>\n            </div>\n        </div>\n    );\n};\n\nexport const CodeRunner = (props: { id: string; height: number }) => {\n    return <BrowserOnly>{() => <_CodeRunner {...props} />}</BrowserOnly>;\n};\n\nconst CodeSandbox = (props: { url: string }) => {\n    return (\n        <span\n            className=\"codesandbox-button\"\n            style={{ display: 'flex', alignItems: 'center' }}\n        >\n            <span className=\"codesandbox-button-pretext\">{`Open in `}</span>\n            <a\n                href={props.url}\n                target={'_blank'}\n                rel=\"noopener\"\n                className=\"codesandbox-button-content\"\n            >\n                <span\n                    style={{\n                        fontWeight: 'bold',\n                        paddingRight: '4px',\n                    }}\n                >\n                    CodeSandbox\n                </span>\n            </a>\n        </span>\n    );\n};\n"],"names":["BlogListPaginator","props","metadata","previousPage","nextPage","_jsxs","className","translate","id","message","description","children","_jsx","PaginatorNavLink","permalink","title","Translate","isNext","BlogPostItems","_ref","items","component","BlogPostItemComponent","BlogPostItem","_Fragment","map","_ref2","content","BlogPostContent","BlogPostProvider","useBlogTagsPostsPageTitle","tag","blogPostsPlural","selectMessage","usePluralForm","count","useBlogPostsPlural","nPosts","tagName","label","BlogTagsPostsPageMetadata","PageMetadata","SearchMetadata","BlogTagsPostsPageContent","sidebar","listMetadata","BlogLayout","unlisted","Unlisted","Heading","as","Link","href","allTagsPath","BlogTagsPostsPage","HtmlClassNameProvider","clsx","ThemeClassNames","wrapper","blogPages","page","blogTagPostListPage","UnlistedBannerTitle","UnlistedBannerMessage","UnlistedMetadata","Head","name","UnlistedBanner","Admonition","type","common","unlistedBanner","TransferObject","PanelTransfer","constructor","viewId","groupId","panelId","super","this","PaneTransfer","paneId","LocalSelectionTransfer","getInstance","INSTANCE","hasData","proto","clearData","undefined","data","getData","setData","getPanelData","panelTransfer","prototype","getPaneData","paneTransfer","Event","Disposable","any","_len","arguments","length","Array","_key","listener","disposables","child","dispose","forEach","d","DockviewEvent","_defaultPrevented","defaultPrevented","preventDefault","Stacktrace","create","_a","Error","stack","value","print","console","warn","Listener","callback","stacktrace","Emitter","setLeakageMonitorEnabled","isEnabled","ENABLE_TRACKING","MEMORY_LEAK_WATCHER","clear","_last","options","_listeners","_disposed","event","_event","replay","push","index","indexOf","splice","add","fire","e","queueMicrotask","delete","addDisposableWindowListener","element","addEventListener","removeEventListener","addDisposableListener","events","Map","size","set","AsapEvent","_onFired","_currentFireCount","_queued","onEvent","fireCountAtTimeOfEventSubscription","NONE","from","func","CompositeDisposable","isDisposed","_isDisposed","args","_disposables","addDisposables","_len2","_key2","arg","MutableDisposable","_disposable","disposable","watchElementResize","cb","observer","ResizeObserver","entires","requestAnimationFrame","firstEntry","observe","unobserve","disconnect","removeClasses","classes","classname","classList","contains","remove","addClasses","toggleClass","isToggled","hasClass","isAncestor","testChild","testAncestor","parentNode","getElementsByTagName","slice","call","document","trackFocus","FocusTracker","_onDidFocus","onDidFocus","_onDidBlur","onDidBlur","hasFocus","activeElement","loosingFocus","onFocus","onBlur","window","setTimeout","_refreshStateHandler","HTMLElement","refreshState","QUASI_PREVENT_DEFAULT_KEY","quasiDefaultPrevented","getDomNodePagePosition","domNode","left","top","width","height","getBoundingClientRect","scrollX","scrollY","disableIframePointEvents","iframes","original","WeakMap","iframe","style","pointerEvents","release","get","Classnames","_classNames","setClassNames","classNames","split","filter","v","trim","tail","arr","sequenceEquals","arr1","arr2","i","pushToStart","unshift","pushToEnd","array","findIndex","t","clamp","min","max","Math","sequentialNumberGenerator","next","toString","range","to","result","ViewItem","_size","cachedVisibleSize","_cachedVisibleSize","visible","minimumSize","view","viewMinimumSize","maximumSize","viewMaximumSize","priority","snap","enabled","container","setVisible","toggle","Orientation","SashState","LayoutPriority","Sizing","Distribute","Split","Invisible","Splitview","contentSize","_contentSize","orthogonalSize","_orthogonalSize","viewItems","proportions","_proportions","orientation","_orientation","tmp","HORIZONTAL","reduce","r","item","Number","POSITIVE_INFINITY","startSnappingEnabled","_startSnappingEnabled","updateSashEnablement","endSnappingEnabled","_endSnappingEnabled","disabled","_disabled","margin","_margin","_this","sashes","_onDidSashEnd","onDidSashEnd","_onDidAddView","onDidAddView","_onDidRemoveView","onDidRemoveView","resize","delta","sizes","lowPriorityIndexes","highPriorityIndexes","overloadMinDelta","overloadMaxDelta","snapBefore","snapAfter","x","NEGATIVE_INFINITY","upIndexes","downIndexes","upItems","upSizes","downItems","downSizes","minDeltaUp","_","maxDeltaUp","maxDeltaDown","minDeltaDown","minDelta","maxDelta","snapped","snapView","limitDelta","actualDelta","deltaUp","viewDelta","deltaDown","createContainer","proportionalLayout","viewContainer","createViewContainer","sashContainer","createSashContainer","appendChild","styles","descriptor","views","viewDescriptor","sizing","addView","saveProportions","separatorBorder","removeProperty","setProperty","isViewVisible","setViewVisible","viewItem","distributeEmptySpace","layoutViews","getViewSize","resizeView","indexes","Low","High","round","relayout","getViews","onDidChange","skipLayout","createElement","viewSize","newSize","removeChild","insertBefore","sash","onPointerStart","start","clientX","clientY","sashIndex","fn","firstIndex","s","snapBeforeIndex","findFirstSnapIndex","snapAfterIndex","snappedViewItem","halfSize","floor","onPointerMove","end","sashItem","distributeViewSizes","flexibleViewItems","flexibleSize","removeView","getViewCachedVisibleSize","moveView","layout","previousSize","total","proportion","lowPriorityIndex","emptyDelta","visibleViewItems","sashCount","marginReducedSize","totalLeftOffset","viewLeftOffsets","runningVisiblePanelCount","flag","visiblePanelsBeforeThisView","offset","sashWidth","VERTICAL","previous","collapsesDown","expandsDown","reverseViews","reverse","collapsesUp","expandsUp","position","snappedBefore","snappedAfter","updateSash","MINIMUM","MAXIMUM","DISABLED","ENABLED","state","orientationClassname","Paneview","splitview","paneItems","skipAnimation","_onDidChange","getPanes","pane","onDidChangeExpansionState","setupAnimation","paneItem","addPane","removePane","skipDispose","animationTimer","clearTimeout","LeafNode","minimumWidth","maximumWidth","minimumHeight","maximumHeight","minimumOrthogonalSize","maximumOrthogonalSize","BranchNode","c","Normal","priorities","some","p","childDescriptors","_childrenDisposable","_onDidVisibilityChange","onDidVisibilityChange","childDescriptor","node","setupChildrenEvents","_visible","isChildVisible","setChildVisible","wereAllChildrenHidden","areAllChildrenHidden","moveChild","_removeChild","_addChild","getChildSize","resizeChild","addChild","getChildCachedVisibleSize","findLeaf","candiateNode","last","flipNode","orthogonal","totalSize","childSize","getGridLocation","parentElement","test","el","firstElementChild","lastElementChild","nextElementSibling","indexInParent","getRelativeLocation","rootOrientation","location","direction","getLocationOrientation","directionOrientation","getDirectionOrientation","rest","_index","serializeBranchNode","box","isGridBranchNode","toJSON","Gridview","_root","root","locked","_locked","branch","pop","maximizedView","_maximizedNode","leaf","hasMaximizedView","maximizeView","getNode","exitMaximizedView","getView","hiddenOnMaximize","hideAllViewsBut","parent","exclude","_onDidMaximizedNodeChange","isMaximized","showViewsInReverseOrder","includes","serialize","maxmizedViewLocation","resullt","maximizedNode","_onDidViewVisibilityChange","deserialize","json","deserializer","_deserialize","_deserializeNode","serializedChild","fromJSON","oldRoot","insertOrthogonalSplitviewAtRoot","childReference","progmaticSelect","_getViews","nodeCachedVisibleSize","path","n","l","onDidViewVisibilityChange","onDidMaximizedNodeChange","parentLocation","pathToParent","grandParent","parentIndex","__","newSiblingSize","newSiblingCachedVisibleSize","newParent","newSibling","nodeToRemove","sibling","isSiblingVisible","siblingSizing","Resizable","_element","disableResizing","_disableResizing","entry","offsetParent","currentElement","DocumentFragment","host","isInDocument","contentRect","nextLayoutId","toTarget","BaseGrid","_id","_groups","groups","values","gridview","activeGroup","_activeGroup","disableAutoResizing","_onDidRemove","onDidRemove","_onDidAdd","onDidAdd","_onDidMaximizedChange","onDidMaximizedChange","_onDidActiveChange","onDidActiveChange","_bufferOnDidLayoutChange","onDidLayoutChange","_onDidViewVisibilityChangeMicroTaskQueue","onDidViewVisibilityChangeMicroTaskQueue","panel","isVisible","updateOptions","_b","_c","_d","maximizeGroup","doSetGroupActive","isMaximizedGroup","exitMaximizedGroup","hasMaximizedGroup","doAddGroup","group","doRemoveGroup","has","skipActive","getPanel","setActive","removeGroup","moveToNext","moveToPrevious","forceResize","SplitviewApi","panels","onDidLayoutFromJSON","removePanel","focus","addPanel","movePanel","PaneviewApi","onDidDrop","emitter","Object","assign","api","GridviewApi","onDidAddPanel","onDidAddGroup","onDidRemovePanel","onDidRemoveGroup","onDidActivePanelChange","onDidActiveGroupChange","force","DockviewApi","totalPanels","gap","onDidMovePanel","onWillDrop","onWillShowOverlay","onWillDragGroup","onWillDragPanel","onUnhandledDragOverEvent","activePanel","getGroupPanel","addGroup","closeAllGroups","getGroup","addFloatingGroup","onDidMaximizedGroupChange","addPopoutGroup","setGap","DragHandler","dataDisposable","pointerEventsDisposable","_onDragStart","onDragStart","configure","isCancelled","dataTransfer","effectAllowed","DragAndDropObserver","callbacks","target","registerListeners","onDragEnter","onDragOver","onDragLeave","onDragEnd","onDrop","WillShowOverlayEvent","nativeEvent","directionToPosition","positionToDirection","DEFAULT_ACTIVATION_SIZE","DEFAULT_SIZE","Droptarget","_state","_onDrop","_onWillShowOverlay","_acceptedTargetZonesSet","Set","acceptedTargetZones","dnd","removeDropTarget","clientWidth","clientHeight","rect","currentTarget","y","quadrant","calculateQuadrant","isAlreadyUsed","canDisplayOverlay","willShowOverlayEvent","markAsUsed","targetElement","overlayElement","append","toggleClasses","stopPropagation","setTargetZones","setOverlayModel","model","overlayModel","USED_EVENT_ID","isSmallX","isSmallY","isLeft","isRight","isTop","isBottom","rightClass","leftClass","topClass","bottomClass","sizeOptions","overlayType","activationSizeOptions","activationSize","threshold","xp","yp","calculateQuadrantAsPercentage","calculateQuadrantAsPixels","WillFocusEvent","PanelApiImpl","isFocused","_isFocused","isActive","_isActive","_isVisible","_width","_height","_parameters","panelUpdatesDisposable","_onDidDimensionChange","onDidDimensionsChange","_onDidChangeFocus","onDidFocusChange","_onWillFocus","onWillFocus","_onWillVisibilityChange","onWillVisibilityChange","_onActiveChange","onActiveChange","_onDidParametersChange","onDidParametersChange","getParameters","initialize","parameters","update","params","updateParameters","SplitviewPanelApiImpl","_onDidConstraintsChangeInternal","onDidConstraintsChangeInternal","_onDidConstraintsChange","onDidConstraintsChange","_onDidSizeChange","onDidSizeChange","setConstraints","setSize","PaneviewPanelApiImpl","_pane","_onDidExpansionChange","onDidExpansionChange","_onMouseEnter","onMouseEnter","_onMouseLeave","onMouseLeave","setExpanded","isExpanded","BasePanelView","_params","tabIndex","outline","overflow","focusTracker","part","init","getComponent","key","keys","PaneviewPanel","headerSize","_minimumBodySize","_maximumBodySize","minimumBodySize","maximumBodySize","headerVisible","_headerVisible","header","display","headerComponent","isHeaderVisible","_onDidChangeExpansionState","_isExpanded","expandedSize","accessor","ev","isPanelExpanded","renderOnce","expanded","body","bodyPart","getBodyComponent","headerPart","getHeaderComponent","lineHeight","minHeight","maxHeight","DraggablePaneviewPanel","disableDnd","_onDidDrop","initDragFeatures","accessorId","draggable","handler","showDndOverlay","containerApi","existingPanel","allPanels","fromIndex","toIndex","ContentContainer","dropTarget","shiftKey","show","hide","renderPanel","asActive","doRender","isPanelActive","renderer","renderContainer","detatch","attach","referenceContainer","openPanel","closePanel","TabDragHandler","Tab","_onChanged","onChanged","_onDropped","dragHandler","setContent","GroupDragHandler","dragEvent","getComputedStyle","bgColor","getPropertyValue","color","ghostElement","backgroundColor","padding","fontSize","borderRadius","textContent","setDragImage","addGhostImage","VoidContainer","dropTraget","TabsContainer","tabs","hidden","_hidden","setRightActionsElement","rightActions","rightActionsContainer","setLeftActionsElement","leftActions","leftActionsContainer","setPrefixActionsElement","preActions","preActionsContainer","tab","selectedIndex","_onTabDragStart","onTabDragStart","_onGroupDragStart","onGroupDragStart","singleTabMode","tabContainer","voidContainer","WillShowOverlayLocationEvent","kind","disableFloatingGroups","rootTop","rootLeft","inDragMode","button","_isGroupActive","addTab","tabToRemove","setActivePanel","isActivePanel","find","isFloatingGroupsEnabled","isFloatingWithOnePanel","DockviewUnhandledDragOverEvent","isAccepted","_isAccepted","accept","PROPERTY_KEYS","properties","hideBorders","floatingGroupBounds","popoutUrl","defaultRenderer","debug","rootOverlayModel","noPanelsOverlay","DockviewDidDropEvent","DockviewWillDropEvent","_kind","DockviewGroupPanelModel","_activePanel","_panels","isEmpty","hasWatermark","watermark","tabsContainer","isContentFocused","contentContainer","_location","groupPanel","_onDidLocationChange","mostRecentlyUsed","_overwriteRenderContainer","_panelDisposables","_onMove","onMove","_onWillDrop","_onDidAddPanel","_onDidPanelTitleChange","onDidPanelTitleChange","_onDidPanelParametersChange","onDidPanelParametersChange","_onDidRemovePanel","_onDidActivePanelChange","_onUnhandledDragOverEvent","_api","hideHeader","handleDropEvent","focusContent","rerender","overlayRenderContainer","doAddPanel","updateContainer","createRightHeaderActionComponent","_rightHeaderActions","createLeftHeaderActionComponent","_leftHeaderActions","createPrefixHeaderActionComponent","_prefixHeaderActions","activeView","normalizedIndex","suppressRoll","containsPanel","skipSetActive","updateParentGroup","doSetActivePanel","skipSetGroupActive","groupItemOrId","panelToRemove","_removePanel","closeAllPanels","arrPanelCpy","doClose","isLast","removeEmptyGroup","updateActions","isGroupActive","doRemovePanel","nextPanel","skipSetActiveGroup","hasExistingPanel","updateMru","onDidTitleChange","runEvents","createWatermarkComponent","firedEvent","willDropEvent","getKind","itemId","GridviewPanelApiImpl","GridviewPanel","_priority","_snap","__minimumWidth","__minimumHeight","__maximumHeight","__maximumWidth","_minimumWidth","_evaluatedMinimumWidth","updateConstraints","_maximumWidth","_evaluatedMaximumWidth","_minimumHeight","_evaluatedMinimumHeight","_maximumHeight","_evaluatedMaximumHeight","MAX_SAFE_INTEGER","maximum","minimum","NOT_INITIALIZED_MESSAGE","DockviewGroupPanelApiImpl","_group","_mutableDisposable","onDidLocationChange","close","getWindow","moveTo","moveGroupOrPanel","maximize","exitMaximized","DockviewGroupPanel","activePanelMinimumWidth","activePanelMinimumHeight","activePanelMaximumWidth","activePanelMaximumHeight","_model","_e","_f","constraints","DockviewPanelApiImpl","oldGroup","_onDidGroupChange","setupGroupEventListeners","tabComponent","_tabComponent","_onDidTitleChange","_onDidActiveGroupChange","onDidGroupChange","_onDidRendererChange","onDidRendererChange","groupEventsDisposable","setTitle","setRenderer","previousGroup","_trackGroupActive","hasBecomeHidden","hasBecomeVisible","DockviewPanel","_title","_renderer","contentComponent","isPanelVisible","createSvgElementFromPath","svg","createElementNS","setAttributeNS","viewbox","DefaultTab","_content","action","render","DockviewPanelModel","_tab","createContentComponent","createTabComponent","_isPanelVisible","componentName","createComponent","defaultTabComponent","DefaultDockviewDeserialzier","panelData","viewData","Watermark","arialLevelTracker","_orderedList","destroy","setAttribute","zIndex","Overlay","minimumInViewportWidth","minimumInViewportHeight","_onDidChangeEnd","onDidChangeEnd","setupResize","setBounds","bottom","right","bringToFront","bounds","verticalAlignment","horiziontalAlignment","containerRect","overlayRect","xOffset","getMinimumWidth","yOffset","getMinimumHeight","parseFloat","setupDrag","dragTarget","move","track","resizeHandleElement","startPosition","originalY","originalHeight","originalX","originalWidth","moveTop","MAX_VALUE","MINIMUM_HEIGHT","moveBottom","moveLeft","MINIMUM_WIDTH","moveRight","DockviewFloatingGroupPanel","overlay","DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE","DEFAULT_FLOATING_GROUP_POSITION","OverlayRenderContainer","createFocusableElement","focusContainer","box2","visibilityChanged","observerDisposable","correctLayerPosition","floatingGroup","floatingGroups","level","getAttribute","MutationObserver","attributeFilter","attributes","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","rejected","done","then","apply","PopoutWindow","_window","_onWillClose","onWillClose","_onDidClose","onDidClose","dimensions","screenX","screenY","innerWidth","innerHeight","open","url","features","entries","join","externalWindow","createPopoutWindowContainer","onDidOpen","externalDocument","styleSheetList","styleSheets","styleSheet","link","rel","head","cssTexts","cssRules","rule","cssText","err","createTextNode","addStyles","DEFAULT_ROOT_OVERLAY_MODEL","moveGroupWithoutDestroying","removedPanel","DockviewComponent","flatMap","_options","_floatingGroups","nextGroupId","_deserializer","_onWillDragPanel","_onWillDragGroup","_onDidLayoutFromJSON","_onDidMovePanel","_onDidMaximizedGroupChange","_popoutGroups","_onDidRemoveGroup","_onDidAddGroup","_moving","updateWatermark","_rootDropTarget","orthogonalize","itemToPopout","theme","toClassList","list","cls","startsWith","getDockviewTheme","overridePopoutGroup","getNextGroupId","popoutWindowDisposable","popoutContainer","gready","referenceGroup","referenceLocation","isGroupAddedToDom","returnedGroup","createGroup","movingLock","doSetGroupAndPanelActive","isValidReferenceGroup","popoutGroup","skipPopoutAssociated","skipPopoutReturn","removedGroup","catch","error","popoutReferenceGroupId","popoutReferenceGroup","skipRemoveGroup","anchoredBox","getAnchoredBox","minimumWidthWithinViewport","minimumHeightWithinViewport","querySelector","floatingGroupPanel","skipActiveGroup","createGroupAtLocation","floating","includePanel","collection","floats","popoutGroups","gridReferenceGroup","grid","isArray","createGroupFromSerializedState","createdPanels","serializedFloatingGroups","serializedFloatingGroup","serializedPopoutGroups","serializedPopoutGroup","hasActiveGroup","initial","initialWidth","initialHeight","referencePanel","findGroup","isPanelOptionsWithGroup","createPanel","inactive","floatingGroupOptions","relativeLocation","orientationAtLocation","coordinates","watermarkContainer","isGroupOptionsWithGroup","selectedGroup","refGroup","re","isMoving","destinationGroup","sourceGroupId","sourceItemId","destinationTarget","destinationIndex","sourceGroup","targetLocation","targetParentLocation","sourceLocation","sourceParentLocation","newGroup","targetGroup","updatedReferenceLocation","dropLocation","moveGroup","selectedFloatingGroup","selectedPopoutGroup","components","frameworkComponents","createFrameworkComponent","fallback","Component","FrameworkComponent","GridviewComponent","_onDidLayoutfromJSON","hasOrientationChanged","serializedGridview","queue","frameworkComponentFactory","registerPanel","f","reference","groupItem","SplitviewComponent","_splitview","_splitviewChangeDisposable","_onDidLayoutChange","skipFocus","frameworkWrapper","doAddView","serializedSplitview","DefaultHeader","_expandedIcon","_collapsedIcon","apiRef","_expander","updateIcon","PaneFramework","PaneviewComponent","paneview","_paneview","_viewDisposables","headerComponents","headerframeworkComponents","serializedPaneview","SplitviewPanel","_minimumSize","_evaluatedMinimumSize","_maximumSize","_evaluatedMaximumSize","createDockview","createSplitview","createGridview","createPaneview","ReactComponentBridge","ref","triggerRender","React","_props","componentProps","current","Date","now","displayName","uniquePortalKeyGenerator","ReactPartContext","ReactPart","portalStore","context","_initialProps","disposed","createPortal","componentInstance","$$typeof","bridgeComponent","Provider","portal","ReactDOM","addPortal","usePortalsLifecycle","portals","setPortals","existingPortals","DockviewDisposable","ReactPanelContentPart","reactPortalStore","DockviewEmitter","ReactPanelHeaderPart","ReactWatermarkPart","ReactHeaderActionsRendererPart","_part","mutableDisposable","DockviewMutableDisposable","DockviewCompositeDisposable","updatePanels","updateActivePanel","updateGroupActive","createGroupControlElement","store","DEFAULT_REACT_TAB","DockviewReact","domRef","dockviewRef","prevProps","changes","propKey","propValue","frameworkTabComponents","tabComponents","frameworkOptions","leftHeaderActionsComponent","rightHeaderActionsComponent","prefixHeaderActionsComponent","watermarkComponent","obj","extractCoreOptions","onReady","CloseButton","viewBox","focusable","__rest","hasOwnProperty","getOwnPropertySymbols","propertyIsEnumerable","DockviewDefaultTab","_containerApi","hideClose","closeActionOverride","useTitle","onClose","onPointerDown","onClick","ReactPanelView","reactComponent","SplitviewReact","splitviewRef","componentId","ReactGridPanelView","GridviewReact","gridviewRef","PanePanelSection","PaneviewReact","paneviewRef","_componentId","AdmonitionContainer","admonition","admonitionType","AdmonitionHeading","icon","admonitionHeading","admonitionIcon","AdmonitionContent","_ref3","admonitionContent","AdmonitionLayout","AdmonitionIconNote","fillRule","defaultProps","IconNote","AdmonitionTypeNote","AdmonitionIconTip","IconTip","AdmonitionTypeTip","AdmonitionIconInfo","IconInfo","AdmonitionTypeInfo","AdmonitionIconCaution","IconWarning","AdmonitionIconDanger","IconDanger","note","tip","info","warning","danger","secondary","important","success","caution","unprocessedProps","processAdmonitionProps","AdmonitionTypeComponent","AdmonitionTypes","MDXComponents","FrameworkSpecific","CodeRunner","frameworks","activeFrameworkGlobal","useActiveFramework","setValue","localStorage","getItem","setter","setItem","FrameworkSelector1","activeFramework","setActiveFramework","DropdownMenu","asChild","src","useBaseUrl","marginRight","side","align","sideOffset","framework","paddingRight","FrameworkSelector","BrowserOnly","FrameworkSpecific1","_CodeRunner","sandboxUrl","toLowerCase","justifyContent","CodeSandbox","alignItems","fontWeight"],"sourceRoot":""}