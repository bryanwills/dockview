{"version":3,"file":"assets/js/a6aa9e1f.ae3c71b1.js","mappings":"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","sources":["webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/BlogListPage/index.js","webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/BlogListPaginator/index.js","webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/BlogPostItems/index.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/dataTransfer.js","webpack://dockview-docs/../dockview-core/dist/esm/events.js","webpack://dockview-docs/../dockview-core/dist/esm/lifecycle.js","webpack://dockview-docs/../dockview-core/dist/esm/dom.js","webpack://dockview-docs/../dockview-core/dist/esm/array.js","webpack://dockview-docs/../dockview-core/dist/esm/math.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/viewItem.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/splitview.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/paneview.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/leafNode.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/branchNode.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/gridview.js","webpack://dockview-docs/../dockview-core/dist/esm/resizable.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/baseComponentGridview.js","webpack://dockview-docs/../dockview-core/dist/esm/api/component.api.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/abstractDragHandler.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/dnd.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/droptarget.js","webpack://dockview-docs/../dockview-core/dist/esm/api/panelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/api/splitviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/api/paneviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/basePanelView.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/paneviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/draggablePaneviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/panel/content.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/tab/tab.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/groupDragHandler.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/ghost.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/titlebar/voidContainer.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/titlebar/tabsContainer.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/options.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewGroupPanelModel.js","webpack://dockview-docs/../dockview-core/dist/esm/api/gridviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/gridviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/api/dockviewGroupPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewGroupPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/api/dockviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/svg.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/tab/defaultTab.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewPanelModel.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/deserializer.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/watermark/watermark.js","webpack://dockview-docs/../dockview-core/dist/esm/overlay/overlay.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewFloatingGroupPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/constants.js","webpack://dockview-docs/../dockview-core/dist/esm/overlay/overlayRenderContainer.js","webpack://dockview-docs/../dockview-core/dist/esm/popoutWindow.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/strictEventsSequencing.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/panel/componentFactory.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/gridviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/splitviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/defaultPaneviewHeader.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/paneviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/splitviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/api/entryPoints.js","webpack://dockview-docs/../dockview/dist/esm/react.js","webpack://dockview-docs/../dockview/dist/esm/dockview/reactContentPart.js","webpack://dockview-docs/../dockview/dist/esm/dockview/reactHeaderPart.js","webpack://dockview-docs/../dockview/dist/esm/dockview/reactWatermarkPart.js","webpack://dockview-docs/../dockview/dist/esm/dockview/headerActionsRenderer.js","webpack://dockview-docs/../dockview/dist/esm/dockview/dockview.js","webpack://dockview-docs/../dockview/dist/esm/svg.js","webpack://dockview-docs/../dockview/dist/esm/dockview/defaultTab.js","webpack://dockview-docs/../dockview/dist/esm/splitview/view.js","webpack://dockview-docs/../dockview/dist/esm/splitview/splitview.js","webpack://dockview-docs/../dockview/dist/esm/gridview/view.js","webpack://dockview-docs/../dockview/dist/esm/gridview/gridview.js","webpack://dockview-docs/../dockview/dist/esm/paneview/view.js","webpack://dockview-docs/../dockview/dist/esm/paneview/paneview.js","webpack://dockview-docs/./src/theme/Admonition/Layout/styles.module.css","webpack://dockview-docs/./src/theme/Admonition/Layout/index.js","webpack://dockview-docs/./src/theme/Admonition/Icon/Note.js","webpack://dockview-docs/./src/theme/Admonition/Type/Note.js","webpack://dockview-docs/./src/theme/Admonition/Icon/Tip.js","webpack://dockview-docs/./src/theme/Admonition/Type/Tip.js","webpack://dockview-docs/./src/theme/Admonition/Icon/Info.js","webpack://dockview-docs/./src/theme/Admonition/Type/Info.js","webpack://dockview-docs/./src/theme/Admonition/Icon/Warning.js","webpack://dockview-docs/./src/theme/Admonition/Type/Warning.js","webpack://dockview-docs/./src/theme/Admonition/Icon/Danger.js","webpack://dockview-docs/./src/theme/Admonition/Type/Danger.js","webpack://dockview-docs/./src/theme/Admonition/Type/Caution.js","webpack://dockview-docs/./src/theme/Admonition/Types.js","webpack://dockview-docs/./src/theme/Admonition/index.js","webpack://dockview-docs/./src/theme/MDXComponents.js","webpack://dockview-docs/./src/components/frameworkSpecific.tsx","webpack://dockview-docs/./src/components/ui/codeRunner.tsx"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport clsx from 'clsx';\nimport useDocusaurusContext from '@docusaurus/useDocusaurusContext';\nimport {\n  PageMetadata,\n  HtmlClassNameProvider,\n  ThemeClassNames,\n} from '@docusaurus/theme-common';\nimport BlogLayout from '@theme/BlogLayout';\nimport BlogListPaginator from '@theme/BlogListPaginator';\nimport SearchMetadata from '@theme/SearchMetadata';\nimport BlogPostItems from '@theme/BlogPostItems';\nfunction BlogListPageMetadata(props) {\n  const {metadata} = props;\n  const {\n    siteConfig: {title: siteTitle},\n  } = useDocusaurusContext();\n  const {blogDescription, blogTitle, permalink} = metadata;\n  const isBlogOnlyMode = permalink === '/';\n  const title = isBlogOnlyMode ? siteTitle : blogTitle;\n  return (\n    <>\n      <PageMetadata title={title} description={blogDescription} />\n      <SearchMetadata tag=\"blog_posts_list\" />\n    </>\n  );\n}\nfunction BlogListPageContent(props) {\n  const {metadata, items, sidebar} = props;\n  return (\n    <BlogLayout sidebar={sidebar}>\n      <BlogPostItems items={items} />\n      <BlogListPaginator metadata={metadata} />\n    </BlogLayout>\n  );\n}\nexport default function BlogListPage(props) {\n  return (\n    <HtmlClassNameProvider\n      className={clsx(\n        ThemeClassNames.wrapper.blogPages,\n        ThemeClassNames.page.blogListPage,\n      )}>\n      <BlogListPageMetadata {...props} />\n      <BlogListPageContent {...props} />\n    </HtmlClassNameProvider>\n  );\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport Translate, {translate} from '@docusaurus/Translate';\nimport PaginatorNavLink from '@theme/PaginatorNavLink';\nexport default function BlogListPaginator(props) {\n  const {metadata} = props;\n  const {previousPage, nextPage} = metadata;\n  return (\n    <nav\n      className=\"pagination-nav\"\n      aria-label={translate({\n        id: 'theme.blog.paginator.navAriaLabel',\n        message: 'Blog list page navigation',\n        description: 'The ARIA label for the blog pagination',\n      })}>\n      {previousPage && (\n        <PaginatorNavLink\n          permalink={previousPage}\n          title={\n            <Translate\n              id=\"theme.blog.paginator.newerEntries\"\n              description=\"The label used to navigate to the newer blog posts page (previous page)\">\n              Newer Entries\n            </Translate>\n          }\n        />\n      )}\n      {nextPage && (\n        <PaginatorNavLink\n          permalink={nextPage}\n          title={\n            <Translate\n              id=\"theme.blog.paginator.olderEntries\"\n              description=\"The label used to navigate to the older blog posts page (next page)\">\n              Older Entries\n            </Translate>\n          }\n          isNext\n        />\n      )}\n    </nav>\n  );\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport {BlogPostProvider} from '@docusaurus/theme-common/internal';\nimport BlogPostItem from '@theme/BlogPostItem';\nexport default function BlogPostItems({\n  items,\n  component: BlogPostItemComponent = BlogPostItem,\n}) {\n  return (\n    <>\n      {items.map(({content: BlogPostContent}) => (\n        <BlogPostProvider\n          key={BlogPostContent.metadata.permalink}\n          content={BlogPostContent}>\n          <BlogPostItemComponent>\n            <BlogPostContent />\n          </BlogPostItemComponent>\n        </BlogPostProvider>\n      ))}\n    </>\n  );\n}\n","class TransferObject {\n}\nexport class PanelTransfer extends TransferObject {\n    constructor(viewId, groupId, panelId) {\n        super();\n        this.viewId = viewId;\n        this.groupId = groupId;\n        this.panelId = panelId;\n    }\n}\nexport class PaneTransfer extends TransferObject {\n    constructor(viewId, paneId) {\n        super();\n        this.viewId = viewId;\n        this.paneId = paneId;\n    }\n}\n/**\n * A singleton to store transfer data during drag & drop operations that are only valid within the application.\n */\nexport class LocalSelectionTransfer {\n    constructor() {\n        // protect against external instantiation\n    }\n    static getInstance() {\n        return LocalSelectionTransfer.INSTANCE;\n    }\n    hasData(proto) {\n        return proto && proto === this.proto;\n    }\n    clearData(proto) {\n        if (this.hasData(proto)) {\n            this.proto = undefined;\n            this.data = undefined;\n        }\n    }\n    getData(proto) {\n        if (this.hasData(proto)) {\n            return this.data;\n        }\n        return undefined;\n    }\n    setData(data, proto) {\n        if (proto) {\n            this.data = data;\n            this.proto = proto;\n        }\n    }\n}\nLocalSelectionTransfer.INSTANCE = new LocalSelectionTransfer();\nexport function getPanelData() {\n    const panelTransfer = LocalSelectionTransfer.getInstance();\n    const isPanelEvent = panelTransfer.hasData(PanelTransfer.prototype);\n    if (!isPanelEvent) {\n        return undefined;\n    }\n    return panelTransfer.getData(PanelTransfer.prototype)[0];\n}\nexport function getPaneData() {\n    const paneTransfer = LocalSelectionTransfer.getInstance();\n    const isPanelEvent = paneTransfer.hasData(PaneTransfer.prototype);\n    if (!isPanelEvent) {\n        return undefined;\n    }\n    return paneTransfer.getData(PaneTransfer.prototype)[0];\n}\n","export var Event;\n(function (Event) {\n    Event.any = (...children) => {\n        return (listener) => {\n            const disposables = children.map((child) => child(listener));\n            return {\n                dispose: () => {\n                    disposables.forEach((d) => {\n                        d.dispose();\n                    });\n                },\n            };\n        };\n    };\n})(Event || (Event = {}));\nexport class DockviewEvent {\n    constructor() {\n        this._defaultPrevented = false;\n    }\n    get defaultPrevented() {\n        return this._defaultPrevented;\n    }\n    preventDefault() {\n        this._defaultPrevented = true;\n    }\n}\nclass LeakageMonitor {\n    constructor() {\n        this.events = new Map();\n    }\n    get size() {\n        return this.events.size;\n    }\n    add(event, stacktrace) {\n        this.events.set(event, stacktrace);\n    }\n    delete(event) {\n        this.events.delete(event);\n    }\n    clear() {\n        this.events.clear();\n    }\n}\nclass Stacktrace {\n    static create() {\n        var _a;\n        return new Stacktrace((_a = new Error().stack) !== null && _a !== void 0 ? _a : '');\n    }\n    constructor(value) {\n        this.value = value;\n    }\n    print() {\n        console.warn('dockview: stacktrace', this.value);\n    }\n}\nclass Listener {\n    constructor(callback, stacktrace) {\n        this.callback = callback;\n        this.stacktrace = stacktrace;\n    }\n}\n// relatively simple event emitter taken from https://github.com/microsoft/vscode/blob/master/src/vs/base/common/event.ts\nexport class Emitter {\n    static setLeakageMonitorEnabled(isEnabled) {\n        if (isEnabled !== Emitter.ENABLE_TRACKING) {\n            Emitter.MEMORY_LEAK_WATCHER.clear();\n        }\n        Emitter.ENABLE_TRACKING = isEnabled;\n    }\n    get value() {\n        return this._last;\n    }\n    constructor(options) {\n        this.options = options;\n        this._listeners = [];\n        this._disposed = false;\n    }\n    get event() {\n        if (!this._event) {\n            this._event = (callback) => {\n                var _a;\n                if (((_a = this.options) === null || _a === void 0 ? void 0 : _a.replay) && this._last !== undefined) {\n                    callback(this._last);\n                }\n                const listener = new Listener(callback, Emitter.ENABLE_TRACKING ? Stacktrace.create() : undefined);\n                this._listeners.push(listener);\n                return {\n                    dispose: () => {\n                        const index = this._listeners.indexOf(listener);\n                        if (index > -1) {\n                            this._listeners.splice(index, 1);\n                        }\n                        else if (Emitter.ENABLE_TRACKING) {\n                            // console.warn(\n                            //     `dockview: listener already disposed`,\n                            //     Stacktrace.create().print()\n                            // );\n                        }\n                    },\n                };\n            };\n            if (Emitter.ENABLE_TRACKING) {\n                Emitter.MEMORY_LEAK_WATCHER.add(this._event, Stacktrace.create());\n            }\n        }\n        return this._event;\n    }\n    fire(e) {\n        this._last = e;\n        for (const listener of this._listeners) {\n            listener.callback(e);\n        }\n    }\n    dispose() {\n        if (!this._disposed) {\n            this._disposed = true;\n            if (this._listeners.length > 0) {\n                if (Emitter.ENABLE_TRACKING) {\n                    queueMicrotask(() => {\n                        var _a;\n                        // don't check until stack of execution is completed to allow for out-of-order disposals within the same execution block\n                        for (const listener of this._listeners) {\n                            console.warn('dockview: stacktrace', (_a = listener.stacktrace) === null || _a === void 0 ? void 0 : _a.print());\n                        }\n                    });\n                }\n                this._listeners = [];\n            }\n            if (Emitter.ENABLE_TRACKING && this._event) {\n                Emitter.MEMORY_LEAK_WATCHER.delete(this._event);\n            }\n        }\n    }\n}\nEmitter.ENABLE_TRACKING = false;\nEmitter.MEMORY_LEAK_WATCHER = new LeakageMonitor();\nexport function addDisposableWindowListener(element, type, listener, options) {\n    element.addEventListener(type, listener, options);\n    return {\n        dispose: () => {\n            element.removeEventListener(type, listener, options);\n        },\n    };\n}\nexport function addDisposableListener(element, type, listener, options) {\n    element.addEventListener(type, listener, options);\n    return {\n        dispose: () => {\n            element.removeEventListener(type, listener, options);\n        },\n    };\n}\n/**\n *\n * Event Emitter that fires events from a Microtask callback, only one event will fire per event-loop cycle.\n *\n * It's kind of like using an `asapScheduler` in RxJs with additional logic to only fire once per event-loop cycle.\n * This implementation exists to avoid external dependencies.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/queueMicrotask\n * @see https://rxjs.dev/api/index/const/asapScheduler\n */\nexport class AsapEvent {\n    constructor() {\n        this._onFired = new Emitter();\n        this._currentFireCount = 0;\n        this._queued = false;\n        this.onEvent = (e) => {\n            /**\n             * when the event is first subscribed to take note of the current fire count\n             */\n            const fireCountAtTimeOfEventSubscription = this._currentFireCount;\n            return this._onFired.event(() => {\n                /**\n                 * if the current fire count is greater than the fire count at event subscription\n                 * then the event has been fired since we subscribed and it's ok to \"on_next\" the event.\n                 *\n                 * if the count is not greater then what we are recieving is an event from the microtask\n                 * queue that was triggered before we actually subscribed and therfore we should ignore it.\n                 */\n                if (this._currentFireCount > fireCountAtTimeOfEventSubscription) {\n                    e();\n                }\n            });\n        };\n    }\n    fire() {\n        this._currentFireCount++;\n        if (this._queued) {\n            return;\n        }\n        this._queued = true;\n        queueMicrotask(() => {\n            this._queued = false;\n            this._onFired.fire();\n        });\n    }\n    dispose() {\n        this._onFired.dispose();\n    }\n}\n","export var Disposable;\n(function (Disposable) {\n    Disposable.NONE = {\n        dispose: () => {\n            // noop\n        },\n    };\n    function from(func) {\n        return {\n            dispose: () => {\n                func();\n            },\n        };\n    }\n    Disposable.from = from;\n})(Disposable || (Disposable = {}));\nexport class CompositeDisposable {\n    get isDisposed() {\n        return this._isDisposed;\n    }\n    constructor(...args) {\n        this._isDisposed = false;\n        this._disposables = args;\n    }\n    addDisposables(...args) {\n        args.forEach((arg) => this._disposables.push(arg));\n    }\n    dispose() {\n        if (this._isDisposed) {\n            return;\n        }\n        this._isDisposed = true;\n        this._disposables.forEach((arg) => arg.dispose());\n        this._disposables = [];\n    }\n}\nexport class MutableDisposable {\n    constructor() {\n        this._disposable = Disposable.NONE;\n    }\n    set value(disposable) {\n        if (this._disposable) {\n            this._disposable.dispose();\n        }\n        this._disposable = disposable;\n    }\n    dispose() {\n        if (this._disposable) {\n            this._disposable.dispose();\n            this._disposable = Disposable.NONE;\n        }\n    }\n}\n","import { Emitter, addDisposableListener, addDisposableWindowListener, } from './events';\nimport { CompositeDisposable } from './lifecycle';\nexport class OverflowObserver extends CompositeDisposable {\n    constructor(el) {\n        super();\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._value = null;\n        this.addDisposables(this._onDidChange, watchElementResize(el, (entry) => {\n            const hasScrollX = entry.target.scrollWidth > entry.target.clientWidth;\n            const hasScrollY = entry.target.scrollHeight > entry.target.clientHeight;\n            this._value = { hasScrollX, hasScrollY };\n            this._onDidChange.fire(this._value);\n        }));\n    }\n}\nexport function watchElementResize(element, cb) {\n    const observer = new ResizeObserver((entires) => {\n        /**\n         * Fast browser window resize produces Error: ResizeObserver loop limit exceeded.\n         * The error isn't visible in browser console, doesn't affect functionality, but degrades performance.\n         * See https://stackoverflow.com/questions/49384120/resizeobserver-loop-limit-exceeded/58701523#58701523\n         */\n        requestAnimationFrame(() => {\n            const firstEntry = entires[0];\n            cb(firstEntry);\n        });\n    });\n    observer.observe(element);\n    return {\n        dispose: () => {\n            observer.unobserve(element);\n            observer.disconnect();\n        },\n    };\n}\nexport const removeClasses = (element, ...classes) => {\n    for (const classname of classes) {\n        if (element.classList.contains(classname)) {\n            element.classList.remove(classname);\n        }\n    }\n};\nexport const addClasses = (element, ...classes) => {\n    for (const classname of classes) {\n        if (!element.classList.contains(classname)) {\n            element.classList.add(classname);\n        }\n    }\n};\nexport const toggleClass = (element, className, isToggled) => {\n    const hasClass = element.classList.contains(className);\n    if (isToggled && !hasClass) {\n        element.classList.add(className);\n    }\n    if (!isToggled && hasClass) {\n        element.classList.remove(className);\n    }\n};\nexport function isAncestor(testChild, testAncestor) {\n    while (testChild) {\n        if (testChild === testAncestor) {\n            return true;\n        }\n        testChild = testChild.parentNode;\n    }\n    return false;\n}\nexport function getElementsByTagName(tag) {\n    return Array.prototype.slice.call(document.getElementsByTagName(tag), 0);\n}\nexport function trackFocus(element) {\n    return new FocusTracker(element);\n}\n/**\n * Track focus on an element. Ensure tabIndex is set when an HTMLElement is not focusable by default\n */\nclass FocusTracker extends CompositeDisposable {\n    constructor(element) {\n        super();\n        this._onDidFocus = new Emitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new Emitter();\n        this.onDidBlur = this._onDidBlur.event;\n        this.addDisposables(this._onDidFocus, this._onDidBlur);\n        let hasFocus = isAncestor(document.activeElement, element);\n        let loosingFocus = false;\n        const onFocus = () => {\n            loosingFocus = false;\n            if (!hasFocus) {\n                hasFocus = true;\n                this._onDidFocus.fire();\n            }\n        };\n        const onBlur = () => {\n            if (hasFocus) {\n                loosingFocus = true;\n                window.setTimeout(() => {\n                    if (loosingFocus) {\n                        loosingFocus = false;\n                        hasFocus = false;\n                        this._onDidBlur.fire();\n                    }\n                }, 0);\n            }\n        };\n        this._refreshStateHandler = () => {\n            const currentNodeHasFocus = isAncestor(document.activeElement, element);\n            if (currentNodeHasFocus !== hasFocus) {\n                if (hasFocus) {\n                    onBlur();\n                }\n                else {\n                    onFocus();\n                }\n            }\n        };\n        if (element instanceof HTMLElement) {\n            this.addDisposables(addDisposableListener(element, 'focus', onFocus, true));\n            this.addDisposables(addDisposableListener(element, 'blur', onBlur, true));\n        }\n        else {\n            this.addDisposables(addDisposableWindowListener(element, 'focus', onFocus, true));\n            this.addDisposables(addDisposableWindowListener(element, 'blur', onBlur, true));\n        }\n    }\n    refreshState() {\n        this._refreshStateHandler();\n    }\n}\n// quasi: apparently, but not really; seemingly\nconst QUASI_PREVENT_DEFAULT_KEY = 'dv-quasiPreventDefault';\n// mark an event directly for other listeners to check\nexport function quasiPreventDefault(event) {\n    event[QUASI_PREVENT_DEFAULT_KEY] = true;\n}\n// check if this event has been marked\nexport function quasiDefaultPrevented(event) {\n    return event[QUASI_PREVENT_DEFAULT_KEY];\n}\nexport function addStyles(document, styleSheetList) {\n    const styleSheets = Array.from(styleSheetList);\n    for (const styleSheet of styleSheets) {\n        if (styleSheet.href) {\n            const link = document.createElement('link');\n            link.href = styleSheet.href;\n            link.type = styleSheet.type;\n            link.rel = 'stylesheet';\n            document.head.appendChild(link);\n        }\n        let cssTexts = [];\n        try {\n            if (styleSheet.cssRules) {\n                cssTexts = Array.from(styleSheet.cssRules).map((rule) => rule.cssText);\n            }\n        }\n        catch (err) {\n            // security errors (lack of permissions), ignore\n        }\n        for (const rule of cssTexts) {\n            const style = document.createElement('style');\n            style.appendChild(document.createTextNode(rule));\n            document.head.appendChild(style);\n        }\n    }\n}\nexport function getDomNodePagePosition(domNode) {\n    const { left, top, width, height } = domNode.getBoundingClientRect();\n    return {\n        left: left + window.scrollX,\n        top: top + window.scrollY,\n        width: width,\n        height: height,\n    };\n}\n/**\n * Check whether an element is in the DOM (including the Shadow DOM)\n * @see https://terodox.tech/how-to-tell-if-an-element-is-in-the-dom-including-the-shadow-dom/\n */\nexport function isInDocument(element) {\n    let currentElement = element;\n    while (currentElement === null || currentElement === void 0 ? void 0 : currentElement.parentNode) {\n        if (currentElement.parentNode === document) {\n            return true;\n        }\n        else if (currentElement.parentNode instanceof DocumentFragment) {\n            // handle shadow DOMs\n            currentElement = currentElement.parentNode.host;\n        }\n        else {\n            currentElement = currentElement.parentNode;\n        }\n    }\n    return false;\n}\nexport function addTestId(element, id) {\n    element.setAttribute('data-testid', id);\n}\nexport function disableIframePointEvents() {\n    const iframes = [\n        ...getElementsByTagName('iframe'),\n        ...getElementsByTagName('webview'),\n    ];\n    const original = new WeakMap(); // don't hold onto HTMLElement references longer than required\n    for (const iframe of iframes) {\n        original.set(iframe, iframe.style.pointerEvents);\n        iframe.style.pointerEvents = 'none';\n    }\n    return {\n        release: () => {\n            var _a;\n            for (const iframe of iframes) {\n                iframe.style.pointerEvents = (_a = original.get(iframe)) !== null && _a !== void 0 ? _a : 'auto';\n            }\n            iframes.splice(0, iframes.length); // don't hold onto HTMLElement references longer than required\n        },\n    };\n}\nexport function getDockviewTheme(element) {\n    function toClassList(element) {\n        const list = [];\n        for (let i = 0; i < element.classList.length; i++) {\n            list.push(element.classList.item(i));\n        }\n        return list;\n    }\n    let theme = undefined;\n    let parent = element;\n    while (parent !== null) {\n        theme = toClassList(parent).find((cls) => cls.startsWith('dockview-theme-'));\n        if (typeof theme === 'string') {\n            break;\n        }\n        parent = parent.parentElement;\n    }\n    return theme;\n}\nexport class Classnames {\n    constructor(element) {\n        this.element = element;\n        this._classNames = [];\n    }\n    setClassNames(classNames) {\n        for (const className of this._classNames) {\n            toggleClass(this.element, className, false);\n        }\n        this._classNames = classNames\n            .split(' ')\n            .filter((v) => v.trim().length > 0);\n        for (const className of this._classNames) {\n            toggleClass(this.element, className, true);\n        }\n    }\n}\n","export function tail(arr) {\n    if (arr.length === 0) {\n        throw new Error('Invalid tail call');\n    }\n    return [arr.slice(0, arr.length - 1), arr[arr.length - 1]];\n}\nexport function last(arr) {\n    return arr.length > 0 ? arr[arr.length - 1] : undefined;\n}\nexport function sequenceEquals(arr1, arr2) {\n    if (arr1.length !== arr2.length) {\n        return false;\n    }\n    for (let i = 0; i < arr1.length; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Pushes an element to the start of the array, if found.\n */\nexport function pushToStart(arr, value) {\n    const index = arr.indexOf(value);\n    if (index > -1) {\n        arr.splice(index, 1);\n        arr.unshift(value);\n    }\n}\n/**\n * Pushes an element to the end of the array, if found.\n */\nexport function pushToEnd(arr, value) {\n    const index = arr.indexOf(value);\n    if (index > -1) {\n        arr.splice(index, 1);\n        arr.push(value);\n    }\n}\nexport function firstIndex(array, fn) {\n    for (let i = 0; i < array.length; i++) {\n        const element = array[i];\n        if (fn(element)) {\n            return i;\n        }\n    }\n    return -1;\n}\nexport function remove(array, value) {\n    const index = array.findIndex((t) => t === value);\n    if (index > -1) {\n        array.splice(index, 1);\n        return true;\n    }\n    return false;\n}\n","export const clamp = (value, min, max) => {\n    if (min > max) {\n        /**\n         * caveat: an error should be thrown here if this was a proper `clamp` function but we need to handle\n         * cases where `min` > `max` and in those cases return `min`.\n         */\n        return min;\n    }\n    return Math.min(max, Math.max(value, min));\n};\nexport const sequentialNumberGenerator = () => {\n    let value = 1;\n    return { next: () => (value++).toString() };\n};\nexport const range = (from, to) => {\n    const result = [];\n    if (typeof to !== 'number') {\n        to = from;\n        from = 0;\n    }\n    if (from <= to) {\n        for (let i = from; i < to; i++) {\n            result.push(i);\n        }\n    }\n    else {\n        for (let i = from; i > to; i--) {\n            result.push(i);\n        }\n    }\n    return result;\n};\n","import { clamp } from '../math';\nexport class ViewItem {\n    set size(size) {\n        this._size = size;\n    }\n    get size() {\n        return this._size;\n    }\n    get cachedVisibleSize() {\n        return this._cachedVisibleSize;\n    }\n    get visible() {\n        return typeof this._cachedVisibleSize === 'undefined';\n    }\n    get minimumSize() {\n        return this.visible ? this.view.minimumSize : 0;\n    }\n    get viewMinimumSize() {\n        return this.view.minimumSize;\n    }\n    get maximumSize() {\n        return this.visible ? this.view.maximumSize : 0;\n    }\n    get viewMaximumSize() {\n        return this.view.maximumSize;\n    }\n    get priority() {\n        return this.view.priority;\n    }\n    get snap() {\n        return !!this.view.snap;\n    }\n    set enabled(enabled) {\n        this.container.style.pointerEvents = enabled ? '' : 'none';\n    }\n    constructor(container, view, size, disposable) {\n        this.container = container;\n        this.view = view;\n        this.disposable = disposable;\n        this._cachedVisibleSize = undefined;\n        if (typeof size === 'number') {\n            this._size = size;\n            this._cachedVisibleSize = undefined;\n            container.classList.add('visible');\n        }\n        else {\n            this._size = 0;\n            this._cachedVisibleSize = size.cachedVisibleSize;\n        }\n    }\n    setVisible(visible, size) {\n        var _a;\n        if (visible === this.visible) {\n            return;\n        }\n        if (visible) {\n            this.size = clamp((_a = this._cachedVisibleSize) !== null && _a !== void 0 ? _a : 0, this.viewMinimumSize, this.viewMaximumSize);\n            this._cachedVisibleSize = undefined;\n        }\n        else {\n            this._cachedVisibleSize =\n                typeof size === 'number' ? size : this.size;\n            this.size = 0;\n        }\n        this.container.classList.toggle('visible', visible);\n        if (this.view.setVisible) {\n            this.view.setVisible(visible);\n        }\n    }\n    dispose() {\n        this.disposable.dispose();\n        return this.view;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/splitview\n *--------------------------------------------------------------------------------------------*/\nimport { removeClasses, addClasses, toggleClass, disableIframePointEvents, } from '../dom';\nimport { Emitter } from '../events';\nimport { pushToStart, pushToEnd, firstIndex } from '../array';\nimport { range, clamp } from '../math';\nimport { ViewItem } from './viewItem';\nexport var Orientation;\n(function (Orientation) {\n    Orientation[\"HORIZONTAL\"] = \"HORIZONTAL\";\n    Orientation[\"VERTICAL\"] = \"VERTICAL\";\n})(Orientation || (Orientation = {}));\nexport var SashState;\n(function (SashState) {\n    SashState[SashState[\"MAXIMUM\"] = 0] = \"MAXIMUM\";\n    SashState[SashState[\"MINIMUM\"] = 1] = \"MINIMUM\";\n    SashState[SashState[\"DISABLED\"] = 2] = \"DISABLED\";\n    SashState[SashState[\"ENABLED\"] = 3] = \"ENABLED\";\n})(SashState || (SashState = {}));\nexport var LayoutPriority;\n(function (LayoutPriority) {\n    LayoutPriority[\"Low\"] = \"low\";\n    LayoutPriority[\"High\"] = \"high\";\n    LayoutPriority[\"Normal\"] = \"normal\";\n})(LayoutPriority || (LayoutPriority = {}));\nexport var Sizing;\n(function (Sizing) {\n    Sizing.Distribute = { type: 'distribute' };\n    function Split(index) {\n        return { type: 'split', index };\n    }\n    Sizing.Split = Split;\n    function Invisible(cachedVisibleSize) {\n        return { type: 'invisible', cachedVisibleSize };\n    }\n    Sizing.Invisible = Invisible;\n})(Sizing || (Sizing = {}));\nexport class Splitview {\n    get contentSize() {\n        return this._contentSize;\n    }\n    get size() {\n        return this._size;\n    }\n    set size(value) {\n        this._size = value;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    set orthogonalSize(value) {\n        this._orthogonalSize = value;\n    }\n    get length() {\n        return this.viewItems.length;\n    }\n    get proportions() {\n        return this._proportions ? [...this._proportions] : undefined;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    set orientation(value) {\n        this._orientation = value;\n        const tmp = this.size;\n        this.size = this.orthogonalSize;\n        this.orthogonalSize = tmp;\n        removeClasses(this.element, 'dv-horizontal', 'dv-vertical');\n        this.element.classList.add(this.orientation == Orientation.HORIZONTAL\n            ? 'dv-horizontal'\n            : 'dv-vertical');\n    }\n    get minimumSize() {\n        return this.viewItems.reduce((r, item) => r + item.minimumSize, 0);\n    }\n    get maximumSize() {\n        return this.length === 0\n            ? Number.POSITIVE_INFINITY\n            : this.viewItems.reduce((r, item) => r + item.maximumSize, 0);\n    }\n    get startSnappingEnabled() {\n        return this._startSnappingEnabled;\n    }\n    set startSnappingEnabled(startSnappingEnabled) {\n        if (this._startSnappingEnabled === startSnappingEnabled) {\n            return;\n        }\n        this._startSnappingEnabled = startSnappingEnabled;\n        this.updateSashEnablement();\n    }\n    get endSnappingEnabled() {\n        return this._endSnappingEnabled;\n    }\n    set endSnappingEnabled(endSnappingEnabled) {\n        if (this._endSnappingEnabled === endSnappingEnabled) {\n            return;\n        }\n        this._endSnappingEnabled = endSnappingEnabled;\n        this.updateSashEnablement();\n    }\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = value;\n        toggleClass(this.element, 'dv-splitview-disabled', value);\n    }\n    get margin() {\n        return this._margin;\n    }\n    set margin(value) {\n        this._margin = value;\n    }\n    constructor(container, options) {\n        var _a;\n        this.container = container;\n        this.viewItems = [];\n        this.sashes = [];\n        this._size = 0;\n        this._orthogonalSize = 0;\n        this._contentSize = 0;\n        this._proportions = undefined;\n        this._startSnappingEnabled = true;\n        this._endSnappingEnabled = true;\n        this._disabled = false;\n        this._margin = 0;\n        this._onDidSashEnd = new Emitter();\n        this.onDidSashEnd = this._onDidSashEnd.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        this.resize = (index, delta, sizes = this.viewItems.map((x) => x.size), lowPriorityIndexes, highPriorityIndexes, overloadMinDelta = Number.NEGATIVE_INFINITY, overloadMaxDelta = Number.POSITIVE_INFINITY, snapBefore, snapAfter) => {\n            if (index < 0 || index > this.viewItems.length) {\n                return 0;\n            }\n            const upIndexes = range(index, -1);\n            const downIndexes = range(index + 1, this.viewItems.length);\n            //\n            if (highPriorityIndexes) {\n                for (const i of highPriorityIndexes) {\n                    pushToStart(upIndexes, i);\n                    pushToStart(downIndexes, i);\n                }\n            }\n            if (lowPriorityIndexes) {\n                for (const i of lowPriorityIndexes) {\n                    pushToEnd(upIndexes, i);\n                    pushToEnd(downIndexes, i);\n                }\n            }\n            //\n            const upItems = upIndexes.map((i) => this.viewItems[i]);\n            const upSizes = upIndexes.map((i) => sizes[i]);\n            //\n            const downItems = downIndexes.map((i) => this.viewItems[i]);\n            const downSizes = downIndexes.map((i) => sizes[i]);\n            //\n            const minDeltaUp = upIndexes.reduce((_, i) => _ + this.viewItems[i].minimumSize - sizes[i], 0);\n            const maxDeltaUp = upIndexes.reduce((_, i) => _ + this.viewItems[i].maximumSize - sizes[i], 0);\n            //\n            const maxDeltaDown = downIndexes.length === 0\n                ? Number.POSITIVE_INFINITY\n                : downIndexes.reduce((_, i) => _ + sizes[i] - this.viewItems[i].minimumSize, 0);\n            const minDeltaDown = downIndexes.length === 0\n                ? Number.NEGATIVE_INFINITY\n                : downIndexes.reduce((_, i) => _ + sizes[i] - this.viewItems[i].maximumSize, 0);\n            //\n            const minDelta = Math.max(minDeltaUp, minDeltaDown);\n            const maxDelta = Math.min(maxDeltaDown, maxDeltaUp);\n            //\n            let snapped = false;\n            if (snapBefore) {\n                const snapView = this.viewItems[snapBefore.index];\n                const visible = delta >= snapBefore.limitDelta;\n                snapped = visible !== snapView.visible;\n                snapView.setVisible(visible, snapBefore.size);\n            }\n            if (!snapped && snapAfter) {\n                const snapView = this.viewItems[snapAfter.index];\n                const visible = delta < snapAfter.limitDelta;\n                snapped = visible !== snapView.visible;\n                snapView.setVisible(visible, snapAfter.size);\n            }\n            if (snapped) {\n                return this.resize(index, delta, sizes, lowPriorityIndexes, highPriorityIndexes, overloadMinDelta, overloadMaxDelta);\n            }\n            //\n            const tentativeDelta = clamp(delta, minDelta, maxDelta);\n            let actualDelta = 0;\n            //\n            let deltaUp = tentativeDelta;\n            for (let i = 0; i < upItems.length; i++) {\n                const item = upItems[i];\n                const size = clamp(upSizes[i] + deltaUp, item.minimumSize, item.maximumSize);\n                const viewDelta = size - upSizes[i];\n                actualDelta += viewDelta;\n                deltaUp -= viewDelta;\n                item.size = size;\n            }\n            //\n            let deltaDown = actualDelta;\n            for (let i = 0; i < downItems.length; i++) {\n                const item = downItems[i];\n                const size = clamp(downSizes[i] - deltaDown, item.minimumSize, item.maximumSize);\n                const viewDelta = size - downSizes[i];\n                deltaDown += viewDelta;\n                item.size = size;\n            }\n            //\n            return delta;\n        };\n        this._orientation = options.orientation;\n        this.element = this.createContainer();\n        this.margin = (_a = options.margin) !== null && _a !== void 0 ? _a : 0;\n        this.proportionalLayout =\n            options.proportionalLayout === undefined\n                ? true\n                : !!options.proportionalLayout;\n        this.viewContainer = this.createViewContainer();\n        this.sashContainer = this.createSashContainer();\n        this.element.appendChild(this.sashContainer);\n        this.element.appendChild(this.viewContainer);\n        this.container.appendChild(this.element);\n        this.style(options.styles);\n        // We have an existing set of view, add them now\n        if (options.descriptor) {\n            this._size = options.descriptor.size;\n            options.descriptor.views.forEach((viewDescriptor, index) => {\n                const sizing = viewDescriptor.visible === undefined ||\n                    viewDescriptor.visible\n                    ? viewDescriptor.size\n                    : {\n                        type: 'invisible',\n                        cachedVisibleSize: viewDescriptor.size,\n                    };\n                const view = viewDescriptor.view;\n                this.addView(view, sizing, index, true\n                // true skip layout\n                );\n            });\n            // Initialize content size and proportions for first layout\n            this._contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n            this.saveProportions();\n        }\n    }\n    style(styles) {\n        if ((styles === null || styles === void 0 ? void 0 : styles.separatorBorder) === 'transparent') {\n            removeClasses(this.element, 'dv-separator-border');\n            this.element.style.removeProperty('--dv-separator-border');\n        }\n        else {\n            addClasses(this.element, 'dv-separator-border');\n            if (styles === null || styles === void 0 ? void 0 : styles.separatorBorder) {\n                this.element.style.setProperty('--dv-separator-border', styles.separatorBorder);\n            }\n        }\n    }\n    isViewVisible(index) {\n        if (index < 0 || index >= this.viewItems.length) {\n            throw new Error('Index out of bounds');\n        }\n        const viewItem = this.viewItems[index];\n        return viewItem.visible;\n    }\n    setViewVisible(index, visible) {\n        if (index < 0 || index >= this.viewItems.length) {\n            throw new Error('Index out of bounds');\n        }\n        const viewItem = this.viewItems[index];\n        viewItem.setVisible(visible, viewItem.size);\n        this.distributeEmptySpace(index);\n        this.layoutViews();\n        this.saveProportions();\n    }\n    getViewSize(index) {\n        if (index < 0 || index >= this.viewItems.length) {\n            return -1;\n        }\n        return this.viewItems[index].size;\n    }\n    resizeView(index, size) {\n        if (index < 0 || index >= this.viewItems.length) {\n            return;\n        }\n        const indexes = range(this.viewItems.length).filter((i) => i !== index);\n        const lowPriorityIndexes = [\n            ...indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low),\n            index,\n        ];\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        const item = this.viewItems[index];\n        size = Math.round(size);\n        size = clamp(size, item.minimumSize, Math.min(item.maximumSize, this._size));\n        item.size = size;\n        this.relayout(lowPriorityIndexes, highPriorityIndexes);\n    }\n    getViews() {\n        return this.viewItems.map((x) => x.view);\n    }\n    onDidChange(item, size) {\n        const index = this.viewItems.indexOf(item);\n        if (index < 0 || index >= this.viewItems.length) {\n            return;\n        }\n        size = typeof size === 'number' ? size : item.size;\n        size = clamp(size, item.minimumSize, item.maximumSize);\n        item.size = size;\n        const indexes = range(this.viewItems.length).filter((i) => i !== index);\n        const lowPriorityIndexes = [\n            ...indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low),\n            index,\n        ];\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        /**\n         * add this view we are changing to the low-index list since we have determined the size\n         * here and don't want it changed\n         */\n        this.relayout([...lowPriorityIndexes, index], highPriorityIndexes);\n    }\n    addView(view, size = { type: 'distribute' }, index = this.viewItems.length, skipLayout) {\n        const container = document.createElement('div');\n        container.className = 'dv-view';\n        container.appendChild(view.element);\n        let viewSize;\n        if (typeof size === 'number') {\n            viewSize = size;\n        }\n        else if (size.type === 'split') {\n            viewSize = this.getViewSize(size.index) / 2;\n        }\n        else if (size.type === 'invisible') {\n            viewSize = { cachedVisibleSize: size.cachedVisibleSize };\n        }\n        else {\n            viewSize = view.minimumSize;\n        }\n        const disposable = view.onDidChange((newSize) => this.onDidChange(viewItem, newSize.size));\n        const viewItem = new ViewItem(container, view, viewSize, {\n            dispose: () => {\n                disposable.dispose();\n                this.viewContainer.removeChild(container);\n            },\n        });\n        if (index === this.viewItems.length) {\n            this.viewContainer.appendChild(container);\n        }\n        else {\n            this.viewContainer.insertBefore(container, this.viewContainer.children.item(index));\n        }\n        this.viewItems.splice(index, 0, viewItem);\n        if (this.viewItems.length > 1) {\n            //add sash\n            const sash = document.createElement('div');\n            sash.className = 'dv-sash';\n            const onPointerStart = (event) => {\n                for (const item of this.viewItems) {\n                    item.enabled = false;\n                }\n                const iframes = disableIframePointEvents();\n                const start = this._orientation === Orientation.HORIZONTAL\n                    ? event.clientX\n                    : event.clientY;\n                const sashIndex = firstIndex(this.sashes, (s) => s.container === sash);\n                //\n                const sizes = this.viewItems.map((x) => x.size);\n                //\n                let snapBefore;\n                let snapAfter;\n                const upIndexes = range(sashIndex, -1);\n                const downIndexes = range(sashIndex + 1, this.viewItems.length);\n                const minDeltaUp = upIndexes.reduce((r, i) => r + (this.viewItems[i].minimumSize - sizes[i]), 0);\n                const maxDeltaUp = upIndexes.reduce((r, i) => r + (this.viewItems[i].viewMaximumSize - sizes[i]), 0);\n                const maxDeltaDown = downIndexes.length === 0\n                    ? Number.POSITIVE_INFINITY\n                    : downIndexes.reduce((r, i) => r +\n                        (sizes[i] - this.viewItems[i].minimumSize), 0);\n                const minDeltaDown = downIndexes.length === 0\n                    ? Number.NEGATIVE_INFINITY\n                    : downIndexes.reduce((r, i) => r +\n                        (sizes[i] -\n                            this.viewItems[i].viewMaximumSize), 0);\n                const minDelta = Math.max(minDeltaUp, minDeltaDown);\n                const maxDelta = Math.min(maxDeltaDown, maxDeltaUp);\n                const snapBeforeIndex = this.findFirstSnapIndex(upIndexes);\n                const snapAfterIndex = this.findFirstSnapIndex(downIndexes);\n                if (typeof snapBeforeIndex === 'number') {\n                    const snappedViewItem = this.viewItems[snapBeforeIndex];\n                    const halfSize = Math.floor(snappedViewItem.viewMinimumSize / 2);\n                    snapBefore = {\n                        index: snapBeforeIndex,\n                        limitDelta: snappedViewItem.visible\n                            ? minDelta - halfSize\n                            : minDelta + halfSize,\n                        size: snappedViewItem.size,\n                    };\n                }\n                if (typeof snapAfterIndex === 'number') {\n                    const snappedViewItem = this.viewItems[snapAfterIndex];\n                    const halfSize = Math.floor(snappedViewItem.viewMinimumSize / 2);\n                    snapAfter = {\n                        index: snapAfterIndex,\n                        limitDelta: snappedViewItem.visible\n                            ? maxDelta + halfSize\n                            : maxDelta - halfSize,\n                        size: snappedViewItem.size,\n                    };\n                }\n                const onPointerMove = (event) => {\n                    const current = this._orientation === Orientation.HORIZONTAL\n                        ? event.clientX\n                        : event.clientY;\n                    const delta = current - start;\n                    this.resize(sashIndex, delta, sizes, undefined, undefined, minDelta, maxDelta, snapBefore, snapAfter);\n                    this.distributeEmptySpace();\n                    this.layoutViews();\n                };\n                const end = () => {\n                    for (const item of this.viewItems) {\n                        item.enabled = true;\n                    }\n                    iframes.release();\n                    this.saveProportions();\n                    document.removeEventListener('pointermove', onPointerMove);\n                    document.removeEventListener('pointerup', end);\n                    document.removeEventListener('pointercancel', end);\n                    this._onDidSashEnd.fire(undefined);\n                };\n                document.addEventListener('pointermove', onPointerMove);\n                document.addEventListener('pointerup', end);\n                document.addEventListener('pointercancel', end);\n            };\n            sash.addEventListener('pointerdown', onPointerStart);\n            const sashItem = {\n                container: sash,\n                disposable: () => {\n                    sash.removeEventListener('pointerdown', onPointerStart);\n                    this.sashContainer.removeChild(sash);\n                },\n            };\n            this.sashContainer.appendChild(sash);\n            this.sashes.push(sashItem);\n        }\n        if (!skipLayout) {\n            this.relayout([index]);\n        }\n        if (!skipLayout &&\n            typeof size !== 'number' &&\n            size.type === 'distribute') {\n            this.distributeViewSizes();\n        }\n        this._onDidAddView.fire(view);\n    }\n    distributeViewSizes() {\n        const flexibleViewItems = [];\n        let flexibleSize = 0;\n        for (const item of this.viewItems) {\n            if (item.maximumSize - item.minimumSize > 0) {\n                flexibleViewItems.push(item);\n                flexibleSize += item.size;\n            }\n        }\n        const size = Math.floor(flexibleSize / flexibleViewItems.length);\n        for (const item of flexibleViewItems) {\n            item.size = clamp(size, item.minimumSize, item.maximumSize);\n        }\n        const indexes = range(this.viewItems.length);\n        const lowPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low);\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        this.relayout(lowPriorityIndexes, highPriorityIndexes);\n    }\n    removeView(index, sizing, skipLayout = false) {\n        // Remove view\n        const viewItem = this.viewItems.splice(index, 1)[0];\n        viewItem.dispose();\n        // Remove sash\n        if (this.viewItems.length >= 1) {\n            const sashIndex = Math.max(index - 1, 0);\n            const sashItem = this.sashes.splice(sashIndex, 1)[0];\n            sashItem.disposable();\n        }\n        if (!skipLayout) {\n            this.relayout();\n        }\n        if (sizing && sizing.type === 'distribute') {\n            this.distributeViewSizes();\n        }\n        this._onDidRemoveView.fire(viewItem.view);\n        return viewItem.view;\n    }\n    getViewCachedVisibleSize(index) {\n        if (index < 0 || index >= this.viewItems.length) {\n            throw new Error('Index out of bounds');\n        }\n        const viewItem = this.viewItems[index];\n        return viewItem.cachedVisibleSize;\n    }\n    moveView(from, to) {\n        const cachedVisibleSize = this.getViewCachedVisibleSize(from);\n        const sizing = typeof cachedVisibleSize === 'undefined'\n            ? this.getViewSize(from)\n            : Sizing.Invisible(cachedVisibleSize);\n        const view = this.removeView(from, undefined, true);\n        this.addView(view, sizing, to);\n    }\n    layout(size, orthogonalSize) {\n        const previousSize = Math.max(this.size, this._contentSize);\n        this.size = size;\n        this.orthogonalSize = orthogonalSize;\n        if (!this.proportions) {\n            const indexes = range(this.viewItems.length);\n            const lowPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low);\n            const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n            this.resize(this.viewItems.length - 1, size - previousSize, undefined, lowPriorityIndexes, highPriorityIndexes);\n        }\n        else {\n            let total = 0;\n            for (let i = 0; i < this.viewItems.length; i++) {\n                const item = this.viewItems[i];\n                const proportion = this.proportions[i];\n                if (typeof proportion === 'number') {\n                    total += proportion;\n                }\n                else {\n                    size -= item.size;\n                }\n            }\n            for (let i = 0; i < this.viewItems.length; i++) {\n                const item = this.viewItems[i];\n                const proportion = this.proportions[i];\n                if (typeof proportion === 'number' && total > 0) {\n                    item.size = clamp(Math.round((proportion * size) / total), item.minimumSize, item.maximumSize);\n                }\n            }\n        }\n        this.distributeEmptySpace();\n        this.layoutViews();\n    }\n    relayout(lowPriorityIndexes, highPriorityIndexes) {\n        const contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n        this.resize(this.viewItems.length - 1, this._size - contentSize, undefined, lowPriorityIndexes, highPriorityIndexes);\n        this.distributeEmptySpace();\n        this.layoutViews();\n        this.saveProportions();\n    }\n    distributeEmptySpace(lowPriorityIndex) {\n        const contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n        let emptyDelta = this.size - contentSize;\n        const indexes = range(this.viewItems.length - 1, -1);\n        const lowPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low);\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        for (const index of highPriorityIndexes) {\n            pushToStart(indexes, index);\n        }\n        for (const index of lowPriorityIndexes) {\n            pushToEnd(indexes, index);\n        }\n        if (typeof lowPriorityIndex === 'number') {\n            pushToEnd(indexes, lowPriorityIndex);\n        }\n        for (let i = 0; emptyDelta !== 0 && i < indexes.length; i++) {\n            const item = this.viewItems[indexes[i]];\n            const size = clamp(item.size + emptyDelta, item.minimumSize, item.maximumSize);\n            const viewDelta = size - item.size;\n            emptyDelta -= viewDelta;\n            item.size = size;\n        }\n    }\n    saveProportions() {\n        if (this.proportionalLayout && this._contentSize > 0) {\n            this._proportions = this.viewItems.map((i) => i.visible ? i.size / this._contentSize : undefined);\n        }\n    }\n    /**\n     * Margin explain:\n     *\n     * For `n` views in a splitview there will be `n-1` margins `m`.\n     *\n     * To fit the margins each view must reduce in size by `(m * (n - 1)) / n`.\n     *\n     * For each view `i` the offet must be adjusted by `m * i/(n - 1)`.\n     */\n    layoutViews() {\n        this._contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n        this.updateSashEnablement();\n        if (this.viewItems.length === 0) {\n            return;\n        }\n        const visibleViewItems = this.viewItems.filter((i) => i.visible);\n        const sashCount = Math.max(0, visibleViewItems.length - 1);\n        const marginReducedSize = (this.margin * sashCount) / Math.max(1, visibleViewItems.length);\n        let totalLeftOffset = 0;\n        const viewLeftOffsets = [];\n        const sashWidth = 4; // hardcoded in css\n        const runningVisiblePanelCount = this.viewItems.reduce((arr, viewItem, i) => {\n            const flag = viewItem.visible ? 1 : 0;\n            if (i === 0) {\n                arr.push(flag);\n            }\n            else {\n                arr.push(arr[i - 1] + flag);\n            }\n            return arr;\n        }, []);\n        // calculate both view and cash positions\n        this.viewItems.forEach((view, i) => {\n            totalLeftOffset += this.viewItems[i].size;\n            viewLeftOffsets.push(totalLeftOffset);\n            const size = view.visible ? view.size - marginReducedSize : 0;\n            const visiblePanelsBeforeThisView = Math.max(0, runningVisiblePanelCount[i] - 1);\n            const offset = i === 0 || visiblePanelsBeforeThisView === 0\n                ? 0\n                : viewLeftOffsets[i - 1] +\n                    (visiblePanelsBeforeThisView / sashCount) *\n                        marginReducedSize;\n            if (i < this.viewItems.length - 1) {\n                // calculate sash position\n                const newSize = view.visible\n                    ? offset + size - sashWidth / 2 + this.margin / 2\n                    : offset;\n                if (this._orientation === Orientation.HORIZONTAL) {\n                    this.sashes[i].container.style.left = `${newSize}px`;\n                    this.sashes[i].container.style.top = `0px`;\n                }\n                if (this._orientation === Orientation.VERTICAL) {\n                    this.sashes[i].container.style.left = `0px`;\n                    this.sashes[i].container.style.top = `${newSize}px`;\n                }\n            }\n            // calculate view position\n            if (this._orientation === Orientation.HORIZONTAL) {\n                view.container.style.width = `${size}px`;\n                view.container.style.left = `${offset}px`;\n                view.container.style.top = '';\n                view.container.style.height = '';\n            }\n            if (this._orientation === Orientation.VERTICAL) {\n                view.container.style.height = `${size}px`;\n                view.container.style.top = `${offset}px`;\n                view.container.style.width = '';\n                view.container.style.left = '';\n            }\n            view.view.layout(view.size - marginReducedSize, this._orthogonalSize);\n        });\n    }\n    findFirstSnapIndex(indexes) {\n        // visible views first\n        for (const index of indexes) {\n            const viewItem = this.viewItems[index];\n            if (!viewItem.visible) {\n                continue;\n            }\n            if (viewItem.snap) {\n                return index;\n            }\n        }\n        // then, hidden views\n        for (const index of indexes) {\n            const viewItem = this.viewItems[index];\n            if (viewItem.visible &&\n                viewItem.maximumSize - viewItem.minimumSize > 0) {\n                return undefined;\n            }\n            if (!viewItem.visible && viewItem.snap) {\n                return index;\n            }\n        }\n        return undefined;\n    }\n    updateSashEnablement() {\n        let previous = false;\n        const collapsesDown = this.viewItems.map((i) => (previous = i.size - i.minimumSize > 0 || previous));\n        previous = false;\n        const expandsDown = this.viewItems.map((i) => (previous = i.maximumSize - i.size > 0 || previous));\n        const reverseViews = [...this.viewItems].reverse();\n        previous = false;\n        const collapsesUp = reverseViews\n            .map((i) => (previous = i.size - i.minimumSize > 0 || previous))\n            .reverse();\n        previous = false;\n        const expandsUp = reverseViews\n            .map((i) => (previous = i.maximumSize - i.size > 0 || previous))\n            .reverse();\n        let position = 0;\n        for (let index = 0; index < this.sashes.length; index++) {\n            const sash = this.sashes[index];\n            const viewItem = this.viewItems[index];\n            position += viewItem.size;\n            const min = !(collapsesDown[index] && expandsUp[index + 1]);\n            const max = !(expandsDown[index] && collapsesUp[index + 1]);\n            if (min && max) {\n                const upIndexes = range(index, -1);\n                const downIndexes = range(index + 1, this.viewItems.length);\n                const snapBeforeIndex = this.findFirstSnapIndex(upIndexes);\n                const snapAfterIndex = this.findFirstSnapIndex(downIndexes);\n                const snappedBefore = typeof snapBeforeIndex === 'number' &&\n                    !this.viewItems[snapBeforeIndex].visible;\n                const snappedAfter = typeof snapAfterIndex === 'number' &&\n                    !this.viewItems[snapAfterIndex].visible;\n                if (snappedBefore &&\n                    collapsesUp[index] &&\n                    (position > 0 || this.startSnappingEnabled)) {\n                    this.updateSash(sash, SashState.MINIMUM);\n                }\n                else if (snappedAfter &&\n                    collapsesDown[index] &&\n                    (position < this._contentSize || this.endSnappingEnabled)) {\n                    this.updateSash(sash, SashState.MAXIMUM);\n                }\n                else {\n                    this.updateSash(sash, SashState.DISABLED);\n                }\n            }\n            else if (min && !max) {\n                this.updateSash(sash, SashState.MINIMUM);\n            }\n            else if (!min && max) {\n                this.updateSash(sash, SashState.MAXIMUM);\n            }\n            else {\n                this.updateSash(sash, SashState.ENABLED);\n            }\n        }\n    }\n    updateSash(sash, state) {\n        toggleClass(sash.container, 'dv-disabled', state === SashState.DISABLED);\n        toggleClass(sash.container, 'dv-enabled', state === SashState.ENABLED);\n        toggleClass(sash.container, 'dv-maximum', state === SashState.MAXIMUM);\n        toggleClass(sash.container, 'dv-minimum', state === SashState.MINIMUM);\n    }\n    createViewContainer() {\n        const element = document.createElement('div');\n        element.className = 'dv-view-container';\n        return element;\n    }\n    createSashContainer() {\n        const element = document.createElement('div');\n        element.className = 'dv-sash-container';\n        return element;\n    }\n    createContainer() {\n        const element = document.createElement('div');\n        const orientationClassname = this._orientation === Orientation.HORIZONTAL\n            ? 'dv-horizontal'\n            : 'dv-vertical';\n        element.className = `dv-split-view-container ${orientationClassname}`;\n        return element;\n    }\n    dispose() {\n        this._onDidSashEnd.dispose();\n        this._onDidAddView.dispose();\n        this._onDidRemoveView.dispose();\n        for (let i = 0; i < this.element.children.length; i++) {\n            if (this.element.children.item(i) === this.element) {\n                this.element.removeChild(this.element);\n                break;\n            }\n        }\n        for (const viewItem of this.viewItems) {\n            viewItem.dispose();\n        }\n        this.element.remove();\n    }\n}\n","import { Splitview, Orientation, } from '../splitview/splitview';\nimport { CompositeDisposable } from '../lifecycle';\nimport { Emitter } from '../events';\nimport { addClasses, removeClasses } from '../dom';\nexport class Paneview extends CompositeDisposable {\n    get onDidAddView() {\n        return this.splitview.onDidAddView;\n    }\n    get onDidRemoveView() {\n        return this.splitview.onDidRemoveView;\n    }\n    get minimumSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumSize() {\n        return this.splitview.maximumSize;\n    }\n    get orientation() {\n        return this.splitview.orientation;\n    }\n    get size() {\n        return this.splitview.size;\n    }\n    get orthogonalSize() {\n        return this.splitview.orthogonalSize;\n    }\n    constructor(container, options) {\n        var _a;\n        super();\n        this.paneItems = [];\n        this.skipAnimation = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._orientation = (_a = options.orientation) !== null && _a !== void 0 ? _a : Orientation.VERTICAL;\n        this.element = document.createElement('div');\n        this.element.className = 'dv-pane-container';\n        container.appendChild(this.element);\n        this.splitview = new Splitview(this.element, {\n            orientation: this._orientation,\n            proportionalLayout: false,\n            descriptor: options.descriptor,\n        });\n        // if we've added views from the descriptor we need to\n        // add the panes to our Pane array and setup animation\n        this.getPanes().forEach((pane) => {\n            const disposable = new CompositeDisposable(pane.onDidChangeExpansionState(() => {\n                this.setupAnimation();\n                this._onDidChange.fire(undefined);\n            }));\n            const paneItem = {\n                pane,\n                disposable: {\n                    dispose: () => {\n                        disposable.dispose();\n                    },\n                },\n            };\n            this.paneItems.push(paneItem);\n            pane.orthogonalSize = this.splitview.orthogonalSize;\n        });\n        this.addDisposables(this._onDidChange, this.splitview.onDidSashEnd(() => {\n            this._onDidChange.fire(undefined);\n        }), this.splitview.onDidAddView(() => {\n            this._onDidChange.fire();\n        }), this.splitview.onDidRemoveView(() => {\n            this._onDidChange.fire();\n        }));\n    }\n    setViewVisible(index, visible) {\n        this.splitview.setViewVisible(index, visible);\n    }\n    addPane(pane, size, index = this.splitview.length, skipLayout = false) {\n        const disposable = pane.onDidChangeExpansionState(() => {\n            this.setupAnimation();\n            this._onDidChange.fire(undefined);\n        });\n        const paneItem = {\n            pane,\n            disposable: {\n                dispose: () => {\n                    disposable.dispose();\n                },\n            },\n        };\n        this.paneItems.splice(index, 0, paneItem);\n        pane.orthogonalSize = this.splitview.orthogonalSize;\n        this.splitview.addView(pane, size, index, skipLayout);\n    }\n    getViewSize(index) {\n        return this.splitview.getViewSize(index);\n    }\n    getPanes() {\n        return this.splitview.getViews();\n    }\n    removePane(index, options = { skipDispose: false }) {\n        const paneItem = this.paneItems.splice(index, 1)[0];\n        this.splitview.removeView(index);\n        if (!options.skipDispose) {\n            paneItem.disposable.dispose();\n            paneItem.pane.dispose();\n        }\n        return paneItem;\n    }\n    moveView(from, to) {\n        if (from === to) {\n            return;\n        }\n        const view = this.removePane(from, { skipDispose: true });\n        this.skipAnimation = true;\n        try {\n            this.addPane(view.pane, view.pane.size, to, false);\n        }\n        finally {\n            this.skipAnimation = false;\n        }\n    }\n    layout(size, orthogonalSize) {\n        this.splitview.layout(size, orthogonalSize);\n    }\n    setupAnimation() {\n        if (this.skipAnimation) {\n            return;\n        }\n        if (this.animationTimer) {\n            clearTimeout(this.animationTimer);\n            this.animationTimer = undefined;\n        }\n        addClasses(this.element, 'dv-animated');\n        this.animationTimer = setTimeout(() => {\n            this.animationTimer = undefined;\n            removeClasses(this.element, 'dv-animated');\n        }, 200);\n    }\n    dispose() {\n        super.dispose();\n        if (this.animationTimer) {\n            clearTimeout(this.animationTimer);\n            this.animationTimer = undefined;\n        }\n        this.paneItems.forEach((paneItem) => {\n            paneItem.disposable.dispose();\n            paneItem.pane.dispose();\n        });\n        this.paneItems = [];\n        this.splitview.dispose();\n        this.element.remove();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Orientation } from '../splitview/splitview';\nimport { Emitter } from '../events';\nexport class LeafNode {\n    get minimumWidth() {\n        return this.view.minimumWidth;\n    }\n    get maximumWidth() {\n        return this.view.maximumWidth;\n    }\n    get minimumHeight() {\n        return this.view.minimumHeight;\n    }\n    get maximumHeight() {\n        return this.view.maximumHeight;\n    }\n    get priority() {\n        return this.view.priority;\n    }\n    get snap() {\n        return this.view.snap;\n    }\n    get minimumSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumHeight\n            : this.minimumWidth;\n    }\n    get maximumSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumHeight\n            : this.maximumWidth;\n    }\n    get minimumOrthogonalSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumWidth\n            : this.minimumHeight;\n    }\n    get maximumOrthogonalSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumWidth\n            : this.maximumHeight;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    get size() {\n        return this._size;\n    }\n    get element() {\n        return this.view.element;\n    }\n    get width() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.orthogonalSize\n            : this.size;\n    }\n    get height() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.size\n            : this.orthogonalSize;\n    }\n    constructor(view, orientation, orthogonalSize, size = 0) {\n        this.view = view;\n        this.orientation = orientation;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._orthogonalSize = orthogonalSize;\n        this._size = size;\n        this._disposable = this.view.onDidChange((event) => {\n            if (event) {\n                this._onDidChange.fire({\n                    size: this.orientation === Orientation.VERTICAL\n                        ? event.width\n                        : event.height,\n                    orthogonalSize: this.orientation === Orientation.VERTICAL\n                        ? event.height\n                        : event.width,\n                });\n            }\n            else {\n                this._onDidChange.fire({});\n            }\n        });\n    }\n    setVisible(visible) {\n        if (this.view.setVisible) {\n            this.view.setVisible(visible);\n        }\n    }\n    layout(size, orthogonalSize) {\n        this._size = size;\n        this._orthogonalSize = orthogonalSize;\n        this.view.layout(this.width, this.height);\n    }\n    dispose() {\n        this._onDidChange.dispose();\n        this._disposable.dispose();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Splitview, Orientation, LayoutPriority, } from '../splitview/splitview';\nimport { Emitter, Event } from '../events';\nimport { LeafNode } from './leafNode';\nimport { CompositeDisposable, Disposable } from '../lifecycle';\nexport class BranchNode extends CompositeDisposable {\n    get width() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.size\n            : this.orthogonalSize;\n    }\n    get height() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.orthogonalSize\n            : this.size;\n    }\n    get minimumSize() {\n        return this.children.length === 0\n            ? 0\n            : Math.max(...this.children.map((c, index) => this.splitview.isViewVisible(index)\n                ? c.minimumOrthogonalSize\n                : 0));\n    }\n    get maximumSize() {\n        return Math.min(...this.children.map((c, index) => this.splitview.isViewVisible(index)\n            ? c.maximumOrthogonalSize\n            : Number.POSITIVE_INFINITY));\n    }\n    get minimumOrthogonalSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumOrthogonalSize() {\n        return this.splitview.maximumSize;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    get size() {\n        return this._size;\n    }\n    get minimumWidth() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumOrthogonalSize\n            : this.minimumSize;\n    }\n    get minimumHeight() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumSize\n            : this.minimumOrthogonalSize;\n    }\n    get maximumWidth() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumOrthogonalSize\n            : this.maximumSize;\n    }\n    get maximumHeight() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumSize\n            : this.maximumOrthogonalSize;\n    }\n    get priority() {\n        if (this.children.length === 0) {\n            return LayoutPriority.Normal;\n        }\n        const priorities = this.children.map((c) => typeof c.priority === 'undefined'\n            ? LayoutPriority.Normal\n            : c.priority);\n        if (priorities.some((p) => p === LayoutPriority.High)) {\n            return LayoutPriority.High;\n        }\n        else if (priorities.some((p) => p === LayoutPriority.Low)) {\n            return LayoutPriority.Low;\n        }\n        return LayoutPriority.Normal;\n    }\n    get disabled() {\n        return this.splitview.disabled;\n    }\n    set disabled(value) {\n        this.splitview.disabled = value;\n    }\n    get margin() {\n        return this.splitview.margin;\n    }\n    set margin(value) {\n        this.splitview.margin = value;\n        this.children.forEach((child) => {\n            if (child instanceof BranchNode) {\n                child.margin = value;\n            }\n        });\n    }\n    constructor(orientation, proportionalLayout, styles, size, orthogonalSize, disabled, margin, childDescriptors) {\n        super();\n        this.orientation = orientation;\n        this.proportionalLayout = proportionalLayout;\n        this.styles = styles;\n        this._childrenDisposable = Disposable.NONE;\n        this.children = [];\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._onDidVisibilityChange = new Emitter();\n        this.onDidVisibilityChange = this._onDidVisibilityChange.event;\n        this._orthogonalSize = orthogonalSize;\n        this._size = size;\n        this.element = document.createElement('div');\n        this.element.className = 'dv-branch-node';\n        if (!childDescriptors) {\n            this.splitview = new Splitview(this.element, {\n                orientation: this.orientation,\n                proportionalLayout,\n                styles,\n                margin,\n            });\n            this.splitview.layout(this.size, this.orthogonalSize);\n        }\n        else {\n            const descriptor = {\n                views: childDescriptors.map((childDescriptor) => {\n                    return {\n                        view: childDescriptor.node,\n                        size: childDescriptor.node.size,\n                        visible: childDescriptor.node instanceof LeafNode &&\n                            childDescriptor.visible !== undefined\n                            ? childDescriptor.visible\n                            : true,\n                    };\n                }),\n                size: this.orthogonalSize,\n            };\n            this.children = childDescriptors.map((c) => c.node);\n            this.splitview = new Splitview(this.element, {\n                orientation: this.orientation,\n                descriptor,\n                proportionalLayout,\n                styles,\n                margin,\n            });\n        }\n        this.disabled = disabled;\n        this.addDisposables(this._onDidChange, this._onDidVisibilityChange, this.splitview.onDidSashEnd(() => {\n            this._onDidChange.fire({});\n        }));\n        this.setupChildrenEvents();\n    }\n    setVisible(_visible) {\n        // noop\n    }\n    isChildVisible(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.isViewVisible(index);\n    }\n    setChildVisible(index, visible) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        if (this.splitview.isViewVisible(index) === visible) {\n            return;\n        }\n        const wereAllChildrenHidden = this.splitview.contentSize === 0;\n        this.splitview.setViewVisible(index, visible);\n        // }\n        const areAllChildrenHidden = this.splitview.contentSize === 0;\n        // If all children are hidden then the parent should hide the entire splitview\n        // If the entire splitview is hidden then the parent should show the splitview when a child is shown\n        if ((visible && wereAllChildrenHidden) ||\n            (!visible && areAllChildrenHidden)) {\n            this._onDidVisibilityChange.fire({ visible });\n        }\n    }\n    moveChild(from, to) {\n        if (from === to) {\n            return;\n        }\n        if (from < 0 || from >= this.children.length) {\n            throw new Error('Invalid from index');\n        }\n        if (from < to) {\n            to--;\n        }\n        this.splitview.moveView(from, to);\n        const child = this._removeChild(from);\n        this._addChild(child, to);\n    }\n    getChildSize(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.getViewSize(index);\n    }\n    resizeChild(index, size) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.resizeView(index, size);\n    }\n    layout(size, orthogonalSize) {\n        this._size = orthogonalSize;\n        this._orthogonalSize = size;\n        this.splitview.layout(orthogonalSize, size);\n    }\n    addChild(node, size, index, skipLayout) {\n        if (index < 0 || index > this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.addView(node, size, index, skipLayout);\n        this._addChild(node, index);\n    }\n    getChildCachedVisibleSize(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.getViewCachedVisibleSize(index);\n    }\n    removeChild(index, sizing) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.removeView(index, sizing);\n        return this._removeChild(index);\n    }\n    _addChild(node, index) {\n        this.children.splice(index, 0, node);\n        this.setupChildrenEvents();\n    }\n    _removeChild(index) {\n        const [child] = this.children.splice(index, 1);\n        this.setupChildrenEvents();\n        return child;\n    }\n    setupChildrenEvents() {\n        this._childrenDisposable.dispose();\n        this._childrenDisposable = new CompositeDisposable(Event.any(...this.children.map((c) => c.onDidChange))((e) => {\n            /**\n             * indicate a change has occured to allows any re-rendering but don't bubble\n             * event because that was specific to this branch\n             */\n            this._onDidChange.fire({ size: e.orthogonalSize });\n        }), ...this.children.map((c, i) => {\n            if (c instanceof BranchNode) {\n                return c.onDidVisibilityChange(({ visible }) => {\n                    this.setChildVisible(i, visible);\n                });\n            }\n            return Disposable.NONE;\n        }));\n    }\n    dispose() {\n        this._childrenDisposable.dispose();\n        this.splitview.dispose();\n        this.children.forEach((child) => child.dispose());\n        super.dispose();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Orientation, Sizing, } from '../splitview/splitview';\nimport { tail } from '../array';\nimport { LeafNode } from './leafNode';\nimport { BranchNode } from './branchNode';\nimport { Emitter } from '../events';\nimport { MutableDisposable } from '../lifecycle';\nfunction findLeaf(candiateNode, last) {\n    if (candiateNode instanceof LeafNode) {\n        return candiateNode;\n    }\n    if (candiateNode instanceof BranchNode) {\n        return findLeaf(candiateNode.children[last ? candiateNode.children.length - 1 : 0], last);\n    }\n    throw new Error('invalid node');\n}\nfunction flipNode(node, size, orthogonalSize) {\n    if (node instanceof BranchNode) {\n        const result = new BranchNode(orthogonal(node.orientation), node.proportionalLayout, node.styles, size, orthogonalSize, node.disabled, node.margin);\n        let totalSize = 0;\n        for (let i = node.children.length - 1; i >= 0; i--) {\n            const child = node.children[i];\n            const childSize = child instanceof BranchNode ? child.orthogonalSize : child.size;\n            let newSize = node.size === 0\n                ? 0\n                : Math.round((size * childSize) / node.size);\n            totalSize += newSize;\n            // The last view to add should adjust to rounding errors\n            if (i === 0) {\n                newSize += size - totalSize;\n            }\n            result.addChild(flipNode(child, orthogonalSize, newSize), newSize, 0, true);\n        }\n        return result;\n    }\n    else {\n        return new LeafNode(node.view, orthogonal(node.orientation), orthogonalSize);\n    }\n}\nexport function indexInParent(element) {\n    const parentElement = element.parentElement;\n    if (!parentElement) {\n        throw new Error('Invalid grid element');\n    }\n    let el = parentElement.firstElementChild;\n    let index = 0;\n    while (el !== element && el !== parentElement.lastElementChild && el) {\n        el = el.nextElementSibling;\n        index++;\n    }\n    return index;\n}\n/**\n * Find the grid location of a specific DOM element by traversing the parent\n * chain and finding each child index on the way.\n *\n * This will break as soon as DOM structures of the Splitview or Gridview change.\n */\nexport function getGridLocation(element) {\n    const parentElement = element.parentElement;\n    if (!parentElement) {\n        throw new Error('Invalid grid element');\n    }\n    if (/\\bdv-grid-view\\b/.test(parentElement.className)) {\n        return [];\n    }\n    const index = indexInParent(parentElement);\n    const ancestor = parentElement.parentElement.parentElement.parentElement;\n    return [...getGridLocation(ancestor), index];\n}\nexport function getRelativeLocation(rootOrientation, location, direction) {\n    const orientation = getLocationOrientation(rootOrientation, location);\n    const directionOrientation = getDirectionOrientation(direction);\n    if (orientation === directionOrientation) {\n        const [rest, _index] = tail(location);\n        let index = _index;\n        if (direction === 'right' || direction === 'bottom') {\n            index += 1;\n        }\n        return [...rest, index];\n    }\n    else {\n        const index = direction === 'right' || direction === 'bottom' ? 1 : 0;\n        return [...location, index];\n    }\n}\nexport function getDirectionOrientation(direction) {\n    return direction === 'top' || direction === 'bottom'\n        ? Orientation.VERTICAL\n        : Orientation.HORIZONTAL;\n}\nexport function getLocationOrientation(rootOrientation, location) {\n    return location.length % 2 === 0\n        ? orthogonal(rootOrientation)\n        : rootOrientation;\n}\nexport const orthogonal = (orientation) => orientation === Orientation.HORIZONTAL\n    ? Orientation.VERTICAL\n    : Orientation.HORIZONTAL;\nexport function isGridBranchNode(node) {\n    return !!node.children;\n}\nconst serializeBranchNode = (node, orientation) => {\n    const size = orientation === Orientation.VERTICAL ? node.box.width : node.box.height;\n    if (!isGridBranchNode(node)) {\n        if (typeof node.cachedVisibleSize === 'number') {\n            return {\n                type: 'leaf',\n                data: node.view.toJSON(),\n                size: node.cachedVisibleSize,\n                visible: false,\n            };\n        }\n        return { type: 'leaf', data: node.view.toJSON(), size };\n    }\n    return {\n        type: 'branch',\n        data: node.children.map((c) => serializeBranchNode(c, orthogonal(orientation))),\n        size,\n    };\n};\nexport class Gridview {\n    get length() {\n        return this._root ? this._root.children.length : 0;\n    }\n    get orientation() {\n        return this.root.orientation;\n    }\n    set orientation(orientation) {\n        if (this.root.orientation === orientation) {\n            return;\n        }\n        const { size, orthogonalSize } = this.root;\n        this.root = flipNode(this.root, orthogonalSize, size);\n        this.root.layout(size, orthogonalSize);\n    }\n    get width() {\n        return this.root.width;\n    }\n    get height() {\n        return this.root.height;\n    }\n    get minimumWidth() {\n        return this.root.minimumWidth;\n    }\n    get minimumHeight() {\n        return this.root.minimumHeight;\n    }\n    get maximumWidth() {\n        return this.root.maximumHeight;\n    }\n    get maximumHeight() {\n        return this.root.maximumHeight;\n    }\n    get locked() {\n        return this._locked;\n    }\n    set locked(value) {\n        this._locked = value;\n        const branch = [this.root];\n        /**\n         * simple depth-first-search to cover all nodes\n         *\n         * @see https://en.wikipedia.org/wiki/Depth-first_search\n         */\n        while (branch.length > 0) {\n            const node = branch.pop();\n            if (node instanceof BranchNode) {\n                node.disabled = value;\n                branch.push(...node.children);\n            }\n        }\n    }\n    get margin() {\n        return this._margin;\n    }\n    set margin(value) {\n        this._margin = value;\n        this.root.margin = value;\n    }\n    maximizedView() {\n        var _a;\n        return (_a = this._maximizedNode) === null || _a === void 0 ? void 0 : _a.leaf.view;\n    }\n    hasMaximizedView() {\n        return this._maximizedNode !== undefined;\n    }\n    maximizeView(view) {\n        var _a;\n        const location = getGridLocation(view.element);\n        const [_, node] = this.getNode(location);\n        if (!(node instanceof LeafNode)) {\n            return;\n        }\n        if (((_a = this._maximizedNode) === null || _a === void 0 ? void 0 : _a.leaf) === node) {\n            return;\n        }\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        serializeBranchNode(this.getView(), this.orientation);\n        const hiddenOnMaximize = [];\n        function hideAllViewsBut(parent, exclude) {\n            for (let i = 0; i < parent.children.length; i++) {\n                const child = parent.children[i];\n                if (child instanceof LeafNode) {\n                    if (child !== exclude) {\n                        if (parent.isChildVisible(i)) {\n                            parent.setChildVisible(i, false);\n                        }\n                        else {\n                            hiddenOnMaximize.push(child);\n                        }\n                    }\n                }\n                else {\n                    hideAllViewsBut(child, exclude);\n                }\n            }\n        }\n        hideAllViewsBut(this.root, node);\n        this._maximizedNode = { leaf: node, hiddenOnMaximize };\n        this._onDidMaximizedNodeChange.fire({\n            view: node.view,\n            isMaximized: true,\n        });\n    }\n    exitMaximizedView() {\n        if (!this._maximizedNode) {\n            return;\n        }\n        const hiddenOnMaximize = this._maximizedNode.hiddenOnMaximize;\n        function showViewsInReverseOrder(parent) {\n            for (let index = parent.children.length - 1; index >= 0; index--) {\n                const child = parent.children[index];\n                if (child instanceof LeafNode) {\n                    if (!hiddenOnMaximize.includes(child)) {\n                        parent.setChildVisible(index, true);\n                    }\n                }\n                else {\n                    showViewsInReverseOrder(child);\n                }\n            }\n        }\n        showViewsInReverseOrder(this.root);\n        const tmp = this._maximizedNode.leaf;\n        this._maximizedNode = undefined;\n        this._onDidMaximizedNodeChange.fire({\n            view: tmp.view,\n            isMaximized: false,\n        });\n    }\n    serialize() {\n        const maximizedView = this.maximizedView();\n        let maxmizedViewLocation;\n        if (maximizedView) {\n            /**\n             * The minimum information we can get away with in order to serialize a maxmized view is it's location within the grid\n             * which is represented as a branch of indices\n             */\n            maxmizedViewLocation = getGridLocation(maximizedView.element);\n        }\n        if (this.hasMaximizedView()) {\n            /**\n             * the saved layout cannot be in its maxmized state otherwise all of the underlying\n             * view dimensions will be wrong\n             *\n             * To counteract this we temporaily remove the maximized view to compute the serialized output\n             * of the grid before adding back the maxmized view as to not alter the layout from the users\n             * perspective when `.toJSON()` is called\n             */\n            this.exitMaximizedView();\n        }\n        const root = serializeBranchNode(this.getView(), this.orientation);\n        const resullt = {\n            root,\n            width: this.width,\n            height: this.height,\n            orientation: this.orientation,\n        };\n        if (maxmizedViewLocation) {\n            resullt.maximizedNode = {\n                location: maxmizedViewLocation,\n            };\n        }\n        if (maximizedView) {\n            // replace any maximzied view that was removed for serialization purposes\n            this.maximizeView(maximizedView);\n        }\n        return resullt;\n    }\n    dispose() {\n        this.disposable.dispose();\n        this._onDidChange.dispose();\n        this._onDidMaximizedNodeChange.dispose();\n        this._onDidViewVisibilityChange.dispose();\n        this.root.dispose();\n        this._maximizedNode = undefined;\n        this.element.remove();\n    }\n    clear() {\n        const orientation = this.root.orientation;\n        this.root = new BranchNode(orientation, this.proportionalLayout, this.styles, this.root.size, this.root.orthogonalSize, this.locked, this.margin);\n    }\n    deserialize(json, deserializer) {\n        const orientation = json.orientation;\n        const height = orientation === Orientation.VERTICAL ? json.height : json.width;\n        this._deserialize(json.root, orientation, deserializer, height);\n        /**\n         * The deserialied layout must be positioned through this.layout(...)\n         * before any maximizedNode can be positioned\n         */\n        this.layout(json.width, json.height);\n        if (json.maximizedNode) {\n            const location = json.maximizedNode.location;\n            const [_, node] = this.getNode(location);\n            if (!(node instanceof LeafNode)) {\n                return;\n            }\n            this.maximizeView(node.view);\n        }\n    }\n    _deserialize(root, orientation, deserializer, orthogonalSize) {\n        this.root = this._deserializeNode(root, orientation, deserializer, orthogonalSize);\n    }\n    _deserializeNode(node, orientation, deserializer, orthogonalSize) {\n        var _a;\n        let result;\n        if (node.type === 'branch') {\n            const serializedChildren = node.data;\n            const children = serializedChildren.map((serializedChild) => {\n                return {\n                    node: this._deserializeNode(serializedChild, orthogonal(orientation), deserializer, node.size),\n                    visible: serializedChild.visible,\n                };\n            });\n            result = new BranchNode(orientation, this.proportionalLayout, this.styles, node.size, // <- orthogonal size - flips at each depth\n            orthogonalSize, // <- size - flips at each depth,\n            this.locked, this.margin, children);\n        }\n        else {\n            const view = deserializer.fromJSON(node);\n            if (typeof node.visible === 'boolean') {\n                (_a = view.setVisible) === null || _a === void 0 ? void 0 : _a.call(view, node.visible);\n            }\n            result = new LeafNode(view, orientation, orthogonalSize, node.size);\n        }\n        return result;\n    }\n    get root() {\n        return this._root;\n    }\n    set root(root) {\n        const oldRoot = this._root;\n        if (oldRoot) {\n            oldRoot.dispose();\n            this._maximizedNode = undefined;\n            this.element.removeChild(oldRoot.element);\n        }\n        this._root = root;\n        this.element.appendChild(this._root.element);\n        this.disposable.value = this._root.onDidChange((e) => {\n            this._onDidChange.fire(e);\n        });\n    }\n    /**\n     * If the root is orientated as a VERTICAL node then nest the existing root within a new HORIZIONTAL root node\n     * If the root is orientated as a HORIZONTAL node then nest the existing root within a new VERITCAL root node\n     */\n    insertOrthogonalSplitviewAtRoot() {\n        if (!this._root) {\n            return;\n        }\n        const oldRoot = this.root;\n        oldRoot.element.remove();\n        this._root = new BranchNode(orthogonal(oldRoot.orientation), this.proportionalLayout, this.styles, this.root.orthogonalSize, this.root.size, this.locked, this.margin);\n        if (oldRoot.children.length === 0) {\n            // no data so no need to add anything back in\n        }\n        else if (oldRoot.children.length === 1) {\n            // can remove one level of redundant branching if there is only a single child\n            const childReference = oldRoot.children[0];\n            const child = oldRoot.removeChild(0); // remove to prevent disposal when disposing of unwanted root\n            child.dispose();\n            oldRoot.dispose();\n            this._root.addChild(\n            /**\n             * the child node will have the same orientation as the new root since\n             * we are removing the inbetween node.\n             * the entire 'tree' must be flipped recursively to ensure that the orientation\n             * flips at each level\n             */\n            flipNode(childReference, childReference.orthogonalSize, childReference.size), Sizing.Distribute, 0);\n        }\n        else {\n            this._root.addChild(oldRoot, Sizing.Distribute, 0);\n        }\n        this.element.appendChild(this._root.element);\n        this.disposable.value = this._root.onDidChange((e) => {\n            this._onDidChange.fire(e);\n        });\n    }\n    next(location) {\n        return this.progmaticSelect(location);\n    }\n    previous(location) {\n        return this.progmaticSelect(location, true);\n    }\n    getView(location) {\n        const node = location ? this.getNode(location)[1] : this.root;\n        return this._getViews(node, this.orientation);\n    }\n    _getViews(node, orientation, cachedVisibleSize) {\n        const box = { height: node.height, width: node.width };\n        if (node instanceof LeafNode) {\n            return { box, view: node.view, cachedVisibleSize };\n        }\n        const children = [];\n        for (let i = 0; i < node.children.length; i++) {\n            const child = node.children[i];\n            const nodeCachedVisibleSize = node.getChildCachedVisibleSize(i);\n            children.push(this._getViews(child, orthogonal(orientation), nodeCachedVisibleSize));\n        }\n        return { box, children };\n    }\n    progmaticSelect(location, reverse = false) {\n        const [path, node] = this.getNode(location);\n        if (!(node instanceof LeafNode)) {\n            throw new Error('invalid location');\n        }\n        for (let i = path.length - 1; i > -1; i--) {\n            const n = path[i];\n            const l = location[i] || 0;\n            const canProgressInCurrentLevel = reverse\n                ? l - 1 > -1\n                : l + 1 < n.children.length;\n            if (canProgressInCurrentLevel) {\n                return findLeaf(n.children[reverse ? l - 1 : l + 1], reverse);\n            }\n        }\n        return findLeaf(this.root, reverse);\n    }\n    constructor(proportionalLayout, styles, orientation, locked, margin) {\n        this.proportionalLayout = proportionalLayout;\n        this.styles = styles;\n        this._locked = false;\n        this._margin = 0;\n        this._maximizedNode = undefined;\n        this.disposable = new MutableDisposable();\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._onDidViewVisibilityChange = new Emitter();\n        this.onDidViewVisibilityChange = this._onDidViewVisibilityChange.event;\n        this._onDidMaximizedNodeChange = new Emitter();\n        this.onDidMaximizedNodeChange = this._onDidMaximizedNodeChange.event;\n        this.element = document.createElement('div');\n        this.element.className = 'dv-grid-view';\n        this._locked = locked !== null && locked !== void 0 ? locked : false;\n        this._margin = margin !== null && margin !== void 0 ? margin : 0;\n        this.root = new BranchNode(orientation, proportionalLayout, styles, 0, 0, this.locked, this.margin);\n    }\n    isViewVisible(location) {\n        const [rest, index] = tail(location);\n        const [, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid from location');\n        }\n        return parent.isChildVisible(index);\n    }\n    setViewVisible(location, visible) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [rest, index] = tail(location);\n        const [, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid from location');\n        }\n        this._onDidViewVisibilityChange.fire();\n        parent.setChildVisible(index, visible);\n    }\n    moveView(parentLocation, from, to) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [, parent] = this.getNode(parentLocation);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        parent.moveChild(from, to);\n    }\n    addView(view, size, location) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [rest, index] = tail(location);\n        const [pathToParent, parent] = this.getNode(rest);\n        if (parent instanceof BranchNode) {\n            const node = new LeafNode(view, orthogonal(parent.orientation), parent.orthogonalSize);\n            parent.addChild(node, size, index);\n        }\n        else {\n            const [grandParent, ..._] = [...pathToParent].reverse();\n            const [parentIndex, ...__] = [...rest].reverse();\n            let newSiblingSize = 0;\n            const newSiblingCachedVisibleSize = grandParent.getChildCachedVisibleSize(parentIndex);\n            if (typeof newSiblingCachedVisibleSize === 'number') {\n                newSiblingSize = Sizing.Invisible(newSiblingCachedVisibleSize);\n            }\n            const child = grandParent.removeChild(parentIndex);\n            child.dispose();\n            const newParent = new BranchNode(parent.orientation, this.proportionalLayout, this.styles, parent.size, parent.orthogonalSize, this.locked, this.margin);\n            grandParent.addChild(newParent, parent.size, parentIndex);\n            const newSibling = new LeafNode(parent.view, grandParent.orientation, parent.size);\n            newParent.addChild(newSibling, newSiblingSize, 0);\n            if (typeof size !== 'number' && size.type === 'split') {\n                size = { type: 'split', index: 0 };\n            }\n            const node = new LeafNode(view, grandParent.orientation, parent.size);\n            newParent.addChild(node, size, index);\n        }\n    }\n    remove(view, sizing) {\n        const location = getGridLocation(view.element);\n        return this.removeView(location, sizing);\n    }\n    removeView(location, sizing) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [rest, index] = tail(location);\n        const [pathToParent, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        const nodeToRemove = parent.children[index];\n        if (!(nodeToRemove instanceof LeafNode)) {\n            throw new Error('Invalid location');\n        }\n        parent.removeChild(index, sizing);\n        nodeToRemove.dispose();\n        if (parent.children.length !== 1) {\n            return nodeToRemove.view;\n        }\n        // if the parent has only one child and we know the parent is a BranchNode we can make the tree\n        // more efficiently spaced by replacing the parent BranchNode with the child.\n        // if that child is a LeafNode then we simply replace the BranchNode with the child otherwise if the child\n        // is a BranchNode too we should spread it's children into the grandparent.\n        // refer to the remaining child as the sibling\n        const sibling = parent.children[0];\n        if (pathToParent.length === 0) {\n            // if the parent is root\n            if (sibling instanceof LeafNode) {\n                // if the sibling is a leaf node no action is required\n                return nodeToRemove.view;\n            }\n            // otherwise the sibling is a branch node. since the parent is the root and the root has only one child\n            // which is a branch node we can just set this branch node to be the new root node\n            // for good housekeeping we'll removing the sibling from it's existing tree\n            parent.removeChild(0, sizing);\n            // and set that sibling node to be root\n            this.root = sibling;\n            return nodeToRemove.view;\n        }\n        // otherwise the parent is apart of a large sub-tree\n        const [grandParent, ..._] = [...pathToParent].reverse();\n        const [parentIndex, ...__] = [...rest].reverse();\n        const isSiblingVisible = parent.isChildVisible(0);\n        // either way we need to remove the sibling from it's existing tree\n        parent.removeChild(0, sizing);\n        // note the sizes of all of the grandparents children\n        const sizes = grandParent.children.map((_size, i) => grandParent.getChildSize(i));\n        // remove the parent from the grandparent since we are moving the sibling to take the parents place\n        // this parent is no longer used and can be disposed of\n        grandParent.removeChild(parentIndex, sizing).dispose();\n        if (sibling instanceof BranchNode) {\n            // replace the parent with the siblings children\n            sizes.splice(parentIndex, 1, ...sibling.children.map((c) => c.size));\n            // and add those siblings to the grandparent\n            for (let i = 0; i < sibling.children.length; i++) {\n                const child = sibling.children[i];\n                grandParent.addChild(child, child.size, parentIndex + i);\n            }\n            /**\n             * clean down the branch node since we need to dipose of it and\n             * when .dispose() it called on a branch it will dispose of any\n             * views it is holding onto.\n             */\n            while (sibling.children.length > 0) {\n                sibling.removeChild(0);\n            }\n        }\n        else {\n            // otherwise create a new leaf node and add that to the grandparent\n            const newSibling = new LeafNode(sibling.view, orthogonal(sibling.orientation), sibling.size);\n            const siblingSizing = isSiblingVisible\n                ? sibling.orthogonalSize\n                : Sizing.Invisible(sibling.orthogonalSize);\n            grandParent.addChild(newSibling, siblingSizing, parentIndex);\n        }\n        // the containing node of the sibling is no longer required and can be disposed of\n        sibling.dispose();\n        // resize everything\n        for (let i = 0; i < sizes.length; i++) {\n            grandParent.resizeChild(i, sizes[i]);\n        }\n        return nodeToRemove.view;\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.root.orientation === Orientation.HORIZONTAL\n            ? [height, width]\n            : [width, height];\n        this.root.layout(size, orthogonalSize);\n    }\n    getNode(location, node = this.root, path = []) {\n        if (location.length === 0) {\n            return [path, node];\n        }\n        if (!(node instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        const [index, ...rest] = location;\n        if (index < 0 || index >= node.children.length) {\n            throw new Error('Invalid location');\n        }\n        const child = node.children[index];\n        path.push(node);\n        return this.getNode(rest, child, path);\n    }\n}\n","import { isInDocument, watchElementResize } from './dom';\nimport { CompositeDisposable } from './lifecycle';\nexport class Resizable extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    get disableResizing() {\n        return this._disableResizing;\n    }\n    set disableResizing(value) {\n        this._disableResizing = value;\n    }\n    constructor(parentElement, disableResizing = false) {\n        super();\n        this._disableResizing = disableResizing;\n        this._element = parentElement;\n        this.addDisposables(watchElementResize(this._element, (entry) => {\n            if (this.isDisposed) {\n                /**\n                 * resize is delayed through requestAnimationFrame so there is a small chance\n                 * the component has already been disposed of\n                 */\n                return;\n            }\n            if (this.disableResizing) {\n                return;\n            }\n            if (!this._element.offsetParent) {\n                /**\n                 * offsetParent === null is equivalent to display: none being set on the element or one\n                 * of it's parents. In the display: none case the size will become (0, 0) which we do\n                 * not want to propagate.\n                 *\n                 * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/offsetParent\n                 *\n                 * You could use checkVisibility() but at the time of writing it's not supported across\n                 * all Browsers\n                 *\n                 * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/checkVisibility\n                 */\n                return;\n            }\n            if (!isInDocument(this._element)) {\n                /**\n                 * since the event is dispatched through requestAnimationFrame there is a small chance\n                 * the component is no longer attached to the DOM, if that is the case the dimensions\n                 * are mostly likely all zero and meaningless. we should skip this case.\n                 */\n                return;\n            }\n            const { width, height } = entry.contentRect;\n            this.layout(width, height);\n        }));\n    }\n}\n","import { Emitter, Event, AsapEvent } from '../events';\nimport { getGridLocation, Gridview } from './gridview';\nimport { Disposable } from '../lifecycle';\nimport { sequentialNumberGenerator } from '../math';\nimport { Sizing } from '../splitview/splitview';\nimport { Resizable } from '../resizable';\nimport { Classnames } from '../dom';\nconst nextLayoutId = sequentialNumberGenerator();\nexport function toTarget(direction) {\n    switch (direction) {\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'above':\n            return 'top';\n        case 'below':\n            return 'bottom';\n        case 'within':\n        default:\n            return 'center';\n    }\n}\nexport class BaseGrid extends Resizable {\n    get id() {\n        return this._id;\n    }\n    get size() {\n        return this._groups.size;\n    }\n    get groups() {\n        return Array.from(this._groups.values()).map((_) => _.value);\n    }\n    get width() {\n        return this.gridview.width;\n    }\n    get height() {\n        return this.gridview.height;\n    }\n    get minimumHeight() {\n        return this.gridview.minimumHeight;\n    }\n    get maximumHeight() {\n        return this.gridview.maximumHeight;\n    }\n    get minimumWidth() {\n        return this.gridview.minimumWidth;\n    }\n    get maximumWidth() {\n        return this.gridview.maximumWidth;\n    }\n    get activeGroup() {\n        return this._activeGroup;\n    }\n    get locked() {\n        return this.gridview.locked;\n    }\n    set locked(value) {\n        this.gridview.locked = value;\n    }\n    constructor(parentElement, options) {\n        var _a;\n        super(document.createElement('div'), options.disableAutoResizing);\n        this._id = nextLayoutId.next();\n        this._groups = new Map();\n        this._onDidRemove = new Emitter();\n        this.onDidRemove = this._onDidRemove.event;\n        this._onDidAdd = new Emitter();\n        this.onDidAdd = this._onDidAdd.event;\n        this._onDidMaximizedChange = new Emitter();\n        this.onDidMaximizedChange = this._onDidMaximizedChange.event;\n        this._onDidActiveChange = new Emitter();\n        this.onDidActiveChange = this._onDidActiveChange.event;\n        this._bufferOnDidLayoutChange = new AsapEvent();\n        this.onDidLayoutChange = this._bufferOnDidLayoutChange.onEvent;\n        this._onDidViewVisibilityChangeMicroTaskQueue = new AsapEvent();\n        this.onDidViewVisibilityChangeMicroTaskQueue = this._onDidViewVisibilityChangeMicroTaskQueue.onEvent;\n        this.element.style.height = '100%';\n        this.element.style.width = '100%';\n        this._classNames = new Classnames(this.element);\n        this._classNames.setClassNames((_a = options.className) !== null && _a !== void 0 ? _a : '');\n        parentElement.appendChild(this.element);\n        this.gridview = new Gridview(!!options.proportionalLayout, options.styles, options.orientation, options.locked, options.margin);\n        this.gridview.locked = !!options.locked;\n        this.element.appendChild(this.gridview.element);\n        this.layout(0, 0, true); // set some elements height/widths\n        this.addDisposables(this.gridview.onDidMaximizedNodeChange((event) => {\n            this._onDidMaximizedChange.fire({\n                panel: event.view,\n                isMaximized: event.isMaximized,\n            });\n        }), this.gridview.onDidViewVisibilityChange(() => this._onDidViewVisibilityChangeMicroTaskQueue.fire()), this.onDidViewVisibilityChangeMicroTaskQueue(() => {\n            this.layout(this.width, this.height, true);\n        }), Disposable.from(() => {\n            var _a;\n            (_a = this.element.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(this.element);\n        }), this.gridview.onDidChange(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), Event.any(this.onDidAdd, this.onDidRemove, this.onDidActiveChange)(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), this._onDidMaximizedChange, this._onDidViewVisibilityChangeMicroTaskQueue, this._bufferOnDidLayoutChange);\n    }\n    setVisible(panel, visible) {\n        this.gridview.setViewVisible(getGridLocation(panel.element), visible);\n        this._bufferOnDidLayoutChange.fire();\n    }\n    isVisible(panel) {\n        return this.gridview.isViewVisible(getGridLocation(panel.element));\n    }\n    updateOptions(options) {\n        var _a, _b, _c, _d;\n        if (typeof options.proportionalLayout === 'boolean') {\n            // this.gridview.proportionalLayout = options.proportionalLayout; // not supported\n        }\n        if (options.orientation) {\n            this.gridview.orientation = options.orientation;\n        }\n        if ('styles' in options) {\n            // this.gridview.styles = options.styles; // not supported\n        }\n        if ('disableResizing' in options) {\n            this.disableResizing = (_a = options.disableAutoResizing) !== null && _a !== void 0 ? _a : false;\n        }\n        if ('locked' in options) {\n            this.locked = (_b = options.locked) !== null && _b !== void 0 ? _b : false;\n        }\n        if ('margin' in options) {\n            this.gridview.margin = (_c = options.margin) !== null && _c !== void 0 ? _c : 0;\n        }\n        if ('className' in options) {\n            this._classNames.setClassNames((_d = options.className) !== null && _d !== void 0 ? _d : '');\n        }\n    }\n    maximizeGroup(panel) {\n        this.gridview.maximizeView(panel);\n        this.doSetGroupActive(panel);\n    }\n    isMaximizedGroup(panel) {\n        return this.gridview.maximizedView() === panel;\n    }\n    exitMaximizedGroup() {\n        this.gridview.exitMaximizedView();\n    }\n    hasMaximizedGroup() {\n        return this.gridview.hasMaximizedView();\n    }\n    doAddGroup(group, location = [0], size) {\n        this.gridview.addView(group, size !== null && size !== void 0 ? size : Sizing.Distribute, location);\n        this._onDidAdd.fire(group);\n    }\n    doRemoveGroup(group, options) {\n        if (!this._groups.has(group.id)) {\n            throw new Error('invalid operation');\n        }\n        const item = this._groups.get(group.id);\n        const view = this.gridview.remove(group, Sizing.Distribute);\n        if (item && !(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n            item.disposable.dispose();\n            item.value.dispose();\n            this._groups.delete(group.id);\n            this._onDidRemove.fire(group);\n        }\n        if (!(options === null || options === void 0 ? void 0 : options.skipActive) && this._activeGroup === group) {\n            const groups = Array.from(this._groups.values());\n            this.doSetGroupActive(groups.length > 0 ? groups[0].value : undefined);\n        }\n        return view;\n    }\n    getPanel(id) {\n        var _a;\n        return (_a = this._groups.get(id)) === null || _a === void 0 ? void 0 : _a.value;\n    }\n    doSetGroupActive(group) {\n        if (this._activeGroup === group) {\n            return;\n        }\n        if (this._activeGroup) {\n            this._activeGroup.setActive(false);\n        }\n        if (group) {\n            group.setActive(true);\n        }\n        this._activeGroup = group;\n        this._onDidActiveChange.fire(group);\n    }\n    removeGroup(group) {\n        this.doRemoveGroup(group);\n    }\n    moveToNext(options) {\n        var _a;\n        if (!options) {\n            options = {};\n        }\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.next(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupActive(next);\n    }\n    moveToPrevious(options) {\n        var _a;\n        if (!options) {\n            options = {};\n        }\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.previous(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupActive(next);\n    }\n    layout(width, height, forceResize) {\n        const different = forceResize || width !== this.width || height !== this.height;\n        if (!different) {\n            return;\n        }\n        this.gridview.element.style.height = `${height}px`;\n        this.gridview.element.style.width = `${width}px`;\n        this.gridview.layout(width, height);\n    }\n    dispose() {\n        this._onDidActiveChange.dispose();\n        this._onDidAdd.dispose();\n        this._onDidRemove.dispose();\n        for (const group of this.groups) {\n            group.dispose();\n        }\n        this.gridview.dispose();\n        super.dispose();\n    }\n}\n","import { Emitter } from '../events';\nexport class SplitviewApi {\n    /**\n     * The minimum size  the component can reach where size is measured in the direction of orientation provided.\n     */\n    get minimumSize() {\n        return this.component.minimumSize;\n    }\n    /**\n     * The maximum size the component can reach where size is measured in the direction of orientation provided.\n     */\n    get maximumSize() {\n        return this.component.maximumSize;\n    }\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * The current number of panels.\n     */\n    get length() {\n        return this.component.length;\n    }\n    /**\n     * The current orientation of the component.\n     */\n    get orientation() {\n        return this.component.orientation;\n    }\n    /**\n     * The list of current panels.\n     */\n    get panels() {\n        return this.component.panels;\n    }\n    /**\n     * Invoked after a layout is loaded through the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * Invoked whenever any aspect of the layout changes.\n     * If listening to this event it may be worth debouncing ouputs.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked when a view is added.\n     */\n    get onDidAddView() {\n        return this.component.onDidAddView;\n    }\n    /**\n     * Invoked when a view is removed.\n     */\n    get onDidRemoveView() {\n        return this.component.onDidRemoveView;\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     * Removes an existing panel and optionally provide a `Sizing` method\n     * for the subsequent resize.\n     */\n    removePanel(panel, sizing) {\n        this.component.removePanel(panel, sizing);\n    }\n    /**\n     * Focus the component.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Get the reference to a panel given it's `string` id.\n     */\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Layout the panel with a width and height.\n     */\n    layout(width, height) {\n        return this.component.layout(width, height);\n    }\n    /**\n     * Add a new panel and return the created instance.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Move a panel given it's current and desired index.\n     */\n    movePanel(from, to) {\n        this.component.movePanel(from, to);\n    }\n    /**\n     * Deserialize a layout to built a splitivew.\n     */\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    /** Serialize a layout */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Remove all panels and clear the component.\n     */\n    clear() {\n        this.component.clear();\n    }\n    /**\n     * Update configuratable options.\n     */\n    updateOptions(options) {\n        this.component.updateOptions(options);\n    }\n    /**\n     * Release resources and teardown component. Do not call when using framework versions of dockview.\n     */\n    dispose() {\n        this.component.dispose();\n    }\n}\nexport class PaneviewApi {\n    /**\n     * The minimum size  the component can reach where size is measured in the direction of orientation provided.\n     */\n    get minimumSize() {\n        return this.component.minimumSize;\n    }\n    /**\n     * The maximum size the component can reach where size is measured in the direction of orientation provided.\n     */\n    get maximumSize() {\n        return this.component.maximumSize;\n    }\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * All panel objects.\n     */\n    get panels() {\n        return this.component.panels;\n    }\n    /**\n     * Invoked when any layout change occures, an aggregation of many events.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked after a layout is deserialzied using the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * Invoked when a panel is added. May be called multiple times when moving panels.\n     */\n    get onDidAddView() {\n        return this.component.onDidAddView;\n    }\n    /**\n     * Invoked when a panel is removed. May be called multiple times when moving panels.\n     */\n    get onDidRemoveView() {\n        return this.component.onDidRemoveView;\n    }\n    /**\n     * Invoked when a Drag'n'Drop event occurs that the component was unable to handle. Exposed for custom Drag'n'Drop functionality.\n     */\n    get onDidDrop() {\n        const emitter = new Emitter();\n        const disposable = this.component.onDidDrop((e) => {\n            emitter.fire(Object.assign(Object.assign({}, e), { api: this }));\n        });\n        emitter.dispose = () => {\n            disposable.dispose();\n            emitter.dispose();\n        };\n        return emitter.event;\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     * Remove a panel given the panel object.\n     */\n    removePanel(panel) {\n        this.component.removePanel(panel);\n    }\n    /**\n     * Get a panel object given a `string` id. May return `undefined`.\n     */\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Move a panel given it's current and desired index.\n     */\n    movePanel(from, to) {\n        this.component.movePanel(from, to);\n    }\n    /**\n     *  Focus the component. Will try to focus an active panel if one exists.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Force resize the component to an exact width and height. Read about auto-resizing before using.\n     */\n    layout(width, height) {\n        this.component.layout(width, height);\n    }\n    /**\n     * Add a panel and return the created object.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Create a component from a serialized object.\n     */\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    /**\n     * Create a serialized object of the current component.\n     */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Reset the component back to an empty and default state.\n     */\n    clear() {\n        this.component.clear();\n    }\n    /**\n     * Update configuratable options.\n     */\n    updateOptions(options) {\n        this.component.updateOptions(options);\n    }\n    /**\n     * Release resources and teardown component. Do not call when using framework versions of dockview.\n     */\n    dispose() {\n        this.component.dispose();\n    }\n}\nexport class GridviewApi {\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * Minimum height of the component.\n     */\n    get minimumHeight() {\n        return this.component.minimumHeight;\n    }\n    /**\n     * Maximum height of the component.\n     */\n    get maximumHeight() {\n        return this.component.maximumHeight;\n    }\n    /**\n     * Minimum width of the component.\n     */\n    get minimumWidth() {\n        return this.component.minimumWidth;\n    }\n    /**\n     * Maximum width of the component.\n     */\n    get maximumWidth() {\n        return this.component.maximumWidth;\n    }\n    /**\n     * Invoked when any layout change occures, an aggregation of many events.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked when a panel is added. May be called multiple times when moving panels.\n     */\n    get onDidAddPanel() {\n        return this.component.onDidAddGroup;\n    }\n    /**\n     * Invoked when a panel is removed. May be called multiple times when moving panels.\n     */\n    get onDidRemovePanel() {\n        return this.component.onDidRemoveGroup;\n    }\n    /**\n     * Invoked when the active panel changes. May be undefined if no panel is active.\n     */\n    get onDidActivePanelChange() {\n        return this.component.onDidActiveGroupChange;\n    }\n    /**\n     * Invoked after a layout is deserialzied using the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * All panel objects.\n     */\n    get panels() {\n        return this.component.groups;\n    }\n    /**\n     * Current orientation. Can be changed after initialization.\n     */\n    get orientation() {\n        return this.component.orientation;\n    }\n    set orientation(value) {\n        this.component.updateOptions({ orientation: value });\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     *  Focus the component. Will try to focus an active panel if one exists.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Force resize the component to an exact width and height. Read about auto-resizing before using.\n     */\n    layout(width, height, force = false) {\n        this.component.layout(width, height, force);\n    }\n    /**\n     * Add a panel and return the created object.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Remove a panel given the panel object.\n     */\n    removePanel(panel, sizing) {\n        this.component.removePanel(panel, sizing);\n    }\n    /**\n     * Move a panel in a particular direction relative to another panel.\n     */\n    movePanel(panel, options) {\n        this.component.movePanel(panel, options);\n    }\n    /**\n     * Get a panel object given a `string` id. May return `undefined`.\n     */\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Create a component from a serialized object.\n     */\n    fromJSON(data) {\n        return this.component.fromJSON(data);\n    }\n    /**\n     * Create a serialized object of the current component.\n     */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Reset the component back to an empty and default state.\n     */\n    clear() {\n        this.component.clear();\n    }\n    updateOptions(options) {\n        this.component.updateOptions(options);\n    }\n    /**\n     * Release resources and teardown component. Do not call when using framework versions of dockview.\n     */\n    dispose() {\n        this.component.dispose();\n    }\n}\nexport class DockviewApi {\n    /**\n     * The unique identifier for this instance. Used to manage scope of Drag'n'Drop events.\n     */\n    get id() {\n        return this.component.id;\n    }\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * Minimum height of the component.\n     */\n    get minimumHeight() {\n        return this.component.minimumHeight;\n    }\n    /**\n     * Maximum height of the component.\n     */\n    get maximumHeight() {\n        return this.component.maximumHeight;\n    }\n    /**\n     * Minimum width of the component.\n     */\n    get minimumWidth() {\n        return this.component.minimumWidth;\n    }\n    /**\n     * Maximum width of the component.\n     */\n    get maximumWidth() {\n        return this.component.maximumWidth;\n    }\n    /**\n     * Total number of groups.\n     */\n    get size() {\n        return this.component.size;\n    }\n    /**\n     * Total number of panels.\n     */\n    get totalPanels() {\n        return this.component.totalPanels;\n    }\n    get gap() {\n        return this.component.gap;\n    }\n    /**\n     * Invoked when the active group changes. May be undefined if no group is active.\n     */\n    get onDidActiveGroupChange() {\n        return this.component.onDidActiveGroupChange;\n    }\n    /**\n     * Invoked when a group is added. May be called multiple times when moving groups.\n     */\n    get onDidAddGroup() {\n        return this.component.onDidAddGroup;\n    }\n    /**\n     * Invoked when a group is removed. May be called multiple times when moving groups.\n     */\n    get onDidRemoveGroup() {\n        return this.component.onDidRemoveGroup;\n    }\n    /**\n     * Invoked when the active panel changes. May be undefined if no panel is active.\n     */\n    get onDidActivePanelChange() {\n        return this.component.onDidActivePanelChange;\n    }\n    /**\n     * Invoked when a panel is added. May be called multiple times when moving panels.\n     */\n    get onDidAddPanel() {\n        return this.component.onDidAddPanel;\n    }\n    /**\n     * Invoked when a panel is removed. May be called multiple times when moving panels.\n     */\n    get onDidRemovePanel() {\n        return this.component.onDidRemovePanel;\n    }\n    get onDidMovePanel() {\n        return this.component.onDidMovePanel;\n    }\n    /**\n     * Invoked after a layout is deserialzied using the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * Invoked when any layout change occures, an aggregation of many events.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked when a Drag'n'Drop event occurs that the component was unable to handle. Exposed for custom Drag'n'Drop functionality.\n     */\n    get onDidDrop() {\n        return this.component.onDidDrop;\n    }\n    /**\n     * Invoked when a Drag'n'Drop event occurs but before dockview handles it giving the user an opportunity to intecept and\n     * prevent the event from occuring using the standard `preventDefault()` syntax.\n     *\n     * Preventing certain events may causes unexpected behaviours, use carefully.\n     */\n    get onWillDrop() {\n        return this.component.onWillDrop;\n    }\n    /**\n     * Invoked before an overlay is shown indicating a drop target.\n     *\n     * Calling `event.preventDefault()` will prevent the overlay being shown and prevent\n     * the any subsequent drop event.\n     */\n    get onWillShowOverlay() {\n        return this.component.onWillShowOverlay;\n    }\n    /**\n     * Invoked before a group is dragged.\n     *\n     * Calling `event.nativeEvent.preventDefault()` will prevent the group drag starting.\n     *\n     */\n    get onWillDragGroup() {\n        return this.component.onWillDragGroup;\n    }\n    /**\n     * Invoked before a panel is dragged.\n     *\n     * Calling `event.nativeEvent.preventDefault()` will prevent the panel drag starting.\n     */\n    get onWillDragPanel() {\n        return this.component.onWillDragPanel;\n    }\n    get onUnhandledDragOverEvent() {\n        return this.component.onUnhandledDragOverEvent;\n    }\n    /**\n     * All panel objects.\n     */\n    get panels() {\n        return this.component.panels;\n    }\n    /**\n     * All group objects.\n     */\n    get groups() {\n        return this.component.groups;\n    }\n    /**\n     *  Active panel object.\n     */\n    get activePanel() {\n        return this.component.activePanel;\n    }\n    /**\n     * Active group object.\n     */\n    get activeGroup() {\n        return this.component.activeGroup;\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     *  Focus the component. Will try to focus an active panel if one exists.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Get a panel object given a `string` id. May return `undefined`.\n     */\n    getPanel(id) {\n        return this.component.getGroupPanel(id);\n    }\n    /**\n     * Force resize the component to an exact width and height. Read about auto-resizing before using.\n     */\n    layout(width, height, force = false) {\n        this.component.layout(width, height, force);\n    }\n    /**\n     * Add a panel and return the created object.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Remove a panel given the panel object.\n     */\n    removePanel(panel) {\n        this.component.removePanel(panel);\n    }\n    /**\n     * Add a group and return the created object.\n     */\n    addGroup(options) {\n        return this.component.addGroup(options);\n    }\n    /**\n     * Close all groups and panels.\n     */\n    closeAllGroups() {\n        return this.component.closeAllGroups();\n    }\n    /**\n     * Remove a group and any panels within the group.\n     */\n    removeGroup(group) {\n        this.component.removeGroup(group);\n    }\n    /**\n     * Get a group object given a `string` id. May return undefined.\n     */\n    getGroup(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Add a floating group\n     */\n    addFloatingGroup(item, options) {\n        return this.component.addFloatingGroup(item, options);\n    }\n    /**\n     * Create a component from a serialized object.\n     */\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    /**\n     * Create a serialized object of the current component.\n     */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Reset the component back to an empty and default state.\n     */\n    clear() {\n        this.component.clear();\n    }\n    /**\n     * Move the focus progmatically to the next panel or group.\n     */\n    moveToNext(options) {\n        this.component.moveToNext(options);\n    }\n    /**\n     * Move the focus progmatically to the previous panel or group.\n     */\n    moveToPrevious(options) {\n        this.component.moveToPrevious(options);\n    }\n    maximizeGroup(panel) {\n        this.component.maximizeGroup(panel.group);\n    }\n    hasMaximizedGroup() {\n        return this.component.hasMaximizedGroup();\n    }\n    exitMaximizedGroup() {\n        this.component.exitMaximizedGroup();\n    }\n    get onDidMaximizedGroupChange() {\n        return this.component.onDidMaximizedGroupChange;\n    }\n    /**\n     * Add a popout group in a new Window\n     */\n    addPopoutGroup(item, options) {\n        return this.component.addPopoutGroup(item, options);\n    }\n    setGap(gap) {\n        this.component.updateOptions({ gap });\n    }\n    updateOptions(options) {\n        this.component.updateOptions(options);\n    }\n    /**\n     * Release resources and teardown component. Do not call when using framework versions of dockview.\n     */\n    dispose() {\n        this.component.dispose();\n    }\n}\n","import { disableIframePointEvents } from '../dom';\nimport { addDisposableListener, Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nexport class DragHandler extends CompositeDisposable {\n    constructor(el) {\n        super();\n        this.el = el;\n        this.dataDisposable = new MutableDisposable();\n        this.pointerEventsDisposable = new MutableDisposable();\n        this._onDragStart = new Emitter();\n        this.onDragStart = this._onDragStart.event;\n        this.addDisposables(this._onDragStart, this.dataDisposable, this.pointerEventsDisposable);\n        this.configure();\n    }\n    isCancelled(_event) {\n        return false;\n    }\n    configure() {\n        this.addDisposables(this._onDragStart, addDisposableListener(this.el, 'dragstart', (event) => {\n            if (event.defaultPrevented || this.isCancelled(event)) {\n                event.preventDefault();\n                return;\n            }\n            const iframes = disableIframePointEvents();\n            this.pointerEventsDisposable.value = {\n                dispose: () => {\n                    iframes.release();\n                },\n            };\n            this.el.classList.add('dv-dragged');\n            setTimeout(() => this.el.classList.remove('dv-dragged'), 0);\n            this.dataDisposable.value = this.getData(event);\n            this._onDragStart.fire(event);\n            if (event.dataTransfer) {\n                event.dataTransfer.effectAllowed = 'move';\n                const hasData = event.dataTransfer.items.length > 0;\n                if (!hasData) {\n                    /**\n                     * Although this is not used by dockview many third party dnd libraries will check\n                     * dataTransfer.types to determine valid drag events.\n                     *\n                     * For example: in react-dnd if dataTransfer.types is not set then the dragStart event will be cancelled\n                     * through .preventDefault(). Since this is applied globally to all drag events this would break dockviews\n                     * dnd logic. You can see the code at\n                     * https://github.com/react-dnd/react-dnd/blob/main/packages/backend-html5/src/HTML5BackendImpl.ts#L542\n                     */\n                    event.dataTransfer.setData('text/plain', '');\n                }\n            }\n        }), addDisposableListener(this.el, 'dragend', () => {\n            this.pointerEventsDisposable.dispose();\n            this.dataDisposable.dispose();\n        }));\n    }\n}\n","import { addDisposableListener } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nexport class DragAndDropObserver extends CompositeDisposable {\n    constructor(element, callbacks) {\n        super();\n        this.element = element;\n        this.callbacks = callbacks;\n        this.target = null;\n        this.registerListeners();\n    }\n    onDragEnter(e) {\n        this.target = e.target;\n        this.callbacks.onDragEnter(e);\n    }\n    onDragOver(e) {\n        e.preventDefault(); // needed so that the drop event fires (https://stackoverflow.com/questions/21339924/drop-event-not-firing-in-chrome)\n        if (this.callbacks.onDragOver) {\n            this.callbacks.onDragOver(e);\n        }\n    }\n    onDragLeave(e) {\n        if (this.target === e.target) {\n            this.target = null;\n            this.callbacks.onDragLeave(e);\n        }\n    }\n    onDragEnd(e) {\n        this.target = null;\n        this.callbacks.onDragEnd(e);\n    }\n    onDrop(e) {\n        this.callbacks.onDrop(e);\n    }\n    registerListeners() {\n        this.addDisposables(addDisposableListener(this.element, 'dragenter', (e) => {\n            this.onDragEnter(e);\n        }, true));\n        this.addDisposables(addDisposableListener(this.element, 'dragover', (e) => {\n            this.onDragOver(e);\n        }, true));\n        this.addDisposables(addDisposableListener(this.element, 'dragleave', (e) => {\n            this.onDragLeave(e);\n        }));\n        this.addDisposables(addDisposableListener(this.element, 'dragend', (e) => {\n            this.onDragEnd(e);\n        }));\n        this.addDisposables(addDisposableListener(this.element, 'drop', (e) => {\n            this.onDrop(e);\n        }));\n    }\n}\n","import { toggleClass } from '../dom';\nimport { DockviewEvent, Emitter } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nimport { DragAndDropObserver } from './dnd';\nimport { clamp } from '../math';\nexport class WillShowOverlayEvent extends DockviewEvent {\n    get nativeEvent() {\n        return this.options.nativeEvent;\n    }\n    get position() {\n        return this.options.position;\n    }\n    constructor(options) {\n        super();\n        this.options = options;\n    }\n}\nexport function directionToPosition(direction) {\n    switch (direction) {\n        case 'above':\n            return 'top';\n        case 'below':\n            return 'bottom';\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'within':\n            return 'center';\n        default:\n            throw new Error(`invalid direction '${direction}'`);\n    }\n}\nexport function positionToDirection(position) {\n    switch (position) {\n        case 'top':\n            return 'above';\n        case 'bottom':\n            return 'below';\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'center':\n            return 'within';\n        default:\n            throw new Error(`invalid position '${position}'`);\n    }\n}\nconst DEFAULT_ACTIVATION_SIZE = {\n    value: 20,\n    type: 'percentage',\n};\nconst DEFAULT_SIZE = {\n    value: 50,\n    type: 'percentage',\n};\nconst SMALL_WIDTH_BOUNDARY = 100;\nconst SMALL_HEIGHT_BOUNDARY = 100;\nexport class Droptarget extends CompositeDisposable {\n    get state() {\n        return this._state;\n    }\n    constructor(element, options) {\n        super();\n        this.element = element;\n        this.options = options;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        // use a set to take advantage of #<set>.has\n        this._acceptedTargetZonesSet = new Set(this.options.acceptedTargetZones);\n        this.dnd = new DragAndDropObserver(this.element, {\n            onDragEnter: () => undefined,\n            onDragOver: (e) => {\n                if (this._acceptedTargetZonesSet.size === 0) {\n                    this.removeDropTarget();\n                    return;\n                }\n                const width = this.element.clientWidth;\n                const height = this.element.clientHeight;\n                if (width === 0 || height === 0) {\n                    return; // avoid div!0\n                }\n                const rect = e.currentTarget.getBoundingClientRect();\n                const x = e.clientX - rect.left;\n                const y = e.clientY - rect.top;\n                const quadrant = this.calculateQuadrant(this._acceptedTargetZonesSet, x, y, width, height);\n                /**\n                 * If the event has already been used by another DropTarget instance\n                 * then don't show a second drop target, only one target should be\n                 * active at any one time\n                 */\n                if (this.isAlreadyUsed(e) || quadrant === null) {\n                    // no drop target should be displayed\n                    this.removeDropTarget();\n                    return;\n                }\n                if (!this.options.canDisplayOverlay(e, quadrant)) {\n                    this.removeDropTarget();\n                    return;\n                }\n                const willShowOverlayEvent = new WillShowOverlayEvent({\n                    nativeEvent: e,\n                    position: quadrant,\n                });\n                /**\n                 * Provide an opportunity to prevent the overlay appearing and in turn\n                 * any dnd behaviours\n                 */\n                this._onWillShowOverlay.fire(willShowOverlayEvent);\n                if (willShowOverlayEvent.defaultPrevented) {\n                    this.removeDropTarget();\n                    return;\n                }\n                this.markAsUsed(e);\n                if (!this.targetElement) {\n                    this.targetElement = document.createElement('div');\n                    this.targetElement.className = 'dv-drop-target-dropzone';\n                    this.overlayElement = document.createElement('div');\n                    this.overlayElement.className = 'dv-drop-target-selection';\n                    this._state = 'center';\n                    this.targetElement.appendChild(this.overlayElement);\n                    this.element.classList.add('dv-drop-target');\n                    this.element.append(this.targetElement);\n                }\n                this.toggleClasses(quadrant, width, height);\n                this._state = quadrant;\n            },\n            onDragLeave: () => {\n                this.removeDropTarget();\n            },\n            onDragEnd: () => {\n                this.removeDropTarget();\n            },\n            onDrop: (e) => {\n                e.preventDefault();\n                const state = this._state;\n                this.removeDropTarget();\n                if (state) {\n                    // only stop the propagation of the event if we are dealing with it\n                    // which is only when the target has state\n                    e.stopPropagation();\n                    this._onDrop.fire({ position: state, nativeEvent: e });\n                }\n            },\n        });\n        this.addDisposables(this._onDrop, this._onWillShowOverlay, this.dnd);\n    }\n    setTargetZones(acceptedTargetZones) {\n        this._acceptedTargetZonesSet = new Set(acceptedTargetZones);\n    }\n    setOverlayModel(model) {\n        this.options.overlayModel = model;\n    }\n    dispose() {\n        this.removeDropTarget();\n        super.dispose();\n    }\n    /**\n     * Add a property to the event object for other potential listeners to check\n     */\n    markAsUsed(event) {\n        event[Droptarget.USED_EVENT_ID] = true;\n    }\n    /**\n     * Check is the event has already been used by another instance of DropTarget\n     */\n    isAlreadyUsed(event) {\n        const value = event[Droptarget.USED_EVENT_ID];\n        return typeof value === 'boolean' && value;\n    }\n    toggleClasses(quadrant, width, height) {\n        var _a, _b;\n        if (!this.overlayElement) {\n            return;\n        }\n        const isSmallX = width < SMALL_WIDTH_BOUNDARY;\n        const isSmallY = height < SMALL_HEIGHT_BOUNDARY;\n        const isLeft = quadrant === 'left';\n        const isRight = quadrant === 'right';\n        const isTop = quadrant === 'top';\n        const isBottom = quadrant === 'bottom';\n        const rightClass = !isSmallX && isRight;\n        const leftClass = !isSmallX && isLeft;\n        const topClass = !isSmallY && isTop;\n        const bottomClass = !isSmallY && isBottom;\n        let size = 1;\n        const sizeOptions = (_b = (_a = this.options.overlayModel) === null || _a === void 0 ? void 0 : _a.size) !== null && _b !== void 0 ? _b : DEFAULT_SIZE;\n        if (sizeOptions.type === 'percentage') {\n            size = clamp(sizeOptions.value, 0, 100) / 100;\n        }\n        else {\n            if (rightClass || leftClass) {\n                size = clamp(0, sizeOptions.value, width) / width;\n            }\n            if (topClass || bottomClass) {\n                size = clamp(0, sizeOptions.value, height) / height;\n            }\n        }\n        const box = { top: '0px', left: '0px', width: '100%', height: '100%' };\n        /**\n         * You can also achieve the overlay placement using the transform CSS property\n         * to translate and scale the element however this has the undesired effect of\n         * 'skewing' the element. Comment left here for anybody that ever revisits this.\n         *\n         * @see https://developer.mozilla.org/en-US/docs/Web/CSS/transform\n         *\n         * right\n         * translateX(${100 * (1 - size) / 2}%) scaleX(${scale})\n         *\n         * left\n         * translateX(-${100 * (1 - size) / 2}%) scaleX(${scale})\n         *\n         * top\n         * translateY(-${100 * (1 - size) / 2}%) scaleY(${scale})\n         *\n         * bottom\n         * translateY(${100 * (1 - size) / 2}%) scaleY(${scale})\n         */\n        if (rightClass) {\n            box.left = `${100 * (1 - size)}%`;\n            box.width = `${100 * size}%`;\n        }\n        else if (leftClass) {\n            box.width = `${100 * size}%`;\n        }\n        else if (topClass) {\n            box.height = `${100 * size}%`;\n        }\n        else if (bottomClass) {\n            box.top = `${100 * (1 - size)}%`;\n            box.height = `${100 * size}%`;\n        }\n        this.overlayElement.style.top = box.top;\n        this.overlayElement.style.left = box.left;\n        this.overlayElement.style.width = box.width;\n        this.overlayElement.style.height = box.height;\n        toggleClass(this.overlayElement, 'dv-drop-target-small-vertical', isSmallY);\n        toggleClass(this.overlayElement, 'dv-drop-target-small-horizontal', isSmallX);\n        toggleClass(this.overlayElement, 'dv-drop-target-left', isLeft);\n        toggleClass(this.overlayElement, 'dv-drop-target-right', isRight);\n        toggleClass(this.overlayElement, 'dv-drop-target-top', isTop);\n        toggleClass(this.overlayElement, 'dv-drop-target-bottom', isBottom);\n        toggleClass(this.overlayElement, 'dv-drop-target-center', quadrant === 'center');\n    }\n    calculateQuadrant(overlayType, x, y, width, height) {\n        var _a, _b;\n        const activationSizeOptions = (_b = (_a = this.options.overlayModel) === null || _a === void 0 ? void 0 : _a.activationSize) !== null && _b !== void 0 ? _b : DEFAULT_ACTIVATION_SIZE;\n        const isPercentage = activationSizeOptions.type === 'percentage';\n        if (isPercentage) {\n            return calculateQuadrantAsPercentage(overlayType, x, y, width, height, activationSizeOptions.value);\n        }\n        return calculateQuadrantAsPixels(overlayType, x, y, width, height, activationSizeOptions.value);\n    }\n    removeDropTarget() {\n        if (this.targetElement) {\n            this._state = undefined;\n            this.element.removeChild(this.targetElement);\n            this.targetElement = undefined;\n            this.overlayElement = undefined;\n            this.element.classList.remove('dv-drop-target');\n        }\n    }\n}\nDroptarget.USED_EVENT_ID = '__dockview_droptarget_event_is_used__';\nexport function calculateQuadrantAsPercentage(overlayType, x, y, width, height, threshold) {\n    const xp = (100 * x) / width;\n    const yp = (100 * y) / height;\n    if (overlayType.has('left') && xp < threshold) {\n        return 'left';\n    }\n    if (overlayType.has('right') && xp > 100 - threshold) {\n        return 'right';\n    }\n    if (overlayType.has('top') && yp < threshold) {\n        return 'top';\n    }\n    if (overlayType.has('bottom') && yp > 100 - threshold) {\n        return 'bottom';\n    }\n    if (!overlayType.has('center')) {\n        return null;\n    }\n    return 'center';\n}\nexport function calculateQuadrantAsPixels(overlayType, x, y, width, height, threshold) {\n    if (overlayType.has('left') && x < threshold) {\n        return 'left';\n    }\n    if (overlayType.has('right') && x > width - threshold) {\n        return 'right';\n    }\n    if (overlayType.has('top') && y < threshold) {\n        return 'top';\n    }\n    if (overlayType.has('bottom') && y > height - threshold) {\n        return 'bottom';\n    }\n    if (!overlayType.has('center')) {\n        return null;\n    }\n    return 'center';\n}\n","import { DockviewEvent, Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nexport class WillFocusEvent extends DockviewEvent {\n    constructor() {\n        super();\n    }\n}\n/**\n * A core api implementation that should be used across all panel-like objects\n */\nexport class PanelApiImpl extends CompositeDisposable {\n    get isFocused() {\n        return this._isFocused;\n    }\n    get isActive() {\n        return this._isActive;\n    }\n    get isVisible() {\n        return this._isVisible;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    constructor(id, component) {\n        super();\n        this.id = id;\n        this.component = component;\n        this._isFocused = false;\n        this._isActive = false;\n        this._isVisible = true;\n        this._width = 0;\n        this._height = 0;\n        this._parameters = {};\n        this.panelUpdatesDisposable = new MutableDisposable();\n        this._onDidDimensionChange = new Emitter();\n        this.onDidDimensionsChange = this._onDidDimensionChange.event;\n        this._onDidChangeFocus = new Emitter();\n        this.onDidFocusChange = this._onDidChangeFocus.event;\n        //\n        this._onWillFocus = new Emitter();\n        this.onWillFocus = this._onWillFocus.event;\n        //\n        this._onDidVisibilityChange = new Emitter();\n        this.onDidVisibilityChange = this._onDidVisibilityChange.event;\n        this._onWillVisibilityChange = new Emitter();\n        this.onWillVisibilityChange = this._onWillVisibilityChange.event;\n        this._onDidActiveChange = new Emitter();\n        this.onDidActiveChange = this._onDidActiveChange.event;\n        this._onActiveChange = new Emitter();\n        this.onActiveChange = this._onActiveChange.event;\n        this._onDidParametersChange = new Emitter();\n        this.onDidParametersChange = this._onDidParametersChange.event;\n        this.addDisposables(this.onDidFocusChange((event) => {\n            this._isFocused = event.isFocused;\n        }), this.onDidActiveChange((event) => {\n            this._isActive = event.isActive;\n        }), this.onDidVisibilityChange((event) => {\n            this._isVisible = event.isVisible;\n        }), this.onDidDimensionsChange((event) => {\n            this._width = event.width;\n            this._height = event.height;\n        }), this.panelUpdatesDisposable, this._onDidDimensionChange, this._onDidChangeFocus, this._onDidVisibilityChange, this._onDidActiveChange, this._onWillFocus, this._onActiveChange, this._onWillFocus, this._onWillVisibilityChange, this._onDidParametersChange);\n    }\n    getParameters() {\n        return this._parameters;\n    }\n    initialize(panel) {\n        this.panelUpdatesDisposable.value = this._onDidParametersChange.event((parameters) => {\n            this._parameters = parameters;\n            panel.update({\n                params: parameters,\n            });\n        });\n    }\n    setVisible(isVisible) {\n        this._onWillVisibilityChange.fire({ isVisible });\n    }\n    setActive() {\n        this._onActiveChange.fire();\n    }\n    updateParameters(parameters) {\n        this._onDidParametersChange.fire(parameters);\n    }\n}\n","import { Emitter } from '../events';\nimport { PanelApiImpl } from './panelApi';\nexport class SplitviewPanelApiImpl extends PanelApiImpl {\n    //\n    constructor(id, component) {\n        super(id, component);\n        this._onDidConstraintsChangeInternal = new Emitter();\n        this.onDidConstraintsChangeInternal = this._onDidConstraintsChangeInternal.event;\n        //\n        this._onDidConstraintsChange = new Emitter({\n            replay: true,\n        });\n        this.onDidConstraintsChange = this._onDidConstraintsChange.event;\n        //\n        this._onDidSizeChange = new Emitter();\n        this.onDidSizeChange = this._onDidSizeChange.event;\n        this.addDisposables(this._onDidConstraintsChangeInternal, this._onDidConstraintsChange, this._onDidSizeChange);\n    }\n    setConstraints(value) {\n        this._onDidConstraintsChangeInternal.fire(value);\n    }\n    setSize(event) {\n        this._onDidSizeChange.fire(event);\n    }\n}\n","import { Emitter } from '../events';\nimport { SplitviewPanelApiImpl } from './splitviewPanelApi';\nexport class PaneviewPanelApiImpl extends SplitviewPanelApiImpl {\n    set pane(pane) {\n        this._pane = pane;\n    }\n    constructor(id, component) {\n        super(id, component);\n        this._onDidExpansionChange = new Emitter({\n            replay: true,\n        });\n        this.onDidExpansionChange = this._onDidExpansionChange.event;\n        this._onMouseEnter = new Emitter({});\n        this.onMouseEnter = this._onMouseEnter.event;\n        this._onMouseLeave = new Emitter({});\n        this.onMouseLeave = this._onMouseLeave.event;\n        this.addDisposables(this._onDidExpansionChange, this._onMouseEnter, this._onMouseLeave);\n    }\n    setExpanded(isExpanded) {\n        var _a;\n        (_a = this._pane) === null || _a === void 0 ? void 0 : _a.setExpanded(isExpanded);\n    }\n    get isExpanded() {\n        var _a;\n        return !!((_a = this._pane) === null || _a === void 0 ? void 0 : _a.isExpanded());\n    }\n}\n","import { trackFocus } from '../dom';\nimport { CompositeDisposable } from '../lifecycle';\nimport { WillFocusEvent } from '../api/panelApi';\nexport class BasePanelView extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    get params() {\n        var _a;\n        return (_a = this._params) === null || _a === void 0 ? void 0 : _a.params;\n    }\n    constructor(id, component, api) {\n        super();\n        this.id = id;\n        this.component = component;\n        this.api = api;\n        this._height = 0;\n        this._width = 0;\n        this._element = document.createElement('div');\n        this._element.tabIndex = -1;\n        this._element.style.outline = 'none';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n        this._element.style.overflow = 'hidden';\n        const focusTracker = trackFocus(this._element);\n        this.addDisposables(this.api, focusTracker.onDidFocus(() => {\n            this.api._onDidChangeFocus.fire({ isFocused: true });\n        }), focusTracker.onDidBlur(() => {\n            this.api._onDidChangeFocus.fire({ isFocused: false });\n        }), focusTracker);\n    }\n    focus() {\n        const event = new WillFocusEvent();\n        this.api._onWillFocus.fire(event);\n        if (event.defaultPrevented) {\n            return;\n        }\n        this._element.focus();\n    }\n    layout(width, height) {\n        this._width = width;\n        this._height = height;\n        this.api._onDidDimensionChange.fire({ width, height });\n        if (this.part) {\n            if (this._params) {\n                this.part.update(this._params.params);\n            }\n        }\n    }\n    init(parameters) {\n        this._params = parameters;\n        this.part = this.getComponent();\n    }\n    update(event) {\n        var _a, _b;\n        // merge the new parameters with the existing parameters\n        this._params = Object.assign(Object.assign({}, this._params), { params: Object.assign(Object.assign({}, (_a = this._params) === null || _a === void 0 ? void 0 : _a.params), event.params) });\n        /**\n         * delete new keys that have a value of undefined,\n         * allow values of null\n         */\n        for (const key of Object.keys(event.params)) {\n            if (event.params[key] === undefined) {\n                delete this._params.params[key];\n            }\n        }\n        // update the view with the updated props\n        (_b = this.part) === null || _b === void 0 ? void 0 : _b.update({ params: this._params.params });\n    }\n    toJSON() {\n        var _a, _b;\n        const params = (_b = (_a = this._params) === null || _a === void 0 ? void 0 : _a.params) !== null && _b !== void 0 ? _b : {};\n        return {\n            id: this.id,\n            component: this.component,\n            params: Object.keys(params).length > 0 ? params : undefined,\n        };\n    }\n    dispose() {\n        var _a;\n        this.api.dispose();\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n        super.dispose();\n    }\n}\n","import { PaneviewPanelApiImpl } from '../api/paneviewPanelApi';\nimport { addClasses, removeClasses } from '../dom';\nimport { addDisposableListener, Emitter } from '../events';\nimport { BasePanelView, } from '../gridview/basePanelView';\nimport { Orientation } from '../splitview/splitview';\nexport class PaneviewPanel extends BasePanelView {\n    set orientation(value) {\n        this._orientation = value;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    get minimumSize() {\n        const headerSize = this.headerSize;\n        const expanded = this.isExpanded();\n        const minimumBodySize = expanded ? this._minimumBodySize : 0;\n        return headerSize + minimumBodySize;\n    }\n    get maximumSize() {\n        const headerSize = this.headerSize;\n        const expanded = this.isExpanded();\n        const maximumBodySize = expanded ? this._maximumBodySize : 0;\n        return headerSize + maximumBodySize;\n    }\n    get size() {\n        return this._size;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    set orthogonalSize(size) {\n        this._orthogonalSize = size;\n    }\n    get minimumBodySize() {\n        return this._minimumBodySize;\n    }\n    set minimumBodySize(value) {\n        this._minimumBodySize = typeof value === 'number' ? value : 0;\n    }\n    get maximumBodySize() {\n        return this._maximumBodySize;\n    }\n    set maximumBodySize(value) {\n        this._maximumBodySize =\n            typeof value === 'number' ? value : Number.POSITIVE_INFINITY;\n    }\n    get headerVisible() {\n        return this._headerVisible;\n    }\n    set headerVisible(value) {\n        this._headerVisible = value;\n        this.header.style.display = value ? '' : 'none';\n    }\n    constructor(id, component, headerComponent, orientation, isExpanded, isHeaderVisible) {\n        super(id, component, new PaneviewPanelApiImpl(id, component));\n        this.headerComponent = headerComponent;\n        this._onDidChangeExpansionState = new Emitter({ replay: true });\n        this.onDidChangeExpansionState = this._onDidChangeExpansionState.event;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this.headerSize = 22;\n        this._orthogonalSize = 0;\n        this._size = 0;\n        this._minimumBodySize = 100;\n        this._maximumBodySize = Number.POSITIVE_INFINITY;\n        this._isExpanded = false;\n        this.expandedSize = 0;\n        this.api.pane = this; // TODO cannot use 'this' before 'super'\n        this.api.initialize(this);\n        this._isExpanded = isExpanded;\n        this._headerVisible = isHeaderVisible;\n        this._onDidChangeExpansionState.fire(this.isExpanded()); // initialize value\n        this._orientation = orientation;\n        this.element.classList.add('dv-pane');\n        this.addDisposables(this.api.onWillVisibilityChange((event) => {\n            const { isVisible } = event;\n            const { accessor } = this._params;\n            accessor.setVisible(this, isVisible);\n        }), this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire({ size: event.size });\n        }), addDisposableListener(this.element, 'mouseenter', (ev) => {\n            this.api._onMouseEnter.fire(ev);\n        }), addDisposableListener(this.element, 'mouseleave', (ev) => {\n            this.api._onMouseLeave.fire(ev);\n        }));\n        this.addDisposables(this._onDidChangeExpansionState, this.onDidChangeExpansionState((isPanelExpanded) => {\n            this.api._onDidExpansionChange.fire({\n                isExpanded: isPanelExpanded,\n            });\n        }), this.api.onDidFocusChange((e) => {\n            if (!this.header) {\n                return;\n            }\n            if (e.isFocused) {\n                addClasses(this.header, 'focused');\n            }\n            else {\n                removeClasses(this.header, 'focused');\n            }\n        }));\n        this.renderOnce();\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    isExpanded() {\n        return this._isExpanded;\n    }\n    setExpanded(expanded) {\n        if (this._isExpanded === expanded) {\n            return;\n        }\n        this._isExpanded = expanded;\n        if (expanded) {\n            if (this.animationTimer) {\n                clearTimeout(this.animationTimer);\n            }\n            if (this.body) {\n                this.element.appendChild(this.body);\n            }\n        }\n        else {\n            this.animationTimer = setTimeout(() => {\n                var _a;\n                (_a = this.body) === null || _a === void 0 ? void 0 : _a.remove();\n            }, 200);\n        }\n        this._onDidChange.fire(expanded ? { size: this.width } : {});\n        this._onDidChangeExpansionState.fire(expanded);\n    }\n    layout(size, orthogonalSize) {\n        this._size = size;\n        this._orthogonalSize = orthogonalSize;\n        const [width, height] = this.orientation === Orientation.HORIZONTAL\n            ? [size, orthogonalSize]\n            : [orthogonalSize, size];\n        if (this.isExpanded()) {\n            this.expandedSize = width;\n        }\n        super.layout(width, height);\n    }\n    init(parameters) {\n        var _a, _b;\n        super.init(parameters);\n        if (typeof parameters.minimumBodySize === 'number') {\n            this.minimumBodySize = parameters.minimumBodySize;\n        }\n        if (typeof parameters.maximumBodySize === 'number') {\n            this.maximumBodySize = parameters.maximumBodySize;\n        }\n        this.bodyPart = this.getBodyComponent();\n        this.headerPart = this.getHeaderComponent();\n        this.bodyPart.init(Object.assign(Object.assign({}, parameters), { api: this.api }));\n        this.headerPart.init(Object.assign(Object.assign({}, parameters), { api: this.api }));\n        (_a = this.body) === null || _a === void 0 ? void 0 : _a.append(this.bodyPart.element);\n        (_b = this.header) === null || _b === void 0 ? void 0 : _b.append(this.headerPart.element);\n        if (typeof parameters.isExpanded === 'boolean') {\n            this.setExpanded(parameters.isExpanded);\n        }\n    }\n    toJSON() {\n        const params = this._params;\n        return Object.assign(Object.assign({}, super.toJSON()), { headerComponent: this.headerComponent, title: params.title });\n    }\n    renderOnce() {\n        this.header = document.createElement('div');\n        this.header.tabIndex = 0;\n        this.header.className = 'dv-pane-header';\n        this.header.style.height = `${this.headerSize}px`;\n        this.header.style.lineHeight = `${this.headerSize}px`;\n        this.header.style.minHeight = `${this.headerSize}px`;\n        this.header.style.maxHeight = `${this.headerSize}px`;\n        this.element.appendChild(this.header);\n        this.body = document.createElement('div');\n        this.body.className = 'dv-pane-body';\n        this.element.appendChild(this.body);\n    }\n    // TODO slightly hacky by-pass of the component to create a body and header component\n    getComponent() {\n        return {\n            update: (params) => {\n                var _a, _b;\n                (_a = this.bodyPart) === null || _a === void 0 ? void 0 : _a.update({ params });\n                (_b = this.headerPart) === null || _b === void 0 ? void 0 : _b.update({ params });\n            },\n            dispose: () => {\n                var _a, _b;\n                (_a = this.bodyPart) === null || _a === void 0 ? void 0 : _a.dispose();\n                (_b = this.headerPart) === null || _b === void 0 ? void 0 : _b.dispose();\n            },\n        };\n    }\n}\n","import { PaneviewApi } from '../api/component.api';\nimport { DragHandler } from '../dnd/abstractDragHandler';\nimport { getPaneData, LocalSelectionTransfer, PaneTransfer, } from '../dnd/dataTransfer';\nimport { Droptarget } from '../dnd/droptarget';\nimport { Emitter } from '../events';\nimport { PaneviewPanel, } from './paneviewPanel';\nexport class DraggablePaneviewPanel extends PaneviewPanel {\n    constructor(accessor, id, component, headerComponent, orientation, isExpanded, disableDnd) {\n        super(id, component, headerComponent, orientation, isExpanded, true);\n        this.accessor = accessor;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        if (!disableDnd) {\n            this.initDragFeatures();\n        }\n    }\n    initDragFeatures() {\n        if (!this.header) {\n            return;\n        }\n        const id = this.id;\n        const accessorId = this.accessor.id;\n        this.header.draggable = true;\n        this.handler = new (class PaneDragHandler extends DragHandler {\n            getData() {\n                LocalSelectionTransfer.getInstance().setData([new PaneTransfer(accessorId, id)], PaneTransfer.prototype);\n                return {\n                    dispose: () => {\n                        LocalSelectionTransfer.getInstance().clearData(PaneTransfer.prototype);\n                    },\n                };\n            }\n        })(this.header);\n        this.target = new Droptarget(this.element, {\n            acceptedTargetZones: ['top', 'bottom'],\n            overlayModel: {\n                activationSize: { type: 'percentage', value: 50 },\n            },\n            canDisplayOverlay: (event) => {\n                const data = getPaneData();\n                if (data) {\n                    if (data.paneId !== this.id &&\n                        data.viewId === this.accessor.id) {\n                        return true;\n                    }\n                }\n                if (this.accessor.options.showDndOverlay) {\n                    return this.accessor.options.showDndOverlay({\n                        nativeEvent: event,\n                        getData: getPaneData,\n                        panel: this,\n                    });\n                }\n                return false;\n            },\n        });\n        this.addDisposables(this._onDidDrop, this.handler, this.target, this.target.onDrop((event) => {\n            this.onDrop(event);\n        }));\n    }\n    onDrop(event) {\n        const data = getPaneData();\n        if (!data || data.viewId !== this.accessor.id) {\n            // if there is no local drag event for this panel\n            // or if the drag event was creating by another Paneview instance\n            this._onDidDrop.fire(Object.assign(Object.assign({}, event), { panel: this, api: new PaneviewApi(this.accessor), getData: getPaneData }));\n            return;\n        }\n        const containerApi = this._params\n            .containerApi;\n        const panelId = data.paneId;\n        const existingPanel = containerApi.getPanel(panelId);\n        if (!existingPanel) {\n            // if the panel doesn't exist\n            this._onDidDrop.fire(Object.assign(Object.assign({}, event), { panel: this, getData: getPaneData, api: new PaneviewApi(this.accessor) }));\n            return;\n        }\n        const allPanels = containerApi.panels;\n        const fromIndex = allPanels.indexOf(existingPanel);\n        let toIndex = containerApi.panels.indexOf(this);\n        if (event.position === 'left' || event.position === 'top') {\n            toIndex = Math.max(0, toIndex - 1);\n        }\n        if (event.position === 'right' || event.position === 'bottom') {\n            if (fromIndex > toIndex) {\n                toIndex++;\n            }\n            toIndex = Math.min(allPanels.length - 1, toIndex);\n        }\n        containerApi.movePanel(fromIndex, toIndex);\n    }\n}\n","import { CompositeDisposable, MutableDisposable, } from '../../../lifecycle';\nimport { Emitter } from '../../../events';\nimport { trackFocus } from '../../../dom';\nimport { Droptarget } from '../../../dnd/droptarget';\nimport { getPanelData } from '../../../dnd/dataTransfer';\nexport class ContentContainer extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor(accessor, group) {\n        super();\n        this.accessor = accessor;\n        this.group = group;\n        this.disposable = new MutableDisposable();\n        this._onDidFocus = new Emitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new Emitter();\n        this.onDidBlur = this._onDidBlur.event;\n        this._element = document.createElement('div');\n        this._element.className = 'dv-content-container';\n        this._element.tabIndex = -1;\n        this.addDisposables(this._onDidFocus, this._onDidBlur);\n        this.dropTarget = new Droptarget(this.element, {\n            acceptedTargetZones: ['top', 'bottom', 'left', 'right', 'center'],\n            canDisplayOverlay: (event, position) => {\n                if (this.group.locked === 'no-drop-target' ||\n                    (this.group.locked && position === 'center')) {\n                    return false;\n                }\n                const data = getPanelData();\n                if (!data &&\n                    event.shiftKey &&\n                    this.group.location.type !== 'floating') {\n                    return false;\n                }\n                if (data && data.viewId === this.accessor.id) {\n                    if (data.groupId === this.group.id) {\n                        if (position === 'center') {\n                            // don't allow to drop on self for center position\n                            return false;\n                        }\n                        if (data.panelId === null) {\n                            // don't allow group move to drop anywhere on self\n                            return false;\n                        }\n                    }\n                    const groupHasOnePanelAndIsActiveDragElement = this.group.panels.length === 1 &&\n                        data.groupId === this.group.id;\n                    return !groupHasOnePanelAndIsActiveDragElement;\n                }\n                return this.group.canDisplayOverlay(event, position, 'content');\n            },\n        });\n        this.addDisposables(this.dropTarget);\n    }\n    show() {\n        this.element.style.display = '';\n    }\n    hide() {\n        this.element.style.display = 'none';\n    }\n    renderPanel(panel, options = { asActive: true }) {\n        const doRender = options.asActive ||\n            (this.panel && this.group.isPanelActive(this.panel));\n        if (this.panel &&\n            this.panel.view.content.element.parentElement === this._element) {\n            /**\n             * If the currently attached panel is mounted directly to the content then remove it\n             */\n            this._element.removeChild(this.panel.view.content.element);\n        }\n        this.panel = panel;\n        let container;\n        switch (panel.api.renderer) {\n            case 'onlyWhenVisible':\n                this.group.renderContainer.detatch(panel);\n                if (this.panel) {\n                    if (doRender) {\n                        this._element.appendChild(this.panel.view.content.element);\n                    }\n                }\n                container = this._element;\n                break;\n            case 'always':\n                if (panel.view.content.element.parentElement === this._element) {\n                    this._element.removeChild(panel.view.content.element);\n                }\n                container = this.group.renderContainer.attach({\n                    panel,\n                    referenceContainer: this,\n                });\n                break;\n            default:\n                throw new Error(`dockview: invalid renderer type '${panel.api.renderer}'`);\n        }\n        if (doRender) {\n            const focusTracker = trackFocus(container);\n            const disposable = new CompositeDisposable();\n            disposable.addDisposables(focusTracker, focusTracker.onDidFocus(() => this._onDidFocus.fire()), focusTracker.onDidBlur(() => this._onDidBlur.fire()));\n            this.disposable.value = disposable;\n        }\n    }\n    openPanel(panel) {\n        if (this.panel === panel) {\n            return;\n        }\n        this.renderPanel(panel);\n    }\n    layout(_width, _height) {\n        // noop\n    }\n    closePanel() {\n        var _a;\n        if (this.panel) {\n            if (this.panel.api.renderer === 'onlyWhenVisible') {\n                (_a = this.panel.view.content.element.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(this.panel.view.content.element);\n            }\n        }\n        this.panel = undefined;\n    }\n    dispose() {\n        this.disposable.dispose();\n        super.dispose();\n    }\n}\n","import { addDisposableListener, Emitter } from '../../../events';\nimport { CompositeDisposable } from '../../../lifecycle';\nimport { getPanelData, LocalSelectionTransfer, PanelTransfer, } from '../../../dnd/dataTransfer';\nimport { toggleClass } from '../../../dom';\nimport { Droptarget, } from '../../../dnd/droptarget';\nimport { DragHandler } from '../../../dnd/abstractDragHandler';\nclass TabDragHandler extends DragHandler {\n    constructor(element, accessor, group, panel) {\n        super(element);\n        this.accessor = accessor;\n        this.group = group;\n        this.panel = panel;\n        this.panelTransfer = LocalSelectionTransfer.getInstance();\n    }\n    getData(event) {\n        this.panelTransfer.setData([new PanelTransfer(this.accessor.id, this.group.id, this.panel.id)], PanelTransfer.prototype);\n        return {\n            dispose: () => {\n                this.panelTransfer.clearData(PanelTransfer.prototype);\n            },\n        };\n    }\n}\nexport class Tab extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor(panel, accessor, group) {\n        super();\n        this.panel = panel;\n        this.accessor = accessor;\n        this.group = group;\n        this.content = undefined;\n        this._onChanged = new Emitter();\n        this.onChanged = this._onChanged.event;\n        this._onDropped = new Emitter();\n        this.onDrop = this._onDropped.event;\n        this._onDragStart = new Emitter();\n        this.onDragStart = this._onDragStart.event;\n        this._element = document.createElement('div');\n        this._element.className = 'dv-tab';\n        this._element.tabIndex = 0;\n        this._element.draggable = true;\n        toggleClass(this.element, 'dv-inactive-tab', true);\n        const dragHandler = new TabDragHandler(this._element, this.accessor, this.group, this.panel);\n        this.dropTarget = new Droptarget(this._element, {\n            acceptedTargetZones: ['center'],\n            canDisplayOverlay: (event, position) => {\n                if (this.group.locked) {\n                    return false;\n                }\n                const data = getPanelData();\n                if (data && this.accessor.id === data.viewId) {\n                    if (data.panelId === null &&\n                        data.groupId === this.group.id) {\n                        // don't allow group move to drop on self\n                        return false;\n                    }\n                    return this.panel.id !== data.panelId;\n                }\n                return this.group.model.canDisplayOverlay(event, position, 'tab');\n            },\n        });\n        this.onWillShowOverlay = this.dropTarget.onWillShowOverlay;\n        this.addDisposables(this._onChanged, this._onDropped, this._onDragStart, dragHandler.onDragStart((event) => {\n            this._onDragStart.fire(event);\n        }), dragHandler, addDisposableListener(this._element, 'pointerdown', (event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            this._onChanged.fire(event);\n        }), this.dropTarget.onDrop((event) => {\n            this._onDropped.fire(event);\n        }), this.dropTarget);\n    }\n    setActive(isActive) {\n        toggleClass(this.element, 'dv-active-tab', isActive);\n        toggleClass(this.element, 'dv-inactive-tab', !isActive);\n    }\n    setContent(part) {\n        if (this.content) {\n            this._element.removeChild(this.content.element);\n        }\n        this.content = part;\n        this._element.appendChild(this.content.element);\n    }\n    dispose() {\n        super.dispose();\n    }\n}\n","import { quasiPreventDefault } from '../dom';\nimport { addDisposableListener } from '../events';\nimport { DragHandler } from './abstractDragHandler';\nimport { LocalSelectionTransfer, PanelTransfer } from './dataTransfer';\nimport { addGhostImage } from './ghost';\nexport class GroupDragHandler extends DragHandler {\n    constructor(element, accessor, group) {\n        super(element);\n        this.accessor = accessor;\n        this.group = group;\n        this.panelTransfer = LocalSelectionTransfer.getInstance();\n        this.addDisposables(addDisposableListener(element, 'pointerdown', (e) => {\n            if (e.shiftKey) {\n                /**\n                 * You cannot call e.preventDefault() because that will prevent drag events from firing\n                 * but we also need to stop any group overlay drag events from occuring\n                 * Use a custom event marker that can be checked by the overlay drag events\n                 */\n                quasiPreventDefault(e);\n            }\n        }, true));\n    }\n    isCancelled(_event) {\n        if (this.group.api.location.type === 'floating' && !_event.shiftKey) {\n            return true;\n        }\n        return false;\n    }\n    getData(dragEvent) {\n        const dataTransfer = dragEvent.dataTransfer;\n        this.panelTransfer.setData([new PanelTransfer(this.accessor.id, this.group.id, null)], PanelTransfer.prototype);\n        const style = window.getComputedStyle(this.el);\n        const bgColor = style.getPropertyValue('--dv-activegroup-visiblepanel-tab-background-color');\n        const color = style.getPropertyValue('--dv-activegroup-visiblepanel-tab-color');\n        if (dataTransfer) {\n            const ghostElement = document.createElement('div');\n            ghostElement.style.backgroundColor = bgColor;\n            ghostElement.style.color = color;\n            ghostElement.style.padding = '2px 8px';\n            ghostElement.style.height = '24px';\n            ghostElement.style.fontSize = '11px';\n            ghostElement.style.lineHeight = '20px';\n            ghostElement.style.borderRadius = '12px';\n            ghostElement.style.position = 'absolute';\n            ghostElement.textContent = `Multiple Panels (${this.group.size})`;\n            addGhostImage(dataTransfer, ghostElement);\n        }\n        return {\n            dispose: () => {\n                this.panelTransfer.clearData(PanelTransfer.prototype);\n            },\n        };\n    }\n}\n","import { addClasses, removeClasses } from '../dom';\nexport function addGhostImage(dataTransfer, ghostElement) {\n    // class dockview provides to force ghost image to be drawn on a different layer and prevent weird rendering issues\n    addClasses(ghostElement, 'dv-dragged');\n    document.body.appendChild(ghostElement);\n    dataTransfer.setDragImage(ghostElement, 0, 0);\n    setTimeout(() => {\n        removeClasses(ghostElement, 'dv-dragged');\n        ghostElement.remove();\n    }, 0);\n}\n","import { last } from '../../../array';\nimport { getPanelData } from '../../../dnd/dataTransfer';\nimport { Droptarget, } from '../../../dnd/droptarget';\nimport { GroupDragHandler } from '../../../dnd/groupDragHandler';\nimport { addDisposableListener, Emitter } from '../../../events';\nimport { CompositeDisposable } from '../../../lifecycle';\nexport class VoidContainer extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor(accessor, group) {\n        super();\n        this.accessor = accessor;\n        this.group = group;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this._onDragStart = new Emitter();\n        this.onDragStart = this._onDragStart.event;\n        this._element = document.createElement('div');\n        this._element.className = 'dv-void-container';\n        this._element.draggable = true;\n        this.addDisposables(this._onDrop, this._onDragStart, addDisposableListener(this._element, 'pointerdown', () => {\n            this.accessor.doSetGroupActive(this.group);\n        }));\n        const handler = new GroupDragHandler(this._element, accessor, group);\n        this.dropTraget = new Droptarget(this._element, {\n            acceptedTargetZones: ['center'],\n            canDisplayOverlay: (event, position) => {\n                var _a;\n                const data = getPanelData();\n                if (data && this.accessor.id === data.viewId) {\n                    if (data.panelId === null &&\n                        data.groupId === this.group.id) {\n                        // don't allow group move to drop on self\n                        return false;\n                    }\n                    // don't show the overlay if the tab being dragged is the last panel of this group\n                    return ((_a = last(this.group.panels)) === null || _a === void 0 ? void 0 : _a.id) !== data.panelId;\n                }\n                return group.model.canDisplayOverlay(event, position, 'header_space');\n            },\n        });\n        this.onWillShowOverlay = this.dropTraget.onWillShowOverlay;\n        this.addDisposables(handler, handler.onDragStart((event) => {\n            this._onDragStart.fire(event);\n        }), this.dropTraget.onDrop((event) => {\n            this._onDrop.fire(event);\n        }), this.dropTraget);\n    }\n}\n","import { CompositeDisposable, } from '../../../lifecycle';\nimport { addDisposableListener, Emitter } from '../../../events';\nimport { Tab } from '../tab/tab';\nimport { VoidContainer } from './voidContainer';\nimport { toggleClass } from '../../../dom';\nimport { WillShowOverlayLocationEvent } from '../../dockviewGroupPanelModel';\nimport { getPanelData } from '../../../dnd/dataTransfer';\nexport class TabsContainer extends CompositeDisposable {\n    get panels() {\n        return this.tabs.map((_) => _.value.panel.id);\n    }\n    get size() {\n        return this.tabs.length;\n    }\n    get hidden() {\n        return this._hidden;\n    }\n    set hidden(value) {\n        this._hidden = value;\n        this.element.style.display = value ? 'none' : '';\n    }\n    show() {\n        if (!this.hidden) {\n            this.element.style.display = '';\n        }\n    }\n    hide() {\n        this._element.style.display = 'none';\n    }\n    setRightActionsElement(element) {\n        if (this.rightActions === element) {\n            return;\n        }\n        if (this.rightActions) {\n            this.rightActions.remove();\n            this.rightActions = undefined;\n        }\n        if (element) {\n            this.rightActionsContainer.appendChild(element);\n            this.rightActions = element;\n        }\n    }\n    setLeftActionsElement(element) {\n        if (this.leftActions === element) {\n            return;\n        }\n        if (this.leftActions) {\n            this.leftActions.remove();\n            this.leftActions = undefined;\n        }\n        if (element) {\n            this.leftActionsContainer.appendChild(element);\n            this.leftActions = element;\n        }\n    }\n    setPrefixActionsElement(element) {\n        if (this.preActions === element) {\n            return;\n        }\n        if (this.preActions) {\n            this.preActions.remove();\n            this.preActions = undefined;\n        }\n        if (element) {\n            this.preActionsContainer.appendChild(element);\n            this.preActions = element;\n        }\n    }\n    get element() {\n        return this._element;\n    }\n    isActive(tab) {\n        return (this.selectedIndex > -1 &&\n            this.tabs[this.selectedIndex].value === tab);\n    }\n    indexOf(id) {\n        return this.tabs.findIndex((tab) => tab.value.panel.id === id);\n    }\n    constructor(accessor, group) {\n        super();\n        this.accessor = accessor;\n        this.group = group;\n        this.tabs = [];\n        this.selectedIndex = -1;\n        this._hidden = false;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this._onTabDragStart = new Emitter();\n        this.onTabDragStart = this._onTabDragStart.event;\n        this._onGroupDragStart = new Emitter();\n        this.onGroupDragStart = this._onGroupDragStart.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        this._element = document.createElement('div');\n        this._element.className = 'dv-tabs-and-actions-container';\n        toggleClass(this._element, 'dv-full-width-single-tab', this.accessor.options.singleTabMode === 'fullwidth');\n        this.rightActionsContainer = document.createElement('div');\n        this.rightActionsContainer.className = 'dv-right-actions-container';\n        this.leftActionsContainer = document.createElement('div');\n        this.leftActionsContainer.className = 'dv-left-actions-container';\n        this.preActionsContainer = document.createElement('div');\n        this.preActionsContainer.className = 'dv-pre-actions-container';\n        this.tabContainer = document.createElement('div');\n        this.tabContainer.className = 'dv-tabs-container';\n        this.voidContainer = new VoidContainer(this.accessor, this.group);\n        this._element.appendChild(this.preActionsContainer);\n        this._element.appendChild(this.tabContainer);\n        this._element.appendChild(this.leftActionsContainer);\n        this._element.appendChild(this.voidContainer.element);\n        this._element.appendChild(this.rightActionsContainer);\n        this.addDisposables(this.accessor.onDidAddPanel((e) => {\n            if (e.api.group === this.group) {\n                toggleClass(this._element, 'dv-single-tab', this.size === 1);\n            }\n        }), this.accessor.onDidRemovePanel((e) => {\n            if (e.api.group === this.group) {\n                toggleClass(this._element, 'dv-single-tab', this.size === 1);\n            }\n        }), this._onWillShowOverlay, this._onDrop, this._onTabDragStart, this._onGroupDragStart, this.voidContainer, this.voidContainer.onDragStart((event) => {\n            this._onGroupDragStart.fire({\n                nativeEvent: event,\n                group: this.group,\n            });\n        }), this.voidContainer.onDrop((event) => {\n            this._onDrop.fire({\n                event: event.nativeEvent,\n                index: this.tabs.length,\n            });\n        }), this.voidContainer.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'header_space',\n                panel: this.group.activePanel,\n                api: this.accessor.api,\n                group: this.group,\n                getData: getPanelData,\n            }));\n        }), addDisposableListener(this.voidContainer.element, 'pointerdown', (event) => {\n            const isFloatingGroupsEnabled = !this.accessor.options.disableFloatingGroups;\n            if (isFloatingGroupsEnabled &&\n                event.shiftKey &&\n                this.group.api.location.type !== 'floating') {\n                event.preventDefault();\n                const { top, left } = this.element.getBoundingClientRect();\n                const { top: rootTop, left: rootLeft } = this.accessor.element.getBoundingClientRect();\n                this.accessor.addFloatingGroup(this.group, {\n                    x: left - rootLeft + 20,\n                    y: top - rootTop + 20,\n                    inDragMode: true,\n                });\n            }\n        }), addDisposableListener(this.tabContainer, 'pointerdown', (event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            const isLeftClick = event.button === 0;\n            if (isLeftClick) {\n                this.accessor.doSetGroupActive(this.group);\n            }\n        }));\n    }\n    setActive(_isGroupActive) {\n        // noop\n    }\n    addTab(tab, index = this.tabs.length) {\n        if (index < 0 || index > this.tabs.length) {\n            throw new Error('invalid location');\n        }\n        this.tabContainer.insertBefore(tab.value.element, this.tabContainer.children[index]);\n        this.tabs = [\n            ...this.tabs.slice(0, index),\n            tab,\n            ...this.tabs.slice(index),\n        ];\n        if (this.selectedIndex < 0) {\n            this.selectedIndex = index;\n        }\n    }\n    delete(id) {\n        const index = this.tabs.findIndex((tab) => tab.value.panel.id === id);\n        const tabToRemove = this.tabs.splice(index, 1)[0];\n        const { value, disposable } = tabToRemove;\n        disposable.dispose();\n        value.dispose();\n        value.element.remove();\n    }\n    setActivePanel(panel) {\n        this.tabs.forEach((tab) => {\n            const isActivePanel = panel.id === tab.value.panel.id;\n            tab.value.setActive(isActivePanel);\n        });\n    }\n    openPanel(panel, index = this.tabs.length) {\n        if (this.tabs.find((tab) => tab.value.panel.id === panel.id)) {\n            return;\n        }\n        const tab = new Tab(panel, this.accessor, this.group);\n        tab.setContent(panel.view.tab);\n        const disposable = new CompositeDisposable(tab.onDragStart((event) => {\n            this._onTabDragStart.fire({ nativeEvent: event, panel });\n        }), tab.onChanged((event) => {\n            const isFloatingGroupsEnabled = !this.accessor.options.disableFloatingGroups;\n            const isFloatingWithOnePanel = this.group.api.location.type === 'floating' &&\n                this.size === 1;\n            if (isFloatingGroupsEnabled &&\n                !isFloatingWithOnePanel &&\n                event.shiftKey) {\n                event.preventDefault();\n                const panel = this.accessor.getGroupPanel(tab.panel.id);\n                const { top, left } = tab.element.getBoundingClientRect();\n                const { top: rootTop, left: rootLeft } = this.accessor.element.getBoundingClientRect();\n                this.accessor.addFloatingGroup(panel, {\n                    x: left - rootLeft,\n                    y: top - rootTop,\n                    inDragMode: true,\n                });\n                return;\n            }\n            const isLeftClick = event.button === 0;\n            if (!isLeftClick || event.defaultPrevented) {\n                return;\n            }\n            if (this.group.activePanel !== panel) {\n                this.group.model.openPanel(panel);\n            }\n        }), tab.onDrop((event) => {\n            this._onDrop.fire({\n                event: event.nativeEvent,\n                index: this.tabs.findIndex((x) => x.value === tab),\n            });\n        }), tab.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'tab',\n                panel: this.group.activePanel,\n                api: this.accessor.api,\n                group: this.group,\n                getData: getPanelData,\n            }));\n        }));\n        const value = { value: tab, disposable };\n        this.addTab(value, index);\n    }\n    closePanel(panel) {\n        this.delete(panel.id);\n    }\n    dispose() {\n        super.dispose();\n        for (const { value, disposable } of this.tabs) {\n            disposable.dispose();\n            value.dispose();\n        }\n        this.tabs = [];\n    }\n}\n","export class DockviewUnhandledDragOverEvent {\n    get isAccepted() {\n        return this._isAccepted;\n    }\n    constructor(nativeEvent, target, position, getData, group) {\n        this.nativeEvent = nativeEvent;\n        this.target = target;\n        this.position = position;\n        this.getData = getData;\n        this.group = group;\n        this._isAccepted = false;\n    }\n    accept() {\n        this._isAccepted = true;\n    }\n}\nexport const PROPERTY_KEYS = (() => {\n    /**\n     * by readong the keys from an empty value object TypeScript will error\n     * when we add or remove new properties to `DockviewOptions`\n     */\n    const properties = {\n        disableAutoResizing: undefined,\n        hideBorders: undefined,\n        singleTabMode: undefined,\n        disableFloatingGroups: undefined,\n        floatingGroupBounds: undefined,\n        popoutUrl: undefined,\n        defaultRenderer: undefined,\n        debug: undefined,\n        rootOverlayModel: undefined,\n        locked: undefined,\n        disableDnd: undefined,\n        gap: undefined,\n        className: undefined,\n        noPanelsOverlay: undefined,\n    };\n    return Object.keys(properties);\n})();\nexport function isPanelOptionsWithPanel(data) {\n    if (data.referencePanel) {\n        return true;\n    }\n    return false;\n}\nexport function isPanelOptionsWithGroup(data) {\n    if (data.referenceGroup) {\n        return true;\n    }\n    return false;\n}\nexport function isGroupOptionsWithPanel(data) {\n    if (data.referencePanel) {\n        return true;\n    }\n    return false;\n}\nexport function isGroupOptionsWithGroup(data) {\n    if (data.referenceGroup) {\n        return true;\n    }\n    return false;\n}\n","import { DockviewApi } from '../api/component.api';\nimport { getPanelData } from '../dnd/dataTransfer';\nimport { isAncestor, toggleClass } from '../dom';\nimport { addDisposableListener, DockviewEvent, Emitter, } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nimport { ContentContainer, } from './components/panel/content';\nimport { TabsContainer, } from './components/titlebar/tabsContainer';\nimport { DockviewUnhandledDragOverEvent, } from './options';\nexport class DockviewDidDropEvent extends DockviewEvent {\n    get nativeEvent() {\n        return this.options.nativeEvent;\n    }\n    get position() {\n        return this.options.position;\n    }\n    get panel() {\n        return this.options.panel;\n    }\n    get group() {\n        return this.options.group;\n    }\n    get api() {\n        return this.options.api;\n    }\n    constructor(options) {\n        super();\n        this.options = options;\n    }\n    getData() {\n        return this.options.getData();\n    }\n}\nexport class DockviewWillDropEvent extends DockviewDidDropEvent {\n    get kind() {\n        return this._kind;\n    }\n    constructor(options) {\n        super(options);\n        this._kind = options.kind;\n    }\n}\nexport class WillShowOverlayLocationEvent {\n    get kind() {\n        return this.options.kind;\n    }\n    get nativeEvent() {\n        return this.event.nativeEvent;\n    }\n    get position() {\n        return this.event.position;\n    }\n    get defaultPrevented() {\n        return this.event.defaultPrevented;\n    }\n    get panel() {\n        return this.options.panel;\n    }\n    get api() {\n        return this.options.api;\n    }\n    get group() {\n        return this.options.group;\n    }\n    preventDefault() {\n        this.event.preventDefault();\n    }\n    getData() {\n        return this.options.getData();\n    }\n    constructor(event, options) {\n        this.event = event;\n        this.options = options;\n    }\n}\nexport class DockviewGroupPanelModel extends CompositeDisposable {\n    get element() {\n        throw new Error('dockview: not supported');\n    }\n    get activePanel() {\n        return this._activePanel;\n    }\n    get locked() {\n        return this._locked;\n    }\n    set locked(value) {\n        this._locked = value;\n        toggleClass(this.container, 'dv-locked-groupview', value === 'no-drop-target' || value);\n    }\n    get isActive() {\n        return this._isGroupActive;\n    }\n    get panels() {\n        return this._panels;\n    }\n    get size() {\n        return this._panels.length;\n    }\n    get isEmpty() {\n        return this._panels.length === 0;\n    }\n    get hasWatermark() {\n        return !!(this.watermark && this.container.contains(this.watermark.element));\n    }\n    get header() {\n        return this.tabsContainer;\n    }\n    get isContentFocused() {\n        if (!document.activeElement) {\n            return false;\n        }\n        return isAncestor(document.activeElement, this.contentContainer.element);\n    }\n    get location() {\n        return this._location;\n    }\n    set location(value) {\n        this._location = value;\n        toggleClass(this.container, 'dv-groupview-floating', false);\n        toggleClass(this.container, 'dv-groupview-popout', false);\n        switch (value.type) {\n            case 'grid':\n                this.contentContainer.dropTarget.setTargetZones([\n                    'top',\n                    'bottom',\n                    'left',\n                    'right',\n                    'center',\n                ]);\n                break;\n            case 'floating':\n                this.contentContainer.dropTarget.setTargetZones(['center']);\n                this.contentContainer.dropTarget.setTargetZones(value\n                    ? ['center']\n                    : ['top', 'bottom', 'left', 'right', 'center']);\n                toggleClass(this.container, 'dv-groupview-floating', true);\n                break;\n            case 'popout':\n                this.contentContainer.dropTarget.setTargetZones(['center']);\n                toggleClass(this.container, 'dv-groupview-popout', true);\n                break;\n        }\n        this.groupPanel.api._onDidLocationChange.fire({\n            location: this.location,\n        });\n    }\n    constructor(container, accessor, id, options, groupPanel) {\n        var _a;\n        super();\n        this.container = container;\n        this.accessor = accessor;\n        this.id = id;\n        this.options = options;\n        this.groupPanel = groupPanel;\n        this._isGroupActive = false;\n        this._locked = false;\n        this._location = { type: 'grid' };\n        this.mostRecentlyUsed = [];\n        this._overwriteRenderContainer = null;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._width = 0;\n        this._height = 0;\n        this._panels = [];\n        this._panelDisposables = new Map();\n        this._onMove = new Emitter();\n        this.onMove = this._onMove.event;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onWillDrop = new Emitter();\n        this.onWillDrop = this._onWillDrop.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        this._onTabDragStart = new Emitter();\n        this.onTabDragStart = this._onTabDragStart.event;\n        this._onGroupDragStart = new Emitter();\n        this.onGroupDragStart = this._onGroupDragStart.event;\n        this._onDidAddPanel = new Emitter();\n        this.onDidAddPanel = this._onDidAddPanel.event;\n        this._onDidPanelTitleChange = new Emitter();\n        this.onDidPanelTitleChange = this._onDidPanelTitleChange.event;\n        this._onDidPanelParametersChange = new Emitter();\n        this.onDidPanelParametersChange = this._onDidPanelParametersChange.event;\n        this._onDidRemovePanel = new Emitter();\n        this.onDidRemovePanel = this._onDidRemovePanel.event;\n        this._onDidActivePanelChange = new Emitter();\n        this.onDidActivePanelChange = this._onDidActivePanelChange.event;\n        this._onUnhandledDragOverEvent = new Emitter();\n        this.onUnhandledDragOverEvent = this._onUnhandledDragOverEvent.event;\n        toggleClass(this.container, 'dv-groupview', true);\n        this._api = new DockviewApi(this.accessor);\n        this.tabsContainer = new TabsContainer(this.accessor, this.groupPanel);\n        this.contentContainer = new ContentContainer(this.accessor, this);\n        container.append(this.tabsContainer.element, this.contentContainer.element);\n        this.header.hidden = !!options.hideHeader;\n        this.locked = (_a = options.locked) !== null && _a !== void 0 ? _a : false;\n        this.addDisposables(this._onTabDragStart, this._onGroupDragStart, this._onWillShowOverlay, this.tabsContainer.onTabDragStart((event) => {\n            this._onTabDragStart.fire(event);\n        }), this.tabsContainer.onGroupDragStart((event) => {\n            this._onGroupDragStart.fire(event);\n        }), this.tabsContainer.onDrop((event) => {\n            this.handleDropEvent('header', event.event, 'center', event.index);\n        }), this.contentContainer.onDidFocus(() => {\n            this.accessor.doSetGroupActive(this.groupPanel);\n        }), this.contentContainer.onDidBlur(() => {\n            // noop\n        }), this.contentContainer.dropTarget.onDrop((event) => {\n            this.handleDropEvent('content', event.nativeEvent, event.position);\n        }), this.tabsContainer.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(event);\n        }), this.contentContainer.dropTarget.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'content',\n                panel: this.activePanel,\n                api: this._api,\n                group: this.groupPanel,\n                getData: getPanelData,\n            }));\n        }), this._onMove, this._onDidChange, this._onDidDrop, this._onWillDrop, this._onDidAddPanel, this._onDidRemovePanel, this._onDidActivePanelChange, this._onUnhandledDragOverEvent, this._onDidPanelTitleChange, this._onDidPanelParametersChange);\n    }\n    focusContent() {\n        this.contentContainer.element.focus();\n    }\n    set renderContainer(value) {\n        this.panels.forEach((panel) => {\n            this.renderContainer.detatch(panel);\n        });\n        this._overwriteRenderContainer = value;\n        this.panels.forEach((panel) => {\n            this.rerender(panel);\n        });\n    }\n    get renderContainer() {\n        var _a;\n        return ((_a = this._overwriteRenderContainer) !== null && _a !== void 0 ? _a : this.accessor.overlayRenderContainer);\n    }\n    initialize() {\n        if (this.options.panels) {\n            this.options.panels.forEach((panel) => {\n                this.doAddPanel(panel);\n            });\n        }\n        if (this.options.activePanel) {\n            this.openPanel(this.options.activePanel);\n        }\n        // must be run after the constructor otherwise this.parent may not be\n        // correctly initialized\n        this.setActive(this.isActive, true);\n        this.updateContainer();\n        if (this.accessor.options.createRightHeaderActionComponent) {\n            this._rightHeaderActions =\n                this.accessor.options.createRightHeaderActionComponent(this.groupPanel);\n            this.addDisposables(this._rightHeaderActions);\n            this._rightHeaderActions.init({\n                containerApi: this._api,\n                api: this.groupPanel.api,\n                group: this.groupPanel,\n            });\n            this.tabsContainer.setRightActionsElement(this._rightHeaderActions.element);\n        }\n        if (this.accessor.options.createLeftHeaderActionComponent) {\n            this._leftHeaderActions =\n                this.accessor.options.createLeftHeaderActionComponent(this.groupPanel);\n            this.addDisposables(this._leftHeaderActions);\n            this._leftHeaderActions.init({\n                containerApi: this._api,\n                api: this.groupPanel.api,\n                group: this.groupPanel,\n            });\n            this.tabsContainer.setLeftActionsElement(this._leftHeaderActions.element);\n        }\n        if (this.accessor.options.createPrefixHeaderActionComponent) {\n            this._prefixHeaderActions =\n                this.accessor.options.createPrefixHeaderActionComponent(this.groupPanel);\n            this.addDisposables(this._prefixHeaderActions);\n            this._prefixHeaderActions.init({\n                containerApi: this._api,\n                api: this.groupPanel.api,\n                group: this.groupPanel,\n            });\n            this.tabsContainer.setPrefixActionsElement(this._prefixHeaderActions.element);\n        }\n    }\n    rerender(panel) {\n        this.contentContainer.renderPanel(panel, { asActive: false });\n    }\n    indexOf(panel) {\n        return this.tabsContainer.indexOf(panel.id);\n    }\n    toJSON() {\n        var _a;\n        const result = {\n            views: this.tabsContainer.panels,\n            activeView: (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.id,\n            id: this.id,\n        };\n        if (this.locked !== false) {\n            result.locked = this.locked;\n        }\n        if (this.header.hidden) {\n            result.hideHeader = true;\n        }\n        return result;\n    }\n    moveToNext(options) {\n        if (!options) {\n            options = {};\n        }\n        if (!options.panel) {\n            options.panel = this.activePanel;\n        }\n        const index = options.panel ? this.panels.indexOf(options.panel) : -1;\n        let normalizedIndex;\n        if (index < this.panels.length - 1) {\n            normalizedIndex = index + 1;\n        }\n        else if (!options.suppressRoll) {\n            normalizedIndex = 0;\n        }\n        else {\n            return;\n        }\n        this.openPanel(this.panels[normalizedIndex]);\n    }\n    moveToPrevious(options) {\n        if (!options) {\n            options = {};\n        }\n        if (!options.panel) {\n            options.panel = this.activePanel;\n        }\n        if (!options.panel) {\n            return;\n        }\n        const index = this.panels.indexOf(options.panel);\n        let normalizedIndex;\n        if (index > 0) {\n            normalizedIndex = index - 1;\n        }\n        else if (!options.suppressRoll) {\n            normalizedIndex = this.panels.length - 1;\n        }\n        else {\n            return;\n        }\n        this.openPanel(this.panels[normalizedIndex]);\n    }\n    containsPanel(panel) {\n        return this.panels.includes(panel);\n    }\n    init(_params) {\n        //noop\n    }\n    update(_params) {\n        //noop\n    }\n    focus() {\n        var _a;\n        (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    openPanel(panel, options = {}) {\n        /**\n         * set the panel group\n         * add the panel\n         * check if group active\n         * check if panel active\n         */\n        if (typeof options.index !== 'number' ||\n            options.index > this.panels.length) {\n            options.index = this.panels.length;\n        }\n        const skipSetActive = !!options.skipSetActive;\n        // ensure the group is updated before we fire any events\n        panel.updateParentGroup(this.groupPanel, {\n            skipSetActive: options.skipSetActive,\n        });\n        this.doAddPanel(panel, options.index, {\n            skipSetActive: skipSetActive,\n        });\n        if (this._activePanel === panel) {\n            this.contentContainer.renderPanel(panel, { asActive: true });\n            return;\n        }\n        if (!skipSetActive) {\n            this.doSetActivePanel(panel);\n        }\n        if (!options.skipSetGroupActive) {\n            this.accessor.doSetGroupActive(this.groupPanel);\n        }\n        if (!options.skipSetActive) {\n            this.updateContainer();\n        }\n    }\n    removePanel(groupItemOrId, options = {\n        skipSetActive: false,\n    }) {\n        const id = typeof groupItemOrId === 'string'\n            ? groupItemOrId\n            : groupItemOrId.id;\n        const panelToRemove = this._panels.find((panel) => panel.id === id);\n        if (!panelToRemove) {\n            throw new Error('invalid operation');\n        }\n        return this._removePanel(panelToRemove, options);\n    }\n    closeAllPanels() {\n        if (this.panels.length > 0) {\n            // take a copy since we will be edting the array as we iterate through\n            const arrPanelCpy = [...this.panels];\n            for (const panel of arrPanelCpy) {\n                this.doClose(panel);\n            }\n        }\n        else {\n            this.accessor.removeGroup(this.groupPanel);\n        }\n    }\n    closePanel(panel) {\n        this.doClose(panel);\n    }\n    doClose(panel) {\n        const isLast = this.panels.length === 1 && this.accessor.groups.length === 1;\n        this.accessor.removePanel(panel, isLast && this.accessor.options.noPanelsOverlay === 'emptyGroup'\n            ? { removeEmptyGroup: false }\n            : undefined);\n    }\n    isPanelActive(panel) {\n        return this._activePanel === panel;\n    }\n    updateActions(element) {\n        this.tabsContainer.setRightActionsElement(element);\n    }\n    setActive(isGroupActive, force = false) {\n        if (!force && this.isActive === isGroupActive) {\n            return;\n        }\n        this._isGroupActive = isGroupActive;\n        toggleClass(this.container, 'dv-active-group', isGroupActive);\n        toggleClass(this.container, 'dv-inactive-group', !isGroupActive);\n        this.tabsContainer.setActive(this.isActive);\n        if (!this._activePanel && this.panels.length > 0) {\n            this.doSetActivePanel(this.panels[0]);\n        }\n        this.updateContainer();\n    }\n    layout(width, height) {\n        var _a;\n        this._width = width;\n        this._height = height;\n        this.contentContainer.layout(this._width, this._height);\n        if ((_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.layout) {\n            this._activePanel.layout(this._width, this._height);\n        }\n    }\n    _removePanel(panel, options) {\n        const isActivePanel = this._activePanel === panel;\n        this.doRemovePanel(panel);\n        if (isActivePanel && this.panels.length > 0) {\n            const nextPanel = this.mostRecentlyUsed[0];\n            this.openPanel(nextPanel, {\n                skipSetActive: options.skipSetActive,\n                skipSetGroupActive: options.skipSetActiveGroup,\n            });\n        }\n        if (this._activePanel && this.panels.length === 0) {\n            this.doSetActivePanel(undefined);\n        }\n        if (!options.skipSetActive) {\n            this.updateContainer();\n        }\n        return panel;\n    }\n    doRemovePanel(panel) {\n        const index = this.panels.indexOf(panel);\n        if (this._activePanel === panel) {\n            this.contentContainer.closePanel();\n        }\n        this.tabsContainer.delete(panel.id);\n        this._panels.splice(index, 1);\n        if (this.mostRecentlyUsed.includes(panel)) {\n            const index = this.mostRecentlyUsed.indexOf(panel);\n            this.mostRecentlyUsed.splice(index, 1);\n        }\n        const disposable = this._panelDisposables.get(panel.id);\n        if (disposable) {\n            disposable.dispose();\n            this._panelDisposables.delete(panel.id);\n        }\n        this._onDidRemovePanel.fire({ panel });\n    }\n    doAddPanel(panel, index = this.panels.length, options = { skipSetActive: false }) {\n        const existingPanel = this._panels.indexOf(panel);\n        const hasExistingPanel = existingPanel > -1;\n        this.tabsContainer.show();\n        this.contentContainer.show();\n        this.tabsContainer.openPanel(panel, index);\n        if (!options.skipSetActive) {\n            this.contentContainer.openPanel(panel);\n        }\n        if (hasExistingPanel) {\n            // TODO - need to ensure ordering hasn't changed and if it has need to re-order this.panels\n            return;\n        }\n        this.updateMru(panel);\n        this.panels.splice(index, 0, panel);\n        this._panelDisposables.set(panel.id, new CompositeDisposable(panel.api.onDidTitleChange((event) => this._onDidPanelTitleChange.fire(event)), panel.api.onDidParametersChange((event) => this._onDidPanelParametersChange.fire(event))));\n        this._onDidAddPanel.fire({ panel });\n    }\n    doSetActivePanel(panel) {\n        if (this._activePanel === panel) {\n            return;\n        }\n        this._activePanel = panel;\n        if (panel) {\n            this.tabsContainer.setActivePanel(panel);\n            panel.layout(this._width, this._height);\n            this.updateMru(panel);\n            this._onDidActivePanelChange.fire({\n                panel,\n            });\n        }\n    }\n    updateMru(panel) {\n        if (this.mostRecentlyUsed.includes(panel)) {\n            this.mostRecentlyUsed.splice(this.mostRecentlyUsed.indexOf(panel), 1);\n        }\n        this.mostRecentlyUsed = [panel, ...this.mostRecentlyUsed];\n    }\n    updateContainer() {\n        var _a, _b;\n        this.panels.forEach((panel) => panel.runEvents());\n        if (this.isEmpty && !this.watermark) {\n            const watermark = this.accessor.createWatermarkComponent();\n            watermark.init({\n                containerApi: this._api,\n                group: this.groupPanel,\n            });\n            this.watermark = watermark;\n            addDisposableListener(this.watermark.element, 'pointerdown', () => {\n                if (!this.isActive) {\n                    this.accessor.doSetGroupActive(this.groupPanel);\n                }\n            });\n            this.contentContainer.element.appendChild(this.watermark.element);\n        }\n        if (!this.isEmpty && this.watermark) {\n            this.watermark.element.remove();\n            (_b = (_a = this.watermark).dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n            this.watermark = undefined;\n        }\n    }\n    canDisplayOverlay(event, position, target) {\n        const firedEvent = new DockviewUnhandledDragOverEvent(event, target, position, getPanelData, this.accessor.getPanel(this.id));\n        this._onUnhandledDragOverEvent.fire(firedEvent);\n        return firedEvent.isAccepted;\n    }\n    handleDropEvent(type, event, position, index) {\n        if (this.locked === 'no-drop-target') {\n            return;\n        }\n        function getKind() {\n            switch (type) {\n                case 'header':\n                    return typeof index === 'number' ? 'tab' : 'header_space';\n                case 'content':\n                    return 'content';\n            }\n        }\n        const panel = typeof index === 'number' ? this.panels[index] : undefined;\n        const willDropEvent = new DockviewWillDropEvent({\n            nativeEvent: event,\n            position,\n            panel,\n            getData: () => getPanelData(),\n            kind: getKind(),\n            group: this.groupPanel,\n            api: this._api,\n        });\n        this._onWillDrop.fire(willDropEvent);\n        if (willDropEvent.defaultPrevented) {\n            return;\n        }\n        const data = getPanelData();\n        if (data && data.viewId === this.accessor.id) {\n            if (data.panelId === null) {\n                // this is a group move dnd event\n                const { groupId } = data;\n                this._onMove.fire({\n                    target: position,\n                    groupId: groupId,\n                    index,\n                });\n                return;\n            }\n            const fromSameGroup = this.tabsContainer.indexOf(data.panelId) !== -1;\n            if (fromSameGroup && this.tabsContainer.size === 1) {\n                return;\n            }\n            const { groupId, panelId } = data;\n            const isSameGroup = this.id === groupId;\n            if (isSameGroup && !position) {\n                const oldIndex = this.tabsContainer.indexOf(panelId);\n                if (oldIndex === index) {\n                    return;\n                }\n            }\n            this._onMove.fire({\n                target: position,\n                groupId: data.groupId,\n                itemId: data.panelId,\n                index,\n            });\n        }\n        else {\n            this._onDidDrop.fire(new DockviewDidDropEvent({\n                nativeEvent: event,\n                position,\n                panel,\n                getData: () => getPanelData(),\n                group: this.groupPanel,\n                api: this._api,\n            }));\n        }\n    }\n    dispose() {\n        var _a, _b, _c;\n        super.dispose();\n        (_a = this.watermark) === null || _a === void 0 ? void 0 : _a.element.remove();\n        (_c = (_b = this.watermark) === null || _b === void 0 ? void 0 : _b.dispose) === null || _c === void 0 ? void 0 : _c.call(_b);\n        this.watermark = undefined;\n        for (const panel of this.panels) {\n            panel.dispose();\n        }\n        this.tabsContainer.dispose();\n        this.contentContainer.dispose();\n    }\n}\n","import { Emitter } from '../events';\nimport { PanelApiImpl } from './panelApi';\nexport class GridviewPanelApiImpl extends PanelApiImpl {\n    constructor(id, component, panel) {\n        super(id, component);\n        this._onDidConstraintsChangeInternal = new Emitter();\n        this.onDidConstraintsChangeInternal = this._onDidConstraintsChangeInternal.event;\n        this._onDidConstraintsChange = new Emitter();\n        this.onDidConstraintsChange = this._onDidConstraintsChange.event;\n        this._onDidSizeChange = new Emitter();\n        this.onDidSizeChange = this._onDidSizeChange.event;\n        this.addDisposables(this._onDidConstraintsChangeInternal, this._onDidConstraintsChange, this._onDidSizeChange);\n        if (panel) {\n            this.initialize(panel);\n        }\n    }\n    setConstraints(value) {\n        this._onDidConstraintsChangeInternal.fire(value);\n    }\n    setSize(event) {\n        this._onDidSizeChange.fire(event);\n    }\n}\n","import { BasePanelView, } from './basePanelView';\nimport { GridviewPanelApiImpl, } from '../api/gridviewPanelApi';\nimport { Emitter } from '../events';\nexport class GridviewPanel extends BasePanelView {\n    get priority() {\n        return this._priority;\n    }\n    get snap() {\n        return this._snap;\n    }\n    get minimumWidth() {\n        /**\n         * defer to protected function to allow subclasses to override easily.\n         * see https://github.com/microsoft/TypeScript/issues/338\n         */\n        return this.__minimumWidth();\n    }\n    get minimumHeight() {\n        /**\n         * defer to protected function to allow subclasses to override easily.\n         * see https://github.com/microsoft/TypeScript/issues/338\n         */\n        return this.__minimumHeight();\n    }\n    get maximumHeight() {\n        /**\n         * defer to protected function to allow subclasses to override easily.\n         * see https://github.com/microsoft/TypeScript/issues/338\n         */\n        return this.__maximumHeight();\n    }\n    get maximumWidth() {\n        /**\n         * defer to protected function to allow subclasses to override easily.\n         * see https://github.com/microsoft/TypeScript/issues/338\n         */\n        return this.__maximumWidth();\n    }\n    __minimumWidth() {\n        const width = typeof this._minimumWidth === 'function'\n            ? this._minimumWidth()\n            : this._minimumWidth;\n        if (width !== this._evaluatedMinimumWidth) {\n            this._evaluatedMinimumWidth = width;\n            this.updateConstraints();\n        }\n        return width;\n    }\n    __maximumWidth() {\n        const width = typeof this._maximumWidth === 'function'\n            ? this._maximumWidth()\n            : this._maximumWidth;\n        if (width !== this._evaluatedMaximumWidth) {\n            this._evaluatedMaximumWidth = width;\n            this.updateConstraints();\n        }\n        return width;\n    }\n    __minimumHeight() {\n        const height = typeof this._minimumHeight === 'function'\n            ? this._minimumHeight()\n            : this._minimumHeight;\n        if (height !== this._evaluatedMinimumHeight) {\n            this._evaluatedMinimumHeight = height;\n            this.updateConstraints();\n        }\n        return height;\n    }\n    __maximumHeight() {\n        const height = typeof this._maximumHeight === 'function'\n            ? this._maximumHeight()\n            : this._maximumHeight;\n        if (height !== this._evaluatedMaximumHeight) {\n            this._evaluatedMaximumHeight = height;\n            this.updateConstraints();\n        }\n        return height;\n    }\n    get isActive() {\n        return this.api.isActive;\n    }\n    get isVisible() {\n        return this.api.isVisible;\n    }\n    constructor(id, component, options, api) {\n        super(id, component, api !== null && api !== void 0 ? api : new GridviewPanelApiImpl(id, component));\n        this._evaluatedMinimumWidth = 0;\n        this._evaluatedMaximumWidth = Number.MAX_SAFE_INTEGER;\n        this._evaluatedMinimumHeight = 0;\n        this._evaluatedMaximumHeight = Number.MAX_SAFE_INTEGER;\n        this._minimumWidth = 0;\n        this._minimumHeight = 0;\n        this._maximumWidth = Number.MAX_SAFE_INTEGER;\n        this._maximumHeight = Number.MAX_SAFE_INTEGER;\n        this._snap = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        if (typeof (options === null || options === void 0 ? void 0 : options.minimumWidth) === 'number') {\n            this._minimumWidth = options.minimumWidth;\n        }\n        if (typeof (options === null || options === void 0 ? void 0 : options.maximumWidth) === 'number') {\n            this._maximumWidth = options.maximumWidth;\n        }\n        if (typeof (options === null || options === void 0 ? void 0 : options.minimumHeight) === 'number') {\n            this._minimumHeight = options.minimumHeight;\n        }\n        if (typeof (options === null || options === void 0 ? void 0 : options.maximumHeight) === 'number') {\n            this._maximumHeight = options.maximumHeight;\n        }\n        this.api.initialize(this); // TODO: required to by-pass 'super before this' requirement\n        this.addDisposables(this.api.onWillVisibilityChange((event) => {\n            const { isVisible } = event;\n            const { accessor } = this._params;\n            accessor.setVisible(this, isVisible);\n        }), this.api.onActiveChange(() => {\n            const { accessor } = this._params;\n            accessor.doSetGroupActive(this);\n        }), this.api.onDidConstraintsChangeInternal((event) => {\n            if (typeof event.minimumWidth === 'number' ||\n                typeof event.minimumWidth === 'function') {\n                this._minimumWidth = event.minimumWidth;\n            }\n            if (typeof event.minimumHeight === 'number' ||\n                typeof event.minimumHeight === 'function') {\n                this._minimumHeight = event.minimumHeight;\n            }\n            if (typeof event.maximumWidth === 'number' ||\n                typeof event.maximumWidth === 'function') {\n                this._maximumWidth = event.maximumWidth;\n            }\n            if (typeof event.maximumHeight === 'number' ||\n                typeof event.maximumHeight === 'function') {\n                this._maximumHeight = event.maximumHeight;\n            }\n        }), this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire({\n                height: event.height,\n                width: event.width,\n            });\n        }), this._onDidChange);\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    init(parameters) {\n        if (parameters.maximumHeight) {\n            this._maximumHeight = parameters.maximumHeight;\n        }\n        if (parameters.minimumHeight) {\n            this._minimumHeight = parameters.minimumHeight;\n        }\n        if (parameters.maximumWidth) {\n            this._maximumWidth = parameters.maximumWidth;\n        }\n        if (parameters.minimumWidth) {\n            this._minimumWidth = parameters.minimumWidth;\n        }\n        this._priority = parameters.priority;\n        this._snap = !!parameters.snap;\n        super.init(parameters);\n        if (typeof parameters.isVisible === 'boolean') {\n            this.setVisible(parameters.isVisible);\n        }\n    }\n    updateConstraints() {\n        this.api._onDidConstraintsChange.fire({\n            minimumWidth: this._evaluatedMinimumWidth,\n            maximumWidth: this._evaluatedMaximumWidth,\n            minimumHeight: this._evaluatedMinimumHeight,\n            maximumHeight: this._evaluatedMaximumHeight,\n        });\n    }\n    toJSON() {\n        const state = super.toJSON();\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ? undefined : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        return Object.assign(Object.assign({}, state), { minimumHeight: minimum(this.minimumHeight), maximumHeight: maximum(this.maximumHeight), minimumWidth: minimum(this.minimumWidth), maximumWidth: maximum(this.maximumWidth), snap: this.snap, priority: this.priority });\n    }\n}\n","import { positionToDirection } from '../dnd/droptarget';\nimport { Emitter } from '../events';\nimport { MutableDisposable } from '../lifecycle';\nimport { GridviewPanelApiImpl } from './gridviewPanelApi';\nconst NOT_INITIALIZED_MESSAGE = 'dockview: DockviewGroupPanelApiImpl not initialized';\nexport class DockviewGroupPanelApiImpl extends GridviewPanelApiImpl {\n    get location() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        return this._group.model.location;\n    }\n    constructor(id, accessor) {\n        super(id, '__dockviewgroup__');\n        this.accessor = accessor;\n        this._mutableDisposable = new MutableDisposable();\n        this._onDidLocationChange = new Emitter();\n        this.onDidLocationChange = this._onDidLocationChange.event;\n        this._onDidActivePanelChange = new Emitter();\n        this.onDidActivePanelChange = this._onDidActivePanelChange.event;\n        this.addDisposables(this._onDidLocationChange, this._onDidActivePanelChange, this._mutableDisposable);\n    }\n    close() {\n        if (!this._group) {\n            return;\n        }\n        return this.accessor.removeGroup(this._group);\n    }\n    getWindow() {\n        return this.location.type === 'popout'\n            ? this.location.getWindow()\n            : window;\n    }\n    moveTo(options) {\n        var _a, _b, _c;\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        const group = (_a = options.group) !== null && _a !== void 0 ? _a : this.accessor.addGroup({\n            direction: positionToDirection((_b = options.position) !== null && _b !== void 0 ? _b : 'right'),\n            skipSetActive: true,\n        });\n        this.accessor.moveGroupOrPanel({\n            from: { groupId: this._group.id },\n            to: {\n                group,\n                position: options.group\n                    ? (_c = options.position) !== null && _c !== void 0 ? _c : 'center'\n                    : 'center',\n                index: options.index,\n            },\n        });\n    }\n    maximize() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        if (this.location.type !== 'grid') {\n            // only grid groups can be maximized\n            return;\n        }\n        this.accessor.maximizeGroup(this._group);\n    }\n    isMaximized() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        return this.accessor.isMaximizedGroup(this._group);\n    }\n    exitMaximized() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        if (this.isMaximized()) {\n            this.accessor.exitMaximizedGroup();\n        }\n    }\n    initialize(group) {\n        /**\n         * TODO: Annoying initialization order caveat, find a better way to initialize and avoid needing null checks\n         *\n         * Due to the order on initialization we know that the model isn't defined until later in the same stack-frame of setup.\n         * By queuing a microtask we can ensure the setup is completed within the same stack-frame, but after everything else has\n         * finished ensuring the `model` is defined.\n         */\n        this._group = group;\n        queueMicrotask(() => {\n            this._mutableDisposable.value =\n                this._group.model.onDidActivePanelChange((event) => {\n                    this._onDidActivePanelChange.fire(event);\n                });\n        });\n    }\n}\n","import { DockviewGroupPanelModel, } from './dockviewGroupPanelModel';\nimport { GridviewPanel } from '../gridview/gridviewPanel';\nimport { DockviewGroupPanelApiImpl, } from '../api/dockviewGroupPanelApi';\nconst MINIMUM_DOCKVIEW_GROUP_PANEL_WIDTH = 100;\nconst MINIMUM_DOCKVIEW_GROUP_PANEL_HEIGHT = 100;\nexport class DockviewGroupPanel extends GridviewPanel {\n    get minimumWidth() {\n        var _a;\n        const activePanelMinimumWidth = (_a = this.activePanel) === null || _a === void 0 ? void 0 : _a.minimumWidth;\n        if (typeof activePanelMinimumWidth === 'number') {\n            return activePanelMinimumWidth;\n        }\n        return super.__minimumWidth();\n    }\n    get minimumHeight() {\n        var _a;\n        const activePanelMinimumHeight = (_a = this.activePanel) === null || _a === void 0 ? void 0 : _a.minimumHeight;\n        if (typeof activePanelMinimumHeight === 'number') {\n            return activePanelMinimumHeight;\n        }\n        return super.__minimumHeight();\n    }\n    get maximumWidth() {\n        var _a;\n        const activePanelMaximumWidth = (_a = this.activePanel) === null || _a === void 0 ? void 0 : _a.maximumWidth;\n        if (typeof activePanelMaximumWidth === 'number') {\n            return activePanelMaximumWidth;\n        }\n        return super.__maximumWidth();\n    }\n    get maximumHeight() {\n        var _a;\n        const activePanelMaximumHeight = (_a = this.activePanel) === null || _a === void 0 ? void 0 : _a.maximumHeight;\n        if (typeof activePanelMaximumHeight === 'number') {\n            return activePanelMaximumHeight;\n        }\n        return super.__maximumHeight();\n    }\n    get panels() {\n        return this._model.panels;\n    }\n    get activePanel() {\n        return this._model.activePanel;\n    }\n    get size() {\n        return this._model.size;\n    }\n    get model() {\n        return this._model;\n    }\n    get locked() {\n        return this._model.locked;\n    }\n    set locked(value) {\n        this._model.locked = value;\n    }\n    get header() {\n        return this._model.header;\n    }\n    constructor(accessor, id, options) {\n        var _a, _b, _c, _d, _e, _f;\n        super(id, 'groupview_default', {\n            minimumHeight: (_b = (_a = options.constraints) === null || _a === void 0 ? void 0 : _a.minimumHeight) !== null && _b !== void 0 ? _b : MINIMUM_DOCKVIEW_GROUP_PANEL_HEIGHT,\n            minimumWidth: (_d = (_c = options.constraints) === null || _c === void 0 ? void 0 : _c.maximumHeight) !== null && _d !== void 0 ? _d : MINIMUM_DOCKVIEW_GROUP_PANEL_WIDTH,\n            maximumHeight: (_e = options.constraints) === null || _e === void 0 ? void 0 : _e.maximumHeight,\n            maximumWidth: (_f = options.constraints) === null || _f === void 0 ? void 0 : _f.maximumWidth,\n        }, new DockviewGroupPanelApiImpl(id, accessor));\n        this.api.initialize(this); // cannot use 'this' after after 'super' call\n        this._model = new DockviewGroupPanelModel(this.element, accessor, id, options, this);\n    }\n    focus() {\n        if (!this.api.isActive) {\n            this.api.setActive();\n        }\n        super.focus();\n    }\n    initialize() {\n        this._model.initialize();\n    }\n    setActive(isActive) {\n        super.setActive(isActive);\n        this.model.setActive(isActive);\n    }\n    layout(width, height) {\n        super.layout(width, height);\n        this.model.layout(width, height);\n    }\n    getComponent() {\n        return this._model;\n    }\n    toJSON() {\n        return this.model.toJSON();\n    }\n}\n","import { Emitter } from '../events';\nimport { GridviewPanelApiImpl } from './gridviewPanelApi';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nexport class DockviewPanelApiImpl extends GridviewPanelApiImpl {\n    get location() {\n        return this.group.api.location;\n    }\n    get title() {\n        return this.panel.title;\n    }\n    get isGroupActive() {\n        return this.group.isActive;\n    }\n    get renderer() {\n        return this.panel.renderer;\n    }\n    set group(value) {\n        const oldGroup = this._group;\n        if (this._group !== value) {\n            this._group = value;\n            this._onDidGroupChange.fire({});\n            this.setupGroupEventListeners(oldGroup);\n            this._onDidLocationChange.fire({\n                location: this.group.api.location,\n            });\n        }\n    }\n    get group() {\n        return this._group;\n    }\n    get tabComponent() {\n        return this._tabComponent;\n    }\n    constructor(panel, group, accessor, component, tabComponent) {\n        super(panel.id, component);\n        this.panel = panel;\n        this.accessor = accessor;\n        this._onDidTitleChange = new Emitter();\n        this.onDidTitleChange = this._onDidTitleChange.event;\n        this._onDidActiveGroupChange = new Emitter();\n        this.onDidActiveGroupChange = this._onDidActiveGroupChange.event;\n        this._onDidGroupChange = new Emitter();\n        this.onDidGroupChange = this._onDidGroupChange.event;\n        this._onDidRendererChange = new Emitter();\n        this.onDidRendererChange = this._onDidRendererChange.event;\n        this._onDidLocationChange = new Emitter();\n        this.onDidLocationChange = this._onDidLocationChange.event;\n        this.groupEventsDisposable = new MutableDisposable();\n        this._tabComponent = tabComponent;\n        this.initialize(panel);\n        this._group = group;\n        this.setupGroupEventListeners();\n        this.addDisposables(this.groupEventsDisposable, this._onDidRendererChange, this._onDidTitleChange, this._onDidGroupChange, this._onDidActiveGroupChange, this._onDidLocationChange);\n    }\n    getWindow() {\n        return this.group.api.getWindow();\n    }\n    moveTo(options) {\n        var _a, _b;\n        this.accessor.moveGroupOrPanel({\n            from: { groupId: this._group.id, panelId: this.panel.id },\n            to: {\n                group: (_a = options.group) !== null && _a !== void 0 ? _a : this._group,\n                position: options.group\n                    ? (_b = options.position) !== null && _b !== void 0 ? _b : 'center'\n                    : 'center',\n                index: options.index,\n            },\n        });\n    }\n    setTitle(title) {\n        this.panel.setTitle(title);\n    }\n    setRenderer(renderer) {\n        this.panel.setRenderer(renderer);\n    }\n    close() {\n        this.group.model.closePanel(this.panel);\n    }\n    maximize() {\n        this.group.api.maximize();\n    }\n    isMaximized() {\n        return this.group.api.isMaximized();\n    }\n    exitMaximized() {\n        this.group.api.exitMaximized();\n    }\n    setupGroupEventListeners(previousGroup) {\n        var _a;\n        let _trackGroupActive = (_a = previousGroup === null || previousGroup === void 0 ? void 0 : previousGroup.isActive) !== null && _a !== void 0 ? _a : false; // prevent duplicate events with same state\n        this.groupEventsDisposable.value = new CompositeDisposable(this.group.api.onDidVisibilityChange((event) => {\n            const hasBecomeHidden = !event.isVisible && this.isVisible;\n            const hasBecomeVisible = event.isVisible && !this.isVisible;\n            const isActivePanel = this.group.model.isPanelActive(this.panel);\n            if (hasBecomeHidden || (hasBecomeVisible && isActivePanel)) {\n                this._onDidVisibilityChange.fire(event);\n            }\n        }), this.group.api.onDidLocationChange((event) => {\n            if (this.group !== this.panel.group) {\n                return;\n            }\n            this._onDidLocationChange.fire(event);\n        }), this.group.api.onDidActiveChange(() => {\n            if (this.group !== this.panel.group) {\n                return;\n            }\n            if (_trackGroupActive !== this.isGroupActive) {\n                _trackGroupActive = this.isGroupActive;\n                this._onDidActiveGroupChange.fire({\n                    isActive: this.isGroupActive,\n                });\n            }\n        }));\n    }\n}\n","import { DockviewPanelApiImpl, } from '../api/dockviewPanelApi';\nimport { CompositeDisposable } from '../lifecycle';\nimport { WillFocusEvent } from '../api/panelApi';\nexport class DockviewPanel extends CompositeDisposable {\n    get params() {\n        return this._params;\n    }\n    get title() {\n        return this._title;\n    }\n    get group() {\n        return this._group;\n    }\n    get renderer() {\n        var _a;\n        return (_a = this._renderer) !== null && _a !== void 0 ? _a : this.accessor.renderer;\n    }\n    get minimumWidth() {\n        return this._minimumWidth;\n    }\n    get minimumHeight() {\n        return this._minimumHeight;\n    }\n    get maximumWidth() {\n        return this._maximumWidth;\n    }\n    get maximumHeight() {\n        return this._maximumHeight;\n    }\n    constructor(id, component, tabComponent, accessor, containerApi, group, view, options) {\n        super();\n        this.id = id;\n        this.accessor = accessor;\n        this.containerApi = containerApi;\n        this.view = view;\n        this._renderer = options.renderer;\n        this._group = group;\n        this._minimumWidth = options.minimumWidth;\n        this._minimumHeight = options.minimumHeight;\n        this._maximumWidth = options.maximumWidth;\n        this._maximumHeight = options.maximumHeight;\n        this.api = new DockviewPanelApiImpl(this, this._group, accessor, component, tabComponent);\n        this.addDisposables(this.api.onActiveChange(() => {\n            accessor.setActivePanel(this);\n        }), this.api.onDidSizeChange((event) => {\n            // forward the resize event to the group since if you want to resize a panel\n            // you are actually just resizing the panels parent which is the group\n            this.group.api.setSize(event);\n        }), this.api.onDidRendererChange(() => {\n            this.group.model.rerender(this);\n        }));\n    }\n    init(params) {\n        this._params = params.params;\n        this.view.init(Object.assign(Object.assign({}, params), { api: this.api, containerApi: this.containerApi }));\n        this.setTitle(params.title);\n    }\n    focus() {\n        const event = new WillFocusEvent();\n        this.api._onWillFocus.fire(event);\n        if (event.defaultPrevented) {\n            return;\n        }\n        if (!this.api.isActive) {\n            this.api.setActive();\n        }\n    }\n    toJSON() {\n        return {\n            id: this.id,\n            contentComponent: this.view.contentComponent,\n            tabComponent: this.view.tabComponent,\n            params: Object.keys(this._params || {}).length > 0\n                ? this._params\n                : undefined,\n            title: this.title,\n            renderer: this._renderer,\n            minimumHeight: this._minimumHeight,\n            maximumHeight: this._maximumHeight,\n            minimumWidth: this._minimumWidth,\n            maximumWidth: this._maximumWidth,\n        };\n    }\n    setTitle(title) {\n        const didTitleChange = title !== this.title;\n        if (didTitleChange) {\n            this._title = title;\n            this.api._onDidTitleChange.fire({ title });\n        }\n    }\n    setRenderer(renderer) {\n        const didChange = renderer !== this.renderer;\n        if (didChange) {\n            this._renderer = renderer;\n            this.api._onDidRendererChange.fire({\n                renderer: renderer,\n            });\n        }\n    }\n    update(event) {\n        var _a;\n        // merge the new parameters with the existing parameters\n        this._params = Object.assign(Object.assign({}, ((_a = this._params) !== null && _a !== void 0 ? _a : {})), event.params);\n        /**\n         * delete new keys that have a value of undefined,\n         * allow values of null\n         */\n        for (const key of Object.keys(event.params)) {\n            if (event.params[key] === undefined) {\n                delete this._params[key];\n            }\n        }\n        // update the view with the updated props\n        this.view.update({\n            params: this._params,\n        });\n    }\n    updateParentGroup(group, options) {\n        this._group = group;\n        this.api.group = this._group;\n        const isPanelVisible = this._group.model.isPanelActive(this);\n        const isActive = this.group.api.isActive && isPanelVisible;\n        if (!(options === null || options === void 0 ? void 0 : options.skipSetActive)) {\n            if (this.api.isActive !== isActive) {\n                this.api._onDidActiveChange.fire({\n                    isActive: this.group.api.isActive && isPanelVisible,\n                });\n            }\n        }\n        if (this.api.isVisible !== isPanelVisible) {\n            this.api._onDidVisibilityChange.fire({\n                isVisible: isPanelVisible,\n            });\n        }\n    }\n    runEvents() {\n        const isPanelVisible = this._group.model.isPanelActive(this);\n        const isActive = this.group.api.isActive && isPanelVisible;\n        if (this.api.isActive !== isActive) {\n            this.api._onDidActiveChange.fire({\n                isActive: this.group.api.isActive && isPanelVisible,\n            });\n        }\n        if (this.api.isVisible !== isPanelVisible) {\n            this.api._onDidVisibilityChange.fire({\n                isVisible: isPanelVisible,\n            });\n        }\n    }\n    layout(width, height) {\n        // TODO: Can we somehow do height without header height or indicate what the header height is?\n        this.api._onDidDimensionChange.fire({\n            width,\n            height: height,\n        });\n        this.view.layout(width, height);\n    }\n    dispose() {\n        this.api.dispose();\n        this.view.dispose();\n    }\n}\n","const createSvgElementFromPath = (params) => {\n    const svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n    svg.setAttributeNS(null, 'height', params.height);\n    svg.setAttributeNS(null, 'width', params.width);\n    svg.setAttributeNS(null, 'viewBox', params.viewbox);\n    svg.setAttributeNS(null, 'aria-hidden', 'false');\n    svg.setAttributeNS(null, 'focusable', 'false');\n    svg.classList.add('dv-svg');\n    const path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n    path.setAttributeNS(null, 'd', params.path);\n    svg.appendChild(path);\n    return svg;\n};\nexport const createCloseButton = () => createSvgElementFromPath({\n    width: '11',\n    height: '11',\n    viewbox: '0 0 28 28',\n    path: 'M2.1 27.3L0 25.2L11.55 13.65L0 2.1L2.1 0L13.65 11.55L25.2 0L27.3 2.1L15.75 13.65L27.3 25.2L25.2 27.3L13.65 15.75L2.1 27.3Z',\n});\nexport const createExpandMoreButton = () => createSvgElementFromPath({\n    width: '11',\n    height: '11',\n    viewbox: '0 0 24 15',\n    path: 'M12 14.15L0 2.15L2.15 0L12 9.9L21.85 0.0499992L24 2.2L12 14.15Z',\n});\nexport const createChevronRightButton = () => createSvgElementFromPath({\n    width: '11',\n    height: '11',\n    viewbox: '0 0 15 25',\n    path: 'M2.15 24.1L0 21.95L9.9 12.05L0 2.15L2.15 0L14.2 12.05L2.15 24.1Z',\n});\n","import { CompositeDisposable } from '../../../lifecycle';\nimport { addDisposableListener } from '../../../events';\nimport { createCloseButton } from '../../../svg';\nexport class DefaultTab extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor() {\n        super();\n        this._element = document.createElement('div');\n        this._element.className = 'dv-default-tab';\n        this._content = document.createElement('div');\n        this._content.className = 'dv-default-tab-content';\n        this.action = document.createElement('div');\n        this.action.className = 'dv-default-tab-action';\n        this.action.appendChild(createCloseButton());\n        this._element.appendChild(this._content);\n        this._element.appendChild(this.action);\n        this.addDisposables(addDisposableListener(this.action, 'pointerdown', (ev) => {\n            ev.preventDefault();\n        }));\n        this.render();\n    }\n    init(params) {\n        this._title = params.title;\n        this.addDisposables(params.api.onDidTitleChange((event) => {\n            this._title = event.title;\n            this.render();\n        }), addDisposableListener(this.action, 'pointerdown', (ev) => {\n            ev.preventDefault();\n        }), addDisposableListener(this.action, 'click', (ev) => {\n            if (ev.defaultPrevented) {\n                return;\n            }\n            ev.preventDefault();\n            params.api.close();\n        }));\n        this.render();\n    }\n    render() {\n        var _a;\n        if (this._content.textContent !== this._title) {\n            this._content.textContent = (_a = this._title) !== null && _a !== void 0 ? _a : '';\n        }\n    }\n}\n","import { DefaultTab } from './components/tab/defaultTab';\nexport class DockviewPanelModel {\n    get content() {\n        return this._content;\n    }\n    get tab() {\n        return this._tab;\n    }\n    constructor(accessor, id, contentComponent, tabComponent) {\n        this.accessor = accessor;\n        this.id = id;\n        this.contentComponent = contentComponent;\n        this.tabComponent = tabComponent;\n        this._content = this.createContentComponent(this.id, contentComponent);\n        this._tab = this.createTabComponent(this.id, tabComponent);\n    }\n    init(params) {\n        this.content.init(params);\n        this.tab.init(params);\n    }\n    updateParentGroup(_group, _isPanelVisible) {\n        // noop\n    }\n    layout(width, height) {\n        var _a, _b;\n        (_b = (_a = this.content).layout) === null || _b === void 0 ? void 0 : _b.call(_a, width, height);\n    }\n    update(event) {\n        var _a, _b, _c, _d;\n        (_b = (_a = this.content).update) === null || _b === void 0 ? void 0 : _b.call(_a, event);\n        (_d = (_c = this.tab).update) === null || _d === void 0 ? void 0 : _d.call(_c, event);\n    }\n    dispose() {\n        var _a, _b, _c, _d;\n        (_b = (_a = this.content).dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n        (_d = (_c = this.tab).dispose) === null || _d === void 0 ? void 0 : _d.call(_c);\n    }\n    createContentComponent(id, componentName) {\n        return this.accessor.options.createComponent({\n            id,\n            name: componentName,\n        });\n    }\n    createTabComponent(id, componentName) {\n        const name = componentName !== null && componentName !== void 0 ? componentName : this.accessor.options.defaultTabComponent;\n        if (name) {\n            if (this.accessor.options.createTabComponent) {\n                const component = this.accessor.options.createTabComponent({\n                    id,\n                    name,\n                });\n                if (component) {\n                    return component;\n                }\n                else {\n                    return new DefaultTab();\n                }\n            }\n            console.warn(`dockview: tabComponent '${componentName}' was not found. falling back to the default tab.`);\n        }\n        return new DefaultTab();\n    }\n}\n","import { DockviewPanel } from './dockviewPanel';\nimport { DockviewPanelModel } from './dockviewPanelModel';\nimport { DockviewApi } from '../api/component.api';\nexport class DefaultDockviewDeserialzier {\n    constructor(accessor) {\n        this.accessor = accessor;\n    }\n    fromJSON(panelData, group) {\n        var _a, _b;\n        const panelId = panelData.id;\n        const params = panelData.params;\n        const title = panelData.title;\n        const viewData = panelData.view;\n        const contentComponent = viewData\n            ? viewData.content.id\n            : (_a = panelData.contentComponent) !== null && _a !== void 0 ? _a : 'unknown';\n        const tabComponent = viewData\n            ? (_b = viewData.tab) === null || _b === void 0 ? void 0 : _b.id\n            : panelData.tabComponent;\n        const view = new DockviewPanelModel(this.accessor, panelId, contentComponent, tabComponent);\n        const panel = new DockviewPanel(panelId, contentComponent, tabComponent, this.accessor, new DockviewApi(this.accessor), group, view, {\n            renderer: panelData.renderer,\n            minimumWidth: panelData.minimumWidth,\n            minimumHeight: panelData.minimumHeight,\n            maximumWidth: panelData.maximumWidth,\n            maximumHeight: panelData.maximumHeight,\n        });\n        panel.init({\n            title: title !== null && title !== void 0 ? title : panelId,\n            params: params !== null && params !== void 0 ? params : {},\n        });\n        return panel;\n    }\n}\n","import { CompositeDisposable } from '../../../lifecycle';\nexport class Watermark extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor() {\n        super();\n        this._element = document.createElement('div');\n        this._element.className = 'dv-watermark';\n    }\n    init(_params) {\n        // noop\n    }\n}\n","import { disableIframePointEvents, quasiDefaultPrevented, toggleClass, } from '../dom';\nimport { Emitter, addDisposableListener, addDisposableWindowListener, } from '../events';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nimport { clamp } from '../math';\nclass AriaLevelTracker {\n    constructor() {\n        this._orderedList = [];\n    }\n    push(element) {\n        this._orderedList = [\n            ...this._orderedList.filter((item) => item !== element),\n            element,\n        ];\n        this.update();\n    }\n    destroy(element) {\n        this._orderedList = this._orderedList.filter((item) => item !== element);\n        this.update();\n    }\n    update() {\n        for (let i = 0; i < this._orderedList.length; i++) {\n            this._orderedList[i].setAttribute('aria-level', `${i}`);\n            this._orderedList[i].style.zIndex = `calc(var(--dv-overlay-z-index, 999) + ${i * 2})`;\n        }\n    }\n}\nconst arialLevelTracker = new AriaLevelTracker();\nexport class Overlay extends CompositeDisposable {\n    set minimumInViewportWidth(value) {\n        this.options.minimumInViewportWidth = value;\n    }\n    set minimumInViewportHeight(value) {\n        this.options.minimumInViewportHeight = value;\n    }\n    get element() {\n        return this._element;\n    }\n    get isVisible() {\n        return this._isVisible;\n    }\n    constructor(options) {\n        super();\n        this.options = options;\n        this._element = document.createElement('div');\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._onDidChangeEnd = new Emitter();\n        this.onDidChangeEnd = this._onDidChangeEnd.event;\n        this.addDisposables(this._onDidChange, this._onDidChangeEnd);\n        this._element.className = 'dv-resize-container';\n        this._isVisible = true;\n        this.setupResize('top');\n        this.setupResize('bottom');\n        this.setupResize('left');\n        this.setupResize('right');\n        this.setupResize('topleft');\n        this.setupResize('topright');\n        this.setupResize('bottomleft');\n        this.setupResize('bottomright');\n        this._element.appendChild(this.options.content);\n        this.options.container.appendChild(this._element);\n        // if input bad resize within acceptable boundaries\n        this.setBounds(Object.assign(Object.assign(Object.assign(Object.assign({ height: this.options.height, width: this.options.width }, ('top' in this.options && { top: this.options.top })), ('bottom' in this.options && { bottom: this.options.bottom })), ('left' in this.options && { left: this.options.left })), ('right' in this.options && { right: this.options.right })));\n        arialLevelTracker.push(this._element);\n    }\n    setVisible(isVisible) {\n        if (isVisible === this.isVisible) {\n            return;\n        }\n        this._isVisible = isVisible;\n        toggleClass(this.element, 'dv-hidden', !this.isVisible);\n    }\n    bringToFront() {\n        arialLevelTracker.push(this._element);\n    }\n    setBounds(bounds = {}) {\n        if (typeof bounds.height === 'number') {\n            this._element.style.height = `${bounds.height}px`;\n        }\n        if (typeof bounds.width === 'number') {\n            this._element.style.width = `${bounds.width}px`;\n        }\n        if ('top' in bounds && typeof bounds.top === 'number') {\n            this._element.style.top = `${bounds.top}px`;\n            this._element.style.bottom = 'auto';\n            this.verticalAlignment = 'top';\n        }\n        if ('bottom' in bounds && typeof bounds.bottom === 'number') {\n            this._element.style.bottom = `${bounds.bottom}px`;\n            this._element.style.top = 'auto';\n            this.verticalAlignment = 'bottom';\n        }\n        if ('left' in bounds && typeof bounds.left === 'number') {\n            this._element.style.left = `${bounds.left}px`;\n            this._element.style.right = 'auto';\n            this.horiziontalAlignment = 'left';\n        }\n        if ('right' in bounds && typeof bounds.right === 'number') {\n            this._element.style.right = `${bounds.right}px`;\n            this._element.style.left = 'auto';\n            this.horiziontalAlignment = 'right';\n        }\n        const containerRect = this.options.container.getBoundingClientRect();\n        const overlayRect = this._element.getBoundingClientRect();\n        // region: ensure bounds within allowable limits\n        // a minimum width of minimumViewportWidth must be inside the viewport\n        const xOffset = Math.max(0, this.getMinimumWidth(overlayRect.width));\n        // a minimum height of minimumViewportHeight must be inside the viewport\n        const yOffset = Math.max(0, this.getMinimumHeight(overlayRect.height));\n        if (this.verticalAlignment === 'top') {\n            const top = clamp(overlayRect.top - containerRect.top, -yOffset, Math.max(0, containerRect.height - overlayRect.height + yOffset));\n            this._element.style.top = `${top}px`;\n            this._element.style.bottom = 'auto';\n        }\n        if (this.verticalAlignment === 'bottom') {\n            const bottom = clamp(containerRect.bottom - overlayRect.bottom, -yOffset, Math.max(0, containerRect.height - overlayRect.height + yOffset));\n            this._element.style.bottom = `${bottom}px`;\n            this._element.style.top = 'auto';\n        }\n        if (this.horiziontalAlignment === 'left') {\n            const left = clamp(overlayRect.left - containerRect.left, -xOffset, Math.max(0, containerRect.width - overlayRect.width + xOffset));\n            this._element.style.left = `${left}px`;\n            this._element.style.right = 'auto';\n        }\n        if (this.horiziontalAlignment === 'right') {\n            const right = clamp(containerRect.right - overlayRect.right, -xOffset, Math.max(0, containerRect.width - overlayRect.width + xOffset));\n            this._element.style.right = `${right}px`;\n            this._element.style.left = 'auto';\n        }\n        this._onDidChange.fire();\n    }\n    toJSON() {\n        const container = this.options.container.getBoundingClientRect();\n        const element = this._element.getBoundingClientRect();\n        const result = {};\n        if (this.verticalAlignment === 'top') {\n            result.top = parseFloat(this._element.style.top);\n        }\n        else if (this.verticalAlignment === 'bottom') {\n            result.bottom = parseFloat(this._element.style.bottom);\n        }\n        else {\n            result.top = element.top - container.top;\n        }\n        if (this.horiziontalAlignment === 'left') {\n            result.left = parseFloat(this._element.style.left);\n        }\n        else if (this.horiziontalAlignment === 'right') {\n            result.right = parseFloat(this._element.style.right);\n        }\n        else {\n            result.left = element.left - container.left;\n        }\n        result.width = element.width;\n        result.height = element.height;\n        return result;\n    }\n    setupDrag(dragTarget, options = { inDragMode: false }) {\n        const move = new MutableDisposable();\n        const track = () => {\n            let offset = null;\n            const iframes = disableIframePointEvents();\n            move.value = new CompositeDisposable({\n                dispose: () => {\n                    iframes.release();\n                },\n            }, addDisposableWindowListener(window, 'pointermove', (e) => {\n                const containerRect = this.options.container.getBoundingClientRect();\n                const x = e.clientX - containerRect.left;\n                const y = e.clientY - containerRect.top;\n                toggleClass(this._element, 'dv-resize-container-dragging', true);\n                const overlayRect = this._element.getBoundingClientRect();\n                if (offset === null) {\n                    offset = {\n                        x: e.clientX - overlayRect.left,\n                        y: e.clientY - overlayRect.top,\n                    };\n                }\n                const xOffset = Math.max(0, this.getMinimumWidth(overlayRect.width));\n                const yOffset = Math.max(0, this.getMinimumHeight(overlayRect.height));\n                const top = clamp(y - offset.y, -yOffset, Math.max(0, containerRect.height - overlayRect.height + yOffset));\n                const bottom = clamp(offset.y -\n                    y +\n                    containerRect.height -\n                    overlayRect.height, -yOffset, Math.max(0, containerRect.height - overlayRect.height + yOffset));\n                const left = clamp(x - offset.x, -xOffset, Math.max(0, containerRect.width - overlayRect.width + xOffset));\n                const right = clamp(offset.x - x + containerRect.width - overlayRect.width, -xOffset, Math.max(0, containerRect.width - overlayRect.width + xOffset));\n                const bounds = {};\n                // Anchor to top or to bottom depending on which one is closer\n                if (top <= bottom) {\n                    bounds.top = top;\n                }\n                else {\n                    bounds.bottom = bottom;\n                }\n                // Anchor to left or to right depending on which one is closer\n                if (left <= right) {\n                    bounds.left = left;\n                }\n                else {\n                    bounds.right = right;\n                }\n                this.setBounds(bounds);\n            }), addDisposableWindowListener(window, 'pointerup', () => {\n                toggleClass(this._element, 'dv-resize-container-dragging', false);\n                move.dispose();\n                this._onDidChangeEnd.fire();\n            }));\n        };\n        this.addDisposables(move, addDisposableListener(dragTarget, 'pointerdown', (event) => {\n            if (event.defaultPrevented) {\n                event.preventDefault();\n                return;\n            }\n            // if somebody has marked this event then treat as a defaultPrevented\n            // without actually calling event.preventDefault()\n            if (quasiDefaultPrevented(event)) {\n                return;\n            }\n            track();\n        }), addDisposableListener(this.options.content, 'pointerdown', (event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            // if somebody has marked this event then treat as a defaultPrevented\n            // without actually calling event.preventDefault()\n            if (quasiDefaultPrevented(event)) {\n                return;\n            }\n            if (event.shiftKey) {\n                track();\n            }\n        }), addDisposableListener(this.options.content, 'pointerdown', () => {\n            arialLevelTracker.push(this._element);\n        }, true));\n        if (options.inDragMode) {\n            track();\n        }\n    }\n    setupResize(direction) {\n        const resizeHandleElement = document.createElement('div');\n        resizeHandleElement.className = `dv-resize-handle-${direction}`;\n        this._element.appendChild(resizeHandleElement);\n        const move = new MutableDisposable();\n        this.addDisposables(move, addDisposableListener(resizeHandleElement, 'pointerdown', (e) => {\n            e.preventDefault();\n            let startPosition = null;\n            const iframes = disableIframePointEvents();\n            move.value = new CompositeDisposable(addDisposableWindowListener(window, 'pointermove', (e) => {\n                const containerRect = this.options.container.getBoundingClientRect();\n                const overlayRect = this._element.getBoundingClientRect();\n                const y = e.clientY - containerRect.top;\n                const x = e.clientX - containerRect.left;\n                if (startPosition === null) {\n                    // record the initial dimensions since as all subsequence moves are relative to this\n                    startPosition = {\n                        originalY: y,\n                        originalHeight: overlayRect.height,\n                        originalX: x,\n                        originalWidth: overlayRect.width,\n                    };\n                }\n                let top = undefined;\n                let bottom = undefined;\n                let height = undefined;\n                let left = undefined;\n                let right = undefined;\n                let width = undefined;\n                const moveTop = () => {\n                    top = clamp(y, -Number.MAX_VALUE, startPosition.originalY +\n                        startPosition.originalHeight >\n                        containerRect.height\n                        ? this.getMinimumHeight(containerRect.height)\n                        : Math.max(0, startPosition.originalY +\n                            startPosition.originalHeight -\n                            Overlay.MINIMUM_HEIGHT));\n                    height =\n                        startPosition.originalY +\n                            startPosition.originalHeight -\n                            top;\n                    bottom = containerRect.height - top - height;\n                };\n                const moveBottom = () => {\n                    top =\n                        startPosition.originalY -\n                            startPosition.originalHeight;\n                    height = clamp(y - top, top < 0 &&\n                        typeof this.options\n                            .minimumInViewportHeight === 'number'\n                        ? -top +\n                            this.options.minimumInViewportHeight\n                        : Overlay.MINIMUM_HEIGHT, Number.MAX_VALUE);\n                    bottom = containerRect.height - top - height;\n                };\n                const moveLeft = () => {\n                    left = clamp(x, -Number.MAX_VALUE, startPosition.originalX +\n                        startPosition.originalWidth >\n                        containerRect.width\n                        ? this.getMinimumWidth(containerRect.width)\n                        : Math.max(0, startPosition.originalX +\n                            startPosition.originalWidth -\n                            Overlay.MINIMUM_WIDTH));\n                    width =\n                        startPosition.originalX +\n                            startPosition.originalWidth -\n                            left;\n                    right = containerRect.width - left - width;\n                };\n                const moveRight = () => {\n                    left =\n                        startPosition.originalX -\n                            startPosition.originalWidth;\n                    width = clamp(x - left, left < 0 &&\n                        typeof this.options\n                            .minimumInViewportWidth === 'number'\n                        ? -left +\n                            this.options.minimumInViewportWidth\n                        : Overlay.MINIMUM_WIDTH, Number.MAX_VALUE);\n                    right = containerRect.width - left - width;\n                };\n                switch (direction) {\n                    case 'top':\n                        moveTop();\n                        break;\n                    case 'bottom':\n                        moveBottom();\n                        break;\n                    case 'left':\n                        moveLeft();\n                        break;\n                    case 'right':\n                        moveRight();\n                        break;\n                    case 'topleft':\n                        moveTop();\n                        moveLeft();\n                        break;\n                    case 'topright':\n                        moveTop();\n                        moveRight();\n                        break;\n                    case 'bottomleft':\n                        moveBottom();\n                        moveLeft();\n                        break;\n                    case 'bottomright':\n                        moveBottom();\n                        moveRight();\n                        break;\n                }\n                const bounds = {};\n                // Anchor to top or to bottom depending on which one is closer\n                if (top <= bottom) {\n                    bounds.top = top;\n                }\n                else {\n                    bounds.bottom = bottom;\n                }\n                // Anchor to left or to right depending on which one is closer\n                if (left <= right) {\n                    bounds.left = left;\n                }\n                else {\n                    bounds.right = right;\n                }\n                bounds.height = height;\n                bounds.width = width;\n                this.setBounds(bounds);\n            }), {\n                dispose: () => {\n                    iframes.release();\n                },\n            }, addDisposableWindowListener(window, 'pointerup', () => {\n                move.dispose();\n                this._onDidChangeEnd.fire();\n            }));\n        }));\n    }\n    getMinimumWidth(width) {\n        if (typeof this.options.minimumInViewportWidth === 'number') {\n            return width - this.options.minimumInViewportWidth;\n        }\n        return 0;\n    }\n    getMinimumHeight(height) {\n        if (typeof this.options.minimumInViewportHeight === 'number') {\n            return height - this.options.minimumInViewportHeight;\n        }\n        return 0;\n    }\n    dispose() {\n        arialLevelTracker.destroy(this._element);\n        this._element.remove();\n        super.dispose();\n    }\n}\nOverlay.MINIMUM_HEIGHT = 20;\nOverlay.MINIMUM_WIDTH = 20;\n","import { CompositeDisposable } from '../lifecycle';\nexport class DockviewFloatingGroupPanel extends CompositeDisposable {\n    constructor(group, overlay) {\n        super();\n        this.group = group;\n        this.overlay = overlay;\n        this.addDisposables(overlay);\n    }\n    position(bounds) {\n        this.overlay.setBounds(bounds);\n    }\n}\n","export const DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE = 100;\nexport const DEFAULT_FLOATING_GROUP_POSITION = { left: 100, top: 100, width: 300, height: 300 };\n","import { DragAndDropObserver } from '../dnd/dnd';\nimport { getDomNodePagePosition, toggleClass } from '../dom';\nimport { CompositeDisposable, Disposable, MutableDisposable, } from '../lifecycle';\nfunction createFocusableElement() {\n    const element = document.createElement('div');\n    element.tabIndex = -1;\n    return element;\n}\nexport class OverlayRenderContainer extends CompositeDisposable {\n    constructor(element, accessor) {\n        super();\n        this.element = element;\n        this.accessor = accessor;\n        this.map = {};\n        this._disposed = false;\n        this.addDisposables(Disposable.from(() => {\n            for (const value of Object.values(this.map)) {\n                value.disposable.dispose();\n                value.destroy.dispose();\n            }\n            this._disposed = true;\n        }));\n    }\n    detatch(panel) {\n        if (this.map[panel.api.id]) {\n            const { disposable, destroy } = this.map[panel.api.id];\n            disposable.dispose();\n            destroy.dispose();\n            delete this.map[panel.api.id];\n            return true;\n        }\n        return false;\n    }\n    attach(options) {\n        const { panel, referenceContainer } = options;\n        if (!this.map[panel.api.id]) {\n            const element = createFocusableElement();\n            element.className = 'dv-render-overlay';\n            this.map[panel.api.id] = {\n                panel,\n                disposable: Disposable.NONE,\n                destroy: Disposable.NONE,\n                element,\n            };\n        }\n        const focusContainer = this.map[panel.api.id].element;\n        if (panel.view.content.element.parentElement !== focusContainer) {\n            focusContainer.appendChild(panel.view.content.element);\n        }\n        if (focusContainer.parentElement !== this.element) {\n            this.element.appendChild(focusContainer);\n        }\n        const resize = () => {\n            // TODO propagate position to avoid getDomNodePagePosition calls, possible performance bottleneck?\n            const box = getDomNodePagePosition(referenceContainer.element);\n            const box2 = getDomNodePagePosition(this.element);\n            focusContainer.style.left = `${box.left - box2.left}px`;\n            focusContainer.style.top = `${box.top - box2.top}px`;\n            focusContainer.style.width = `${box.width}px`;\n            focusContainer.style.height = `${box.height}px`;\n            toggleClass(focusContainer, 'dv-render-overlay-float', panel.group.api.location.type === 'floating');\n        };\n        const visibilityChanged = () => {\n            if (panel.api.isVisible) {\n                resize();\n            }\n            focusContainer.style.display = panel.api.isVisible ? '' : 'none';\n        };\n        const observerDisposable = new MutableDisposable();\n        const correctLayerPosition = () => {\n            if (panel.api.location.type === 'floating') {\n                queueMicrotask(() => {\n                    const floatingGroup = this.accessor.floatingGroups.find((group) => group.group === panel.api.group);\n                    if (!floatingGroup) {\n                        return;\n                    }\n                    const element = floatingGroup.overlay.element;\n                    const update = () => {\n                        const level = Number(element.getAttribute('aria-level'));\n                        focusContainer.style.zIndex = `calc(var(--dv-overlay-z-index, 999) + ${level * 2 + 1})`;\n                    };\n                    const observer = new MutationObserver(() => {\n                        update();\n                    });\n                    observerDisposable.value = Disposable.from(() => observer.disconnect());\n                    observer.observe(element, {\n                        attributeFilter: ['aria-level'],\n                        attributes: true,\n                    });\n                    update();\n                });\n            }\n            else {\n                focusContainer.style.zIndex = ''; // reset the z-index, perhaps CSS will take over here\n            }\n        };\n        const disposable = new CompositeDisposable(observerDisposable, \n        /**\n         * since container is positioned absoutely we must explicitly forward\n         * the dnd events for the expect behaviours to continue to occur in terms of dnd\n         *\n         * the dnd observer does not need to be conditional on whether the panel is visible since\n         * non-visible panels are 'display: none' and in such case the dnd observer will not fire.\n         */\n        new DragAndDropObserver(focusContainer, {\n            onDragEnd: (e) => {\n                referenceContainer.dropTarget.dnd.onDragEnd(e);\n            },\n            onDragEnter: (e) => {\n                referenceContainer.dropTarget.dnd.onDragEnter(e);\n            },\n            onDragLeave: (e) => {\n                referenceContainer.dropTarget.dnd.onDragLeave(e);\n            },\n            onDrop: (e) => {\n                referenceContainer.dropTarget.dnd.onDrop(e);\n            },\n            onDragOver: (e) => {\n                referenceContainer.dropTarget.dnd.onDragOver(e);\n            },\n        }), panel.api.onDidVisibilityChange(() => {\n            /**\n             * Control the visibility of the content, however even when not visible (display: none)\n             * the content is still maintained within the DOM hence DOM specific attributes\n             * such as scroll position are maintained when next made visible.\n             */\n            visibilityChanged();\n        }), panel.api.onDidDimensionsChange(() => {\n            if (!panel.api.isVisible) {\n                return;\n            }\n            resize();\n        }), panel.api.onDidLocationChange(() => {\n            correctLayerPosition();\n        }));\n        this.map[panel.api.id].destroy = Disposable.from(() => {\n            var _a;\n            if (panel.view.content.element.parentElement === focusContainer) {\n                focusContainer.removeChild(panel.view.content.element);\n            }\n            (_a = focusContainer.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(focusContainer);\n        });\n        correctLayerPosition();\n        queueMicrotask(() => {\n            if (this.isDisposed) {\n                return;\n            }\n            /**\n             * wait until everything has finished in the current stack-frame call before\n             * calling the first resize as other size-altering events may still occur before\n             * the end of the stack-frame.\n             */\n            visibilityChanged();\n        });\n        // dispose of logic asoccciated with previous reference-container\n        this.map[panel.api.id].disposable.dispose();\n        // and reset the disposable to the active reference-container\n        this.map[panel.api.id].disposable = disposable;\n        return focusContainer;\n    }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { addStyles } from './dom';\nimport { Emitter, addDisposableWindowListener } from './events';\nimport { CompositeDisposable, Disposable } from './lifecycle';\nexport class PopoutWindow extends CompositeDisposable {\n    get window() {\n        var _a, _b;\n        return (_b = (_a = this._window) === null || _a === void 0 ? void 0 : _a.value) !== null && _b !== void 0 ? _b : null;\n    }\n    constructor(target, className, options) {\n        super();\n        this.target = target;\n        this.className = className;\n        this.options = options;\n        this._onWillClose = new Emitter();\n        this.onWillClose = this._onWillClose.event;\n        this._onDidClose = new Emitter();\n        this.onDidClose = this._onDidClose.event;\n        this._window = null;\n        this.addDisposables(this._onWillClose, this._onDidClose, {\n            dispose: () => {\n                this.close();\n            },\n        });\n    }\n    dimensions() {\n        if (!this._window) {\n            return null;\n        }\n        const left = this._window.value.screenX;\n        const top = this._window.value.screenY;\n        const width = this._window.value.innerWidth;\n        const height = this._window.value.innerHeight;\n        return { top, left, width, height };\n    }\n    close() {\n        var _a, _b;\n        if (this._window) {\n            this._onWillClose.fire();\n            (_b = (_a = this.options).onWillClose) === null || _b === void 0 ? void 0 : _b.call(_a, {\n                id: this.target,\n                window: this._window.value,\n            });\n            this._window.disposable.dispose();\n            this._window = null;\n            this._onDidClose.fire();\n        }\n    }\n    open() {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this._window) {\n                throw new Error('instance of popout window is already open');\n            }\n            const url = `${this.options.url}`;\n            const features = Object.entries({\n                top: this.options.top,\n                left: this.options.left,\n                width: this.options.width,\n                height: this.options.height,\n            })\n                .map(([key, value]) => `${key}=${value}`)\n                .join(',');\n            /**\n             * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/open\n             */\n            const externalWindow = window.open(url, this.target, features);\n            if (!externalWindow) {\n                /**\n                 * Popup blocked\n                 */\n                return null;\n            }\n            const disposable = new CompositeDisposable();\n            this._window = { value: externalWindow, disposable };\n            disposable.addDisposables(Disposable.from(() => {\n                externalWindow.close();\n            }), addDisposableWindowListener(window, 'beforeunload', () => {\n                /**\n                 * before the main window closes we should close this popup too\n                 * to be good citizens\n                 *\n                 * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/beforeunload_event\n                 */\n                this.close();\n            }));\n            const container = this.createPopoutWindowContainer();\n            if (this.className) {\n                container.classList.add(this.className);\n            }\n            (_b = (_a = this.options).onDidOpen) === null || _b === void 0 ? void 0 : _b.call(_a, {\n                id: this.target,\n                window: externalWindow,\n            });\n            return new Promise((resolve, reject) => {\n                externalWindow.addEventListener('unload', (e) => {\n                    // if page fails to load before unloading\n                    // this.close();\n                });\n                externalWindow.addEventListener('load', () => {\n                    /**\n                     * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/load_event\n                     */\n                    try {\n                        const externalDocument = externalWindow.document;\n                        externalDocument.title = document.title;\n                        externalDocument.body.appendChild(container);\n                        addStyles(externalDocument, window.document.styleSheets);\n                        /**\n                         * beforeunload must be registered after load for reasons I could not determine\n                         * otherwise the beforeunload event will not fire when the window is closed\n                         */\n                        addDisposableWindowListener(externalWindow, 'beforeunload', () => {\n                            /**\n                             * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/beforeunload_event\n                             */\n                            this.close();\n                        });\n                        resolve(container);\n                    }\n                    catch (err) {\n                        // only except this is the DOM isn't setup. e.g. in a in correctly configured test\n                        reject(err);\n                    }\n                });\n            });\n        });\n    }\n    createPopoutWindowContainer() {\n        const el = document.createElement('div');\n        el.classList.add('dv-popout-window');\n        el.id = 'dv-popout-window';\n        el.style.position = 'absolute';\n        el.style.width = '100%';\n        el.style.height = '100%';\n        el.style.top = '0px';\n        el.style.left = '0px';\n        return el;\n    }\n}\n","import { CompositeDisposable } from '../lifecycle';\nexport class StrictEventsSequencing extends CompositeDisposable {\n    constructor(accessor) {\n        super();\n        this.accessor = accessor;\n        this.init();\n    }\n    init() {\n        const panels = new Set();\n        const groups = new Set();\n        this.addDisposables(this.accessor.onDidAddPanel((panel) => {\n            if (panels.has(panel.api.id)) {\n                throw new Error(`dockview: Invalid event sequence. [onDidAddPanel] called for panel ${panel.api.id} but panel already exists`);\n            }\n            else {\n                panels.add(panel.api.id);\n            }\n        }), this.accessor.onDidRemovePanel((panel) => {\n            if (!panels.has(panel.api.id)) {\n                throw new Error(`dockview: Invalid event sequence. [onDidRemovePanel] called for panel ${panel.api.id} but panel does not exists`);\n            }\n            else {\n                panels.delete(panel.api.id);\n            }\n        }), this.accessor.onDidAddGroup((group) => {\n            if (groups.has(group.api.id)) {\n                throw new Error(`dockview: Invalid event sequence. [onDidAddGroup] called for group ${group.api.id} but group already exists`);\n            }\n            else {\n                groups.add(group.api.id);\n            }\n        }), this.accessor.onDidRemoveGroup((group) => {\n            if (!groups.has(group.api.id)) {\n                throw new Error(`dockview: Invalid event sequence. [onDidRemoveGroup] called for group ${group.api.id} but group does not exists`);\n            }\n            else {\n                groups.delete(group.api.id);\n            }\n        }));\n    }\n}\n","import { getRelativeLocation, getGridLocation, orthogonal, } from '../gridview/gridview';\nimport { directionToPosition, Droptarget, } from '../dnd/droptarget';\nimport { tail, sequenceEquals, remove } from '../array';\nimport { DockviewPanel } from './dockviewPanel';\nimport { CompositeDisposable, Disposable } from '../lifecycle';\nimport { Event, Emitter, addDisposableWindowListener } from '../events';\nimport { Watermark } from './components/watermark/watermark';\nimport { sequentialNumberGenerator } from '../math';\nimport { DefaultDockviewDeserialzier } from './deserializer';\nimport { DockviewUnhandledDragOverEvent, isGroupOptionsWithGroup, isGroupOptionsWithPanel, isPanelOptionsWithGroup, isPanelOptionsWithPanel, } from './options';\nimport { BaseGrid, toTarget, } from '../gridview/baseComponentGridview';\nimport { DockviewApi } from '../api/component.api';\nimport { Orientation } from '../splitview/splitview';\nimport { DockviewDidDropEvent, DockviewWillDropEvent, WillShowOverlayLocationEvent, } from './dockviewGroupPanelModel';\nimport { DockviewGroupPanel } from './dockviewGroupPanel';\nimport { DockviewPanelModel } from './dockviewPanelModel';\nimport { getPanelData } from '../dnd/dataTransfer';\nimport { Overlay } from '../overlay/overlay';\nimport { addTestId, getDockviewTheme, toggleClass, watchElementResize, } from '../dom';\nimport { DockviewFloatingGroupPanel } from './dockviewFloatingGroupPanel';\nimport { DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE, DEFAULT_FLOATING_GROUP_POSITION, } from '../constants';\nimport { OverlayRenderContainer, } from '../overlay/overlayRenderContainer';\nimport { PopoutWindow } from '../popoutWindow';\nimport { StrictEventsSequencing } from './strictEventsSequencing';\nconst DEFAULT_ROOT_OVERLAY_MODEL = {\n    activationSize: { type: 'pixels', value: 10 },\n    size: { type: 'pixels', value: 20 },\n};\nfunction moveGroupWithoutDestroying(options) {\n    const activePanel = options.from.activePanel;\n    const panels = [...options.from.panels].map((panel) => {\n        const removedPanel = options.from.model.removePanel(panel);\n        options.from.model.renderContainer.detatch(panel);\n        return removedPanel;\n    });\n    panels.forEach((panel) => {\n        options.to.model.openPanel(panel, {\n            skipSetActive: activePanel !== panel,\n            skipSetGroupActive: true,\n        });\n    });\n}\nexport class DockviewComponent extends BaseGrid {\n    get orientation() {\n        return this.gridview.orientation;\n    }\n    get totalPanels() {\n        return this.panels.length;\n    }\n    get panels() {\n        return this.groups.flatMap((group) => group.panels);\n    }\n    get options() {\n        return this._options;\n    }\n    get activePanel() {\n        const activeGroup = this.activeGroup;\n        if (!activeGroup) {\n            return undefined;\n        }\n        return activeGroup.activePanel;\n    }\n    get renderer() {\n        var _a;\n        return (_a = this.options.defaultRenderer) !== null && _a !== void 0 ? _a : 'onlyWhenVisible';\n    }\n    get api() {\n        return this._api;\n    }\n    get gap() {\n        return this.gridview.margin;\n    }\n    get floatingGroups() {\n        return this._floatingGroups;\n    }\n    constructor(parentElement, options) {\n        var _a;\n        super(parentElement, {\n            proportionalLayout: true,\n            orientation: Orientation.HORIZONTAL,\n            styles: options.hideBorders\n                ? { separatorBorder: 'transparent' }\n                : undefined,\n            disableAutoResizing: options.disableAutoResizing,\n            locked: options.locked,\n            margin: options.gap,\n            className: options.className,\n        });\n        this.nextGroupId = sequentialNumberGenerator();\n        this._deserializer = new DefaultDockviewDeserialzier(this);\n        this.watermark = null;\n        this._onWillDragPanel = new Emitter();\n        this.onWillDragPanel = this._onWillDragPanel.event;\n        this._onWillDragGroup = new Emitter();\n        this.onWillDragGroup = this._onWillDragGroup.event;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onWillDrop = new Emitter();\n        this.onWillDrop = this._onWillDrop.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        this._onUnhandledDragOverEvent = new Emitter();\n        this.onUnhandledDragOverEvent = this._onUnhandledDragOverEvent.event;\n        this._onDidRemovePanel = new Emitter();\n        this.onDidRemovePanel = this._onDidRemovePanel.event;\n        this._onDidAddPanel = new Emitter();\n        this.onDidAddPanel = this._onDidAddPanel.event;\n        this._onDidLayoutFromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutFromJSON.event;\n        this._onDidActivePanelChange = new Emitter();\n        this.onDidActivePanelChange = this._onDidActivePanelChange.event;\n        this._onDidMovePanel = new Emitter();\n        this.onDidMovePanel = this._onDidMovePanel.event;\n        this._onDidMaximizedGroupChange = new Emitter();\n        this.onDidMaximizedGroupChange = this._onDidMaximizedGroupChange.event;\n        this._floatingGroups = [];\n        this._popoutGroups = [];\n        this._onDidRemoveGroup = new Emitter();\n        this.onDidRemoveGroup = this._onDidRemoveGroup.event;\n        this._onDidAddGroup = new Emitter();\n        this.onDidAddGroup = this._onDidAddGroup.event;\n        this._onDidActiveGroupChange = new Emitter();\n        this.onDidActiveGroupChange = this._onDidActiveGroupChange.event;\n        this._moving = false;\n        this.overlayRenderContainer = new OverlayRenderContainer(this.gridview.element, this);\n        toggleClass(this.gridview.element, 'dv-dockview', true);\n        toggleClass(this.element, 'dv-debug', !!options.debug);\n        if (options.debug) {\n            this.addDisposables(new StrictEventsSequencing(this));\n        }\n        this.addDisposables(this.overlayRenderContainer, this._onWillDragPanel, this._onWillDragGroup, this._onWillShowOverlay, this._onDidActivePanelChange, this._onDidAddPanel, this._onDidRemovePanel, this._onDidLayoutFromJSON, this._onDidDrop, this._onWillDrop, this._onDidMovePanel, this._onDidAddGroup, this._onDidRemoveGroup, this._onDidActiveGroupChange, this._onUnhandledDragOverEvent, this._onDidMaximizedGroupChange, this.onDidViewVisibilityChangeMicroTaskQueue(() => {\n            this.updateWatermark();\n        }), this.onDidAdd((event) => {\n            if (!this._moving) {\n                this._onDidAddGroup.fire(event);\n            }\n        }), this.onDidRemove((event) => {\n            if (!this._moving) {\n                this._onDidRemoveGroup.fire(event);\n            }\n        }), this.onDidActiveChange((event) => {\n            if (!this._moving) {\n                this._onDidActiveGroupChange.fire(event);\n            }\n        }), this.onDidMaximizedChange((event) => {\n            this._onDidMaximizedGroupChange.fire({\n                group: event.panel,\n                isMaximized: event.isMaximized,\n            });\n        }), Event.any(this.onDidAdd, this.onDidRemove)(() => {\n            this.updateWatermark();\n        }), Event.any(this.onDidAddPanel, this.onDidRemovePanel, this.onDidAddGroup, this.onDidRemove, this.onDidMovePanel, this.onDidActivePanelChange)(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), Disposable.from(() => {\n            // iterate over a copy of the array since .dispose() mutates the original array\n            for (const group of [...this._floatingGroups]) {\n                group.dispose();\n            }\n            // iterate over a copy of the array since .dispose() mutates the original array\n            for (const group of [...this._popoutGroups]) {\n                group.disposable.dispose();\n            }\n        }));\n        this._options = options;\n        this._rootDropTarget = new Droptarget(this.element, {\n            canDisplayOverlay: (event, position) => {\n                const data = getPanelData();\n                if (data) {\n                    if (data.viewId !== this.id) {\n                        return false;\n                    }\n                    if (position === 'center') {\n                        // center drop target is only allowed if there are no panels in the grid\n                        // floating panels are allowed\n                        return this.gridview.length === 0;\n                    }\n                    return true;\n                }\n                if (position === 'center' && this.gridview.length !== 0) {\n                    /**\n                     * for external events only show the four-corner drag overlays, disable\n                     * the center position so that external drag events can fall through to the group\n                     * and panel drop target handlers\n                     */\n                    return false;\n                }\n                const firedEvent = new DockviewUnhandledDragOverEvent(event, 'edge', position, getPanelData);\n                this._onUnhandledDragOverEvent.fire(firedEvent);\n                return firedEvent.isAccepted;\n            },\n            acceptedTargetZones: ['top', 'bottom', 'left', 'right', 'center'],\n            overlayModel: (_a = this.options.rootOverlayModel) !== null && _a !== void 0 ? _a : DEFAULT_ROOT_OVERLAY_MODEL,\n        });\n        this.addDisposables(this._rootDropTarget, this._rootDropTarget.onWillShowOverlay((event) => {\n            if (this.gridview.length > 0 && event.position === 'center') {\n                // option only available when no panels in primary grid\n                return;\n            }\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'edge',\n                panel: undefined,\n                api: this._api,\n                group: undefined,\n                getData: getPanelData,\n            }));\n        }), this._rootDropTarget.onDrop((event) => {\n            var _a;\n            const willDropEvent = new DockviewWillDropEvent({\n                nativeEvent: event.nativeEvent,\n                position: event.position,\n                panel: undefined,\n                api: this._api,\n                group: undefined,\n                getData: getPanelData,\n                kind: 'edge',\n            });\n            this._onWillDrop.fire(willDropEvent);\n            if (willDropEvent.defaultPrevented) {\n                return;\n            }\n            const data = getPanelData();\n            if (data) {\n                this.moveGroupOrPanel({\n                    from: {\n                        groupId: data.groupId,\n                        panelId: (_a = data.panelId) !== null && _a !== void 0 ? _a : undefined,\n                    },\n                    to: {\n                        group: this.orthogonalize(event.position),\n                        position: 'center',\n                    },\n                });\n            }\n            else {\n                this._onDidDrop.fire(new DockviewDidDropEvent({\n                    nativeEvent: event.nativeEvent,\n                    position: event.position,\n                    panel: undefined,\n                    api: this._api,\n                    group: undefined,\n                    getData: getPanelData,\n                }));\n            }\n        }), this._rootDropTarget);\n        this._api = new DockviewApi(this);\n        this.updateWatermark();\n    }\n    setVisible(panel, visible) {\n        switch (panel.api.location.type) {\n            case 'grid':\n                super.setVisible(panel, visible);\n                break;\n            case 'floating': {\n                const item = this.floatingGroups.find((floatingGroup) => floatingGroup.group === panel);\n                if (item) {\n                    item.overlay.setVisible(visible);\n                    panel.api._onDidVisibilityChange.fire({\n                        isVisible: visible,\n                    });\n                }\n                break;\n            }\n            case 'popout':\n                console.warn('dockview: You cannot hide a group that is in a popout window');\n                break;\n        }\n    }\n    addPopoutGroup(itemToPopout, options) {\n        var _a, _b, _c, _d, _e;\n        if (itemToPopout instanceof DockviewPanel &&\n            itemToPopout.group.size === 1) {\n            return this.addPopoutGroup(itemToPopout.group, options);\n        }\n        const theme = getDockviewTheme(this.gridview.element);\n        const element = this.element;\n        function getBox() {\n            if (options === null || options === void 0 ? void 0 : options.position) {\n                return options.position;\n            }\n            if (itemToPopout instanceof DockviewGroupPanel) {\n                return itemToPopout.element.getBoundingClientRect();\n            }\n            if (itemToPopout.group) {\n                return itemToPopout.group.element.getBoundingClientRect();\n            }\n            return element.getBoundingClientRect();\n        }\n        const box = getBox();\n        const groupId = (_b = (_a = options === null || options === void 0 ? void 0 : options.overridePopoutGroup) === null || _a === void 0 ? void 0 : _a.id) !== null && _b !== void 0 ? _b : this.getNextGroupId();\n        const _window = new PopoutWindow(`${this.id}-${groupId}`, // unique id\n        theme !== null && theme !== void 0 ? theme : '', {\n            url: (_e = (_c = options === null || options === void 0 ? void 0 : options.popoutUrl) !== null && _c !== void 0 ? _c : (_d = this.options) === null || _d === void 0 ? void 0 : _d.popoutUrl) !== null && _e !== void 0 ? _e : '/popout.html',\n            left: window.screenX + box.left,\n            top: window.screenY + box.top,\n            width: box.width,\n            height: box.height,\n            onDidOpen: options === null || options === void 0 ? void 0 : options.onDidOpen,\n            onWillClose: options === null || options === void 0 ? void 0 : options.onWillClose,\n        });\n        const popoutWindowDisposable = new CompositeDisposable(_window, _window.onDidClose(() => {\n            popoutWindowDisposable.dispose();\n        }));\n        return _window\n            .open()\n            .then((popoutContainer) => {\n            var _a;\n            if (_window.isDisposed) {\n                return false;\n            }\n            if (popoutContainer === null) {\n                popoutWindowDisposable.dispose();\n                return false;\n            }\n            const gready = document.createElement('div');\n            gready.className = 'dv-overlay-render-container';\n            const overlayRenderContainer = new OverlayRenderContainer(gready, this);\n            const referenceGroup = itemToPopout instanceof DockviewPanel\n                ? itemToPopout.group\n                : itemToPopout;\n            const referenceLocation = itemToPopout.api.location.type;\n            /**\n             * The group that is being added doesn't already exist within the DOM, the most likely occurance\n             * of this case is when being called from the `fromJSON(...)` method\n             */\n            const isGroupAddedToDom = referenceGroup.element.parentElement !== null;\n            let group;\n            if (!isGroupAddedToDom) {\n                group = referenceGroup;\n            }\n            else if (options === null || options === void 0 ? void 0 : options.overridePopoutGroup) {\n                group = options.overridePopoutGroup;\n            }\n            else {\n                group = this.createGroup({ id: groupId });\n                this._onDidAddGroup.fire(group);\n            }\n            group.model.renderContainer = overlayRenderContainer;\n            group.layout(_window.window.innerWidth, _window.window.innerHeight);\n            let floatingBox;\n            if (!(options === null || options === void 0 ? void 0 : options.overridePopoutGroup) && isGroupAddedToDom) {\n                if (itemToPopout instanceof DockviewPanel) {\n                    this.movingLock(() => {\n                        const panel = referenceGroup.model.removePanel(itemToPopout);\n                        group.model.openPanel(panel);\n                    });\n                }\n                else {\n                    this.movingLock(() => moveGroupWithoutDestroying({\n                        from: referenceGroup,\n                        to: group,\n                    }));\n                    switch (referenceLocation) {\n                        case 'grid':\n                            referenceGroup.api.setVisible(false);\n                            break;\n                        case 'floating':\n                        case 'popout':\n                            floatingBox = (_a = this._floatingGroups\n                                .find((value) => value.group.api.id ===\n                                itemToPopout.api.id)) === null || _a === void 0 ? void 0 : _a.overlay.toJSON();\n                            this.removeGroup(referenceGroup);\n                            break;\n                    }\n                }\n            }\n            popoutContainer.classList.add('dv-dockview');\n            popoutContainer.style.overflow = 'hidden';\n            popoutContainer.appendChild(gready);\n            popoutContainer.appendChild(group.element);\n            group.model.location = {\n                type: 'popout',\n                getWindow: () => _window.window,\n                popoutUrl: options === null || options === void 0 ? void 0 : options.popoutUrl,\n            };\n            if (isGroupAddedToDom &&\n                itemToPopout.api.location.type === 'grid') {\n                itemToPopout.api.setVisible(false);\n            }\n            this.doSetGroupAndPanelActive(group);\n            popoutWindowDisposable.addDisposables(group.api.onDidActiveChange((event) => {\n                var _a;\n                if (event.isActive) {\n                    (_a = _window.window) === null || _a === void 0 ? void 0 : _a.focus();\n                }\n            }), group.api.onWillFocus(() => {\n                var _a;\n                (_a = _window.window) === null || _a === void 0 ? void 0 : _a.focus();\n            }));\n            let returnedGroup;\n            const isValidReferenceGroup = isGroupAddedToDom &&\n                referenceGroup &&\n                this.getPanel(referenceGroup.id);\n            const value = {\n                window: _window,\n                popoutGroup: group,\n                referenceGroup: isValidReferenceGroup\n                    ? referenceGroup.id\n                    : undefined,\n                disposable: {\n                    dispose: () => {\n                        popoutWindowDisposable.dispose();\n                        return returnedGroup;\n                    },\n                },\n            };\n            popoutWindowDisposable.addDisposables(\n            /**\n             * ResizeObserver seems slow here, I do not know why but we don't need it\n             * since we can reply on the window resize event as we will occupy the full\n             * window dimensions\n             */\n            addDisposableWindowListener(_window.window, 'resize', () => {\n                group.layout(_window.window.innerWidth, _window.window.innerHeight);\n            }), overlayRenderContainer, Disposable.from(() => {\n                if (isGroupAddedToDom &&\n                    this.getPanel(referenceGroup.id)) {\n                    this.movingLock(() => moveGroupWithoutDestroying({\n                        from: group,\n                        to: referenceGroup,\n                    }));\n                    if (!referenceGroup.api.isVisible) {\n                        referenceGroup.api.setVisible(true);\n                    }\n                    if (this.getPanel(group.id)) {\n                        this.doRemoveGroup(group, {\n                            skipPopoutAssociated: true,\n                        });\n                    }\n                }\n                else if (this.getPanel(group.id)) {\n                    group.model.renderContainer =\n                        this.overlayRenderContainer;\n                    returnedGroup = group;\n                    if (floatingBox) {\n                        this.addFloatingGroup(group, {\n                            height: floatingBox.height,\n                            width: floatingBox.width,\n                            position: floatingBox,\n                        });\n                    }\n                    else {\n                        this.doRemoveGroup(group, {\n                            skipDispose: true,\n                            skipActive: true,\n                            skipPopoutReturn: true,\n                        });\n                        group.model.location = { type: 'grid' };\n                        this.movingLock(() => {\n                            // suppress group add events since the group already exists\n                            this.doAddGroup(group, [0]);\n                        });\n                    }\n                    this.doSetGroupAndPanelActive(group);\n                }\n            }));\n            this._popoutGroups.push(value);\n            this.updateWatermark();\n            return true;\n        })\n            .catch((err) => {\n            console.error('dockview: failed to create popout window', err);\n            return false;\n        });\n    }\n    addFloatingGroup(item, options) {\n        var _a, _b, _c, _d, _e;\n        let group;\n        if (item instanceof DockviewPanel) {\n            group = this.createGroup();\n            this._onDidAddGroup.fire(group);\n            this.movingLock(() => this.removePanel(item, {\n                removeEmptyGroup: true,\n                skipDispose: true,\n                skipSetActiveGroup: true,\n            }));\n            this.movingLock(() => group.model.openPanel(item, { skipSetGroupActive: true }));\n        }\n        else {\n            group = item;\n            const popoutReferenceGroupId = (_a = this._popoutGroups.find((_) => _.popoutGroup === group)) === null || _a === void 0 ? void 0 : _a.referenceGroup;\n            const popoutReferenceGroup = popoutReferenceGroupId\n                ? this.getPanel(popoutReferenceGroupId)\n                : undefined;\n            const skip = typeof (options === null || options === void 0 ? void 0 : options.skipRemoveGroup) === 'boolean' &&\n                options.skipRemoveGroup;\n            if (!skip) {\n                if (popoutReferenceGroup) {\n                    this.movingLock(() => moveGroupWithoutDestroying({\n                        from: item,\n                        to: popoutReferenceGroup,\n                    }));\n                    this.doRemoveGroup(item, {\n                        skipPopoutReturn: true,\n                        skipPopoutAssociated: true,\n                    });\n                    this.doRemoveGroup(popoutReferenceGroup, {\n                        skipDispose: true,\n                    });\n                    group = popoutReferenceGroup;\n                }\n                else {\n                    this.doRemoveGroup(item, {\n                        skipDispose: true,\n                        skipPopoutReturn: true,\n                        skipPopoutAssociated: false,\n                    });\n                }\n            }\n        }\n        function getAnchoredBox() {\n            if (options === null || options === void 0 ? void 0 : options.position) {\n                const result = {};\n                if ('left' in options.position) {\n                    result.left = Math.max(options.position.left, 0);\n                }\n                else if ('right' in options.position) {\n                    result.right = Math.max(options.position.right, 0);\n                }\n                else {\n                    result.left = DEFAULT_FLOATING_GROUP_POSITION.left;\n                }\n                if ('top' in options.position) {\n                    result.top = Math.max(options.position.top, 0);\n                }\n                else if ('bottom' in options.position) {\n                    result.bottom = Math.max(options.position.bottom, 0);\n                }\n                else {\n                    result.top = DEFAULT_FLOATING_GROUP_POSITION.top;\n                }\n                if (typeof options.width === 'number') {\n                    result.width = Math.max(options.width, 0);\n                }\n                else {\n                    result.width = DEFAULT_FLOATING_GROUP_POSITION.width;\n                }\n                if (typeof options.height === 'number') {\n                    result.height = Math.max(options.height, 0);\n                }\n                else {\n                    result.height = DEFAULT_FLOATING_GROUP_POSITION.height;\n                }\n                return result;\n            }\n            return {\n                left: typeof (options === null || options === void 0 ? void 0 : options.x) === 'number'\n                    ? Math.max(options.x, 0)\n                    : DEFAULT_FLOATING_GROUP_POSITION.left,\n                top: typeof (options === null || options === void 0 ? void 0 : options.y) === 'number'\n                    ? Math.max(options.y, 0)\n                    : DEFAULT_FLOATING_GROUP_POSITION.top,\n                width: typeof (options === null || options === void 0 ? void 0 : options.width) === 'number'\n                    ? Math.max(options.width, 0)\n                    : DEFAULT_FLOATING_GROUP_POSITION.width,\n                height: typeof (options === null || options === void 0 ? void 0 : options.height) === 'number'\n                    ? Math.max(options.height, 0)\n                    : DEFAULT_FLOATING_GROUP_POSITION.height,\n            };\n        }\n        const anchoredBox = getAnchoredBox();\n        const overlay = new Overlay(Object.assign(Object.assign({ container: this.gridview.element, content: group.element }, anchoredBox), { minimumInViewportWidth: this.options.floatingGroupBounds === 'boundedWithinViewport'\n                ? undefined\n                : (_c = (_b = this.options.floatingGroupBounds) === null || _b === void 0 ? void 0 : _b.minimumWidthWithinViewport) !== null && _c !== void 0 ? _c : DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE, minimumInViewportHeight: this.options.floatingGroupBounds === 'boundedWithinViewport'\n                ? undefined\n                : (_e = (_d = this.options.floatingGroupBounds) === null || _d === void 0 ? void 0 : _d.minimumHeightWithinViewport) !== null && _e !== void 0 ? _e : DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE }));\n        const el = group.element.querySelector('.dv-void-container');\n        if (!el) {\n            throw new Error('failed to find drag handle');\n        }\n        overlay.setupDrag(el, {\n            inDragMode: typeof (options === null || options === void 0 ? void 0 : options.inDragMode) === 'boolean'\n                ? options.inDragMode\n                : false,\n        });\n        const floatingGroupPanel = new DockviewFloatingGroupPanel(group, overlay);\n        const disposable = new CompositeDisposable(group.api.onDidActiveChange((event) => {\n            if (event.isActive) {\n                overlay.bringToFront();\n            }\n        }), watchElementResize(group.element, (entry) => {\n            const { width, height } = entry.contentRect;\n            group.layout(width, height); // let the group know it's size is changing so it can fire events to the panel\n        }));\n        floatingGroupPanel.addDisposables(overlay.onDidChange(() => {\n            // this is either a resize or a move\n            // to inform the panels .layout(...) the group with it's current size\n            // don't care about resize since the above watcher handles that\n            group.layout(group.width, group.height);\n        }), overlay.onDidChangeEnd(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), group.onDidChange((event) => {\n            overlay.setBounds({\n                height: event === null || event === void 0 ? void 0 : event.height,\n                width: event === null || event === void 0 ? void 0 : event.width,\n            });\n        }), {\n            dispose: () => {\n                disposable.dispose();\n                remove(this._floatingGroups, floatingGroupPanel);\n                group.model.location = { type: 'grid' };\n                this.updateWatermark();\n            },\n        });\n        this._floatingGroups.push(floatingGroupPanel);\n        group.model.location = { type: 'floating' };\n        if (!(options === null || options === void 0 ? void 0 : options.skipActiveGroup)) {\n            this.doSetGroupAndPanelActive(group);\n        }\n        this.updateWatermark();\n    }\n    orthogonalize(position) {\n        switch (position) {\n            case 'top':\n            case 'bottom':\n                if (this.gridview.orientation === Orientation.HORIZONTAL) {\n                    // we need to add to a vertical splitview but the current root is a horizontal splitview.\n                    // insert a vertical splitview at the root level and add the existing view as a child\n                    this.gridview.insertOrthogonalSplitviewAtRoot();\n                }\n                break;\n            case 'left':\n            case 'right':\n                if (this.gridview.orientation === Orientation.VERTICAL) {\n                    // we need to add to a horizontal splitview but the current root is a vertical splitview.\n                    // insert a horiziontal splitview at the root level and add the existing view as a child\n                    this.gridview.insertOrthogonalSplitviewAtRoot();\n                }\n                break;\n            default:\n                break;\n        }\n        switch (position) {\n            case 'top':\n            case 'left':\n            case 'center':\n                return this.createGroupAtLocation([0]); // insert into first position\n            case 'bottom':\n            case 'right':\n                return this.createGroupAtLocation([this.gridview.length]); // insert into last position\n            default:\n                throw new Error(`unsupported position ${position}`);\n        }\n    }\n    updateOptions(options) {\n        var _a, _b, _c, _d;\n        super.updateOptions(options);\n        if ('floatingGroupBounds' in options) {\n            for (const group of this._floatingGroups) {\n                switch (options.floatingGroupBounds) {\n                    case 'boundedWithinViewport':\n                        group.overlay.minimumInViewportHeight = undefined;\n                        group.overlay.minimumInViewportWidth = undefined;\n                        break;\n                    case undefined:\n                        group.overlay.minimumInViewportHeight =\n                            DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE;\n                        group.overlay.minimumInViewportWidth =\n                            DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE;\n                        break;\n                    default:\n                        group.overlay.minimumInViewportHeight =\n                            (_a = options.floatingGroupBounds) === null || _a === void 0 ? void 0 : _a.minimumHeightWithinViewport;\n                        group.overlay.minimumInViewportWidth =\n                            (_b = options.floatingGroupBounds) === null || _b === void 0 ? void 0 : _b.minimumWidthWithinViewport;\n                }\n                group.overlay.setBounds();\n            }\n        }\n        if ('rootOverlayModel' in options) {\n            this._rootDropTarget.setOverlayModel((_c = options.rootOverlayModel) !== null && _c !== void 0 ? _c : DEFAULT_ROOT_OVERLAY_MODEL);\n        }\n        if ('gap' in options) {\n            this.gridview.margin = (_d = options.gap) !== null && _d !== void 0 ? _d : 0;\n        }\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        this.layout(this.gridview.width, this.gridview.height, true);\n    }\n    layout(width, height, forceResize) {\n        super.layout(width, height, forceResize);\n        if (this._floatingGroups) {\n            for (const floating of this._floatingGroups) {\n                // ensure floting groups stay within visible boundaries\n                floating.overlay.setBounds();\n            }\n        }\n    }\n    focus() {\n        var _a;\n        (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    getGroupPanel(id) {\n        return this.panels.find((panel) => panel.id === id);\n    }\n    setActivePanel(panel) {\n        panel.group.model.openPanel(panel);\n        this.doSetGroupAndPanelActive(panel.group);\n    }\n    moveToNext(options = {}) {\n        var _a;\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        if (options.includePanel && options.group) {\n            if (options.group.activePanel !==\n                options.group.panels[options.group.panels.length - 1]) {\n                options.group.model.moveToNext({ suppressRoll: true });\n                return;\n            }\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.next(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupAndPanelActive(next);\n    }\n    moveToPrevious(options = {}) {\n        var _a;\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        if (options.includePanel && options.group) {\n            if (options.group.activePanel !== options.group.panels[0]) {\n                options.group.model.moveToPrevious({ suppressRoll: true });\n                return;\n            }\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.previous(location)) === null || _a === void 0 ? void 0 : _a.view;\n        if (next) {\n            this.doSetGroupAndPanelActive(next);\n        }\n    }\n    /**\n     * Serialize the current state of the layout\n     *\n     * @returns A JSON respresentation of the layout\n     */\n    toJSON() {\n        var _a;\n        const data = this.gridview.serialize();\n        const panels = this.panels.reduce((collection, panel) => {\n            collection[panel.id] = panel.toJSON();\n            return collection;\n        }, {});\n        const floats = this._floatingGroups.map((group) => {\n            return {\n                data: group.group.toJSON(),\n                position: group.overlay.toJSON(),\n            };\n        });\n        const popoutGroups = this._popoutGroups.map((group) => {\n            return {\n                data: group.popoutGroup.toJSON(),\n                gridReferenceGroup: group.referenceGroup,\n                position: group.window.dimensions(),\n                url: group.popoutGroup.api.location.type === 'popout'\n                    ? group.popoutGroup.api.location.popoutUrl\n                    : undefined,\n            };\n        });\n        const result = {\n            grid: data,\n            panels,\n            activeGroup: (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.id,\n        };\n        if (floats.length > 0) {\n            result.floatingGroups = floats;\n        }\n        if (popoutGroups.length > 0) {\n            result.popoutGroups = popoutGroups;\n        }\n        return result;\n    }\n    fromJSON(data) {\n        var _a, _b, _c;\n        this.clear();\n        if (typeof data !== 'object' || data === null) {\n            throw new Error('serialized layout must be a non-null object');\n        }\n        const { grid, panels, activeGroup } = data;\n        if (grid.root.type !== 'branch' || !Array.isArray(grid.root.data)) {\n            throw new Error('root must be of type branch');\n        }\n        try {\n            // take note of the existing dimensions\n            const width = this.width;\n            const height = this.height;\n            const createGroupFromSerializedState = (data) => {\n                const { id, locked, hideHeader, views, activeView } = data;\n                if (typeof id !== 'string') {\n                    throw new Error('group id must be of type string');\n                }\n                const group = this.createGroup({\n                    id,\n                    locked: !!locked,\n                    hideHeader: !!hideHeader,\n                });\n                this._onDidAddGroup.fire(group);\n                const createdPanels = [];\n                for (const child of views) {\n                    /**\n                     * Run the deserializer step seperately since this may fail to due corrupted external state.\n                     * In running this section first we avoid firing lots of 'add' events in the event of a failure\n                     * due to a corruption of input data.\n                     */\n                    const panel = this._deserializer.fromJSON(panels[child], group);\n                    createdPanels.push(panel);\n                }\n                for (let i = 0; i < views.length; i++) {\n                    const panel = createdPanels[i];\n                    const isActive = typeof activeView === 'string' &&\n                        activeView === panel.id;\n                    group.model.openPanel(panel, {\n                        skipSetActive: !isActive,\n                        skipSetGroupActive: true,\n                    });\n                }\n                if (!group.activePanel && group.panels.length > 0) {\n                    group.model.openPanel(group.panels[group.panels.length - 1], {\n                        skipSetGroupActive: true,\n                    });\n                }\n                return group;\n            };\n            this.gridview.deserialize(grid, {\n                fromJSON: (node) => {\n                    return createGroupFromSerializedState(node.data);\n                },\n            });\n            this.layout(width, height, true);\n            const serializedFloatingGroups = (_a = data.floatingGroups) !== null && _a !== void 0 ? _a : [];\n            for (const serializedFloatingGroup of serializedFloatingGroups) {\n                const { data, position } = serializedFloatingGroup;\n                const group = createGroupFromSerializedState(data);\n                this.addFloatingGroup(group, {\n                    position: position,\n                    width: position.width,\n                    height: position.height,\n                    skipRemoveGroup: true,\n                    inDragMode: false,\n                });\n            }\n            const serializedPopoutGroups = (_b = data.popoutGroups) !== null && _b !== void 0 ? _b : [];\n            for (const serializedPopoutGroup of serializedPopoutGroups) {\n                const { data, position, gridReferenceGroup, url } = serializedPopoutGroup;\n                const group = createGroupFromSerializedState(data);\n                this.addPopoutGroup((_c = (gridReferenceGroup\n                    ? this.getPanel(gridReferenceGroup)\n                    : undefined)) !== null && _c !== void 0 ? _c : group, {\n                    position: position !== null && position !== void 0 ? position : undefined,\n                    overridePopoutGroup: gridReferenceGroup\n                        ? group\n                        : undefined,\n                    popoutUrl: url,\n                });\n            }\n            for (const floatingGroup of this._floatingGroups) {\n                floatingGroup.overlay.setBounds();\n            }\n            if (typeof activeGroup === 'string') {\n                const panel = this.getPanel(activeGroup);\n                if (panel) {\n                    this.doSetGroupAndPanelActive(panel);\n                }\n            }\n        }\n        catch (err) {\n            console.error('dockview: failed to deserialize layout. Reverting changes', err);\n            /**\n             * Takes all the successfully created groups and remove all of their panels.\n             */\n            for (const group of this.groups) {\n                for (const panel of group.panels) {\n                    this.removePanel(panel, {\n                        removeEmptyGroup: false,\n                        skipDispose: false,\n                    });\n                }\n            }\n            /**\n             * To remove a group we cannot call this.removeGroup(...) since this makes assumptions about\n             * the underlying HTMLElement existing in the Gridview.\n             */\n            for (const group of this.groups) {\n                group.dispose();\n                this._groups.delete(group.id);\n                this._onDidRemoveGroup.fire(group);\n            }\n            // iterate over a reassigned array since original array will be modified\n            for (const floatingGroup of [...this._floatingGroups]) {\n                floatingGroup.dispose();\n            }\n            // fires clean-up events and clears the underlying HTML gridview.\n            this.clear();\n            /**\n             * even though we have cleaned-up we still want to inform the caller of their error\n             * and we'll do this through re-throwing the original error since afterall you would\n             * expect trying to load a corrupted layout to result in an error and not silently fail...\n             */\n            throw err;\n        }\n        this.updateWatermark();\n        this._onDidLayoutFromJSON.fire();\n    }\n    clear() {\n        const groups = Array.from(this._groups.values()).map((_) => _.value);\n        const hasActiveGroup = !!this.activeGroup;\n        for (const group of groups) {\n            // remove the group will automatically remove the panels\n            this.removeGroup(group, { skipActive: true });\n        }\n        if (hasActiveGroup) {\n            this.doSetGroupAndPanelActive(undefined);\n        }\n        this.gridview.clear();\n    }\n    closeAllGroups() {\n        for (const entry of this._groups.entries()) {\n            const [_, group] = entry;\n            group.value.model.closeAllPanels();\n        }\n    }\n    addPanel(options) {\n        var _a, _b;\n        if (this.panels.find((_) => _.id === options.id)) {\n            throw new Error(`panel with id ${options.id} already exists`);\n        }\n        let referenceGroup;\n        if (options.position && options.floating) {\n            throw new Error('you can only provide one of: position, floating as arguments to .addPanel(...)');\n        }\n        const initial = {\n            width: options.initialWidth,\n            height: options.initialHeight,\n        };\n        let index;\n        if (options.position) {\n            if (isPanelOptionsWithPanel(options.position)) {\n                const referencePanel = typeof options.position.referencePanel === 'string'\n                    ? this.getGroupPanel(options.position.referencePanel)\n                    : options.position.referencePanel;\n                index = options.position.index;\n                if (!referencePanel) {\n                    throw new Error(`referencePanel '${options.position.referencePanel}' does not exist`);\n                }\n                referenceGroup = this.findGroup(referencePanel);\n            }\n            else if (isPanelOptionsWithGroup(options.position)) {\n                referenceGroup =\n                    typeof options.position.referenceGroup === 'string'\n                        ? (_a = this._groups.get(options.position.referenceGroup)) === null || _a === void 0 ? void 0 : _a.value\n                        : options.position.referenceGroup;\n                index = options.position.index;\n                if (!referenceGroup) {\n                    throw new Error(`referenceGroup '${options.position.referenceGroup}' does not exist`);\n                }\n            }\n            else {\n                const group = this.orthogonalize(directionToPosition(options.position.direction));\n                const panel = this.createPanel(options, group);\n                group.model.openPanel(panel, {\n                    skipSetActive: options.inactive,\n                    skipSetGroupActive: options.inactive,\n                    index,\n                });\n                if (!options.inactive) {\n                    this.doSetGroupAndPanelActive(group);\n                }\n                group.api.setSize({\n                    height: initial === null || initial === void 0 ? void 0 : initial.height,\n                    width: initial === null || initial === void 0 ? void 0 : initial.width,\n                });\n                return panel;\n            }\n        }\n        else {\n            referenceGroup = this.activeGroup;\n        }\n        let panel;\n        if (referenceGroup) {\n            const target = toTarget(((_b = options.position) === null || _b === void 0 ? void 0 : _b.direction) || 'within');\n            if (options.floating) {\n                const group = this.createGroup();\n                this._onDidAddGroup.fire(group);\n                const floatingGroupOptions = typeof options.floating === 'object' &&\n                    options.floating !== null\n                    ? options.floating\n                    : {};\n                this.addFloatingGroup(group, Object.assign(Object.assign({}, floatingGroupOptions), { inDragMode: false, skipRemoveGroup: true, skipActiveGroup: true }));\n                panel = this.createPanel(options, group);\n                group.model.openPanel(panel, {\n                    skipSetActive: options.inactive,\n                    skipSetGroupActive: options.inactive,\n                    index,\n                });\n            }\n            else if (referenceGroup.api.location.type === 'floating' ||\n                target === 'center') {\n                panel = this.createPanel(options, referenceGroup);\n                referenceGroup.model.openPanel(panel, {\n                    skipSetActive: options.inactive,\n                    skipSetGroupActive: options.inactive,\n                    index,\n                });\n                referenceGroup.api.setSize({\n                    width: initial === null || initial === void 0 ? void 0 : initial.width,\n                    height: initial === null || initial === void 0 ? void 0 : initial.height,\n                });\n                if (!options.inactive) {\n                    this.doSetGroupAndPanelActive(referenceGroup);\n                }\n            }\n            else {\n                const location = getGridLocation(referenceGroup.element);\n                const relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n                const group = this.createGroupAtLocation(relativeLocation, this.orientationAtLocation(relativeLocation) ===\n                    Orientation.VERTICAL\n                    ? initial === null || initial === void 0 ? void 0 : initial.height\n                    : initial === null || initial === void 0 ? void 0 : initial.width);\n                panel = this.createPanel(options, group);\n                group.model.openPanel(panel, {\n                    skipSetActive: options.inactive,\n                    skipSetGroupActive: options.inactive,\n                    index,\n                });\n                if (!options.inactive) {\n                    this.doSetGroupAndPanelActive(group);\n                }\n            }\n        }\n        else if (options.floating) {\n            const group = this.createGroup();\n            this._onDidAddGroup.fire(group);\n            const coordinates = typeof options.floating === 'object' &&\n                options.floating !== null\n                ? options.floating\n                : {};\n            this.addFloatingGroup(group, Object.assign(Object.assign({}, coordinates), { inDragMode: false, skipRemoveGroup: true, skipActiveGroup: true }));\n            panel = this.createPanel(options, group);\n            group.model.openPanel(panel, {\n                skipSetActive: options.inactive,\n                skipSetGroupActive: options.inactive,\n                index,\n            });\n        }\n        else {\n            const group = this.createGroupAtLocation([0], this.gridview.orientation === Orientation.VERTICAL\n                ? initial === null || initial === void 0 ? void 0 : initial.height\n                : initial === null || initial === void 0 ? void 0 : initial.width);\n            panel = this.createPanel(options, group);\n            group.model.openPanel(panel, {\n                skipSetActive: options.inactive,\n                skipSetGroupActive: options.inactive,\n                index,\n            });\n            if (!options.inactive) {\n                this.doSetGroupAndPanelActive(group);\n            }\n        }\n        return panel;\n    }\n    removePanel(panel, options = {\n        removeEmptyGroup: true,\n    }) {\n        const group = panel.group;\n        if (!group) {\n            throw new Error(`cannot remove panel ${panel.id}. it's missing a group.`);\n        }\n        group.model.removePanel(panel, {\n            skipSetActiveGroup: options.skipSetActiveGroup,\n        });\n        if (!options.skipDispose) {\n            panel.group.model.renderContainer.detatch(panel);\n            panel.dispose();\n        }\n        if (group.size === 0 && options.removeEmptyGroup) {\n            this.removeGroup(group, { skipActive: options.skipSetActiveGroup });\n        }\n    }\n    createWatermarkComponent() {\n        if (this.options.createWatermarkComponent) {\n            return this.options.createWatermarkComponent();\n        }\n        return new Watermark();\n    }\n    updateWatermark() {\n        var _a, _b;\n        if (this.groups.filter((x) => x.api.location.type === 'grid' && x.api.isVisible).length === 0) {\n            if (!this.watermark) {\n                this.watermark = this.createWatermarkComponent();\n                this.watermark.init({\n                    containerApi: new DockviewApi(this),\n                });\n                const watermarkContainer = document.createElement('div');\n                watermarkContainer.className = 'dv-watermark-container';\n                addTestId(watermarkContainer, 'watermark-component');\n                watermarkContainer.appendChild(this.watermark.element);\n                this.gridview.element.appendChild(watermarkContainer);\n            }\n        }\n        else if (this.watermark) {\n            this.watermark.element.parentElement.remove();\n            (_b = (_a = this.watermark).dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n            this.watermark = null;\n        }\n    }\n    addGroup(options) {\n        var _a;\n        if (options) {\n            let referenceGroup;\n            if (isGroupOptionsWithPanel(options)) {\n                const referencePanel = typeof options.referencePanel === 'string'\n                    ? this.panels.find((panel) => panel.id === options.referencePanel)\n                    : options.referencePanel;\n                if (!referencePanel) {\n                    throw new Error(`reference panel ${options.referencePanel} does not exist`);\n                }\n                referenceGroup = this.findGroup(referencePanel);\n                if (!referenceGroup) {\n                    throw new Error(`reference group for reference panel ${options.referencePanel} does not exist`);\n                }\n            }\n            else if (isGroupOptionsWithGroup(options)) {\n                referenceGroup =\n                    typeof options.referenceGroup === 'string'\n                        ? (_a = this._groups.get(options.referenceGroup)) === null || _a === void 0 ? void 0 : _a.value\n                        : options.referenceGroup;\n                if (!referenceGroup) {\n                    throw new Error(`reference group ${options.referenceGroup} does not exist`);\n                }\n            }\n            else {\n                const group = this.orthogonalize(directionToPosition(options.direction));\n                if (!options.skipSetActive) {\n                    this.doSetGroupAndPanelActive(group);\n                }\n                return group;\n            }\n            const target = toTarget(options.direction || 'within');\n            const location = getGridLocation(referenceGroup.element);\n            const relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n            const group = this.createGroup(options);\n            const size = this.getLocationOrientation(relativeLocation) ===\n                Orientation.VERTICAL\n                ? options.initialHeight\n                : options.initialWidth;\n            this.doAddGroup(group, relativeLocation, size);\n            if (!options.skipSetActive) {\n                this.doSetGroupAndPanelActive(group);\n            }\n            return group;\n        }\n        else {\n            const group = this.createGroup(options);\n            this.doAddGroup(group);\n            this.doSetGroupAndPanelActive(group);\n            return group;\n        }\n    }\n    getLocationOrientation(location) {\n        return location.length % 2 == 0 &&\n            this.gridview.orientation === Orientation.HORIZONTAL\n            ? Orientation.HORIZONTAL\n            : Orientation.VERTICAL;\n    }\n    removeGroup(group, options) {\n        this.doRemoveGroup(group, options);\n    }\n    doRemoveGroup(group, options) {\n        var _a;\n        const panels = [...group.panels]; // reassign since group panels will mutate\n        if (!(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n            for (const panel of panels) {\n                this.removePanel(panel, {\n                    removeEmptyGroup: false,\n                    skipDispose: (_a = options === null || options === void 0 ? void 0 : options.skipDispose) !== null && _a !== void 0 ? _a : false,\n                });\n            }\n        }\n        const activePanel = this.activePanel;\n        if (group.api.location.type === 'floating') {\n            const floatingGroup = this._floatingGroups.find((_) => _.group === group);\n            if (floatingGroup) {\n                if (!(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n                    floatingGroup.group.dispose();\n                    this._groups.delete(group.id);\n                    this._onDidRemoveGroup.fire(group);\n                }\n                remove(this._floatingGroups, floatingGroup);\n                floatingGroup.dispose();\n                if (!(options === null || options === void 0 ? void 0 : options.skipActive) && this._activeGroup === group) {\n                    const groups = Array.from(this._groups.values());\n                    this.doSetGroupAndPanelActive(groups.length > 0 ? groups[0].value : undefined);\n                }\n                return floatingGroup.group;\n            }\n            throw new Error('failed to find floating group');\n        }\n        if (group.api.location.type === 'popout') {\n            const selectedGroup = this._popoutGroups.find((_) => _.popoutGroup === group);\n            if (selectedGroup) {\n                if (!(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n                    if (!(options === null || options === void 0 ? void 0 : options.skipPopoutAssociated)) {\n                        const refGroup = selectedGroup.referenceGroup\n                            ? this.getPanel(selectedGroup.referenceGroup)\n                            : undefined;\n                        if (refGroup && refGroup.panels.length === 0) {\n                            this.removeGroup(refGroup);\n                        }\n                    }\n                    selectedGroup.popoutGroup.dispose();\n                    this._groups.delete(group.id);\n                    this._onDidRemoveGroup.fire(group);\n                }\n                remove(this._popoutGroups, selectedGroup);\n                const removedGroup = selectedGroup.disposable.dispose();\n                if (!(options === null || options === void 0 ? void 0 : options.skipPopoutReturn) && removedGroup) {\n                    this.doAddGroup(removedGroup, [0]);\n                    this.doSetGroupAndPanelActive(removedGroup);\n                }\n                if (!(options === null || options === void 0 ? void 0 : options.skipActive) && this._activeGroup === group) {\n                    const groups = Array.from(this._groups.values());\n                    this.doSetGroupAndPanelActive(groups.length > 0 ? groups[0].value : undefined);\n                }\n                this.updateWatermark();\n                return selectedGroup.popoutGroup;\n            }\n            throw new Error('failed to find popout group');\n        }\n        const re = super.doRemoveGroup(group, options);\n        if (!(options === null || options === void 0 ? void 0 : options.skipActive)) {\n            if (this.activePanel !== activePanel) {\n                this._onDidActivePanelChange.fire(this.activePanel);\n            }\n        }\n        return re;\n    }\n    movingLock(func) {\n        const isMoving = this._moving;\n        try {\n            this._moving = true;\n            return func();\n        }\n        finally {\n            this._moving = isMoving;\n        }\n    }\n    moveGroupOrPanel(options) {\n        var _a;\n        const destinationGroup = options.to.group;\n        const sourceGroupId = options.from.groupId;\n        const sourceItemId = options.from.panelId;\n        const destinationTarget = options.to.position;\n        const destinationIndex = options.to.index;\n        const sourceGroup = sourceGroupId\n            ? (_a = this._groups.get(sourceGroupId)) === null || _a === void 0 ? void 0 : _a.value\n            : undefined;\n        if (!sourceGroup) {\n            throw new Error(`Failed to find group id ${sourceGroupId}`);\n        }\n        if (sourceItemId === undefined) {\n            /**\n             * Moving an entire group into another group\n             */\n            this.moveGroup({\n                from: { group: sourceGroup },\n                to: {\n                    group: destinationGroup,\n                    position: destinationTarget,\n                },\n            });\n            return;\n        }\n        if (!destinationTarget || destinationTarget === 'center') {\n            /**\n             * Dropping a panel within another group\n             */\n            const removedPanel = this.movingLock(() => sourceGroup.model.removePanel(sourceItemId, {\n                skipSetActive: false,\n                skipSetActiveGroup: true,\n            }));\n            if (!removedPanel) {\n                throw new Error(`No panel with id ${sourceItemId}`);\n            }\n            if (sourceGroup.model.size === 0) {\n                // remove the group and do not set a new group as active\n                this.doRemoveGroup(sourceGroup, { skipActive: true });\n            }\n            this.movingLock(() => destinationGroup.model.openPanel(removedPanel, {\n                index: destinationIndex,\n                skipSetGroupActive: true,\n            }));\n            this.doSetGroupAndPanelActive(destinationGroup);\n            this._onDidMovePanel.fire({\n                panel: removedPanel,\n                from: sourceGroup,\n            });\n        }\n        else {\n            /**\n             * Dropping a panel to the extremities of a group which will place that panel\n             * into an adjacent group\n             */\n            const referenceLocation = getGridLocation(destinationGroup.element);\n            const targetLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, destinationTarget);\n            if (sourceGroup.size < 2) {\n                /**\n                 * If we are moving from a group which only has one panel left we will consider\n                 * moving the group itself rather than moving the panel into a newly created group\n                 */\n                const [targetParentLocation, to] = tail(targetLocation);\n                if (sourceGroup.api.location.type === 'grid') {\n                    const sourceLocation = getGridLocation(sourceGroup.element);\n                    const [sourceParentLocation, from] = tail(sourceLocation);\n                    if (sequenceEquals(sourceParentLocation, targetParentLocation)) {\n                        // special case when 'swapping' two views within same grid location\n                        // if a group has one tab - we are essentially moving the 'group'\n                        // which is equivalent to swapping two views in this case\n                        this.gridview.moveView(sourceParentLocation, from, to);\n                        this._onDidMovePanel.fire({\n                            panel: this.getGroupPanel(sourceItemId),\n                            from: sourceGroup,\n                        });\n                        return;\n                    }\n                }\n                if (sourceGroup.api.location.type === 'popout') {\n                    /**\n                     * the source group is a popout group with a single panel\n                     *\n                     * 1. remove the panel from the group without triggering any events\n                     * 2. remove the popout group\n                     * 3. create a new group at the requested location and add that panel\n                     */\n                    const popoutGroup = this._popoutGroups.find((group) => group.popoutGroup === sourceGroup);\n                    const removedPanel = this.movingLock(() => popoutGroup.popoutGroup.model.removePanel(popoutGroup.popoutGroup.panels[0], {\n                        skipSetActive: true,\n                        skipSetActiveGroup: true,\n                    }));\n                    this.doRemoveGroup(sourceGroup, { skipActive: true });\n                    const newGroup = this.createGroupAtLocation(targetLocation);\n                    this.movingLock(() => newGroup.model.openPanel(removedPanel));\n                    this.doSetGroupAndPanelActive(newGroup);\n                    this._onDidMovePanel.fire({\n                        panel: this.getGroupPanel(sourceItemId),\n                        from: sourceGroup,\n                    });\n                    return;\n                }\n                // source group will become empty so delete the group\n                const targetGroup = this.movingLock(() => this.doRemoveGroup(sourceGroup, {\n                    skipActive: true,\n                    skipDispose: true,\n                }));\n                // after deleting the group we need to re-evaulate the ref location\n                const updatedReferenceLocation = getGridLocation(destinationGroup.element);\n                const location = getRelativeLocation(this.gridview.orientation, updatedReferenceLocation, destinationTarget);\n                this.movingLock(() => this.doAddGroup(targetGroup, location));\n                this.doSetGroupAndPanelActive(targetGroup);\n                this._onDidMovePanel.fire({\n                    panel: this.getGroupPanel(sourceItemId),\n                    from: sourceGroup,\n                });\n            }\n            else {\n                /**\n                 * The group we are removing from has many panels, we need to remove the panels we are moving,\n                 * create a new group, add the panels to that new group and add the new group in an appropiate position\n                 */\n                const removedPanel = this.movingLock(() => sourceGroup.model.removePanel(sourceItemId, {\n                    skipSetActive: false,\n                    skipSetActiveGroup: true,\n                }));\n                if (!removedPanel) {\n                    throw new Error(`No panel with id ${sourceItemId}`);\n                }\n                const dropLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, destinationTarget);\n                const group = this.createGroupAtLocation(dropLocation);\n                this.movingLock(() => group.model.openPanel(removedPanel, {\n                    skipSetGroupActive: true,\n                }));\n                this.doSetGroupAndPanelActive(group);\n                this._onDidMovePanel.fire({\n                    panel: removedPanel,\n                    from: sourceGroup,\n                });\n            }\n        }\n    }\n    moveGroup(options) {\n        const from = options.from.group;\n        const to = options.to.group;\n        const target = options.to.position;\n        if (target === 'center') {\n            const activePanel = from.activePanel;\n            const panels = this.movingLock(() => [...from.panels].map((p) => from.model.removePanel(p.id, {\n                skipSetActive: true,\n            })));\n            if ((from === null || from === void 0 ? void 0 : from.model.size) === 0) {\n                this.doRemoveGroup(from, { skipActive: true });\n            }\n            this.movingLock(() => {\n                for (const panel of panels) {\n                    to.model.openPanel(panel, {\n                        skipSetActive: panel !== activePanel,\n                        skipSetGroupActive: true,\n                    });\n                }\n            });\n            this.doSetGroupAndPanelActive(to);\n        }\n        else {\n            switch (from.api.location.type) {\n                case 'grid':\n                    this.gridview.removeView(getGridLocation(from.element));\n                    break;\n                case 'floating': {\n                    const selectedFloatingGroup = this._floatingGroups.find((x) => x.group === from);\n                    if (!selectedFloatingGroup) {\n                        throw new Error('failed to find floating group');\n                    }\n                    selectedFloatingGroup.dispose();\n                    break;\n                }\n                case 'popout': {\n                    const selectedPopoutGroup = this._popoutGroups.find((x) => x.popoutGroup === from);\n                    if (!selectedPopoutGroup) {\n                        throw new Error('failed to find popout group');\n                    }\n                    selectedPopoutGroup.disposable.dispose();\n                }\n            }\n            const referenceLocation = getGridLocation(to.element);\n            const dropLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, target);\n            let size;\n            switch (this.gridview.orientation) {\n                case Orientation.VERTICAL:\n                    size =\n                        referenceLocation.length % 2 == 0\n                            ? from.api.width\n                            : from.api.height;\n                    break;\n                case Orientation.HORIZONTAL:\n                    size =\n                        referenceLocation.length % 2 == 0\n                            ? from.api.height\n                            : from.api.width;\n                    break;\n            }\n            this.gridview.addView(from, size, dropLocation);\n        }\n        from.panels.forEach((panel) => {\n            this._onDidMovePanel.fire({ panel, from });\n        });\n    }\n    doSetGroupActive(group) {\n        super.doSetGroupActive(group);\n        const activePanel = this.activePanel;\n        if (!this._moving &&\n            activePanel !== this._onDidActivePanelChange.value) {\n            this._onDidActivePanelChange.fire(activePanel);\n        }\n    }\n    doSetGroupAndPanelActive(group) {\n        super.doSetGroupActive(group);\n        const activePanel = this.activePanel;\n        if (group &&\n            this.hasMaximizedGroup() &&\n            !this.isMaximizedGroup(group)) {\n            this.exitMaximizedGroup();\n        }\n        if (!this._moving &&\n            activePanel !== this._onDidActivePanelChange.value) {\n            this._onDidActivePanelChange.fire(activePanel);\n        }\n    }\n    getNextGroupId() {\n        let id = this.nextGroupId.next();\n        while (this._groups.has(id)) {\n            id = this.nextGroupId.next();\n        }\n        return id;\n    }\n    createGroup(options) {\n        if (!options) {\n            options = {};\n        }\n        let id = options === null || options === void 0 ? void 0 : options.id;\n        if (id && this._groups.has(options.id)) {\n            console.warn(`dockview: Duplicate group id ${options === null || options === void 0 ? void 0 : options.id}. reassigning group id to avoid errors`);\n            id = undefined;\n        }\n        if (!id) {\n            id = this.nextGroupId.next();\n            while (this._groups.has(id)) {\n                id = this.nextGroupId.next();\n            }\n        }\n        const view = new DockviewGroupPanel(this, id, options);\n        view.init({ params: {}, accessor: this });\n        if (!this._groups.has(view.id)) {\n            const disposable = new CompositeDisposable(view.model.onTabDragStart((event) => {\n                this._onWillDragPanel.fire(event);\n            }), view.model.onGroupDragStart((event) => {\n                this._onWillDragGroup.fire(event);\n            }), view.model.onMove((event) => {\n                const { groupId, itemId, target, index } = event;\n                this.moveGroupOrPanel({\n                    from: { groupId: groupId, panelId: itemId },\n                    to: {\n                        group: view,\n                        position: target,\n                        index,\n                    },\n                });\n            }), view.model.onDidDrop((event) => {\n                this._onDidDrop.fire(event);\n            }), view.model.onWillDrop((event) => {\n                this._onWillDrop.fire(event);\n            }), view.model.onWillShowOverlay((event) => {\n                if (this.options.disableDnd) {\n                    event.preventDefault();\n                    return;\n                }\n                this._onWillShowOverlay.fire(event);\n            }), view.model.onUnhandledDragOverEvent((event) => {\n                this._onUnhandledDragOverEvent.fire(event);\n            }), view.model.onDidAddPanel((event) => {\n                if (this._moving) {\n                    return;\n                }\n                this._onDidAddPanel.fire(event.panel);\n            }), view.model.onDidRemovePanel((event) => {\n                if (this._moving) {\n                    return;\n                }\n                this._onDidRemovePanel.fire(event.panel);\n            }), view.model.onDidActivePanelChange((event) => {\n                if (this._moving) {\n                    return;\n                }\n                if (event.panel !== this.activePanel) {\n                    return;\n                }\n                if (this._onDidActivePanelChange.value !== event.panel) {\n                    this._onDidActivePanelChange.fire(event.panel);\n                }\n            }), Event.any(view.model.onDidPanelTitleChange, view.model.onDidPanelParametersChange)(() => {\n                this._bufferOnDidLayoutChange.fire();\n            }));\n            this._groups.set(view.id, { value: view, disposable });\n        }\n        // TODO: must be called after the above listeners have been setup, not an ideal pattern\n        view.initialize();\n        return view;\n    }\n    createPanel(options, group) {\n        var _a, _b, _c;\n        const contentComponent = options.component;\n        const tabComponent = (_a = options.tabComponent) !== null && _a !== void 0 ? _a : this.options.defaultTabComponent;\n        const view = new DockviewPanelModel(this, options.id, contentComponent, tabComponent);\n        const panel = new DockviewPanel(options.id, contentComponent, tabComponent, this, this._api, group, view, {\n            renderer: options.renderer,\n            minimumWidth: options.minimumWidth,\n            minimumHeight: options.minimumHeight,\n            maximumWidth: options.maximumWidth,\n            maximumHeight: options.maximumHeight,\n        });\n        panel.init({\n            title: (_b = options.title) !== null && _b !== void 0 ? _b : options.id,\n            params: (_c = options === null || options === void 0 ? void 0 : options.params) !== null && _c !== void 0 ? _c : {},\n        });\n        return panel;\n    }\n    createGroupAtLocation(location, size) {\n        const group = this.createGroup();\n        this.doAddGroup(group, location, size);\n        return group;\n    }\n    findGroup(panel) {\n        var _a;\n        return (_a = Array.from(this._groups.values()).find((group) => group.value.model.containsPanel(panel))) === null || _a === void 0 ? void 0 : _a.value;\n    }\n    orientationAtLocation(location) {\n        const rootOrientation = this.gridview.orientation;\n        return location.length % 2 == 1\n            ? rootOrientation\n            : orthogonal(rootOrientation);\n    }\n}\n","export function createComponent(id, componentName, components = {}, frameworkComponents = {}, createFrameworkComponent, fallback) {\n    const Component = typeof componentName === 'string'\n        ? components[componentName]\n        : undefined;\n    const FrameworkComponent = typeof componentName === 'string'\n        ? frameworkComponents[componentName]\n        : undefined;\n    if (Component && FrameworkComponent) {\n        throw new Error(`Cannot create '${id}'. component '${componentName}' registered as both a component and frameworkComponent`);\n    }\n    if (FrameworkComponent) {\n        if (!createFrameworkComponent) {\n            throw new Error(`Cannot create '${id}' for framework component '${componentName}'. you must register a frameworkPanelWrapper to use framework components`);\n        }\n        return createFrameworkComponent.createComponent(id, componentName, FrameworkComponent);\n    }\n    if (!Component) {\n        if (fallback) {\n            return fallback();\n        }\n        throw new Error(`Cannot create '${id}', no component '${componentName}' provided`);\n    }\n    return new Component(id, componentName);\n}\n","import { getRelativeLocation, getGridLocation, } from './gridview';\nimport { tail, sequenceEquals } from '../array';\nimport { CompositeDisposable } from '../lifecycle';\nimport { BaseGrid, toTarget, } from './baseComponentGridview';\nimport { createComponent } from '../panel/componentFactory';\nimport { Emitter } from '../events';\nexport class GridviewComponent extends BaseGrid {\n    get orientation() {\n        return this.gridview.orientation;\n    }\n    set orientation(value) {\n        this.gridview.orientation = value;\n    }\n    get options() {\n        return this._options;\n    }\n    get deserializer() {\n        return this._deserializer;\n    }\n    set deserializer(value) {\n        this._deserializer = value;\n    }\n    constructor(parentElement, options) {\n        super(parentElement, {\n            proportionalLayout: options.proportionalLayout,\n            orientation: options.orientation,\n            styles: options.styles,\n            disableAutoResizing: options.disableAutoResizing,\n            className: options.className,\n        });\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._onDidRemoveGroup = new Emitter();\n        this.onDidRemoveGroup = this._onDidRemoveGroup.event;\n        this._onDidAddGroup = new Emitter();\n        this.onDidAddGroup = this._onDidAddGroup.event;\n        this._onDidActiveGroupChange = new Emitter();\n        this.onDidActiveGroupChange = this._onDidActiveGroupChange.event;\n        this._options = options;\n        this.addDisposables(this._onDidAddGroup, this._onDidRemoveGroup, this._onDidActiveGroupChange, this.onDidAdd((event) => {\n            this._onDidAddGroup.fire(event);\n        }), this.onDidRemove((event) => {\n            this._onDidRemoveGroup.fire(event);\n        }), this.onDidActiveChange((event) => {\n            this._onDidActiveGroupChange.fire(event);\n        }));\n        if (!this.options.components) {\n            this.options.components = {};\n        }\n        if (!this.options.frameworkComponents) {\n            this.options.frameworkComponents = {};\n        }\n    }\n    updateOptions(options) {\n        super.updateOptions(options);\n        const hasOrientationChanged = typeof options.orientation === 'string' &&\n            this.gridview.orientation !== options.orientation;\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        if (hasOrientationChanged) {\n            this.gridview.orientation = options.orientation;\n        }\n        this.layout(this.gridview.width, this.gridview.height, true);\n    }\n    removePanel(panel) {\n        this.removeGroup(panel);\n    }\n    /**\n     * Serialize the current state of the layout\n     *\n     * @returns A JSON respresentation of the layout\n     */\n    toJSON() {\n        var _a;\n        const data = this.gridview.serialize();\n        return {\n            grid: data,\n            activePanel: (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.id,\n        };\n    }\n    setVisible(panel, visible) {\n        this.gridview.setViewVisible(getGridLocation(panel.element), visible);\n    }\n    setActive(panel) {\n        this._groups.forEach((value, _key) => {\n            value.value.setActive(panel === value.value);\n        });\n    }\n    focus() {\n        var _a;\n        (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    fromJSON(serializedGridview) {\n        this.clear();\n        const { grid, activePanel } = serializedGridview;\n        try {\n            const queue = [];\n            // take note of the existing dimensions\n            const width = this.width;\n            const height = this.height;\n            this.gridview.deserialize(grid, {\n                fromJSON: (node) => {\n                    var _a, _b;\n                    const { data } = node;\n                    const view = createComponent(data.id, data.component, (_a = this.options.components) !== null && _a !== void 0 ? _a : {}, (_b = this.options.frameworkComponents) !== null && _b !== void 0 ? _b : {}, this.options.frameworkComponentFactory\n                        ? {\n                            createComponent: this.options.frameworkComponentFactory\n                                .createComponent,\n                        }\n                        : undefined);\n                    queue.push(() => view.init({\n                        params: data.params,\n                        minimumWidth: data.minimumWidth,\n                        maximumWidth: data.maximumWidth,\n                        minimumHeight: data.minimumHeight,\n                        maximumHeight: data.maximumHeight,\n                        priority: data.priority,\n                        snap: !!data.snap,\n                        accessor: this,\n                        isVisible: node.visible,\n                    }));\n                    this._onDidAddGroup.fire(view);\n                    this.registerPanel(view);\n                    return view;\n                },\n            });\n            this.layout(width, height, true);\n            queue.forEach((f) => f());\n            if (typeof activePanel === 'string') {\n                const panel = this.getPanel(activePanel);\n                if (panel) {\n                    this.doSetGroupActive(panel);\n                }\n            }\n        }\n        catch (err) {\n            /**\n             * To remove a group we cannot call this.removeGroup(...) since this makes assumptions about\n             * the underlying HTMLElement existing in the Gridview.\n             */\n            for (const group of this.groups) {\n                group.dispose();\n                this._groups.delete(group.id);\n                this._onDidRemoveGroup.fire(group);\n            }\n            // fires clean-up events and clears the underlying HTML gridview.\n            this.clear();\n            /**\n             * even though we have cleaned-up we still want to inform the caller of their error\n             * and we'll do this through re-throwing the original error since afterall you would\n             * expect trying to load a corrupted layout to result in an error and not silently fail...\n             */\n            throw err;\n        }\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        const hasActiveGroup = this.activeGroup;\n        const groups = Array.from(this._groups.values()); // reassign since group panels will mutate\n        for (const group of groups) {\n            group.disposable.dispose();\n            this.doRemoveGroup(group.value, { skipActive: true });\n        }\n        if (hasActiveGroup) {\n            this.doSetGroupActive(undefined);\n        }\n        this.gridview.clear();\n    }\n    movePanel(panel, options) {\n        var _a;\n        let relativeLocation;\n        const removedPanel = this.gridview.remove(panel);\n        const referenceGroup = (_a = this._groups.get(options.reference)) === null || _a === void 0 ? void 0 : _a.value;\n        if (!referenceGroup) {\n            throw new Error(`reference group ${options.reference} does not exist`);\n        }\n        const target = toTarget(options.direction);\n        if (target === 'center') {\n            throw new Error(`${target} not supported as an option`);\n        }\n        else {\n            const location = getGridLocation(referenceGroup.element);\n            relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n        }\n        this.doAddGroup(removedPanel, relativeLocation, options.size);\n    }\n    addPanel(options) {\n        var _a, _b, _c, _d, _e, _f;\n        let relativeLocation = (_a = options.location) !== null && _a !== void 0 ? _a : [0];\n        if ((_b = options.position) === null || _b === void 0 ? void 0 : _b.referencePanel) {\n            const referenceGroup = (_c = this._groups.get(options.position.referencePanel)) === null || _c === void 0 ? void 0 : _c.value;\n            if (!referenceGroup) {\n                throw new Error(`reference group ${options.position.referencePanel} does not exist`);\n            }\n            const target = toTarget(options.position.direction);\n            if (target === 'center') {\n                throw new Error(`${target} not supported as an option`);\n            }\n            else {\n                const location = getGridLocation(referenceGroup.element);\n                relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n            }\n        }\n        const view = createComponent(options.id, options.component, (_d = this.options.components) !== null && _d !== void 0 ? _d : {}, (_e = this.options.frameworkComponents) !== null && _e !== void 0 ? _e : {}, this.options.frameworkComponentFactory\n            ? {\n                createComponent: this.options.frameworkComponentFactory\n                    .createComponent,\n            }\n            : undefined);\n        view.init({\n            params: (_f = options.params) !== null && _f !== void 0 ? _f : {},\n            minimumWidth: options.minimumWidth,\n            maximumWidth: options.maximumWidth,\n            minimumHeight: options.minimumHeight,\n            maximumHeight: options.maximumHeight,\n            priority: options.priority,\n            snap: !!options.snap,\n            accessor: this,\n            isVisible: true,\n        });\n        this.registerPanel(view);\n        this.doAddGroup(view, relativeLocation, options.size);\n        this.doSetGroupActive(view);\n        return view;\n    }\n    registerPanel(panel) {\n        const disposable = new CompositeDisposable(panel.api.onDidFocusChange((event) => {\n            if (!event.isFocused) {\n                return;\n            }\n            this._groups.forEach((groupItem) => {\n                const group = groupItem.value;\n                if (group !== panel) {\n                    group.setActive(false);\n                }\n                else {\n                    group.setActive(true);\n                }\n            });\n        }));\n        this._groups.set(panel.id, {\n            value: panel,\n            disposable,\n        });\n    }\n    moveGroup(referenceGroup, groupId, target) {\n        const sourceGroup = this.getPanel(groupId);\n        if (!sourceGroup) {\n            throw new Error('invalid operation');\n        }\n        const referenceLocation = getGridLocation(referenceGroup.element);\n        const targetLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, target);\n        const [targetParentLocation, to] = tail(targetLocation);\n        const sourceLocation = getGridLocation(sourceGroup.element);\n        const [sourceParentLocation, from] = tail(sourceLocation);\n        if (sequenceEquals(sourceParentLocation, targetParentLocation)) {\n            // special case when 'swapping' two views within same grid location\n            // if a group has one tab - we are essentially moving the 'group'\n            // which is equivalent to swapping two views in this case\n            this.gridview.moveView(sourceParentLocation, from, to);\n            return;\n        }\n        // source group will become empty so delete the group\n        const targetGroup = this.doRemoveGroup(sourceGroup, {\n            skipActive: true,\n            skipDispose: true,\n        });\n        // after deleting the group we need to re-evaulate the ref location\n        const updatedReferenceLocation = getGridLocation(referenceGroup.element);\n        const location = getRelativeLocation(this.gridview.orientation, updatedReferenceLocation, target);\n        this.doAddGroup(targetGroup, location);\n    }\n    removeGroup(group) {\n        super.removeGroup(group);\n    }\n    dispose() {\n        super.dispose();\n        this._onDidLayoutfromJSON.dispose();\n    }\n}\n","import { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nimport { Orientation, Sizing, Splitview, } from './splitview';\nimport { Emitter } from '../events';\nimport { createComponent } from '../panel/componentFactory';\nimport { Resizable } from '../resizable';\nimport { Classnames } from '../dom';\n/**\n * A high-level implementation of splitview that works using 'panels'\n */\nexport class SplitviewComponent extends Resizable {\n    get panels() {\n        return this.splitview.getViews();\n    }\n    get options() {\n        return this._options;\n    }\n    get length() {\n        return this._panels.size;\n    }\n    get orientation() {\n        return this.splitview.orientation;\n    }\n    get splitview() {\n        return this._splitview;\n    }\n    set splitview(value) {\n        this._splitview = value;\n        this._splitviewChangeDisposable.value = new CompositeDisposable(this._splitview.onDidSashEnd(() => {\n            this._onDidLayoutChange.fire(undefined);\n        }), this._splitview.onDidAddView((e) => this._onDidAddView.fire(e)), this._splitview.onDidRemoveView((e) => this._onDidRemoveView.fire(e)));\n    }\n    get minimumSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumSize() {\n        return this.splitview.maximumSize;\n    }\n    get height() {\n        return this.splitview.orientation === Orientation.HORIZONTAL\n            ? this.splitview.orthogonalSize\n            : this.splitview.size;\n    }\n    get width() {\n        return this.splitview.orientation === Orientation.HORIZONTAL\n            ? this.splitview.size\n            : this.splitview.orthogonalSize;\n    }\n    constructor(parentElement, options) {\n        var _a;\n        super(parentElement, options.disableAutoResizing);\n        this._splitviewChangeDisposable = new MutableDisposable();\n        this._panels = new Map();\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        this._onDidLayoutChange = new Emitter();\n        this.onDidLayoutChange = this._onDidLayoutChange.event;\n        this._classNames = new Classnames(this.element);\n        this._classNames.setClassNames((_a = options.className) !== null && _a !== void 0 ? _a : '');\n        this._options = options;\n        if (!options.components) {\n            options.components = {};\n        }\n        if (!options.frameworkComponents) {\n            options.frameworkComponents = {};\n        }\n        this.splitview = new Splitview(this.element, options);\n        this.addDisposables(this._onDidAddView, this._onDidLayoutfromJSON, this._onDidRemoveView, this._onDidLayoutChange);\n    }\n    updateOptions(options) {\n        var _a, _b;\n        if ('className' in options) {\n            this._classNames.setClassNames((_a = options.className) !== null && _a !== void 0 ? _a : '');\n        }\n        if ('disableResizing' in options) {\n            this.disableResizing = (_b = options.disableAutoResizing) !== null && _b !== void 0 ? _b : false;\n        }\n        if (typeof options.orientation === 'string') {\n            this.splitview.orientation = options.orientation;\n        }\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        this.splitview.layout(this.splitview.size, this.splitview.orthogonalSize);\n    }\n    focus() {\n        var _a;\n        (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    movePanel(from, to) {\n        this.splitview.moveView(from, to);\n    }\n    setVisible(panel, visible) {\n        const index = this.panels.indexOf(panel);\n        this.splitview.setViewVisible(index, visible);\n    }\n    setActive(panel, skipFocus) {\n        this._activePanel = panel;\n        this.panels\n            .filter((v) => v !== panel)\n            .forEach((v) => {\n            v.api._onDidActiveChange.fire({ isActive: false });\n            if (!skipFocus) {\n                v.focus();\n            }\n        });\n        panel.api._onDidActiveChange.fire({ isActive: true });\n        if (!skipFocus) {\n            panel.focus();\n        }\n    }\n    removePanel(panel, sizing) {\n        const item = this._panels.get(panel.id);\n        if (!item) {\n            throw new Error(`unknown splitview panel ${panel.id}`);\n        }\n        item.dispose();\n        this._panels.delete(panel.id);\n        const index = this.panels.findIndex((_) => _ === panel);\n        const removedView = this.splitview.removeView(index, sizing);\n        removedView.dispose();\n        const panels = this.panels;\n        if (panels.length > 0) {\n            this.setActive(panels[panels.length - 1]);\n        }\n    }\n    getPanel(id) {\n        return this.panels.find((view) => view.id === id);\n    }\n    addPanel(options) {\n        var _a, _b, _c;\n        if (this._panels.has(options.id)) {\n            throw new Error(`panel ${options.id} already exists`);\n        }\n        const view = createComponent(options.id, options.component, (_a = this.options.components) !== null && _a !== void 0 ? _a : {}, (_b = this.options.frameworkComponents) !== null && _b !== void 0 ? _b : {}, this.options.frameworkWrapper\n            ? {\n                createComponent: this.options.frameworkWrapper.createComponent,\n            }\n            : undefined);\n        view.orientation = this.splitview.orientation;\n        view.init({\n            params: (_c = options.params) !== null && _c !== void 0 ? _c : {},\n            minimumSize: options.minimumSize,\n            maximumSize: options.maximumSize,\n            snap: options.snap,\n            priority: options.priority,\n            accessor: this,\n        });\n        const size = typeof options.size === 'number' ? options.size : Sizing.Distribute;\n        const index = typeof options.index === 'number' ? options.index : undefined;\n        this.splitview.addView(view, size, index);\n        this.doAddView(view);\n        this.setActive(view);\n        return view;\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.splitview.orientation === Orientation.HORIZONTAL\n            ? [width, height]\n            : [height, width];\n        this.splitview.layout(size, orthogonalSize);\n    }\n    doAddView(view) {\n        const disposable = view.api.onDidFocusChange((event) => {\n            if (!event.isFocused) {\n                return;\n            }\n            this.setActive(view, true);\n        });\n        this._panels.set(view.id, disposable);\n    }\n    toJSON() {\n        var _a;\n        const views = this.splitview\n            .getViews()\n            .map((view, i) => {\n            const size = this.splitview.getViewSize(i);\n            return {\n                size,\n                data: view.toJSON(),\n                snap: !!view.snap,\n                priority: view.priority,\n            };\n        });\n        return {\n            views,\n            activeView: (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.id,\n            size: this.splitview.size,\n            orientation: this.splitview.orientation,\n        };\n    }\n    fromJSON(serializedSplitview) {\n        this.clear();\n        const { views, orientation, size, activeView } = serializedSplitview;\n        const queue = [];\n        // take note of the existing dimensions\n        const width = this.width;\n        const height = this.height;\n        this.splitview = new Splitview(this.element, {\n            orientation,\n            proportionalLayout: this.options.proportionalLayout,\n            descriptor: {\n                size,\n                views: views.map((view) => {\n                    var _a, _b;\n                    const data = view.data;\n                    if (this._panels.has(data.id)) {\n                        throw new Error(`panel ${data.id} already exists`);\n                    }\n                    const panel = createComponent(data.id, data.component, (_a = this.options.components) !== null && _a !== void 0 ? _a : {}, (_b = this.options.frameworkComponents) !== null && _b !== void 0 ? _b : {}, this.options.frameworkWrapper\n                        ? {\n                            createComponent: this.options.frameworkWrapper\n                                .createComponent,\n                        }\n                        : undefined);\n                    queue.push(() => {\n                        var _a;\n                        panel.init({\n                            params: (_a = data.params) !== null && _a !== void 0 ? _a : {},\n                            minimumSize: data.minimumSize,\n                            maximumSize: data.maximumSize,\n                            snap: view.snap,\n                            priority: view.priority,\n                            accessor: this,\n                        });\n                    });\n                    panel.orientation = orientation;\n                    this.doAddView(panel);\n                    setTimeout(() => {\n                        // the original onDidAddView events are missed since they are fired before we can subcribe to them\n                        this._onDidAddView.fire(panel);\n                    }, 0);\n                    return { size: view.size, view: panel };\n                }),\n            },\n        });\n        this.layout(width, height);\n        queue.forEach((f) => f());\n        if (typeof activeView === 'string') {\n            const panel = this.getPanel(activeView);\n            if (panel) {\n                this.setActive(panel);\n            }\n        }\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        for (const disposable of this._panels.values()) {\n            disposable.dispose();\n        }\n        this._panels.clear();\n        while (this.splitview.length > 0) {\n            const view = this.splitview.removeView(0, Sizing.Distribute, true);\n            view.dispose();\n        }\n    }\n    dispose() {\n        for (const disposable of this._panels.values()) {\n            disposable.dispose();\n        }\n        this._panels.clear();\n        const views = this.splitview.getViews();\n        this._splitviewChangeDisposable.dispose();\n        this.splitview.dispose();\n        for (const view of views) {\n            view.dispose();\n        }\n        super.dispose();\n    }\n}\n","import { addDisposableListener } from '../events';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nimport { toggleClass } from '../dom';\nimport { createChevronRightButton, createExpandMoreButton } from '../svg';\nexport class DefaultHeader extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor() {\n        super();\n        this._expandedIcon = createExpandMoreButton();\n        this._collapsedIcon = createChevronRightButton();\n        this.disposable = new MutableDisposable();\n        this.apiRef = {\n            api: null,\n        };\n        this._element = document.createElement('div');\n        this.element.className = 'dv-default-header';\n        this._content = document.createElement('span');\n        this._expander = document.createElement('div');\n        this._expander.className = 'dv-pane-header-icon';\n        this.element.appendChild(this._expander);\n        this.element.appendChild(this._content);\n        this.addDisposables(addDisposableListener(this._element, 'click', () => {\n            var _a;\n            (_a = this.apiRef.api) === null || _a === void 0 ? void 0 : _a.setExpanded(!this.apiRef.api.isExpanded);\n        }));\n    }\n    init(params) {\n        this.apiRef.api = params.api;\n        this._content.textContent = params.title;\n        this.updateIcon();\n        this.disposable.value = params.api.onDidExpansionChange(() => {\n            this.updateIcon();\n        });\n    }\n    updateIcon() {\n        var _a;\n        const isExpanded = !!((_a = this.apiRef.api) === null || _a === void 0 ? void 0 : _a.isExpanded);\n        toggleClass(this._expander, 'collapsed', !isExpanded);\n        if (isExpanded) {\n            if (this._expander.contains(this._collapsedIcon)) {\n                this._collapsedIcon.remove();\n            }\n            if (!this._expander.contains(this._expandedIcon)) {\n                this._expander.appendChild(this._expandedIcon);\n            }\n        }\n        else {\n            if (this._expander.contains(this._expandedIcon)) {\n                this._expandedIcon.remove();\n            }\n            if (!this._expander.contains(this._collapsedIcon)) {\n                this._expander.appendChild(this._collapsedIcon);\n            }\n        }\n    }\n    update(_params) {\n        //\n    }\n    dispose() {\n        this.disposable.dispose();\n        super.dispose();\n    }\n}\n","import { PaneviewApi } from '../api/component.api';\nimport { createComponent } from '../panel/componentFactory';\nimport { Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nimport { Orientation, Sizing } from '../splitview/splitview';\nimport { Paneview } from './paneview';\nimport { DraggablePaneviewPanel, } from './draggablePaneviewPanel';\nimport { DefaultHeader } from './defaultPaneviewHeader';\nimport { sequentialNumberGenerator } from '../math';\nimport { Resizable } from '../resizable';\nimport { Classnames } from '../dom';\nconst nextLayoutId = sequentialNumberGenerator();\nexport class PaneFramework extends DraggablePaneviewPanel {\n    constructor(options) {\n        super(options.accessor, options.id, options.component, options.headerComponent, options.orientation, options.isExpanded, options.disableDnd);\n        this.options = options;\n    }\n    getBodyComponent() {\n        return this.options.body;\n    }\n    getHeaderComponent() {\n        return this.options.header;\n    }\n}\nexport class PaneviewComponent extends Resizable {\n    get id() {\n        return this._id;\n    }\n    get panels() {\n        return this.paneview.getPanes();\n    }\n    set paneview(value) {\n        this._paneview = value;\n        this._disposable.value = new CompositeDisposable(this._paneview.onDidChange(() => {\n            this._onDidLayoutChange.fire(undefined);\n        }), this._paneview.onDidAddView((e) => this._onDidAddView.fire(e)), this._paneview.onDidRemoveView((e) => this._onDidRemoveView.fire(e)));\n    }\n    get paneview() {\n        return this._paneview;\n    }\n    get minimumSize() {\n        return this.paneview.minimumSize;\n    }\n    get maximumSize() {\n        return this.paneview.maximumSize;\n    }\n    get height() {\n        return this.paneview.orientation === Orientation.HORIZONTAL\n            ? this.paneview.orthogonalSize\n            : this.paneview.size;\n    }\n    get width() {\n        return this.paneview.orientation === Orientation.HORIZONTAL\n            ? this.paneview.size\n            : this.paneview.orthogonalSize;\n    }\n    get options() {\n        return this._options;\n    }\n    constructor(parentElement, options) {\n        var _a;\n        super(parentElement, options.disableAutoResizing);\n        this._id = nextLayoutId.next();\n        this._disposable = new MutableDisposable();\n        this._viewDisposables = new Map();\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._onDidLayoutChange = new Emitter();\n        this.onDidLayoutChange = this._onDidLayoutChange.event;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        this.addDisposables(this._onDidLayoutChange, this._onDidLayoutfromJSON, this._onDidDrop, this._onDidAddView, this._onDidRemoveView);\n        this._classNames = new Classnames(this.element);\n        this._classNames.setClassNames((_a = options.className) !== null && _a !== void 0 ? _a : '');\n        this._options = options;\n        if (!options.components) {\n            options.components = {};\n        }\n        if (!options.frameworkComponents) {\n            options.frameworkComponents = {};\n        }\n        this.paneview = new Paneview(this.element, {\n            // only allow paneview in the vertical orientation for now\n            orientation: Orientation.VERTICAL,\n        });\n        this.addDisposables(this._disposable);\n    }\n    setVisible(panel, visible) {\n        const index = this.panels.indexOf(panel);\n        this.paneview.setViewVisible(index, visible);\n    }\n    focus() {\n        //noop\n    }\n    updateOptions(options) {\n        var _a, _b;\n        if ('className' in options) {\n            this._classNames.setClassNames((_a = options.className) !== null && _a !== void 0 ? _a : '');\n        }\n        if ('disableResizing' in options) {\n            this.disableResizing = (_b = options.disableAutoResizing) !== null && _b !== void 0 ? _b : false;\n        }\n        this._options = Object.assign(Object.assign({}, this.options), options);\n    }\n    addPanel(options) {\n        var _a, _b, _c, _d;\n        const body = createComponent(options.id, options.component, (_a = this.options.components) !== null && _a !== void 0 ? _a : {}, (_b = this.options.frameworkComponents) !== null && _b !== void 0 ? _b : {}, this.options.frameworkWrapper\n            ? {\n                createComponent: this.options.frameworkWrapper.body.createComponent,\n            }\n            : undefined);\n        let header;\n        if (options.headerComponent) {\n            header = createComponent(options.id, options.headerComponent, (_c = this.options.headerComponents) !== null && _c !== void 0 ? _c : {}, this.options.headerframeworkComponents, this.options.frameworkWrapper\n                ? {\n                    createComponent: this.options.frameworkWrapper.header\n                        .createComponent,\n                }\n                : undefined);\n        }\n        else {\n            header = new DefaultHeader();\n        }\n        const view = new PaneFramework({\n            id: options.id,\n            component: options.component,\n            headerComponent: options.headerComponent,\n            header,\n            body,\n            orientation: Orientation.VERTICAL,\n            isExpanded: !!options.isExpanded,\n            disableDnd: !!this.options.disableDnd,\n            accessor: this,\n        });\n        this.doAddPanel(view);\n        const size = typeof options.size === 'number' ? options.size : Sizing.Distribute;\n        const index = typeof options.index === 'number' ? options.index : undefined;\n        view.init({\n            params: (_d = options.params) !== null && _d !== void 0 ? _d : {},\n            minimumBodySize: options.minimumBodySize,\n            maximumBodySize: options.maximumBodySize,\n            isExpanded: options.isExpanded,\n            title: options.title,\n            containerApi: new PaneviewApi(this),\n            accessor: this,\n        });\n        this.paneview.addPane(view, size, index);\n        view.orientation = this.paneview.orientation;\n        return view;\n    }\n    removePanel(panel) {\n        const views = this.panels;\n        const index = views.findIndex((_) => _ === panel);\n        this.paneview.removePane(index);\n        this.doRemovePanel(panel);\n    }\n    movePanel(from, to) {\n        this.paneview.moveView(from, to);\n    }\n    getPanel(id) {\n        return this.panels.find((view) => view.id === id);\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.paneview.orientation === Orientation.HORIZONTAL\n            ? [width, height]\n            : [height, width];\n        this.paneview.layout(size, orthogonalSize);\n    }\n    toJSON() {\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ||\n            value === Number.POSITIVE_INFINITY\n            ? undefined\n            : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        const views = this.paneview\n            .getPanes()\n            .map((view, i) => {\n            const size = this.paneview.getViewSize(i);\n            return {\n                size,\n                data: view.toJSON(),\n                minimumSize: minimum(view.minimumBodySize),\n                maximumSize: maximum(view.maximumBodySize),\n                expanded: view.isExpanded(),\n            };\n        });\n        return {\n            views,\n            size: this.paneview.size,\n        };\n    }\n    fromJSON(serializedPaneview) {\n        this.clear();\n        const { views, size } = serializedPaneview;\n        const queue = [];\n        // take note of the existing dimensions\n        const width = this.width;\n        const height = this.height;\n        this.paneview = new Paneview(this.element, {\n            orientation: Orientation.VERTICAL,\n            descriptor: {\n                size,\n                views: views.map((view) => {\n                    var _a, _b, _c, _d;\n                    const data = view.data;\n                    const body = createComponent(data.id, data.component, (_a = this.options.components) !== null && _a !== void 0 ? _a : {}, (_b = this.options.frameworkComponents) !== null && _b !== void 0 ? _b : {}, this.options.frameworkWrapper\n                        ? {\n                            createComponent: this.options.frameworkWrapper.body\n                                .createComponent,\n                        }\n                        : undefined);\n                    let header;\n                    if (data.headerComponent) {\n                        header = createComponent(data.id, data.headerComponent, (_c = this.options.headerComponents) !== null && _c !== void 0 ? _c : {}, (_d = this.options.headerframeworkComponents) !== null && _d !== void 0 ? _d : {}, this.options.frameworkWrapper\n                            ? {\n                                createComponent: this.options.frameworkWrapper.header\n                                    .createComponent,\n                            }\n                            : undefined);\n                    }\n                    else {\n                        header = new DefaultHeader();\n                    }\n                    const panel = new PaneFramework({\n                        id: data.id,\n                        component: data.component,\n                        headerComponent: data.headerComponent,\n                        header,\n                        body,\n                        orientation: Orientation.VERTICAL,\n                        isExpanded: !!view.expanded,\n                        disableDnd: !!this.options.disableDnd,\n                        accessor: this,\n                    });\n                    this.doAddPanel(panel);\n                    queue.push(() => {\n                        var _a;\n                        panel.init({\n                            params: (_a = data.params) !== null && _a !== void 0 ? _a : {},\n                            minimumBodySize: view.minimumSize,\n                            maximumBodySize: view.maximumSize,\n                            title: data.title,\n                            isExpanded: !!view.expanded,\n                            containerApi: new PaneviewApi(this),\n                            accessor: this,\n                        });\n                        panel.orientation = this.paneview.orientation;\n                    });\n                    setTimeout(() => {\n                        // the original onDidAddView events are missed since they are fired before we can subcribe to them\n                        this._onDidAddView.fire(panel);\n                    }, 0);\n                    return { size: view.size, view: panel };\n                }),\n            },\n        });\n        this.layout(width, height);\n        queue.forEach((f) => f());\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        for (const [_, value] of this._viewDisposables.entries()) {\n            value.dispose();\n        }\n        this._viewDisposables.clear();\n        this.paneview.dispose();\n    }\n    doAddPanel(panel) {\n        const disposable = panel.onDidDrop((event) => {\n            this._onDidDrop.fire(event);\n        });\n        this._viewDisposables.set(panel.id, disposable);\n    }\n    doRemovePanel(panel) {\n        const disposable = this._viewDisposables.get(panel.id);\n        if (disposable) {\n            disposable.dispose();\n            this._viewDisposables.delete(panel.id);\n        }\n    }\n    dispose() {\n        super.dispose();\n        for (const [_, value] of this._viewDisposables.entries()) {\n            value.dispose();\n        }\n        this._viewDisposables.clear();\n        this.paneview.dispose();\n    }\n}\n","import { BasePanelView, } from '../gridview/basePanelView';\nimport { SplitviewPanelApiImpl } from '../api/splitviewPanelApi';\nimport { Orientation } from './splitview';\nimport { Emitter } from '../events';\nexport class SplitviewPanel extends BasePanelView {\n    get priority() {\n        return this._priority;\n    }\n    set orientation(value) {\n        this._orientation = value;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    get minimumSize() {\n        const size = typeof this._minimumSize === 'function'\n            ? this._minimumSize()\n            : this._minimumSize;\n        if (size !== this._evaluatedMinimumSize) {\n            this._evaluatedMinimumSize = size;\n            this.updateConstraints();\n        }\n        return size;\n    }\n    get maximumSize() {\n        const size = typeof this._maximumSize === 'function'\n            ? this._maximumSize()\n            : this._maximumSize;\n        if (size !== this._evaluatedMaximumSize) {\n            this._evaluatedMaximumSize = size;\n            this.updateConstraints();\n        }\n        return size;\n    }\n    get snap() {\n        return this._snap;\n    }\n    constructor(id, componentName) {\n        super(id, componentName, new SplitviewPanelApiImpl(id, componentName));\n        this._evaluatedMinimumSize = 0;\n        this._evaluatedMaximumSize = Number.POSITIVE_INFINITY;\n        this._minimumSize = 0;\n        this._maximumSize = Number.POSITIVE_INFINITY;\n        this._snap = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this.api.initialize(this);\n        this.addDisposables(this._onDidChange, this.api.onWillVisibilityChange((event) => {\n            const { isVisible } = event;\n            const { accessor } = this._params;\n            accessor.setVisible(this, isVisible);\n        }), this.api.onActiveChange(() => {\n            const { accessor } = this._params;\n            accessor.setActive(this);\n        }), this.api.onDidConstraintsChangeInternal((event) => {\n            if (typeof event.minimumSize === 'number' ||\n                typeof event.minimumSize === 'function') {\n                this._minimumSize = event.minimumSize;\n            }\n            if (typeof event.maximumSize === 'number' ||\n                typeof event.maximumSize === 'function') {\n                this._maximumSize = event.maximumSize;\n            }\n            this.updateConstraints();\n        }), this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire({ size: event.size });\n        }));\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    layout(size, orthogonalSize) {\n        const [width, height] = this.orientation === Orientation.HORIZONTAL\n            ? [size, orthogonalSize]\n            : [orthogonalSize, size];\n        super.layout(width, height);\n    }\n    init(parameters) {\n        super.init(parameters);\n        this._priority = parameters.priority;\n        if (parameters.minimumSize) {\n            this._minimumSize = parameters.minimumSize;\n        }\n        if (parameters.maximumSize) {\n            this._maximumSize = parameters.maximumSize;\n        }\n        if (parameters.snap) {\n            this._snap = parameters.snap;\n        }\n    }\n    toJSON() {\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ||\n            value === Number.POSITIVE_INFINITY\n            ? undefined\n            : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        return Object.assign(Object.assign({}, super.toJSON()), { minimumSize: minimum(this.minimumSize), maximumSize: maximum(this.maximumSize) });\n    }\n    updateConstraints() {\n        this.api._onDidConstraintsChange.fire({\n            maximumSize: this._evaluatedMaximumSize,\n            minimumSize: this._evaluatedMinimumSize,\n        });\n    }\n}\n","import { GridviewApi, PaneviewApi, SplitviewApi, } from '../api/component.api';\nimport { DockviewComponent } from '../dockview/dockviewComponent';\nimport { GridviewComponent } from '../gridview/gridviewComponent';\nimport { PaneviewComponent } from '../paneview/paneviewComponent';\nimport { SplitviewComponent } from '../splitview/splitviewComponent';\nexport function createDockview(element, options) {\n    const component = new DockviewComponent(element, options);\n    return component.api;\n}\nexport function createSplitview(element, options) {\n    const component = new SplitviewComponent(element, options);\n    return new SplitviewApi(component);\n}\nexport function createGridview(element, options) {\n    const component = new GridviewComponent(element, options);\n    return new GridviewApi(component);\n}\nexport function createPaneview(element, options) {\n    const component = new PaneviewComponent(element, options);\n    return new PaneviewApi(component);\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { DockviewDisposable, } from 'dockview-core';\n/**\n * This component is intended to interface between vanilla-js and React hence we need to be\n * creative in how we update props.\n * A ref of the component is exposed with an update method; which when called stores the props\n * as a ref within this component and forcefully triggers a re-render of the component using\n * the ref of props we just set on the renderered component as the props passed to the inner\n * component\n */\nconst ReactComponentBridge = (props, ref) => {\n    const [_, triggerRender] = React.useState();\n    const _props = React.useRef(props.componentProps);\n    React.useImperativeHandle(ref, () => ({\n        update: (componentProps) => {\n            _props.current = Object.assign(Object.assign({}, _props.current), componentProps);\n            /**\n             * setting a arbitrary piece of state within this component will\n             * trigger a re-render.\n             * we use this rather than updating through a prop since we can\n             * pass a ref into the vanilla-js world.\n             */\n            triggerRender(Date.now());\n        },\n    }), []);\n    return React.createElement(props.component, _props.current);\n};\nReactComponentBridge.displayName = 'DockviewReactJsBridge';\n/**\n * Since we are storing the React.Portal references in a rendered array they\n * require a key property like any other React element rendered in an array\n * to prevent excessive re-rendering\n */\nconst uniquePortalKeyGenerator = (() => {\n    let value = 1;\n    return { next: () => `dockview_react_portal_key_${(value++).toString()}` };\n})();\nexport const ReactPartContext = React.createContext({});\nexport class ReactPart {\n    constructor(parent, portalStore, component, parameters, context) {\n        this.parent = parent;\n        this.portalStore = portalStore;\n        this.component = component;\n        this.parameters = parameters;\n        this.context = context;\n        this._initialProps = {};\n        this.disposed = false;\n        this.createPortal();\n    }\n    update(props) {\n        if (this.disposed) {\n            throw new Error('invalid operation: resource is already disposed');\n        }\n        if (!this.componentInstance) {\n            // if the component is yet to be mounted store the props\n            this._initialProps = Object.assign(Object.assign({}, this._initialProps), props);\n        }\n        else {\n            this.componentInstance.update(props);\n        }\n    }\n    createPortal() {\n        if (this.disposed) {\n            throw new Error('invalid operation: resource is already disposed');\n        }\n        if (!isReactComponent(this.component)) {\n            /**\n             * we know this isn't a React.FunctionComponent so throw an error here.\n             * if we do not intercept then React library will throw a very obsure error\n             * for the same reason... at least at this point we will emit a sensible stacktrace.\n             */\n            throw new Error('Dockview: Only React.memo(...), React.ForwardRef(...) and functional components are accepted as components');\n        }\n        const bridgeComponent = React.createElement(React.forwardRef(ReactComponentBridge), {\n            component: this\n                .component,\n            componentProps: this.parameters,\n            ref: (element) => {\n                this.componentInstance = element;\n                if (Object.keys(this._initialProps).length > 0) {\n                    this.componentInstance.update(this._initialProps);\n                    this._initialProps = {}; // don't keep a reference to the users object once no longer required\n                }\n            },\n        });\n        const node = this.context\n            ? React.createElement(ReactPartContext.Provider, { value: this.context }, bridgeComponent)\n            : bridgeComponent;\n        const portal = ReactDOM.createPortal(node, this.parent, uniquePortalKeyGenerator.next());\n        this.ref = {\n            portal,\n            disposable: this.portalStore.addPortal(portal),\n        };\n    }\n    dispose() {\n        var _a;\n        (_a = this.ref) === null || _a === void 0 ? void 0 : _a.disposable.dispose();\n        this.disposed = true;\n    }\n}\n/**\n * A React Hook that returns an array of portals to be rendered by the user of this hook\n * and a disposable function to add a portal. Calling dispose removes this portal from the\n * portal array\n */\nexport const usePortalsLifecycle = () => {\n    const [portals, setPortals] = React.useState([]);\n    React.useDebugValue(`Portal count: ${portals.length}`);\n    const addPortal = React.useCallback((portal) => {\n        setPortals((existingPortals) => [...existingPortals, portal]);\n        let disposed = false;\n        return DockviewDisposable.from(() => {\n            if (disposed) {\n                throw new Error('invalid operation: resource already disposed');\n            }\n            disposed = true;\n            setPortals((existingPortals) => existingPortals.filter((p) => p !== portal));\n        });\n    }, []);\n    return [portals, addPortal];\n};\nexport function isReactComponent(component) {\n    /**\n     * Yes, we could use \"react-is\" but that would introduce an unwanted peer dependency\n     * so for now we will check in a rather crude fashion...\n     */\n    return (typeof component === 'function' /** Functional Componnts */ ||\n        !!(component === null || component === void 0 ? void 0 : component.$$typeof) /** React.memo(...) Components */);\n}\n","import { ReactPart } from '../react';\nimport { DockviewEmitter, } from 'dockview-core';\nexport class ReactPanelContentPart {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._onDidFocus = new DockviewEmitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new DockviewEmitter();\n        this.onDidBlur = this._onDidBlur.event;\n        this._element = document.createElement('div');\n        this._element.className = 'dockview-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    focus() {\n        // TODO\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n        });\n    }\n    update(event) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update({ params: event.params });\n    }\n    layout(_width, _height) {\n        // noop\n    }\n    dispose() {\n        var _a;\n        this._onDidFocus.dispose();\n        this._onDidBlur.dispose();\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { ReactPart } from '../react';\nexport class ReactPanelHeaderPart {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._element = document.createElement('div');\n        this._element.className = 'dockview-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    focus() {\n        //noop\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n        });\n    }\n    update(event) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update({ params: event.params });\n    }\n    layout(_width, _height) {\n        // noop - retrieval from api\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { ReactPart } from '../react';\nexport class ReactWatermarkPart {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._element = document.createElement('div');\n        this._element.className = 'dockview-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            group: parameters.group,\n            containerApi: parameters.containerApi,\n        });\n    }\n    focus() {\n        // noop\n    }\n    update(params) {\n        var _a, _b, _c;\n        if (this.parameters) {\n            this.parameters.params = params.params;\n        }\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update({ params: (_c = (_b = this.parameters) === null || _b === void 0 ? void 0 : _b.params) !== null && _c !== void 0 ? _c : {} });\n    }\n    layout(_width, _height) {\n        // noop - retrieval from api\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { ReactPart } from '../react';\nimport { DockviewCompositeDisposable, DockviewMutableDisposable, } from 'dockview-core';\nexport class ReactHeaderActionsRendererPart {\n    get element() {\n        return this._element;\n    }\n    get part() {\n        return this._part;\n    }\n    constructor(component, reactPortalStore, _group) {\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._group = _group;\n        this.mutableDisposable = new DockviewMutableDisposable();\n        this._element = document.createElement('div');\n        this._element.className = 'dockview-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    init(parameters) {\n        this.mutableDisposable.value = new DockviewCompositeDisposable(this._group.model.onDidAddPanel(() => {\n            this.updatePanels();\n        }), this._group.model.onDidRemovePanel(() => {\n            this.updatePanels();\n        }), this._group.model.onDidActivePanelChange(() => {\n            this.updateActivePanel();\n        }), parameters.api.onDidActiveChange(() => {\n            this.updateGroupActive();\n        }));\n        this._part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n            panels: this._group.model.panels,\n            activePanel: this._group.model.activePanel,\n            isGroupActive: this._group.api.isActive,\n            group: this._group,\n        });\n    }\n    dispose() {\n        var _a;\n        this.mutableDisposable.dispose();\n        (_a = this._part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n    update(event) {\n        var _a;\n        (_a = this._part) === null || _a === void 0 ? void 0 : _a.update(event.params);\n    }\n    updatePanels() {\n        this.update({ params: { panels: this._group.model.panels } });\n    }\n    updateActivePanel() {\n        this.update({\n            params: {\n                activePanel: this._group.model.activePanel,\n            },\n        });\n    }\n    updateGroupActive() {\n        this.update({\n            params: {\n                isGroupActive: this._group.api.isActive,\n            },\n        });\n    }\n}\n","import React from 'react';\nimport { PROPERTY_KEYS, createDockview, } from 'dockview-core';\nimport { ReactPanelContentPart } from './reactContentPart';\nimport { ReactPanelHeaderPart } from './reactHeaderPart';\nimport { usePortalsLifecycle } from '../react';\nimport { ReactWatermarkPart } from './reactWatermarkPart';\nimport { ReactHeaderActionsRendererPart } from './headerActionsRenderer';\nfunction createGroupControlElement(component, store) {\n    return component\n        ? (groupPanel) => {\n            return new ReactHeaderActionsRendererPart(component, store, groupPanel);\n        }\n        : undefined;\n}\nconst DEFAULT_REACT_TAB = 'props.defaultTabComponent';\nfunction extractCoreOptions(props) {\n    const coreOptions = PROPERTY_KEYS.reduce((obj, key) => {\n        if (key in props) {\n            obj[key] = props[key];\n        }\n        return obj;\n    }, {});\n    return coreOptions;\n}\nexport const DockviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const dockviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    const prevProps = React.useRef({});\n    React.useEffect(() => {\n        const changes = {};\n        PROPERTY_KEYS.forEach((propKey) => {\n            const key = propKey;\n            const propValue = props[key];\n            if (key in props && propValue !== prevProps.current[key]) {\n                changes[key] = propValue;\n            }\n        });\n        if (dockviewRef.current) {\n            dockviewRef.current.updateOptions(changes);\n        }\n        else {\n            // not yet fully initialized\n        }\n        prevProps.current = props;\n    }, PROPERTY_KEYS.map((key) => props[key]));\n    React.useEffect(() => {\n        var _a;\n        if (!domRef.current) {\n            return;\n        }\n        const frameworkTabComponents = (_a = props.tabComponents) !== null && _a !== void 0 ? _a : {};\n        if (props.defaultTabComponent) {\n            frameworkTabComponents[DEFAULT_REACT_TAB] =\n                props.defaultTabComponent;\n        }\n        const frameworkOptions = {\n            createLeftHeaderActionComponent: createGroupControlElement(props.leftHeaderActionsComponent, { addPortal }),\n            createRightHeaderActionComponent: createGroupControlElement(props.rightHeaderActionsComponent, { addPortal }),\n            createPrefixHeaderActionComponent: createGroupControlElement(props.prefixHeaderActionsComponent, { addPortal }),\n            createComponent: (options) => {\n                return new ReactPanelContentPart(options.id, props.components[options.name], {\n                    addPortal,\n                });\n            },\n            createTabComponent(options) {\n                return new ReactPanelHeaderPart(options.id, frameworkTabComponents[options.name], {\n                    addPortal,\n                });\n            },\n            createWatermarkComponent: props.watermarkComponent\n                ? () => {\n                    return new ReactWatermarkPart('watermark', props.watermarkComponent, {\n                        addPortal,\n                    });\n                }\n                : undefined,\n            defaultTabComponent: props.defaultTabComponent\n                ? DEFAULT_REACT_TAB\n                : undefined,\n        };\n        const api = createDockview(domRef.current, Object.assign(Object.assign({}, extractCoreOptions(props)), frameworkOptions));\n        const { clientWidth, clientHeight } = domRef.current;\n        api.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api });\n        }\n        dockviewRef.current = api;\n        return () => {\n            api.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const disposable = dockviewRef.current.onDidDrop((event) => {\n            if (props.onDidDrop) {\n                props.onDidDrop(event);\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.onDidDrop]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const disposable = dockviewRef.current.onWillDrop((event) => {\n            if (props.onWillDrop) {\n                props.onWillDrop(event);\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.onWillDrop]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createComponent: (options) => {\n                return new ReactPanelContentPart(options.id, props.components[options.name], {\n                    addPortal,\n                });\n            },\n        });\n    }, [props.components]);\n    React.useEffect(() => {\n        var _a;\n        if (!dockviewRef.current) {\n            return;\n        }\n        const frameworkTabComponents = (_a = props.tabComponents) !== null && _a !== void 0 ? _a : {};\n        if (props.defaultTabComponent) {\n            frameworkTabComponents[DEFAULT_REACT_TAB] =\n                props.defaultTabComponent;\n        }\n        dockviewRef.current.updateOptions({\n            defaultTabComponent: props.defaultTabComponent\n                ? DEFAULT_REACT_TAB\n                : undefined,\n            createTabComponent(options) {\n                return new ReactPanelHeaderPart(options.id, frameworkTabComponents[options.name], {\n                    addPortal,\n                });\n            },\n        });\n    }, [props.tabComponents, props.defaultTabComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createWatermarkComponent: props.watermarkComponent\n                ? () => {\n                    return new ReactWatermarkPart('watermark', props.watermarkComponent, {\n                        addPortal,\n                    });\n                }\n                : undefined,\n        });\n    }, [props.watermarkComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createRightHeaderActionComponent: createGroupControlElement(props.rightHeaderActionsComponent, { addPortal }),\n        });\n    }, [props.rightHeaderActionsComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createLeftHeaderActionComponent: createGroupControlElement(props.leftHeaderActionsComponent, { addPortal }),\n        });\n    }, [props.leftHeaderActionsComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createPrefixHeaderActionComponent: createGroupControlElement(props.prefixHeaderActionsComponent, { addPortal }),\n        });\n    }, [props.prefixHeaderActionsComponent]);\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nDockviewReact.displayName = 'DockviewComponent';\n","import React from 'react';\nexport const CloseButton = () => (React.createElement(\"svg\", { height: \"11\", width: \"11\", viewBox: \"0 0 28 28\", \"aria-hidden\": 'false', focusable: false, className: \"dockview-svg\" },\n    React.createElement(\"path\", { d: \"M2.1 27.3L0 25.2L11.55 13.65L0 2.1L2.1 0L13.65 11.55L25.2 0L27.3 2.1L15.75 13.65L27.3 25.2L25.2 27.3L13.65 15.75L2.1 27.3Z\" })));\nexport const ExpandMore = () => {\n    return (React.createElement(\"svg\", { width: \"11\", height: \"11\", viewBox: \"0 0 24 15\", \"aria-hidden\": 'false', focusable: false, className: \"dockview-svg\" },\n        React.createElement(\"path\", { d: \"M12 14.15L0 2.15L2.15 0L12 9.9L21.85 0.0499992L24 2.2L12 14.15Z\" })));\n};\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React from 'react';\nimport { CloseButton } from '../svg';\nfunction useTitle(api) {\n    const [title, setTitle] = React.useState(api.title);\n    React.useEffect(() => {\n        const disposable = api.onDidTitleChange((event) => {\n            setTitle(event.title);\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [api]);\n    return title;\n}\nexport const DockviewDefaultTab = (_a) => {\n    var { api, containerApi: _containerApi, params: _params, hideClose, closeActionOverride } = _a, rest = __rest(_a, [\"api\", \"containerApi\", \"params\", \"hideClose\", \"closeActionOverride\"]);\n    const title = useTitle(api);\n    const onClose = React.useCallback((event) => {\n        event.preventDefault();\n        if (closeActionOverride) {\n            closeActionOverride();\n        }\n        else {\n            api.close();\n        }\n    }, [api, closeActionOverride]);\n    const onPointerDown = React.useCallback((e) => {\n        e.preventDefault();\n    }, []);\n    const onClick = React.useCallback((event) => {\n        if (event.defaultPrevented) {\n            return;\n        }\n        api.setActive();\n        if (rest.onClick) {\n            rest.onClick(event);\n        }\n    }, [api, rest.onClick]);\n    return (React.createElement(\"div\", Object.assign({ \"data-testid\": \"dockview-dv-default-tab\" }, rest, { onClick: onClick, className: \"dv-default-tab\" }),\n        React.createElement(\"span\", { className: \"dv-default-tab-content\" }, title),\n        !hideClose && (React.createElement(\"div\", { className: \"dv-default-tab-action\", onPointerDown: onPointerDown, onClick: onClose },\n            React.createElement(CloseButton, null)))));\n};\n","import { SplitviewApi, SplitviewPanel, } from 'dockview-core';\nimport { ReactPart } from '../react';\nexport class ReactPanelView extends SplitviewPanel {\n    constructor(id, component, reactComponent, reactPortalStore) {\n        super(id, component);\n        this.reactComponent = reactComponent;\n        this.reactPortalStore = reactPortalStore;\n    }\n    getComponent() {\n        var _a, _b;\n        return new ReactPart(this.element, this.reactPortalStore, this.reactComponent, {\n            params: (_b = (_a = this._params) === null || _a === void 0 ? void 0 : _a.params) !== null && _b !== void 0 ? _b : {},\n            api: this.api,\n            containerApi: new SplitviewApi(this._params.accessor),\n        });\n    }\n}\n","import React from 'react';\nimport { Orientation, createSplitview, } from 'dockview-core';\nimport { usePortalsLifecycle } from '../react';\nimport { ReactPanelView } from './view';\nexport const SplitviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const splitviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    React.useEffect(() => {\n        var _a;\n        const api = createSplitview(domRef.current, {\n            disableAutoResizing: props.disableAutoResizing,\n            orientation: (_a = props.orientation) !== null && _a !== void 0 ? _a : Orientation.HORIZONTAL,\n            frameworkComponents: props.components,\n            frameworkWrapper: {\n                createComponent: (id, componentId, component) => {\n                    return new ReactPanelView(id, componentId, component, {\n                        addPortal,\n                    });\n                },\n            },\n            proportionalLayout: typeof props.proportionalLayout === 'boolean'\n                ? props.proportionalLayout\n                : true,\n            styles: props.hideBorders\n                ? { separatorBorder: 'transparent' }\n                : undefined,\n        });\n        const { clientWidth, clientHeight } = domRef.current;\n        api.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api });\n        }\n        splitviewRef.current = api;\n        return () => {\n            api.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!splitviewRef.current) {\n            return;\n        }\n        splitviewRef.current.updateOptions({\n            frameworkComponents: props.components,\n        });\n    }, [props.components]);\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nSplitviewReact.displayName = 'SplitviewComponent';\n","import { GridviewApi, GridviewPanel, } from 'dockview-core';\nimport { ReactPart } from '../react';\nexport class ReactGridPanelView extends GridviewPanel {\n    constructor(id, component, reactComponent, reactPortalStore) {\n        super(id, component);\n        this.reactComponent = reactComponent;\n        this.reactPortalStore = reactPortalStore;\n    }\n    getComponent() {\n        var _a, _b;\n        return new ReactPart(this.element, this.reactPortalStore, this.reactComponent, {\n            params: (_b = (_a = this._params) === null || _a === void 0 ? void 0 : _a.params) !== null && _b !== void 0 ? _b : {},\n            api: this.api,\n            // TODO: fix casting hack\n            containerApi: new GridviewApi(this._params\n                .accessor),\n        });\n    }\n}\n","import React from 'react';\nimport { Orientation, createGridview, } from 'dockview-core';\nimport { ReactGridPanelView } from './view';\nimport { usePortalsLifecycle } from '../react';\nexport const GridviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const gridviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    React.useEffect(() => {\n        var _a;\n        if (!domRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const api = createGridview(domRef.current, {\n            disableAutoResizing: props.disableAutoResizing,\n            proportionalLayout: typeof props.proportionalLayout === 'boolean'\n                ? props.proportionalLayout\n                : true,\n            orientation: (_a = props.orientation) !== null && _a !== void 0 ? _a : Orientation.HORIZONTAL,\n            frameworkComponents: props.components,\n            frameworkComponentFactory: {\n                createComponent: (id, componentId, component) => {\n                    return new ReactGridPanelView(id, componentId, component, {\n                        addPortal,\n                    });\n                },\n            },\n            styles: props.hideBorders\n                ? { separatorBorder: 'transparent' }\n                : undefined,\n        });\n        const { clientWidth, clientHeight } = domRef.current;\n        api.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api });\n        }\n        gridviewRef.current = api;\n        return () => {\n            api.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!gridviewRef.current) {\n            return;\n        }\n        gridviewRef.current.updateOptions({\n            frameworkComponents: props.components,\n        });\n    }, [props.components]);\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nGridviewReact.displayName = 'GridviewComponent';\n","import { ReactPart } from '../react';\nexport class PanePanelSection {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._element = document.createElement('div');\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            title: parameters.title,\n            containerApi: parameters.containerApi,\n        });\n    }\n    toJSON() {\n        return {\n            id: this.id,\n        };\n    }\n    update(params) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update(params.params);\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import React from 'react';\nimport { createPaneview, } from 'dockview-core';\nimport { usePortalsLifecycle } from '../react';\nimport { PanePanelSection } from './view';\nexport const PaneviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const paneviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    React.useEffect(() => {\n        const createComponent = (id, _componentId, component) => new PanePanelSection(id, component, {\n            addPortal,\n        });\n        const api = createPaneview(domRef.current, {\n            disableAutoResizing: props.disableAutoResizing,\n            frameworkComponents: props.components,\n            components: {},\n            headerComponents: {},\n            disableDnd: props.disableDnd,\n            headerframeworkComponents: props.headerComponents,\n            frameworkWrapper: {\n                header: {\n                    createComponent,\n                },\n                body: {\n                    createComponent,\n                },\n            },\n            showDndOverlay: props.showDndOverlay,\n        });\n        const { clientWidth, clientHeight } = domRef.current;\n        api.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api });\n        }\n        paneviewRef.current = api;\n        return () => {\n            api.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return;\n        }\n        paneviewRef.current.updateOptions({\n            frameworkComponents: props.components,\n        });\n    }, [props.components]);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return;\n        }\n        paneviewRef.current.updateOptions({\n            headerframeworkComponents: props.headerComponents,\n        });\n    }, [props.headerComponents]);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return () => {\n                //\n            };\n        }\n        const api = paneviewRef.current;\n        const disposable = api.onDidDrop((event) => {\n            if (props.onDidDrop) {\n                props.onDidDrop(Object.assign(Object.assign({}, event), { api }));\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.onDidDrop]);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return;\n        }\n        paneviewRef.current.updateOptions({\n            showDndOverlay: props.showDndOverlay,\n        });\n    }, [props.showDndOverlay]);\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nPaneviewReact.displayName = 'PaneviewComponent';\n","// extracted by mini-css-extract-plugin\nexport default {\"admonition\":\"admonition_Gfwi\",\"admonitionHeading\":\"admonitionHeading_f1Ed\",\"admonitionIcon\":\"admonitionIcon_kpSf\",\"admonitionContent\":\"admonitionContent_UjKb\"};","import React from 'react';\nimport clsx from 'clsx';\nimport { ThemeClassNames } from '@docusaurus/theme-common';\nimport styles from './styles.module.css';\nfunction AdmonitionContainer({ type, className, children }) {\n    return (\n        <div\n            className={clsx(\n                ThemeClassNames.common.admonition,\n                ThemeClassNames.common.admonitionType(type),\n                styles.admonition,\n                className\n            )}\n        >\n            {children}\n        </div>\n    );\n}\nfunction AdmonitionHeading({ icon, title }) {\n    return (\n        <div className={styles.admonitionHeading}>\n            <span className={styles.admonitionIcon}>{icon}</span>\n            {/* {title} */}\n        </div>\n    );\n}\nfunction AdmonitionContent({ children }) {\n    return children ? (\n        <div className={styles.admonitionContent}>{children}</div>\n    ) : null;\n}\nexport default function AdmonitionLayout(props) {\n    const { type, icon, title, children, className } = props;\n    return (\n        <AdmonitionContainer type={type} className={className}>\n            <AdmonitionHeading title={title} icon={icon} />\n            <AdmonitionContent>{children}</AdmonitionContent>\n        </AdmonitionContainer>\n    );\n}\n","import React from 'react';\nexport default function AdmonitionIconNote(props) {\n  return (\n    <svg viewBox=\"0 0 14 16\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        d=\"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z\"\n      />\n    </svg>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport Translate from '@docusaurus/Translate';\nimport AdmonitionLayout from '@theme/Admonition/Layout';\nimport IconNote from '@theme/Admonition/Icon/Note';\nconst infimaClassName = 'alert alert--secondary';\nconst defaultProps = {\n  icon: <IconNote />,\n  title: (\n    <Translate\n      id=\"theme.admonition.note\"\n      description=\"The default label used for the Note admonition (:::note)\">\n      note\n    </Translate>\n  ),\n};\nexport default function AdmonitionTypeNote(props) {\n  return (\n    <AdmonitionLayout\n      {...defaultProps}\n      {...props}\n      className={clsx(infimaClassName, props.className)}>\n      {props.children}\n    </AdmonitionLayout>\n  );\n}\n","import React from 'react';\nexport default function AdmonitionIconTip(props) {\n  return (\n    <svg viewBox=\"0 0 12 16\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        d=\"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z\"\n      />\n    </svg>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport Translate from '@docusaurus/Translate';\nimport AdmonitionLayout from '@theme/Admonition/Layout';\nimport IconTip from '@theme/Admonition/Icon/Tip';\nconst infimaClassName = 'alert alert--success';\nconst defaultProps = {\n  icon: <IconTip />,\n  title: (\n    <Translate\n      id=\"theme.admonition.tip\"\n      description=\"The default label used for the Tip admonition (:::tip)\">\n      tip\n    </Translate>\n  ),\n};\nexport default function AdmonitionTypeTip(props) {\n  return (\n    <AdmonitionLayout\n      {...defaultProps}\n      {...props}\n      className={clsx(infimaClassName, props.className)}>\n      {props.children}\n    </AdmonitionLayout>\n  );\n}\n","import React from 'react';\nexport default function AdmonitionIconInfo(props) {\n  return (\n    <svg viewBox=\"0 0 14 16\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        d=\"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z\"\n      />\n    </svg>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport Translate from '@docusaurus/Translate';\nimport AdmonitionLayout from '@theme/Admonition/Layout';\nimport IconInfo from '@theme/Admonition/Icon/Info';\nconst infimaClassName = 'alert alert--info';\nconst defaultProps = {\n  icon: <IconInfo />,\n  title: (\n    <Translate\n      id=\"theme.admonition.info\"\n      description=\"The default label used for the Info admonition (:::info)\">\n      info\n    </Translate>\n  ),\n};\nexport default function AdmonitionTypeInfo(props) {\n  return (\n    <AdmonitionLayout\n      {...defaultProps}\n      {...props}\n      className={clsx(infimaClassName, props.className)}>\n      {props.children}\n    </AdmonitionLayout>\n  );\n}\n","import React from 'react';\nexport default function AdmonitionIconCaution(props) {\n  return (\n    <svg viewBox=\"0 0 16 16\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        d=\"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z\"\n      />\n    </svg>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport Translate from '@docusaurus/Translate';\nimport AdmonitionLayout from '@theme/Admonition/Layout';\nimport IconWarning from '@theme/Admonition/Icon/Warning';\nconst infimaClassName = 'alert alert--warning';\nconst defaultProps = {\n  icon: <IconWarning />,\n  title: (\n    <Translate\n      id=\"theme.admonition.warning\"\n      description=\"The default label used for the Warning admonition (:::warning)\">\n      warning\n    </Translate>\n  ),\n};\nexport default function AdmonitionTypeWarning(props) {\n  return (\n    <AdmonitionLayout\n      {...defaultProps}\n      {...props}\n      className={clsx(infimaClassName, props.className)}>\n      {props.children}\n    </AdmonitionLayout>\n  );\n}\n","import React from 'react';\nexport default function AdmonitionIconDanger(props) {\n  return (\n    <svg viewBox=\"0 0 12 16\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        d=\"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z\"\n      />\n    </svg>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport Translate from '@docusaurus/Translate';\nimport AdmonitionLayout from '@theme/Admonition/Layout';\nimport IconDanger from '@theme/Admonition/Icon/Danger';\nconst infimaClassName = 'alert alert--danger';\nconst defaultProps = {\n  icon: <IconDanger />,\n  title: (\n    <Translate\n      id=\"theme.admonition.danger\"\n      description=\"The default label used for the Danger admonition (:::danger)\">\n      danger\n    </Translate>\n  ),\n};\nexport default function AdmonitionTypeDanger(props) {\n  return (\n    <AdmonitionLayout\n      {...defaultProps}\n      {...props}\n      className={clsx(infimaClassName, props.className)}>\n      {props.children}\n    </AdmonitionLayout>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport Translate from '@docusaurus/Translate';\nimport AdmonitionLayout from '@theme/Admonition/Layout';\nimport IconWarning from '@theme/Admonition/Icon/Warning';\nconst infimaClassName = 'alert alert--warning';\nconst defaultProps = {\n  icon: <IconWarning />,\n  title: (\n    <Translate\n      id=\"theme.admonition.caution\"\n      description=\"The default label used for the Caution admonition (:::caution)\">\n      caution\n    </Translate>\n  ),\n};\n// TODO remove before v4: Caution replaced by Warning\n// see https://github.com/facebook/docusaurus/issues/7558\nexport default function AdmonitionTypeCaution(props) {\n  return (\n    <AdmonitionLayout\n      {...defaultProps}\n      {...props}\n      className={clsx(infimaClassName, props.className)}>\n      {props.children}\n    </AdmonitionLayout>\n  );\n}\n","import React from 'react';\nimport AdmonitionTypeNote from '@theme/Admonition/Type/Note';\nimport AdmonitionTypeTip from '@theme/Admonition/Type/Tip';\nimport AdmonitionTypeInfo from '@theme/Admonition/Type/Info';\nimport AdmonitionTypeWarning from '@theme/Admonition/Type/Warning';\nimport AdmonitionTypeDanger from '@theme/Admonition/Type/Danger';\nimport AdmonitionTypeCaution from '@theme/Admonition/Type/Caution';\nconst admonitionTypes = {\n  note: AdmonitionTypeNote,\n  tip: AdmonitionTypeTip,\n  info: AdmonitionTypeInfo,\n  warning: AdmonitionTypeWarning,\n  danger: AdmonitionTypeDanger,\n};\n// Undocumented legacy admonition type aliases\n// Provide hardcoded/untranslated retrocompatible label\n// See also https://github.com/facebook/docusaurus/issues/7767\nconst admonitionAliases = {\n  secondary: (props) => <AdmonitionTypeNote title=\"secondary\" {...props} />,\n  important: (props) => <AdmonitionTypeInfo title=\"important\" {...props} />,\n  success: (props) => <AdmonitionTypeTip title=\"success\" {...props} />,\n  caution: AdmonitionTypeCaution,\n};\nexport default {\n  ...admonitionTypes,\n  ...admonitionAliases,\n};\n","import React from 'react';\nimport {processAdmonitionProps} from '@docusaurus/theme-common';\nimport AdmonitionTypes from '@theme/Admonition/Types';\nfunction getAdmonitionTypeComponent(type) {\n  const component = AdmonitionTypes[type];\n  if (component) {\n    return component;\n  }\n  console.warn(\n    `No admonition component found for admonition type \"${type}\". Using Info as fallback.`,\n  );\n  return AdmonitionTypes.info;\n}\nexport default function Admonition(unprocessedProps) {\n  const props = processAdmonitionProps(unprocessedProps);\n  const AdmonitionTypeComponent = getAdmonitionTypeComponent(props.type);\n  return <AdmonitionTypeComponent {...props} />;\n}\n","import React from 'react';\n// Import the original mapper\nimport MDXComponents from '@theme-original/MDXComponents';\nimport { FrameworkSpecific } from '@site/src/components/frameworkSpecific';\nimport { CodeRunner } from '../components/ui/codeRunner';\n\nexport default {\n    // Re-use the default mapping\n    ...MDXComponents,\n    // Map the \"<Highlight>\" tag to our Highlight component\n    // `Highlight` will receive all props that were passed to `<Highlight>` in MDX\n    FrameworkSpecific,\n    CodeRunner,\n};\n","import BrowserOnly from '@docusaurus/BrowserOnly';\nimport { DockviewEmitter } from 'dockview';\nimport * as React from 'react';\nimport './frameworkSpecific.css';\n\nexport interface FrameworkDescriptor {\n    value: string;\n    label: string;\n    icon: string;\n}\n\nconst frameworks: FrameworkDescriptor[] = [\n    { value: 'JavaScript', label: 'JavaScript', icon: 'img/js-icon.svg' },\n    { value: 'React', label: 'React', icon: 'img/react-icon.svg' },\n    { value: 'Vue', label: 'Vue', icon: 'img/vue-icon.svg' },\n    // { value: 'Angular', label: 'Angular' },\n];\n\nconst activeFrameworkGlobal = new DockviewEmitter<string>({ replay: true });\n\nexport function useActiveFramework(): [\n    FrameworkDescriptor,\n    (value: string) => void\n] {\n    const [value, setValue] = React.useState<string>(\n        localStorage.getItem('dv-docs-framework') ?? frameworks[0].value\n    );\n\n    React.useEffect(() => {\n        const disposable = activeFrameworkGlobal.event((value) => [\n            setValue(value),\n        ]);\n\n        activeFrameworkGlobal.fire(\n            localStorage.getItem('dv-docs-framework') ?? frameworks[0].value\n        );\n\n        return () => {\n            disposable.dispose();\n        };\n    }, []);\n\n    const setter = React.useCallback((value: string) => {\n        localStorage.setItem('dv-docs-framework', value);\n        setValue(value);\n        activeFrameworkGlobal.fire(value);\n    }, []);\n\n    const option = frameworks.find((_) => _.value === value);\n\n    return [option, setter];\n}\n\nimport * as DropdownMenu from '@radix-ui/react-dropdown-menu';\nimport useBaseUrl from '@docusaurus/useBaseUrl';\n\nconst FrameworkSelector1 = () => {\n    const [activeFramework, setActiveFramework] = useActiveFramework();\n\n    const onChange = (event: React.ChangeEvent<HTMLSelectElement>) => [\n        setActiveFramework(event.target.value),\n    ];\n\n    return (\n        <DropdownMenu.Root>\n            <DropdownMenu.Trigger asChild={true}>\n                <div className=\"framework-menu-item-select\">\n                    <span style={{ padding: '0px 8px' }}>\n                        {activeFramework.label}\n                    </span>\n                    <img\n                        width={20}\n                        height={20}\n                        src={useBaseUrl(activeFramework.icon)}\n                        style={{ marginRight: '8px' }}\n                    />\n                </div>\n            </DropdownMenu.Trigger>\n            <DropdownMenu.Content\n                side=\"bottom\"\n                align=\"end\"\n                sideOffset={10}\n                className=\"DropdownMenuContent\"\n            >\n                {frameworks.map((framework) => {\n                    return (\n                        <DropdownMenu.Item\n                            onClick={() => setActiveFramework(framework.label)}\n                            className=\"DropdownMenuItem\"\n                        >\n                            <div className=\"framework-menu-item\">\n                                <span style={{ paddingRight: '8px' }}>\n                                    {framework.label}\n                                </span>\n                                <img\n                                    width={20}\n                                    height={20}\n                                    src={useBaseUrl(framework.icon)}\n                                />\n                            </div>\n                        </DropdownMenu.Item>\n                    );\n                })}\n            </DropdownMenu.Content>\n        </DropdownMenu.Root>\n    );\n};\n\nexport const FrameworkSelector = () => {\n    return <BrowserOnly>{() => <FrameworkSelector1 />}</BrowserOnly>;\n};\n\nconst FrameworkSpecific1 = (props: {\n    framework: string;\n    children: React.ReactNode;\n}) => {\n    const [activeFramework] = useActiveFramework();\n\n    if (activeFramework.value === props.framework) {\n        return props.children;\n    }\n\n    return null;\n};\n\nexport const FrameworkSpecific = (props: {\n    framework: string;\n    children: React.ReactNode;\n}) => {\n    return <BrowserOnly>{() => <FrameworkSpecific1 {...props} />}</BrowserOnly>;\n};\n","import * as React from 'react';\nimport { useActiveFramework } from '../frameworkSpecific';\nimport BrowserOnly from '@docusaurus/BrowserOnly';\n\nconst BASE_SANDBOX_URL =\n    'https://codesandbox.io/s/github/mathuo/dockview/tree/gh-pages';\n\nexport const _CodeRunner = (props: { id: string; height: number }) => {\n    const [framework] = useActiveFramework();\n\n    const sandboxUrl = `${BASE_SANDBOX_URL}/templates/${\n        props.id\n    }/${framework.label.toLowerCase()}`;\n    const path = `/templates/${\n        props.id\n    }/${framework.value.toLowerCase()}/index.html`;\n    return (\n        <div>\n            <iframe\n                src={path}\n                style={{ width: '100%', height: `${props.height ?? 300}px` }}\n            />\n            <div style={{ display: 'flex', justifyContent: 'flex-end' }}>\n                <CodeSandbox url={sandboxUrl} />\n                <a\n                    target=\"#blank\"\n                    href={path}\n                    className=\"material-symbols-outlined\"\n                >\n                    open_in_new\n                </a>\n            </div>\n        </div>\n    );\n};\n\nexport const CodeRunner = (props: { id: string; height: number }) => {\n    return <BrowserOnly>{() => <_CodeRunner {...props} />}</BrowserOnly>;\n};\n\nconst CodeSandbox = (props: { url: string }) => {\n    return (\n        <span\n            className=\"codesandbox-button\"\n            style={{ display: 'flex', alignItems: 'center' }}\n        >\n            <span className=\"codesandbox-button-pretext\">{`Open in `}</span>\n            <a\n                href={props.url}\n                target={'_blank'}\n                rel=\"noopener\"\n                className=\"codesandbox-button-content\"\n            >\n                <span\n                    style={{\n                        fontWeight: 'bold',\n                        paddingRight: '4px',\n                    }}\n                >\n                    CodeSandbox\n                </span>\n            </a>\n        </span>\n    );\n};\n"],"names":["BlogListPageMetadata","props","metadata","siteConfig","title","siteTitle","useDocusaurusContext","blogDescription","blogTitle","permalink","_jsxs","_Fragment","children","_jsx","PageMetadata","description","SearchMetadata","tag","BlogListPageContent","items","sidebar","BlogLayout","BlogPostItems","BlogListPaginator","BlogListPage","HtmlClassNameProvider","className","clsx","ThemeClassNames","wrapper","blogPages","page","blogListPage","previousPage","nextPage","translate","id","message","PaginatorNavLink","Translate","isNext","_ref","component","BlogPostItemComponent","BlogPostItem","map","_ref2","content","BlogPostContent","BlogPostProvider","TransferObject","PanelTransfer","constructor","viewId","groupId","panelId","super","this","PaneTransfer","paneId","LocalSelectionTransfer","getInstance","INSTANCE","hasData","proto","clearData","undefined","data","getData","setData","getPanelData","panelTransfer","prototype","getPaneData","paneTransfer","Event","Disposable","any","_len","arguments","length","Array","_key","listener","disposables","child","dispose","forEach","d","DockviewEvent","_defaultPrevented","defaultPrevented","preventDefault","Stacktrace","create","_a","Error","stack","value","print","console","warn","Listener","callback","stacktrace","Emitter","setLeakageMonitorEnabled","isEnabled","ENABLE_TRACKING","MEMORY_LEAK_WATCHER","clear","_last","options","_listeners","_disposed","event","_event","replay","push","index","indexOf","splice","add","fire","e","queueMicrotask","delete","addDisposableWindowListener","element","type","addEventListener","removeEventListener","addDisposableListener","events","Map","size","set","AsapEvent","_onFired","_currentFireCount","_queued","onEvent","fireCountAtTimeOfEventSubscription","NONE","from","func","CompositeDisposable","isDisposed","_isDisposed","args","_disposables","addDisposables","_len2","_key2","arg","MutableDisposable","_disposable","disposable","watchElementResize","cb","observer","ResizeObserver","entires","requestAnimationFrame","firstEntry","observe","unobserve","disconnect","removeClasses","classes","classname","classList","contains","remove","addClasses","toggleClass","isToggled","hasClass","isAncestor","testChild","testAncestor","parentNode","getElementsByTagName","slice","call","document","trackFocus","FocusTracker","_onDidFocus","onDidFocus","_onDidBlur","onDidBlur","hasFocus","activeElement","loosingFocus","onFocus","onBlur","window","setTimeout","_refreshStateHandler","HTMLElement","refreshState","QUASI_PREVENT_DEFAULT_KEY","quasiDefaultPrevented","getDomNodePagePosition","domNode","left","top","width","height","getBoundingClientRect","scrollX","scrollY","disableIframePointEvents","iframes","original","WeakMap","iframe","style","pointerEvents","release","get","Classnames","_classNames","setClassNames","classNames","split","filter","v","trim","tail","arr","sequenceEquals","arr1","arr2","i","pushToStart","unshift","pushToEnd","array","findIndex","t","clamp","min","max","Math","sequentialNumberGenerator","next","toString","range","to","result","ViewItem","_size","cachedVisibleSize","_cachedVisibleSize","visible","minimumSize","view","viewMinimumSize","maximumSize","viewMaximumSize","priority","snap","enabled","container","setVisible","toggle","Orientation","SashState","LayoutPriority","Sizing","Distribute","Split","Invisible","Splitview","contentSize","_contentSize","orthogonalSize","_orthogonalSize","viewItems","proportions","_proportions","orientation","_orientation","tmp","HORIZONTAL","reduce","r","item","Number","POSITIVE_INFINITY","startSnappingEnabled","_startSnappingEnabled","updateSashEnablement","endSnappingEnabled","_endSnappingEnabled","disabled","_disabled","margin","_margin","_this","sashes","_onDidSashEnd","onDidSashEnd","_onDidAddView","onDidAddView","_onDidRemoveView","onDidRemoveView","resize","delta","sizes","lowPriorityIndexes","highPriorityIndexes","overloadMinDelta","overloadMaxDelta","snapBefore","snapAfter","x","NEGATIVE_INFINITY","upIndexes","downIndexes","upItems","upSizes","downItems","downSizes","minDeltaUp","_","maxDeltaUp","maxDeltaDown","minDeltaDown","minDelta","maxDelta","snapped","snapView","limitDelta","actualDelta","deltaUp","viewDelta","deltaDown","createContainer","proportionalLayout","viewContainer","createViewContainer","sashContainer","createSashContainer","appendChild","styles","descriptor","views","viewDescriptor","sizing","addView","saveProportions","separatorBorder","removeProperty","setProperty","isViewVisible","setViewVisible","viewItem","distributeEmptySpace","layoutViews","getViewSize","resizeView","indexes","Low","High","round","relayout","getViews","onDidChange","skipLayout","createElement","viewSize","newSize","removeChild","insertBefore","sash","onPointerStart","start","clientX","clientY","sashIndex","fn","firstIndex","s","snapBeforeIndex","findFirstSnapIndex","snapAfterIndex","snappedViewItem","halfSize","floor","onPointerMove","end","sashItem","distributeViewSizes","flexibleViewItems","flexibleSize","removeView","getViewCachedVisibleSize","moveView","layout","previousSize","total","proportion","lowPriorityIndex","emptyDelta","visibleViewItems","sashCount","marginReducedSize","totalLeftOffset","viewLeftOffsets","runningVisiblePanelCount","flag","visiblePanelsBeforeThisView","offset","sashWidth","VERTICAL","previous","collapsesDown","expandsDown","reverseViews","reverse","collapsesUp","expandsUp","position","snappedBefore","snappedAfter","updateSash","MINIMUM","MAXIMUM","DISABLED","ENABLED","state","orientationClassname","Paneview","splitview","paneItems","skipAnimation","_onDidChange","getPanes","pane","onDidChangeExpansionState","setupAnimation","paneItem","addPane","removePane","skipDispose","animationTimer","clearTimeout","LeafNode","minimumWidth","maximumWidth","minimumHeight","maximumHeight","minimumOrthogonalSize","maximumOrthogonalSize","BranchNode","c","Normal","priorities","some","p","childDescriptors","_childrenDisposable","_onDidVisibilityChange","onDidVisibilityChange","childDescriptor","node","setupChildrenEvents","_visible","isChildVisible","setChildVisible","wereAllChildrenHidden","areAllChildrenHidden","moveChild","_removeChild","_addChild","getChildSize","resizeChild","addChild","getChildCachedVisibleSize","findLeaf","candiateNode","last","flipNode","orthogonal","totalSize","childSize","getGridLocation","parentElement","test","el","firstElementChild","lastElementChild","nextElementSibling","indexInParent","getRelativeLocation","rootOrientation","location","direction","getLocationOrientation","directionOrientation","getDirectionOrientation","rest","_index","serializeBranchNode","box","isGridBranchNode","toJSON","Gridview","_root","root","locked","_locked","branch","pop","maximizedView","_maximizedNode","leaf","hasMaximizedView","maximizeView","getNode","exitMaximizedView","getView","hiddenOnMaximize","hideAllViewsBut","parent","exclude","_onDidMaximizedNodeChange","isMaximized","showViewsInReverseOrder","includes","serialize","maxmizedViewLocation","resullt","maximizedNode","_onDidViewVisibilityChange","deserialize","json","deserializer","_deserialize","_deserializeNode","serializedChild","fromJSON","oldRoot","insertOrthogonalSplitviewAtRoot","childReference","progmaticSelect","_getViews","nodeCachedVisibleSize","path","n","l","onDidViewVisibilityChange","onDidMaximizedNodeChange","parentLocation","pathToParent","grandParent","parentIndex","__","newSiblingSize","newSiblingCachedVisibleSize","newParent","newSibling","nodeToRemove","sibling","isSiblingVisible","siblingSizing","Resizable","_element","disableResizing","_disableResizing","entry","offsetParent","currentElement","DocumentFragment","host","isInDocument","contentRect","nextLayoutId","toTarget","BaseGrid","_id","_groups","groups","values","gridview","activeGroup","_activeGroup","disableAutoResizing","_onDidRemove","onDidRemove","_onDidAdd","onDidAdd","_onDidMaximizedChange","onDidMaximizedChange","_onDidActiveChange","onDidActiveChange","_bufferOnDidLayoutChange","onDidLayoutChange","_onDidViewVisibilityChangeMicroTaskQueue","onDidViewVisibilityChangeMicroTaskQueue","panel","isVisible","updateOptions","_b","_c","_d","maximizeGroup","doSetGroupActive","isMaximizedGroup","exitMaximizedGroup","hasMaximizedGroup","doAddGroup","group","doRemoveGroup","has","skipActive","getPanel","setActive","removeGroup","moveToNext","moveToPrevious","forceResize","SplitviewApi","panels","onDidLayoutFromJSON","removePanel","focus","addPanel","movePanel","PaneviewApi","onDidDrop","emitter","Object","assign","api","GridviewApi","onDidAddPanel","onDidAddGroup","onDidRemovePanel","onDidRemoveGroup","onDidActivePanelChange","onDidActiveGroupChange","force","DockviewApi","totalPanels","gap","onDidMovePanel","onWillDrop","onWillShowOverlay","onWillDragGroup","onWillDragPanel","onUnhandledDragOverEvent","activePanel","getGroupPanel","addGroup","closeAllGroups","getGroup","addFloatingGroup","onDidMaximizedGroupChange","addPopoutGroup","setGap","DragHandler","dataDisposable","pointerEventsDisposable","_onDragStart","onDragStart","configure","isCancelled","dataTransfer","effectAllowed","DragAndDropObserver","callbacks","target","registerListeners","onDragEnter","onDragOver","onDragLeave","onDragEnd","onDrop","WillShowOverlayEvent","nativeEvent","directionToPosition","positionToDirection","DEFAULT_ACTIVATION_SIZE","DEFAULT_SIZE","Droptarget","_state","_onDrop","_onWillShowOverlay","_acceptedTargetZonesSet","Set","acceptedTargetZones","dnd","removeDropTarget","clientWidth","clientHeight","rect","currentTarget","y","quadrant","calculateQuadrant","isAlreadyUsed","canDisplayOverlay","willShowOverlayEvent","markAsUsed","targetElement","overlayElement","append","toggleClasses","stopPropagation","setTargetZones","setOverlayModel","model","overlayModel","USED_EVENT_ID","isSmallX","isSmallY","isLeft","isRight","isTop","isBottom","rightClass","leftClass","topClass","bottomClass","sizeOptions","overlayType","activationSizeOptions","activationSize","threshold","xp","yp","calculateQuadrantAsPercentage","calculateQuadrantAsPixels","WillFocusEvent","PanelApiImpl","isFocused","_isFocused","isActive","_isActive","_isVisible","_width","_height","_parameters","panelUpdatesDisposable","_onDidDimensionChange","onDidDimensionsChange","_onDidChangeFocus","onDidFocusChange","_onWillFocus","onWillFocus","_onWillVisibilityChange","onWillVisibilityChange","_onActiveChange","onActiveChange","_onDidParametersChange","onDidParametersChange","getParameters","initialize","parameters","update","params","updateParameters","SplitviewPanelApiImpl","_onDidConstraintsChangeInternal","onDidConstraintsChangeInternal","_onDidConstraintsChange","onDidConstraintsChange","_onDidSizeChange","onDidSizeChange","setConstraints","setSize","PaneviewPanelApiImpl","_pane","_onDidExpansionChange","onDidExpansionChange","_onMouseEnter","onMouseEnter","_onMouseLeave","onMouseLeave","setExpanded","isExpanded","BasePanelView","_params","tabIndex","outline","overflow","focusTracker","part","init","getComponent","key","keys","PaneviewPanel","headerSize","_minimumBodySize","_maximumBodySize","minimumBodySize","maximumBodySize","headerVisible","_headerVisible","header","display","headerComponent","isHeaderVisible","_onDidChangeExpansionState","_isExpanded","expandedSize","accessor","ev","isPanelExpanded","renderOnce","expanded","body","bodyPart","getBodyComponent","headerPart","getHeaderComponent","lineHeight","minHeight","maxHeight","DraggablePaneviewPanel","disableDnd","_onDidDrop","initDragFeatures","accessorId","draggable","handler","showDndOverlay","containerApi","existingPanel","allPanels","fromIndex","toIndex","ContentContainer","dropTarget","shiftKey","show","hide","renderPanel","asActive","doRender","isPanelActive","renderer","renderContainer","detatch","attach","referenceContainer","openPanel","closePanel","TabDragHandler","Tab","_onChanged","onChanged","_onDropped","dragHandler","setContent","GroupDragHandler","dragEvent","getComputedStyle","bgColor","getPropertyValue","color","ghostElement","backgroundColor","padding","fontSize","borderRadius","textContent","setDragImage","addGhostImage","VoidContainer","dropTraget","TabsContainer","tabs","hidden","_hidden","setRightActionsElement","rightActions","rightActionsContainer","setLeftActionsElement","leftActions","leftActionsContainer","setPrefixActionsElement","preActions","preActionsContainer","tab","selectedIndex","_onTabDragStart","onTabDragStart","_onGroupDragStart","onGroupDragStart","singleTabMode","tabContainer","voidContainer","WillShowOverlayLocationEvent","kind","disableFloatingGroups","rootTop","rootLeft","inDragMode","button","_isGroupActive","addTab","tabToRemove","setActivePanel","isActivePanel","find","isFloatingGroupsEnabled","isFloatingWithOnePanel","DockviewUnhandledDragOverEvent","isAccepted","_isAccepted","accept","PROPERTY_KEYS","properties","hideBorders","floatingGroupBounds","popoutUrl","defaultRenderer","debug","rootOverlayModel","noPanelsOverlay","DockviewDidDropEvent","DockviewWillDropEvent","_kind","DockviewGroupPanelModel","_activePanel","_panels","isEmpty","hasWatermark","watermark","tabsContainer","isContentFocused","contentContainer","_location","groupPanel","_onDidLocationChange","mostRecentlyUsed","_overwriteRenderContainer","_panelDisposables","_onMove","onMove","_onWillDrop","_onDidAddPanel","_onDidPanelTitleChange","onDidPanelTitleChange","_onDidPanelParametersChange","onDidPanelParametersChange","_onDidRemovePanel","_onDidActivePanelChange","_onUnhandledDragOverEvent","_api","hideHeader","handleDropEvent","focusContent","rerender","overlayRenderContainer","doAddPanel","updateContainer","createRightHeaderActionComponent","_rightHeaderActions","createLeftHeaderActionComponent","_leftHeaderActions","createPrefixHeaderActionComponent","_prefixHeaderActions","activeView","normalizedIndex","suppressRoll","containsPanel","skipSetActive","updateParentGroup","doSetActivePanel","skipSetGroupActive","groupItemOrId","panelToRemove","_removePanel","closeAllPanels","arrPanelCpy","doClose","isLast","removeEmptyGroup","updateActions","isGroupActive","doRemovePanel","nextPanel","skipSetActiveGroup","hasExistingPanel","updateMru","onDidTitleChange","runEvents","createWatermarkComponent","firedEvent","willDropEvent","getKind","itemId","GridviewPanelApiImpl","GridviewPanel","_priority","_snap","__minimumWidth","__minimumHeight","__maximumHeight","__maximumWidth","_minimumWidth","_evaluatedMinimumWidth","updateConstraints","_maximumWidth","_evaluatedMaximumWidth","_minimumHeight","_evaluatedMinimumHeight","_maximumHeight","_evaluatedMaximumHeight","MAX_SAFE_INTEGER","maximum","minimum","NOT_INITIALIZED_MESSAGE","DockviewGroupPanelApiImpl","_group","_mutableDisposable","onDidLocationChange","close","getWindow","moveTo","moveGroupOrPanel","maximize","exitMaximized","DockviewGroupPanel","activePanelMinimumWidth","activePanelMinimumHeight","activePanelMaximumWidth","activePanelMaximumHeight","_model","_e","_f","constraints","DockviewPanelApiImpl","oldGroup","_onDidGroupChange","setupGroupEventListeners","tabComponent","_tabComponent","_onDidTitleChange","_onDidActiveGroupChange","onDidGroupChange","_onDidRendererChange","onDidRendererChange","groupEventsDisposable","setTitle","setRenderer","previousGroup","_trackGroupActive","hasBecomeHidden","hasBecomeVisible","DockviewPanel","_title","_renderer","contentComponent","isPanelVisible","createSvgElementFromPath","svg","createElementNS","setAttributeNS","viewbox","DefaultTab","_content","action","render","DockviewPanelModel","_tab","createContentComponent","createTabComponent","_isPanelVisible","componentName","createComponent","name","defaultTabComponent","DefaultDockviewDeserialzier","panelData","viewData","Watermark","arialLevelTracker","_orderedList","destroy","setAttribute","zIndex","Overlay","minimumInViewportWidth","minimumInViewportHeight","_onDidChangeEnd","onDidChangeEnd","setupResize","setBounds","bottom","right","bringToFront","bounds","verticalAlignment","horiziontalAlignment","containerRect","overlayRect","xOffset","getMinimumWidth","yOffset","getMinimumHeight","parseFloat","setupDrag","dragTarget","move","track","resizeHandleElement","startPosition","originalY","originalHeight","originalX","originalWidth","moveTop","MAX_VALUE","MINIMUM_HEIGHT","moveBottom","moveLeft","MINIMUM_WIDTH","moveRight","DockviewFloatingGroupPanel","overlay","DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE","DEFAULT_FLOATING_GROUP_POSITION","OverlayRenderContainer","createFocusableElement","focusContainer","box2","visibilityChanged","observerDisposable","correctLayerPosition","floatingGroup","floatingGroups","level","getAttribute","MutationObserver","attributeFilter","attributes","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","rejected","done","then","apply","PopoutWindow","_window","_onWillClose","onWillClose","_onDidClose","onDidClose","dimensions","screenX","screenY","innerWidth","innerHeight","open","url","features","entries","join","externalWindow","createPopoutWindowContainer","onDidOpen","externalDocument","styleSheetList","styleSheets","styleSheet","href","link","rel","head","cssTexts","cssRules","rule","cssText","err","createTextNode","addStyles","StrictEventsSequencing","DEFAULT_ROOT_OVERLAY_MODEL","moveGroupWithoutDestroying","removedPanel","DockviewComponent","flatMap","_options","_floatingGroups","nextGroupId","_deserializer","_onWillDragPanel","_onWillDragGroup","_onDidLayoutFromJSON","_onDidMovePanel","_onDidMaximizedGroupChange","_popoutGroups","_onDidRemoveGroup","_onDidAddGroup","_moving","updateWatermark","_rootDropTarget","orthogonalize","itemToPopout","theme","toClassList","list","cls","startsWith","getDockviewTheme","overridePopoutGroup","getNextGroupId","popoutWindowDisposable","popoutContainer","gready","referenceGroup","referenceLocation","isGroupAddedToDom","floatingBox","returnedGroup","createGroup","movingLock","doSetGroupAndPanelActive","isValidReferenceGroup","popoutGroup","skipPopoutAssociated","skipPopoutReturn","catch","error","popoutReferenceGroupId","popoutReferenceGroup","skipRemoveGroup","anchoredBox","getAnchoredBox","minimumWidthWithinViewport","minimumHeightWithinViewport","querySelector","floatingGroupPanel","skipActiveGroup","createGroupAtLocation","floating","includePanel","collection","floats","popoutGroups","gridReferenceGroup","grid","isArray","createGroupFromSerializedState","createdPanels","serializedFloatingGroups","serializedFloatingGroup","serializedPopoutGroups","serializedPopoutGroup","hasActiveGroup","initial","initialWidth","initialHeight","referencePanel","findGroup","isPanelOptionsWithGroup","createPanel","inactive","floatingGroupOptions","relativeLocation","orientationAtLocation","coordinates","watermarkContainer","isGroupOptionsWithGroup","selectedGroup","refGroup","removedGroup","re","isMoving","destinationGroup","sourceGroupId","sourceItemId","destinationTarget","destinationIndex","sourceGroup","targetLocation","targetParentLocation","sourceLocation","sourceParentLocation","newGroup","targetGroup","updatedReferenceLocation","dropLocation","moveGroup","selectedFloatingGroup","selectedPopoutGroup","components","frameworkComponents","createFrameworkComponent","fallback","Component","FrameworkComponent","GridviewComponent","_onDidLayoutfromJSON","hasOrientationChanged","serializedGridview","queue","frameworkComponentFactory","registerPanel","f","reference","groupItem","SplitviewComponent","_splitview","_splitviewChangeDisposable","_onDidLayoutChange","skipFocus","frameworkWrapper","doAddView","serializedSplitview","DefaultHeader","_expandedIcon","_collapsedIcon","apiRef","_expander","updateIcon","PaneFramework","PaneviewComponent","paneview","_paneview","_viewDisposables","headerComponents","headerframeworkComponents","serializedPaneview","SplitviewPanel","_minimumSize","_evaluatedMinimumSize","_maximumSize","_evaluatedMaximumSize","createDockview","createSplitview","createGridview","createPaneview","ReactComponentBridge","ref","triggerRender","React","_props","componentProps","current","Date","now","displayName","uniquePortalKeyGenerator","ReactPartContext","ReactPart","portalStore","context","_initialProps","disposed","createPortal","componentInstance","$$typeof","bridgeComponent","Provider","portal","ReactDOM","addPortal","usePortalsLifecycle","portals","setPortals","existingPortals","DockviewDisposable","ReactPanelContentPart","reactPortalStore","DockviewEmitter","ReactPanelHeaderPart","ReactWatermarkPart","ReactHeaderActionsRendererPart","_part","mutableDisposable","DockviewMutableDisposable","DockviewCompositeDisposable","updatePanels","updateActivePanel","updateGroupActive","createGroupControlElement","store","DEFAULT_REACT_TAB","DockviewReact","domRef","dockviewRef","prevProps","changes","propKey","propValue","frameworkTabComponents","tabComponents","frameworkOptions","leftHeaderActionsComponent","rightHeaderActionsComponent","prefixHeaderActionsComponent","watermarkComponent","obj","extractCoreOptions","onReady","CloseButton","viewBox","focusable","__rest","hasOwnProperty","getOwnPropertySymbols","propertyIsEnumerable","DockviewDefaultTab","_containerApi","hideClose","closeActionOverride","useTitle","onClose","onPointerDown","onClick","ReactPanelView","reactComponent","SplitviewReact","splitviewRef","componentId","ReactGridPanelView","GridviewReact","gridviewRef","PanePanelSection","PaneviewReact","paneviewRef","_componentId","AdmonitionContainer","common","admonition","admonitionType","AdmonitionHeading","icon","admonitionHeading","admonitionIcon","AdmonitionContent","_ref3","admonitionContent","AdmonitionLayout","AdmonitionIconNote","fillRule","defaultProps","IconNote","AdmonitionTypeNote","AdmonitionIconTip","IconTip","AdmonitionTypeTip","AdmonitionIconInfo","IconInfo","AdmonitionTypeInfo","AdmonitionIconCaution","IconWarning","AdmonitionIconDanger","IconDanger","note","tip","info","warning","danger","secondary","important","success","caution","Admonition","unprocessedProps","processAdmonitionProps","AdmonitionTypeComponent","AdmonitionTypes","MDXComponents","FrameworkSpecific","CodeRunner","frameworks","label","activeFrameworkGlobal","useActiveFramework","setValue","localStorage","getItem","setter","setItem","FrameworkSelector1","activeFramework","setActiveFramework","DropdownMenu","asChild","src","useBaseUrl","marginRight","side","align","sideOffset","framework","paddingRight","FrameworkSelector","BrowserOnly","FrameworkSpecific1","_CodeRunner","sandboxUrl","toLowerCase","justifyContent","CodeSandbox","alignItems","fontWeight"],"sourceRoot":""}